{"version":3,"file":"pdf.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKA;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,gBAAAA,GA/BN,8BA+BA;;AACA,IAAMC,MAAAA,GAhCN,4BAgCA;;IAEA;;;;;AACEC,8BAA0D;AAAA;;AAAA,mFAA1DA,EAA0D;AAAA,kCAA5CC,aAA4C;AAAA,QAA5CA,aAA4C,mCAA5BC,UAAAA,CAAlB,QAA8C;;AAAA;;AAAA;AAExD,sBAFwD,aAExD;AAFwD;AADX;;;;WAM/CC,uBAAAA,KAAAA,EAAAA,MAAAA,EAA6B;AAC3B,UAAMC,MAAAA,GAAS,6BADY,QACZ,CAAf;;AACAA,MAAAA,MAAAA,CAAAA,KAAAA,GAF2B,KAE3BA;AACAA,MAAAA,MAAAA,CAAAA,MAAAA,GAH2B,MAG3BA;AACA,aAJ2B,MAI3B;AAV6C;;;;EAAjD;;;;SAcA;;;;;4EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8BC,YAAAA,YAA9B;;AAAA,iBAGIC,eAAAA,CAAAA,GAAAA,EAAqBC,QAAAA,CAFvB,OAEED,CAHJ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAK2BG,KAAAA,CADvB,GACuBA,CAL3B;;AAAA;AAKUD,YAAAA,QALV;;AAAA,gBAMSA,QAAAA,CAAL,EANJ;AAAA;AAAA;AAAA;;AAAA,kBAOY,UAAUA,QAAAA,CADA,UACV,CAPZ;;AAAA;AAAA,iBASWH,YATX;AAAA;AAAA;AAAA;;AAAA,0BAUQ,UAVR;AAAA;AAAA,mBAU6BG,QAAAA,CADlBH,WACkBG,EAV7B;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,0BAWQE,mBAXR;AAAA;AAAA,mBAW4BF,QAAAA,CAPxB,IAOwBA,EAX5B;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,6CAeS,YAAY,2BAAqB;AACtC,kBAAMG,OAAAA,GAAU,IADsB,cACtB,EAAhB;AACAA,cAAAA,OAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAAAA,GAAAA,EAFsC,IAEtCA;;AAEA,gCAAkB;AAChBA,gBAAAA,OAAAA,CAAAA,YAAAA,GADgB,aAChBA;AALoC;;AAOtCA,cAAAA,OAAAA,CAAAA,kBAAAA,GAA6B,YAAM;AACjC,oBAAIA,OAAAA,CAAAA,UAAAA,KAAuBC,cAAAA,CAA3B,MAAgD;AAAA;AADf;;AAIjC,oBAAID,OAAAA,CAAAA,MAAAA,KAAAA,GAAAA,IAA0BA,OAAAA,CAAAA,MAAAA,KAA9B,GAAoD;AAClD,sBADkD,IAClD;;AACA,sBAAIN,YAAAA,IAAgBM,OAAAA,CAApB,UAAsC;AACpCE,oBAAAA,IAAAA,GAAO,eAAeF,OAAAA,CADc,QAC7B,CAAPE;AADF,yBAEO,IAAI,iBAAiBF,OAAAA,CAArB,cAA2C;AAChDE,oBAAAA,IAAAA,GAAOH,yBAAcC,OAAAA,CAD2B,YACzCD,CAAPG;AALgD;;AAOlD,4BAAU;AACRC,oBAAAA,OAAAA,CADQ,IACRA,CAAAA;AADQ;AAPwC;AAJnB;;AAgBjCC,gBAAAA,MAAAA,CAAO,UAAUJ,OAAAA,CAhBgB,UAgB1B,CAAPI,CAAAA;AAvBoC,eAOtCJ;;AAmBAA,cAAAA,OAAAA,CAAAA,IAAAA,CA1BsC,IA0BtCA;AAzCgD,aAe3C,CAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;IA6CA;;;;;;;;;;;;;WACEK,oBAAAA,GAAAA,EAAAA,eAAAA,EAAiC;AAC/B,aAAO,eAAoC,KAApC,mBAA4DH,UAAAA,IAAAA,EAAQ;AACzE,eAAO;AAAEI,UAAAA,QAAAA,EAAF;AAAkBC,UAAAA,eAAlB,EAAkBA;AAAlB,SAAP;AAF6B,OACxB,CAAP;AAFqD;;;;EAAzD;;;;IAQA;;;;;;;;;;;;;WACEF,oBAAAA,GAAAA,EAAgB;AACd,aAAOG,SAAAA,CAAAA,GAAAA,EADO,IACPA,CAAP;AAFiE;;;;EAArE;;;;IAMA;;;;;;;;;;;;;WACEC,oBAAAA,IAAAA,EAAiB;AACf,aAAOb,QAAAA,CAAAA,eAAAA,CAAAA,MAAAA,EADQ,IACRA,CAAP;AAFuC;;;;EAA3C;;;;IAqCA;AAIEP,+BAOG;AAAA,QAPS,OAOT,SAPS,OAOT;AAAA,QAPS,KAOT,SAPS,KAOT;AAAA,QAPS,QAOT,SAPS,QAOT;AAAA,8BAHDqB,OAGC;AAAA,QAHDA,OAGC,8BAPS,CAOT;AAAA,8BAFDC,OAEC;AAAA,QAFDA,OAEC,8BAPS,CAOT;AAAA,+BADDC,QACC;AAAA,QADDA,QACC,+BAPHvB,KAOG;;AAAA;;AACD,mBADC,OACD;AACA,iBAFC,KAED;AACA,oBAHC,QAGD;AACA,mBAJC,OAID;AACA,mBALC,OAKD;AAIA,QAAMwB,OAAAA,GAAW,cAAaC,OAAAA,CAAd,CAAcA,CAAb,IAThB,CASD;AACA,QAAMC,OAAAA,GAAW,cAAaD,OAAAA,CAAd,CAAcA,CAAb,IAVhB,CAUD;AACA,mCAXC,OAWD;AAEAE,IAAAA,QAAAA,IAbC,GAaDA;;AACA,QAAIA,QAAAA,GAAJ,GAAkB;AAChBA,MAAAA,QAAAA,IADgB,GAChBA;AAfD;;AAiBD;AACE;AACEC,QAAAA,OAAAA,GAAU,CADZ,CACEA;AACAC,QAAAA,OAAAA,GAFF,CAEEA;AACAC,QAAAA,OAAAA,GAHF,CAGEA;AACAC,QAAAA,OAAAA,GAJF,CAIEA;AALJ;;AAOE;AACEH,QAAAA,OAAAA,GADF,CACEA;AACAC,QAAAA,OAAAA,GAFF,CAEEA;AACAC,QAAAA,OAAAA,GAHF,CAGEA;AACAC,QAAAA,OAAAA,GAJF,CAIEA;AAXJ;;AAaE;AACEH,QAAAA,OAAAA,GADF,CACEA;AACAC,QAAAA,OAAAA,GAAU,CAFZ,CAEEA;AACAC,QAAAA,OAAAA,GAAU,CAHZ,CAGEA;AACAC,QAAAA,OAAAA,GAJF,CAIEA;AAjBJ;;AAmBE;AACEH,QAAAA,OAAAA,GADF,CACEA;AACAC,QAAAA,OAAAA,GAFF,CAEEA;AACAC,QAAAA,OAAAA,GAHF,CAGEA;AACAC,QAAAA,OAAAA,GAAU,CAJZ,CAIEA;AAvBJ;;AAyBE;AACE,cAAM,UA1BV,mEA0BU,CAAN;AA1BJ;;AA+BA,kBAAc;AACZD,MAAAA,OAAAA,GAAU,CADE,OACZA;AACAC,MAAAA,OAAAA,GAAU,CAFE,OAEZA;AAlDD;;AAqDD,uBArDC,aAqDD;AACA,eAtDC,MAsDD;;AACA,QAAIH,OAAAA,KAAJ,GAAmB;AACjBI,MAAAA,aAAAA,GAAgBC,IAAAA,CAAAA,GAAAA,CAASP,OAAAA,GAAUD,OAAAA,CAAnBQ,CAAmBR,CAAnBQ,IAAAA,KAAAA,GADC,OACjBD;AACAE,MAAAA,aAAAA,GAAgBD,IAAAA,CAAAA,GAAAA,CAAST,OAAAA,GAAUC,OAAAA,CAAnBQ,CAAmBR,CAAnBQ,IAAAA,KAAAA,GAFC,OAEjBC;AACAC,MAAAA,KAAAA,GAAQF,IAAAA,CAAAA,GAAAA,CAASR,OAAAA,CAAAA,CAAAA,CAAAA,GAAaA,OAAAA,CAAtBQ,CAAsBR,CAAtBQ,IAHS,KAGjBE;AACAC,MAAAA,MAAAA,GAASH,IAAAA,CAAAA,GAAAA,CAASR,OAAAA,CAAAA,CAAAA,CAAAA,GAAaA,OAAAA,CAAtBQ,CAAsBR,CAAtBQ,IAJQ,KAIjBG;AAJF,WAKO;AACLJ,MAAAA,aAAAA,GAAgBC,IAAAA,CAAAA,GAAAA,CAAST,OAAAA,GAAUC,OAAAA,CAAnBQ,CAAmBR,CAAnBQ,IAAAA,KAAAA,GADX,OACLD;AACAE,MAAAA,aAAAA,GAAgBD,IAAAA,CAAAA,GAAAA,CAASP,OAAAA,GAAUD,OAAAA,CAAnBQ,CAAmBR,CAAnBQ,IAAAA,KAAAA,GAFX,OAELC;AACAC,MAAAA,KAAAA,GAAQF,IAAAA,CAAAA,GAAAA,CAASR,OAAAA,CAAAA,CAAAA,CAAAA,GAAaA,OAAAA,CAAtBQ,CAAsBR,CAAtBQ,IAHH,KAGLE;AACAC,MAAAA,MAAAA,GAASH,IAAAA,CAAAA,GAAAA,CAASR,OAAAA,CAAAA,CAAAA,CAAAA,GAAaA,OAAAA,CAAtBQ,CAAsBR,CAAtBQ,IAJJ,KAILG;AAhED;;AAqED,qBAAiB,CACfR,OAAAA,GADe,OAEfC,OAAAA,GAFe,OAGfC,OAAAA,GAHe,OAIfC,OAAAA,GAJe,OAKfC,aAAAA,GAAgBJ,OAAAA,GAAAA,KAAAA,GAAhBI,OAAAA,GAA4CF,OAAAA,GAAAA,KAAAA,GAL7B,SAMfI,aAAAA,GAAgBL,OAAAA,GAAAA,KAAAA,GAAhBK,OAAAA,GAA4CH,OAAAA,GAAAA,KAAAA,GAN7B,QAAjB;AASA,iBA9EC,KA8ED;AACA,kBA/EC,MA+ED;AA1Fe;;;;WAkGjBM,iBAMQ;AAAA,sFANRA,EAMQ;AAAA,8BALNC,KAKM;AAAA,UALNA,KAKM,4BALE,KADJ,KAME;AAAA,iCAJNX,QAIM;AAAA,UAJNA,QAIM,+BAJK,KAFP,QAME;AAAA,gCAHNN,OAGM;AAAA,UAHNA,OAGM,8BAHI,KAHN,OAME;AAAA,gCAFNC,OAEM;AAAA,UAFNA,OAEM,8BAFI,KAJN,OAME;AAAA,iCADNC,QACM;AAAA,UADNA,QACM,+BANF,KAME;;AACN,aAAO,iBAAiB;AACtBE,QAAAA,OAAAA,EAAS,aADa,KACb,EADa;AAEtBa,QAAAA,KAFsB,EAEtBA,KAFsB;AAGtBX,QAAAA,QAHsB,EAGtBA,QAHsB;AAItBN,QAAAA,OAJsB,EAItBA,OAJsB;AAKtBC,QAAAA,OALsB,EAKtBA,OALsB;AAMtBC,QAAAA,QANsB,EAMtBA;AANsB,OAAjB,CAAP;AAzGe;;;WA6HjBgB,gCAAAA,CAAAA,EAAAA,CAAAA,EAA6B;AAC3B,aAAO,0BAAoB,MAApB,EAA4B,KADR,SACpB,CAAP;AA9He;;;WAwIjBC,oCAAAA,IAAAA,EAAiC;AAC/B,UAAMC,OAAAA,GAAU,0BAAoB,CAACC,IAAAA,CAAD,CAACA,CAAD,EAAUA,IAAAA,CAAV,CAAUA,CAAV,CAApB,EAAwC,KADzB,SACf,CAAhB;;AACA,UAAMC,WAAAA,GAAc,0BAAoB,CAACD,IAAAA,CAAD,CAACA,CAAD,EAAUA,IAAAA,CAAV,CAAUA,CAAV,CAApB,EAAwC,KAF7B,SAEX,CAApB;;AACA,aAAO,CAACD,OAAAA,CAAD,CAACA,CAAD,EAAaA,OAAAA,CAAb,CAAaA,CAAb,EAAyBE,WAAAA,CAAzB,CAAyBA,CAAzB,EAAyCA,WAAAA,CAAzC,CAAyCA,CAAzC,CAAP;AA3Ie;;;WAuJjBC,2BAAAA,CAAAA,EAAAA,CAAAA,EAAwB;AACtB,aAAO,iCAA2B,MAA3B,EAAmC,KADpB,SACf,CAAP;AAxJe;;;;;;;;IA4JnB;;;;;AACE5C,uCAAAA,GAAAA,EAAAA,IAAAA,EAAuB;AAAA;;AAAA;;AACrB,qCADqB,6BACrB;AACA,kBAFqB,IAErB;AAFqB;AAD+B;;;EAAxD;;;AAOA,IAAM6C,UAAAA,GAAa;AACjBC,EAAAA,IAAAA,EADiB;AAEjBC,EAAAA,IAAAA,EAFiB;AAGjBC,EAAAA,KAAAA,EAHiB;AAIjBC,EAAAA,MAAAA,EAJiB;AAKjBC,EAAAA,GAAAA,EALiB;AAAA,CAAnB;;;AAyBA,iCAA4E;AAAA,kFAA5E,EAA4E;AAAA,MAA3C,GAA2C,SAA3C,GAA2C;AAAA,MAA3C,MAA2C,SAA3C,MAA2C;AAAA,MAA3C,GAA2C,SAA3C,GAA2C;AAAA,4BAAvBC,OAAuB;AAAA,MAAvBA,OAAuB,8BAA3C,IAA2C;;AAC1EC,oBACEC,GAAAA,IAAO,eADTD,QAAAA,EAD0E,2DAC1EA;AAKA,MAAME,cAAAA,GAAiBC,gCANmD,GAMnDA,CAAvB;;AACA,eAAa;AACXC,IAAAA,IAAAA,CAAAA,IAAAA,GAAYA,IAAAA,CAAAA,KAAAA,GADD,cACXA;AADF,SAEO;AACLA,IAAAA,IAAAA,CAAAA,IAAAA,GADK,EACLA;AACAA,IAAAA,IAAAA,CAAAA,KAAAA,uBAFK,cAELA;;AACAA,IAAAA,IAAAA,CAAAA,OAAAA,GAAe,YAAM;AACnB,aADmB,KACnB;AAJG,KAGLA;AAZwE;;AAiB1E,MAAIC,SAAAA,GAjBsE,EAiB1E;;AACA;AACE,SAAKZ,UAAAA,CAAL;AADF;;AAGE,SAAKA,UAAAA,CAAL;AACEY,MAAAA,SAAAA,GADF,OACEA;AAJJ;;AAME,SAAKZ,UAAAA,CAAL;AACEY,MAAAA,SAAAA,GADF,QACEA;AAPJ;;AASE,SAAKZ,UAAAA,CAAL;AACEY,MAAAA,SAAAA,GADF,SACEA;AAVJ;;AAYE,SAAKZ,UAAAA,CAAL;AACEY,MAAAA,SAAAA,GADF,MACEA;AAbJ;AAAA;;AAgBAD,EAAAA,IAAAA,CAAAA,MAAAA,GAlC0E,SAkC1EA;AAEAA,EAAAA,IAAAA,CAAAA,GAAAA,GAAW,gCApC+D,gBAoC1EA;AAhXF;;AAmXA,2BAA2B;AACzB,MAAME,EAAAA,GAAKL,GAAAA,CADc,MACzB;AACA,MAAIM,CAAAA,GAFqB,CAEzB;;AACA,SAAOA,CAAAA,GAAAA,EAAAA,IAAUN,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,OAAjB,IAAuC;AACrCM,IAAAA,CADqC;AAHd;;AAMzB,SAAON,GAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAiBM,CAAAA,GAAjBN,CAAAA,EAAAA,WAAAA,OANkB,OAMzB;AAzXF;;AA4XA,6BAA6B;AAC3B,SAAO,gCAAgC,eADZ,QACY,CAAvC;AA7XF;;AAqYA,iCAAiC;AAC/B,MAAMO,MAAAA,GAASP,GAAAA,CAAAA,OAAAA,CADgB,GAChBA,CAAf;AACA,MAAMQ,KAAAA,GAAQR,GAAAA,CAAAA,OAAAA,CAFiB,GAEjBA,CAAd;AACA,MAAMS,GAAAA,GAAM7B,IAAAA,CAAAA,GAAAA,CACV2B,MAAAA,GAAAA,CAAAA,GAAAA,MAAAA,GAAsBP,GAAAA,CADZpB,MAAAA,EAEV4B,KAAAA,GAAAA,CAAAA,GAAAA,KAAAA,GAAoBR,GAAAA,CALS,MAGnBpB,CAAZ;AAIA,SAAOoB,GAAAA,CAAAA,SAAAA,CAAcA,GAAAA,CAAAA,WAAAA,CAAAA,GAAAA,EAAAA,GAAAA,IAAdA,CAAAA,EAPwB,GAOxBA,CAAP;AA5YF;;AAsZA,oCAAsE;AAAA,MAAlCU,eAAkC,uEAAtE,cAAsE;;AACpE,MAAI,eAAJ,UAA6B;AAC3B,WAD2B,eAC3B;AAFkE;;AAIpE,MAAIC,YAAAA,CAAJ,GAAIA,CAAJ,EAAuB;AACrBC,oBADqB,oEACrBA;AACA,WAFqB,eAErB;AANkE;;AAQpE,MAAMC,KAAAA,GAR8D,qDAQpE;AAGA,MAAMC,UAAAA,GAX8D,+BAWpE;AACA,MAAMC,QAAAA,GAAWF,KAAAA,CAAAA,IAAAA,CAZmD,GAYnDA,CAAjB;AACA,MAAIG,iBAAAA,GACFF,UAAAA,CAAAA,IAAAA,CAAgBC,QAAAA,CAAhBD,CAAgBC,CAAhBD,KACAA,UAAAA,CAAAA,IAAAA,CAAgBC,QAAAA,CADhBD,CACgBC,CAAhBD,CADAA,IAEAA,UAAAA,CAAAA,IAAAA,CAAgBC,QAAAA,CAhBkD,CAgBlDA,CAAhBD,CAHF;;AAIA,yBAAuB;AACrBE,IAAAA,iBAAAA,GAAoBA,iBAAAA,CADC,CACDA,CAApBA;;AACA,QAAIA,iBAAAA,CAAAA,QAAAA,CAAJ,GAAIA,CAAJ,EAAqC;AAEnC,UAAI;AACFA,QAAAA,iBAAAA,GAAoBF,UAAAA,CAAAA,IAAAA,CAClBG,kBAAAA,CADkBH,iBAClBG,CADkBH,EADlB,CACkBA,CAApBE;AADF,QAIE,WAAW,CANsB;AAFhB;AAjB6C;;AAgCpE,SAAOA,iBAAAA,IAhC6D,eAgCpE;AAtbF;;IAybA;AACErE,uBAAc;AAAA;;AACZ,mBAAeuE,MAAAA,CAAAA,MAAAA,CADH,IACGA,CAAf;AACA,iBAFY,EAEZ;AAHY;;;;WAMdC,cAAAA,IAAAA,EAAW;AACT,UAAIC,IAAAA,IAAQ,KAAZ,SAA0B;AACxBR,+DADwB,IACxBA;AAFO;;AAIT,2BAAqBS,IAAAA,CAJZ,GAIYA,EAArB;AAVY;;;WAadC,iBAAAA,IAAAA,EAAc;AACZ,UAAI,EAAE,QAAQ,KAAd,OAAI,CAAJ,EAA6B;AAC3BV,iEAD2B,IAC3BA;AAFU;;AAIZ,sBAAgB;AACdQ,QAAAA,IADc,EACdA,IADc;AAEdG,QAAAA,KAAAA,EAAO,aAFO,IAEP,CAFO;AAGdd,QAAAA,GAAAA,EAAKY,IAAAA,CAHS,GAGTA;AAHS,OAAhB;AAMA,aAAO,aAVK,IAUL,CAAP;AAvBY;;;WA0BdG,oBAAW;AAET,UAAMC,MAAAA,GAFG,EAET;AACA,UAAIC,OAAAA,GAHK,CAGT;;AAHS,iDAIU,KAAnB,KAJS;AAAA;;AAAA;AAIT,4DAA+B;AAAA,cAA/B,IAA+B;AAC7B,cAAMN,IAAAA,GAAOD,IAAAA,CADgB,IAC7B;;AACA,cAAIC,IAAAA,CAAAA,MAAAA,GAAJ,SAA2B;AACzBM,YAAAA,OAAAA,GAAUN,IAAAA,CADe,MACzBM;AAH2B;AAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kDAUU,KAAnB,KAVS;AAAA;;AAAA;AAUT,+DAA+B;AAAA,cAA/B,KAA+B;AAC7B,cAAMC,QAAAA,GAAWR,KAAAA,CAAAA,GAAAA,GAAWA,KAAAA,CADC,KAC7B;AACAM,UAAAA,MAAAA,CAAAA,IAAAA,WAAeN,KAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAH,OAAGA,CAAfM,cAF6B,QAE7BA;AAZO;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcT,aAAOA,MAAAA,CAAAA,IAAAA,CAdE,EAcFA,CAAP;AAxCY;;;;;;;;AA4ChB,uCAAuC;AACrC,MAAI;AACF,gBAAqBG,OAAAA,GAAU,aAAVA,OAAU,CAAVA,GAAkC,QADrD,GACqD,CAAvD;AAAA,QAAM,QAAN,SAAM,QAAN;;AAEA,WAAOC,QAAAA,KAAAA,OAAAA,IAAwBA,QAAAA,KAH7B,QAGF;AAHF,IAIE,WAAW;AACX,WADW,KACX;AANmC;AArevC;;AAofA,yBAAsD;AAAA,MAA7BC,mBAA6B,uEAAtD,KAAsD;AACpD,SAAO,YAAY,2BAAqB;AACtC,QAAMC,MAAAA,GAAS7E,QAAAA,CAAAA,aAAAA,CADuB,QACvBA,CAAf;AACA6E,IAAAA,MAAAA,CAAAA,GAAAA,GAFsC,GAEtCA;;AAEAA,IAAAA,MAAAA,CAAAA,MAAAA,GAAgB,eAAe;AAC7B,+BAAyB;AACvBA,QAAAA,MAAAA,CADuB,MACvBA;AAF2B;;AAI7BtE,MAAAA,OAAAA,CAJ6B,GAI7BA,CAAAA;AARoC,KAItCsE;;AAMAA,IAAAA,MAAAA,CAAAA,OAAAA,GAAiB,YAAY;AAC3BrE,MAAAA,MAAAA,CAAO,2CAAoCqE,MAAAA,CADhB,GACpB,EAAPrE,CAAAA;AAXoC,KAUtCqE;;AAGC,sBAAiB7E,QAAAA,CAAlB,eAAC,EAAD,WAAC,CAbqC,MAarC;AAdiD,GAC7C,CAAP;AArfF;;AAugBA,6BAA6B;AAC3B8E,EAAAA,OAAAA,CAAAA,GAAAA,CAAY,2BADe,OAC3BA;AAxgBF;;AA2gBA,IA3gBA,kBA2gBA;;IAEA;;;;;;;WAiBE,6BAA2B;AACzB,UAAI,UAAU,CAACC,oBAAf,KAAeA,CAAf,EAAgC;AAC9B,eAD8B,IAC9B;AAFuB;;AAMzB,UAAI,CAAJ,oBAAyB;AACvBC,QAAAA,kBAAAA,GAAqB,WACnB,6IAFqB,IACF,CAArBA;AAPuB;;AA0BzB,UAAMC,OAAAA,GAAUD,kBAAAA,CAAAA,IAAAA,CA1BS,KA0BTA,CAAhB;;AACA,UAAI,CAAJ,SAAc;AACZ,eADY,IACZ;AA5BuB;;AAiCzB,UAAME,IAAAA,GAAOC,QAAAA,CAASF,OAAAA,CAATE,CAASF,CAATE,EAjCY,EAiCZA,CAAb;AACA,UAAIC,KAAAA,GAAQD,QAAAA,CAASF,OAAAA,CAATE,CAASF,CAATE,EAlCa,EAkCbA,CAAZ;AACAC,MAAAA,KAAAA,GAAQA,KAAAA,IAAAA,CAAAA,IAAcA,KAAAA,IAAdA,EAAAA,GAA4BA,KAAAA,GAA5BA,CAAAA,GAnCiB,CAmCzBA;AACA,UAAIC,GAAAA,GAAMF,QAAAA,CAASF,OAAAA,CAATE,CAASF,CAATE,EApCe,EAoCfA,CAAV;AACAE,MAAAA,GAAAA,GAAMA,GAAAA,IAAAA,CAAAA,IAAYA,GAAAA,IAAZA,EAAAA,GAAAA,GAAAA,GArCmB,CAqCzBA;AACA,UAAIC,IAAAA,GAAOH,QAAAA,CAASF,OAAAA,CAATE,CAASF,CAATE,EAtCc,EAsCdA,CAAX;AACAG,MAAAA,IAAAA,GAAOA,IAAAA,IAAAA,CAAAA,IAAaA,IAAAA,IAAbA,EAAAA,GAAAA,IAAAA,GAvCkB,CAuCzBA;AACA,UAAIC,MAAAA,GAASJ,QAAAA,CAASF,OAAAA,CAATE,CAASF,CAATE,EAxCY,EAwCZA,CAAb;AACAI,MAAAA,MAAAA,GAASA,MAAAA,IAAAA,CAAAA,IAAeA,MAAAA,IAAfA,EAAAA,GAAAA,MAAAA,GAzCgB,CAyCzBA;AACA,UAAIC,MAAAA,GAASL,QAAAA,CAASF,OAAAA,CAATE,CAASF,CAATE,EA1CY,EA0CZA,CAAb;AACAK,MAAAA,MAAAA,GAASA,MAAAA,IAAAA,CAAAA,IAAeA,MAAAA,IAAfA,EAAAA,GAAAA,MAAAA,GA3CgB,CA2CzBA;AACA,UAAMC,qBAAAA,GAAwBR,OAAAA,CAAAA,CAAAA,CAAAA,IA5CL,GA4CzB;AACA,UAAIS,UAAAA,GAAaP,QAAAA,CAASF,OAAAA,CAATE,CAASF,CAATE,EA7CQ,EA6CRA,CAAjB;AACAO,MAAAA,UAAAA,GAAaA,UAAAA,IAAAA,CAAAA,IAAmBA,UAAAA,IAAnBA,EAAAA,GAAAA,UAAAA,GA9CY,CA8CzBA;AACA,UAAIC,YAAAA,GAAeR,QAAAA,CAASF,OAAAA,CAATE,CAASF,CAATE,EAAAA,EAAAA,CAAAA,IA/CM,CA+CzB;AACAQ,MAAAA,YAAAA,GAAeA,YAAAA,IAAAA,CAAAA,IAAqBA,YAAAA,IAArBA,EAAAA,GAAAA,YAAAA,GAhDU,CAgDzBA;;AAMA,UAAIF,qBAAAA,KAAJ,KAAmC;AACjCH,QAAAA,IAAAA,IADiC,UACjCA;AACAC,QAAAA,MAAAA,IAFiC,YAEjCA;AAFF,aAGO,IAAIE,qBAAAA,KAAJ,KAAmC;AACxCH,QAAAA,IAAAA,IADwC,UACxCA;AACAC,QAAAA,MAAAA,IAFwC,YAExCA;AA3DuB;;AA8DzB,aAAO,SAASpB,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA,MAAAA,EA9DS,MA8DTA,CAAT,CAAP;AA/EgB;;;;;;;;AAsFpB,4CAAkE;AAAA,0BAA3BpC,KAA2B;AAAA,MAA3BA,KAA2B,4BAA7B,CAA6B;AAAA,6BAAhBX,QAAgB;AAAA,MAAhBA,QAAgB,+BAAlE,CAAkE;AAChE,8BAA0BwE,OAAAA,CAAAA,UAAAA,CADsC,KAChE;AAAA,MAAM,KAAN,yBAAM,KAAN;AAAA,MAAM,MAAN,yBAAM,MAAN;AACA,MAAM1E,OAAAA,GAAU,OAAOiE,QAAAA,CAAP,KAAOA,CAAP,EAAwBA,QAAAA,CAAxB,MAAwBA,CAAxB,CAAhB;AAEA,SAAO,iBAAiB;AACtBjE,IAAAA,OADsB,EACtBA,OADsB;AAEtBa,IAAAA,KAFsB,EAEtBA,KAFsB;AAGtBX,IAAAA,QAHsB,EAGtBA;AAHsB,GAAjB,CAAP;AAvmBF;;;;;;;;ACAAyE,uCAAAA;;;;;;;;;;;ACOA,IAAIE,OAAAA,GAAW,mBAAmB;AAAA;;AAGhC,MAAIC,EAAAA,GAAKhC,MAAAA,CAHuB,SAGhC;AACA,MAAIiC,MAAAA,GAASD,EAAAA,CAJmB,cAIhC;AACA,MALgC,SAKhC;AACA,MAAIE,OAAAA,GAAU,wCANkB,EAMhC;AACA,MAAIC,cAAAA,GAAiBD,OAAAA,CAAAA,QAAAA,IAPW,YAOhC;AACA,MAAIE,mBAAAA,GAAsBF,OAAAA,CAAAA,aAAAA,IARM,iBAQhC;AACA,MAAIG,iBAAAA,GAAoBH,OAAAA,CAAAA,WAAAA,IATQ,eAShC;;AAEA,mCAAiC;AAC/BlC,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAgC;AAC9BsC,MAAAA,KAAAA,EAD8B;AAE9BC,MAAAA,UAAAA,EAF8B;AAG9BC,MAAAA,YAAAA,EAH8B;AAI9BC,MAAAA,QAAAA,EAJ8B;AAAA,KAAhCzC;AAMA,WAAO0C,GAAAA,CAPwB,GAOxBA,CAAP;AAlB8B;;AAoBhC,MAAI;AAEFC,IAAAA,MAAAA,CAAAA,EAAAA,EAFE,EAEFA,CAAAA;AAFF,IAGE,YAAY;AACZA,IAAAA,MAAAA,GAAS,iCAA0B;AACjC,aAAOD,GAAAA,CAAAA,GAAAA,CAAAA,GAD0B,KACjC;AAFU,KACZC;AAxB8B;;AA6BhC,qDAAmD;AAEjD,QAAIC,cAAAA,GAAiBC,OAAAA,IAAWA,OAAAA,CAAAA,SAAAA,YAAXA,SAAAA,GAAAA,OAAAA,GAF4B,SAEjD;AACA,QAAIC,SAAAA,GAAY9C,MAAAA,CAAAA,MAAAA,CAAc4C,cAAAA,CAHmB,SAGjC5C,CAAhB;AACA,QAAI+C,OAAAA,GAAU,YAAYC,WAAAA,IAJuB,EAInC,CAAd;AAIAF,IAAAA,SAAAA,CAAAA,OAAAA,GAAoBG,gBAAAA,CAAAA,OAAAA,EAAAA,IAAAA,EAR6B,OAQ7BA,CAApBH;AAEA,WAViD,SAUjD;AAvC8B;;AAyChCI,EAAAA,OAAAA,CAAAA,IAAAA,GAzCgC,IAyChCA;;AAYA,kCAAgC;AAC9B,QAAI;AACF,aAAO;AAAEC,QAAAA,IAAAA,EAAF;AAAkBC,QAAAA,GAAAA,EAAKC,EAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAAvB,GAAuBA;AAAvB,OAAP;AADF,MAEE,YAAY;AACZ,aAAO;AAAEF,QAAAA,IAAAA,EAAF;AAAiBC,QAAAA,GAAAA,EAAjB;AAAA,OAAP;AAJ4B;AArDA;;AA6DhC,MAAIE,sBAAAA,GA7D4B,gBA6DhC;AACA,MAAIC,sBAAAA,GA9D4B,gBA8DhC;AACA,MAAIC,iBAAAA,GA/D4B,WA+DhC;AACA,MAAIC,iBAAAA,GAhE4B,WAgEhC;AAIA,MAAIC,gBAAAA,GApE4B,EAoEhC;;AAMA,uBAAqB,CA1EW;;AA2EhC,+BAA6B,CA3EG;;AA4EhC,wCAAsC,CA5EN;;AAgFhC,MAAIC,iBAAAA,GAhF4B,EAgFhC;AACAhB,EAAAA,MAAAA,CAAAA,iBAAAA,EAAAA,cAAAA,EAA0C,YAAY;AACpD,WADoD,IACpD;AAlF8B,GAiFhCA,CAAAA;AAIA,MAAIiB,QAAAA,GAAW5D,MAAAA,CArFiB,cAqFhC;AACA,MAAI6D,uBAAAA,GAA0BD,QAAAA,IAAYA,QAAAA,CAASA,QAAAA,CAASE,MAAAA,CAtF5B,EAsF4BA,CAATF,CAATA,CAA1C;;AACA,MAAIC,uBAAAA,IACAA,uBAAAA,KADAA,EAAAA,IAEA5B,MAAAA,CAAAA,IAAAA,CAAAA,uBAAAA,EAFJ,cAEIA,CAFJ,EAE0D;AAGxD0B,IAAAA,iBAAAA,GAHwD,uBAGxDA;AA5F8B;;AA+FhC,MAAII,EAAAA,GAAKC,0BAAAA,CAAAA,SAAAA,GACPC,SAAAA,CAAAA,SAAAA,GAAsBjE,MAAAA,CAAAA,MAAAA,CAhGQ,iBAgGRA,CADxB;AAEAkE,EAAAA,iBAAAA,CAAAA,SAAAA,GAjGgC,0BAiGhCA;AACAvB,EAAAA,MAAAA,CAAAA,EAAAA,EAAAA,aAAAA,EAlGgC,0BAkGhCA,CAAAA;AACAA,EAAAA,MAAAA,CAAAA,0BAAAA,EAAAA,aAAAA,EAnGgC,iBAmGhCA,CAAAA;AACAuB,EAAAA,iBAAAA,CAAAA,WAAAA,GAAgCvB,MAAAA,CAAAA,0BAAAA,EAAAA,iBAAAA,EApGA,mBAoGAA,CAAhCuB;;AAQA,4CAA0C;AACxC,wCAAoC,kBAAiB;AACnDvB,MAAAA,MAAAA,CAAAA,SAAAA,EAAAA,MAAAA,EAA0B,eAAc;AACtC,eAAO,qBAD+B,GAC/B,CAAP;AAFiD,OACnDA,CAAAA;AAFsC,KACxC;AA7G8B;;AAoHhCO,EAAAA,OAAAA,CAAAA,mBAAAA,GAA8B,kBAAiB;AAC7C,QAAIiB,IAAAA,GAAO,gCAAgCC,MAAAA,CADE,WAC7C;AACA,WAAOD,IAAAA,GACHA,IAAAA,KAAAA,iBAAAA,IAGC,qBAAoBA,IAAAA,CAArB,IAAC,MAJEA,mBAAAA,GAFsC,KAE7C;AAtH8B,GAoHhCjB;;AAUAA,EAAAA,OAAAA,CAAAA,IAAAA,GAAe,kBAAiB;AAC9B,QAAIlD,MAAAA,CAAJ,gBAA2B;AACzBA,MAAAA,MAAAA,CAAAA,cAAAA,CAAAA,MAAAA,EADyB,0BACzBA;AADF,WAEO;AACLoE,MAAAA,MAAAA,CAAAA,SAAAA,GADK,0BACLA;AACAzB,MAAAA,MAAAA,CAAAA,MAAAA,EAAAA,iBAAAA,EAFK,mBAELA,CAAAA;AAL4B;;AAO9ByB,IAAAA,MAAAA,CAAAA,SAAAA,GAAmBpE,MAAAA,CAAAA,MAAAA,CAPW,EAOXA,CAAnBoE;AACA,WAR8B,MAQ9B;AAtI8B,GA8HhClB;;AAeAA,EAAAA,OAAAA,CAAAA,KAAAA,GAAgB,eAAc;AAC5B,WAAO;AAAEmB,MAAAA,OAAAA,EADmB;AACrB,KAAP;AA9I8B,GA6IhCnB;;AAIA,iDAA+C;AAC7C,kDAA8C;AAC5C,UAAIoB,MAAAA,GAASC,QAAAA,CAASzB,SAAAA,CAATyB,MAASzB,CAATyB,EAAAA,SAAAA,EAD+B,GAC/BA,CAAb;;AACA,UAAID,MAAAA,CAAAA,IAAAA,KAAJ,SAA6B;AAC3B9H,QAAAA,MAAAA,CAAO8H,MAAAA,CADoB,GAC3B9H,CAAAA;AADF,aAEO;AACL,YAAIgI,MAAAA,GAASF,MAAAA,CADR,GACL;AACA,YAAIhC,KAAAA,GAAQkC,MAAAA,CAFP,KAEL;;AACA,YAAIlC,KAAAA,IACA,mBADAA,QAAAA,IAEAL,MAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAFJ,SAEIA,CAFJ,EAEmC;AACjC,iBAAO,oBAAoBK,KAAAA,CAApB,cAAwC,iBAAgB;AAC7DmC,YAAAA,MAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,EAD6D,MAC7DA,CAAAA;AADK,aAEJ,eAAc;AACfA,YAAAA,MAAAA,CAAAA,OAAAA,EAAAA,GAAAA,EAAAA,OAAAA,EADe,MACfA,CAAAA;AAJ+B,WAC1B,CAAP;AANG;;AAaL,eAAO,gCAAgC,qBAAoB;AAIzDD,UAAAA,MAAAA,CAAAA,KAAAA,GAJyD,SAIzDA;AACAjI,UAAAA,OAAAA,CALyD,MAKzDA,CAAAA;AALK,WAMJ,iBAAgB;AAGjB,iBAAOkI,MAAAA,CAAAA,OAAAA,EAAAA,KAAAA,EAAAA,OAAAA,EAHU,MAGVA,CAAP;AAtBG,SAaE,CAAP;AAjB0C;AADD;;AAgC7C,QAhC6C,eAgC7C;;AAEA,kCAA8B;AAC5B,4CAAsC;AACpC,eAAO,gBAAgB,2BAA0B;AAC/CA,UAAAA,MAAAA,CAAAA,MAAAA,EAAAA,GAAAA,EAAAA,OAAAA,EAD+C,MAC/CA,CAAAA;AAFkC,SAC7B,CAAP;AAF0B;;AAO5B,aAAOC,eAAAA,GAaLA,eAAAA,GAAkBA,eAAAA,CAAAA,IAAAA,CAAAA,0BAAAA,EAAlBA,0BAAkBA,CAAlBA,GAKIC,0BAzBsB,EAO5B;AAzC2C;;AAgE7C,mBAhE6C,OAgE7C;AAjN8B;;AAoNhCC,EAAAA,qBAAAA,CAAsBC,aAAAA,CApNU,SAoNhCD,CAAAA;AACAjC,EAAAA,MAAAA,CAAOkC,aAAAA,CAAPlC,SAAAA,EAAAA,mBAAAA,EAAqD,YAAY;AAC/D,WAD+D,IAC/D;AAtN8B,GAqNhCA,CAAAA;AAGAO,EAAAA,OAAAA,CAAAA,aAAAA,GAxNgC,aAwNhCA;;AAKAA,EAAAA,OAAAA,CAAAA,KAAAA,GAAgB,4DAA2D;AACzE,QAAI4B,WAAAA,KAAgB,KAApB,GAA4BA,WAAAA,GAD6C,OAC7CA;AAE5B,QAAIC,IAAAA,GAAO,kBACTC,IAAAA,CAAAA,OAAAA,EAAAA,OAAAA,EAAAA,IAAAA,EADS,WACTA,CADS,EAH8D,WAG9D,CAAX;AAKA,WAAO9B,OAAAA,CAAAA,mBAAAA,CAAAA,OAAAA,IAAAA,IAAAA,GAEH,iBAAiB,kBAAiB;AAChC,aAAOsB,MAAAA,CAAAA,IAAAA,GAAcA,MAAAA,CAAdA,KAAAA,GAA6BO,IAAAA,CADJ,IACIA,EAApC;AAXmE,KAUrE,CAFJ;AArO8B,GA6NhC7B;;AAeA,oDAAkD;AAChD,QAAI+B,KAAAA,GAD4C,sBAChD;AAEA,WAAO,6BAA6B;AAClC,UAAIA,KAAAA,KAAJ,mBAAiC;AAC/B,cAAM,UADyB,8BACzB,CAAN;AAFgC;;AAKlC,UAAIA,KAAAA,KAAJ,mBAAiC;AAC/B,YAAIC,MAAAA,KAAJ,SAAwB;AACtB,gBADsB,GACtB;AAF6B;;AAO/B,eAAOC,UAPwB,EAO/B;AAZgC;;AAelCpC,MAAAA,OAAAA,CAAAA,MAAAA,GAfkC,MAelCA;AACAA,MAAAA,OAAAA,CAAAA,GAAAA,GAhBkC,GAgBlCA;;AAEA,mBAAa;AACX,YAAIqC,QAAAA,GAAWrC,OAAAA,CADJ,QACX;;AACA,sBAAc;AACZ,cAAIsC,cAAAA,GAAiBC,mBAAAA,CAAAA,QAAAA,EADT,OACSA,CAArB;;AACA,8BAAoB;AAClB,gBAAID,cAAAA,KAAJ,kBADkB;AAElB,mBAFkB,cAElB;AAJU;AAFH;;AAUX,YAAItC,OAAAA,CAAAA,MAAAA,KAAJ,QAA+B;AAG7BA,UAAAA,OAAAA,CAAAA,IAAAA,GAAeA,OAAAA,CAAAA,KAAAA,GAAgBA,OAAAA,CAHF,GAG7BA;AAHF,eAKO,IAAIA,OAAAA,CAAAA,MAAAA,KAAJ,SAAgC;AACrC,cAAIkC,KAAAA,KAAJ,wBAAsC;AACpCA,YAAAA,KAAAA,GADoC,iBACpCA;AACA,kBAAMlC,OAAAA,CAF8B,GAEpC;AAHmC;;AAMrCA,UAAAA,OAAAA,CAAAA,iBAAAA,CAA0BA,OAAAA,CANW,GAMrCA;AANK,eAQA,IAAIA,OAAAA,CAAAA,MAAAA,KAAJ,UAAiC;AACtCA,UAAAA,OAAAA,CAAAA,MAAAA,CAAAA,QAAAA,EAAyBA,OAAAA,CADa,GACtCA;AAxBS;;AA2BXkC,QAAAA,KAAAA,GA3BW,iBA2BXA;AAEA,YAAIX,MAAAA,GAASC,QAAAA,CAAAA,OAAAA,EAAAA,IAAAA,EA7BF,OA6BEA,CAAb;;AACA,YAAID,MAAAA,CAAAA,IAAAA,KAAJ,UAA8B;AAG5BW,UAAAA,KAAAA,GAAQlC,OAAAA,CAAAA,IAAAA,GAAAA,iBAAAA,GAHoB,sBAG5BkC;;AAIA,cAAIX,MAAAA,CAAAA,GAAAA,KAAJ,kBAAqC;AAAA;AAPT;;AAW5B,iBAAO;AACLhC,YAAAA,KAAAA,EAAOgC,MAAAA,CADF;AAELiB,YAAAA,IAAAA,EAAMxC,OAAAA,CAFD;AAAA,WAAP;AAXF,eAgBO,IAAIuB,MAAAA,CAAAA,IAAAA,KAAJ,SAA6B;AAClCW,UAAAA,KAAAA,GADkC,iBAClCA;AAGAlC,UAAAA,OAAAA,CAAAA,MAAAA,GAJkC,OAIlCA;AACAA,UAAAA,OAAAA,CAAAA,GAAAA,GAAcuB,MAAAA,CALoB,GAKlCvB;AAnDS;AAlBqB;AAHY,KAGhD;AA/O8B;;AA8ThC,kDAAgD;AAC9C,QAAImC,MAAAA,GAASE,QAAAA,CAAAA,QAAAA,CAAkBrC,OAAAA,CADe,MACjCqC,CAAb;;AACA,QAAIF,MAAAA,KAAJ,WAA0B;AAGxBnC,MAAAA,OAAAA,CAAAA,QAAAA,GAHwB,IAGxBA;;AAEA,UAAIA,OAAAA,CAAAA,MAAAA,KAAJ,SAAgC;AAE9B,YAAIqC,QAAAA,CAAAA,QAAAA,CAAJ,QAAIA,CAAJ,EAAiC;AAG/BrC,UAAAA,OAAAA,CAAAA,MAAAA,GAH+B,QAG/BA;AACAA,UAAAA,OAAAA,CAAAA,GAAAA,GAJ+B,SAI/BA;AACAuC,UAAAA,mBAAAA,CAAAA,QAAAA,EAL+B,OAK/BA,CAAAA;;AAEA,cAAIvC,OAAAA,CAAAA,MAAAA,KAAJ,SAAgC;AAG9B,mBAH8B,gBAG9B;AAV6B;AAFH;;AAgB9BA,QAAAA,OAAAA,CAAAA,MAAAA,GAhB8B,OAgB9BA;AACAA,QAAAA,OAAAA,CAAAA,GAAAA,GAAc,cAjBgB,gDAiBhB,CAAdA;AAtBsB;;AA0BxB,aA1BwB,gBA0BxB;AA5B4C;;AA+B9C,QAAIuB,MAAAA,GAASC,QAAAA,CAAAA,MAAAA,EAAiBa,QAAAA,CAAjBb,QAAAA,EAAoCxB,OAAAA,CA/BH,GA+BjCwB,CAAb;;AAEA,QAAID,MAAAA,CAAAA,IAAAA,KAAJ,SAA6B;AAC3BvB,MAAAA,OAAAA,CAAAA,MAAAA,GAD2B,OAC3BA;AACAA,MAAAA,OAAAA,CAAAA,GAAAA,GAAcuB,MAAAA,CAFa,GAE3BvB;AACAA,MAAAA,OAAAA,CAAAA,QAAAA,GAH2B,IAG3BA;AACA,aAJ2B,gBAI3B;AArC4C;;AAwC9C,QAAIyC,IAAAA,GAAOlB,MAAAA,CAxCmC,GAwC9C;;AAEA,QAAI,CAAJ,MAAY;AACVvB,MAAAA,OAAAA,CAAAA,MAAAA,GADU,OACVA;AACAA,MAAAA,OAAAA,CAAAA,GAAAA,GAAc,cAFJ,kCAEI,CAAdA;AACAA,MAAAA,OAAAA,CAAAA,QAAAA,GAHU,IAGVA;AACA,aAJU,gBAIV;AA9C4C;;AAiD9C,QAAIyC,IAAAA,CAAJ,MAAe;AAGbzC,MAAAA,OAAAA,CAAQqC,QAAAA,CAARrC,UAAAA,CAAAA,GAA+ByC,IAAAA,CAHlB,KAGbzC;AAGAA,MAAAA,OAAAA,CAAAA,IAAAA,GAAeqC,QAAAA,CANF,OAMbrC;;AAQA,UAAIA,OAAAA,CAAAA,MAAAA,KAAJ,UAAiC;AAC/BA,QAAAA,OAAAA,CAAAA,MAAAA,GAD+B,MAC/BA;AACAA,QAAAA,OAAAA,CAAAA,GAAAA,GAF+B,SAE/BA;AAhBW;AAAf,WAmBO;AAEL,aAFK,IAEL;AAtE4C;;AA2E9CA,IAAAA,OAAAA,CAAAA,QAAAA,GA3E8C,IA2E9CA;AACA,WA5E8C,gBA4E9C;AA1Y8B;;AA+YhC6B,EAAAA,qBAAAA,CA/YgC,EA+YhCA,CAAAA;AAEAjC,EAAAA,MAAAA,CAAAA,EAAAA,EAAAA,iBAAAA,EAjZgC,WAiZhCA,CAAAA;AAOAA,EAAAA,MAAAA,CAAAA,EAAAA,EAAAA,cAAAA,EAA2B,YAAW;AACpC,WADoC,IACpC;AAzZ8B,GAwZhCA,CAAAA;AAIAA,EAAAA,MAAAA,CAAAA,EAAAA,EAAAA,UAAAA,EAAuB,YAAW;AAChC,WADgC,oBAChC;AA7Z8B,GA4ZhCA,CAAAA;;AAIA,8BAA4B;AAC1B,QAAI8C,KAAAA,GAAQ;AAAEC,MAAAA,MAAAA,EAAQC,IAAAA,CADI,CACJA;AAAV,KAAZ;;AAEA,QAAI,KAAJ,MAAe;AACbF,MAAAA,KAAAA,CAAAA,QAAAA,GAAiBE,IAAAA,CADJ,CACIA,CAAjBF;AAJwB;;AAO1B,QAAI,KAAJ,MAAe;AACbA,MAAAA,KAAAA,CAAAA,UAAAA,GAAmBE,IAAAA,CADN,CACMA,CAAnBF;AACAA,MAAAA,KAAAA,CAAAA,QAAAA,GAAiBE,IAAAA,CAFJ,CAEIA,CAAjBF;AATwB;;AAY1B,yBAZ0B,KAY1B;AA5a8B;;AA+ahC,gCAA8B;AAC5B,QAAInB,MAAAA,GAASmB,KAAAA,CAAAA,UAAAA,IADe,EAC5B;AACAnB,IAAAA,MAAAA,CAAAA,IAAAA,GAF4B,QAE5BA;AACA,WAAOA,MAAAA,CAHqB,GAG5B;AACAmB,IAAAA,KAAAA,CAAAA,UAAAA,GAJ4B,MAI5BA;AAnb8B;;AAsbhC,gCAA8B;AAI5B,sBAAkB,CAAC;AAAEC,MAAAA,MAAAA,EAJO;AAIT,KAAD,CAAlB;AACA1C,IAAAA,WAAAA,CAAAA,OAAAA,CAAAA,YAAAA,EAL4B,IAK5BA;AACA,eAN4B,IAM5B;AA5b8B;;AA+bhCE,EAAAA,OAAAA,CAAAA,IAAAA,GAAe,kBAAiB;AAC9B,QAAI0C,IAAAA,GAD0B,EAC9B;;AACA,4BAAwB;AACtBA,MAAAA,IAAAA,CAAAA,IAAAA,CADsB,GACtBA;AAH4B;;AAK9BA,IAAAA,IAAAA,CAL8B,OAK9BA;AAIA,WAAO,gBAAgB;AACrB,aAAOA,IAAAA,CAAP,QAAoB;AAClB,YAAIC,GAAAA,GAAMD,IAAAA,CADQ,GACRA,EAAV;;AACA,YAAIC,GAAAA,IAAJ,QAAmB;AACjBC,UAAAA,IAAAA,CAAAA,KAAAA,GADiB,GACjBA;AACAA,UAAAA,IAAAA,CAAAA,IAAAA,GAFiB,KAEjBA;AACA,iBAHiB,IAGjB;AALgB;AADC;;AAarBA,MAAAA,IAAAA,CAAAA,IAAAA,GAbqB,IAarBA;AACA,aAdqB,IAcrB;AAvB4B,KAS9B;AAxc8B,GA+bhC5C;;AA2BA,4BAA0B;AACxB,kBAAc;AACZ,UAAI6C,cAAAA,GAAiBC,QAAAA,CADT,cACSA,CAArB;;AACA,0BAAoB;AAClB,eAAOD,cAAAA,CAAAA,IAAAA,CADW,QACXA,CAAP;AAHU;;AAMZ,UAAI,OAAOC,QAAAA,CAAP,SAAJ,YAAyC;AACvC,eADuC,QACvC;AAPU;;AAUZ,UAAI,CAACC,KAAAA,CAAMD,QAAAA,CAAX,MAAKC,CAAL,EAA6B;AAC3B,YAAI7G,CAAAA,GAAI,CAAR;AAAA,YAAY0G,IAAAA,GAAO,gBAAgB;AACjC,iBAAO,MAAME,QAAAA,CAAb,QAA8B;AAC5B,gBAAI/D,MAAAA,CAAAA,IAAAA,CAAAA,QAAAA,EAAJ,CAAIA,CAAJ,EAA8B;AAC5B6D,cAAAA,IAAAA,CAAAA,KAAAA,GAAaE,QAAAA,CADe,CACfA,CAAbF;AACAA,cAAAA,IAAAA,CAAAA,IAAAA,GAF4B,KAE5BA;AACA,qBAH4B,IAG5B;AAJ0B;AADG;;AASjCA,UAAAA,IAAAA,CAAAA,KAAAA,GATiC,SASjCA;AACAA,UAAAA,IAAAA,CAAAA,IAAAA,GAViC,IAUjCA;AAEA,iBAZiC,IAYjC;AAbyB,SAC3B;;AAeA,eAAOA,IAAAA,CAAAA,IAAAA,GAhBoB,IAgB3B;AA1BU;AADU;;AAgCxB,WAAO;AAAEA,MAAAA,IAAAA,EAhCe;AAgCjB,KAAP;AA1f8B;;AA4fhC5C,EAAAA,OAAAA,CAAAA,MAAAA,GA5fgC,MA4fhCA;;AAEA,wBAAsB;AACpB,WAAO;AAAEZ,MAAAA,KAAAA,EAAF;AAAoBiD,MAAAA,IAAAA,EAApB;AAAA,KAAP;AA/f8B;;AAkgBhCW,EAAAA,OAAAA,CAAAA,SAAAA,GAAoB;AAClBzK,IAAAA,WAAAA,EADkB;AAGlB0K,IAAAA,KAAAA,EAAO,8BAAwB;AAC7B,kBAD6B,CAC7B;AACA,kBAF6B,CAE7B;AAGA,kBAAY,aALiB,SAK7B;AACA,kBAN6B,KAM7B;AACA,sBAP6B,IAO7B;AAEA,oBAT6B,MAS7B;AACA,iBAV6B,SAU7B;AAEA,8BAZ6B,aAY7B;;AAEA,UAAI,CAAJ,eAAoB;AAClB,+BAAuB;AAErB,cAAIjG,IAAAA,CAAAA,MAAAA,CAAAA,CAAAA,MAAAA,GAAAA,IACA+B,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EADA/B,IACA+B,CADA/B,IAEA,CAAC+F,KAAAA,CAAM,CAAC/F,IAAAA,CAAAA,KAAAA,CAFZ,CAEYA,CAAP+F,CAFL,EAE4B;AAC1B,yBAD0B,SAC1B;AALmB;AADL;AAdS;AAHb;AA6BlBG,IAAAA,IAAAA,EAAM,gBAAW;AACf,kBADe,IACf;AAEA,UAAIC,SAAAA,GAAY,gBAHD,CAGC,CAAhB;AACA,UAAIC,UAAAA,GAAaD,SAAAA,CAJF,UAIf;;AACA,UAAIC,UAAAA,CAAAA,IAAAA,KAAJ,SAAiC;AAC/B,cAAMA,UAAAA,CADyB,GAC/B;AANa;;AASf,aAAO,KATQ,IASf;AAtCgB;AAyClBC,IAAAA,iBAAAA,EAAmB,sCAAoB;AACrC,UAAI,KAAJ,MAAe;AACb,cADa,SACb;AAFmC;;AAKrC,UAAIxD,OAAAA,GALiC,IAKrC;;AACA,mCAA6B;AAC3BuB,QAAAA,MAAAA,CAAAA,IAAAA,GAD2B,OAC3BA;AACAA,QAAAA,MAAAA,CAAAA,GAAAA,GAF2B,SAE3BA;AACAvB,QAAAA,OAAAA,CAAAA,IAAAA,GAH2B,GAG3BA;;AAEA,oBAAY;AAGVA,UAAAA,OAAAA,CAAAA,MAAAA,GAHU,MAGVA;AACAA,UAAAA,OAAAA,CAAAA,GAAAA,GAJU,SAIVA;AATyB;;AAY3B,eAAO,CAAC,CAZmB,MAY3B;AAlBmC;;AAqBrC,WAAK,IAAI3D,CAAAA,GAAI,yBAAb,GAAyCA,CAAAA,IAAzC,GAAiD,EAAjD,GAAsD;AACpD,YAAIqG,KAAAA,GAAQ,gBADwC,CACxC,CAAZ;AACA,YAAInB,MAAAA,GAASmB,KAAAA,CAFuC,UAEpD;;AAEA,YAAIA,KAAAA,CAAAA,MAAAA,KAAJ,QAA6B;AAI3B,iBAAOe,MAAAA,CAJoB,KAIpBA,CAAP;AARkD;;AAWpD,YAAIf,KAAAA,CAAAA,MAAAA,IAAgB,KAApB,MAA+B;AAC7B,cAAIgB,QAAAA,GAAWxE,MAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EADc,UACdA,CAAf;AACA,cAAIyE,UAAAA,GAAazE,MAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAFY,YAEZA,CAAjB;;AAEA,cAAIwE,QAAAA,IAAJ,YAA4B;AAC1B,gBAAI,YAAYhB,KAAAA,CAAhB,UAAgC;AAC9B,qBAAOe,MAAAA,CAAOf,KAAAA,CAAPe,QAAAA,EADuB,IACvBA,CAAP;AADF,mBAEO,IAAI,YAAYf,KAAAA,CAAhB,YAAkC;AACvC,qBAAOe,MAAAA,CAAOf,KAAAA,CADyB,UAChCe,CAAP;AAJwB;AAA5B,iBAOO,cAAc;AACnB,gBAAI,YAAYf,KAAAA,CAAhB,UAAgC;AAC9B,qBAAOe,MAAAA,CAAOf,KAAAA,CAAPe,QAAAA,EADuB,IACvBA,CAAP;AAFiB;AAAd,iBAKA,gBAAgB;AACrB,gBAAI,YAAYf,KAAAA,CAAhB,YAAkC;AAChC,qBAAOe,MAAAA,CAAOf,KAAAA,CADkB,UACzBe,CAAP;AAFmB;AAAhB,iBAKA;AACL,kBAAM,UADD,wCACC,CAAN;AAtB2B;AAXqB;AArBjB;AAzCrB;AAqGlBG,IAAAA,MAAAA,EAAQ,2BAAoB;AAC1B,WAAK,IAAIvH,CAAAA,GAAI,yBAAb,GAAyCA,CAAAA,IAAzC,GAAiD,EAAjD,GAAsD;AACpD,YAAIqG,KAAAA,GAAQ,gBADwC,CACxC,CAAZ;;AACA,YAAIA,KAAAA,CAAAA,MAAAA,IAAgB,KAAhBA,IAAAA,IACAxD,MAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EADAwD,YACAxD,CADAwD,IAEA,YAAYA,KAAAA,CAFhB,YAEkC;AAChC,cAAImB,YAAAA,GAD4B,KAChC;AADgC;AAJkB;AAD5B;;AAW1B,UAAIA,YAAAA,KACC,oBACAzD,IAAAA,KAFDyD,UAAAA,CAAAA,IAGAA,YAAAA,CAAAA,MAAAA,IAHAA,GAAAA,IAIAxD,GAAAA,IAAOwD,YAAAA,CAJX,YAIoC;AAGlCA,QAAAA,YAAAA,GAHkC,IAGlCA;AAlBwB;;AAqB1B,UAAItC,MAAAA,GAASsC,YAAAA,GAAeA,YAAAA,CAAfA,UAAAA,GArBa,EAqB1B;AACAtC,MAAAA,MAAAA,CAAAA,IAAAA,GAtB0B,IAsB1BA;AACAA,MAAAA,MAAAA,CAAAA,GAAAA,GAvB0B,GAuB1BA;;AAEA,wBAAkB;AAChB,sBADgB,MAChB;AACA,oBAAYsC,YAAAA,CAFI,UAEhB;AACA,eAHgB,gBAGhB;AA5BwB;;AA+B1B,aAAO,cA/BmB,MA+BnB,CAAP;AApIgB;AAuIlBC,IAAAA,QAAAA,EAAU,oCAA2B;AACnC,UAAIvC,MAAAA,CAAAA,IAAAA,KAAJ,SAA6B;AAC3B,cAAMA,MAAAA,CADqB,GAC3B;AAFiC;;AAKnC,UAAIA,MAAAA,CAAAA,IAAAA,KAAAA,OAAAA,IACAA,MAAAA,CAAAA,IAAAA,KADJ,YACgC;AAC9B,oBAAYA,MAAAA,CADkB,GAC9B;AAFF,aAGO,IAAIA,MAAAA,CAAAA,IAAAA,KAAJ,UAA8B;AACnC,oBAAY,WAAWA,MAAAA,CADY,GACnC;AACA,sBAFmC,QAEnC;AACA,oBAHmC,KAGnC;AAHK,aAIA,IAAIA,MAAAA,CAAAA,IAAAA,KAAAA,QAAAA,IAAJ,UAA0C;AAC/C,oBAD+C,QAC/C;AAbiC;;AAgBnC,aAhBmC,gBAgBnC;AAvJgB;AA0JlBwC,IAAAA,MAAAA,EAAQ,4BAAqB;AAC3B,WAAK,IAAI1H,CAAAA,GAAI,yBAAb,GAAyCA,CAAAA,IAAzC,GAAiD,EAAjD,GAAsD;AACpD,YAAIqG,KAAAA,GAAQ,gBADwC,CACxC,CAAZ;;AACA,YAAIA,KAAAA,CAAAA,UAAAA,KAAJ,YAAqC;AACnC,wBAAcA,KAAAA,CAAd,YAAgCA,KAAAA,CADG,QACnC;AACAsB,UAAAA,aAAAA,CAFmC,KAEnCA,CAAAA;AACA,iBAHmC,gBAGnC;AALkD;AAD3B;AA1JX;AAqKlB,aAAS,wBAAiB;AACxB,WAAK,IAAI3H,CAAAA,GAAI,yBAAb,GAAyCA,CAAAA,IAAzC,GAAiD,EAAjD,GAAsD;AACpD,YAAIqG,KAAAA,GAAQ,gBADwC,CACxC,CAAZ;;AACA,YAAIA,KAAAA,CAAAA,MAAAA,KAAJ,QAA6B;AAC3B,cAAInB,MAAAA,GAASmB,KAAAA,CADc,UAC3B;;AACA,cAAInB,MAAAA,CAAAA,IAAAA,KAAJ,SAA6B;AAC3B,gBAAI0C,MAAAA,GAAS1C,MAAAA,CADc,GAC3B;AACAyC,YAAAA,aAAAA,CAF2B,KAE3BA,CAAAA;AAJyB;;AAM3B,iBAN2B,MAM3B;AARkD;AAD9B;;AAexB,YAAM,UAfkB,uBAelB,CAAN;AApLgB;AAuLlBE,IAAAA,aAAAA,EAAe,sDAAwC;AACrD,sBAAgB;AACdC,QAAAA,QAAAA,EAAUpD,MAAAA,CADI,QACJA,CADI;AAEdqD,QAAAA,UAAAA,EAFc;AAGdC,QAAAA,OAAAA,EAHc;AAAA,OAAhB;;AAMA,UAAI,gBAAJ,QAA4B;AAG1B,mBAH0B,SAG1B;AAVmD;;AAarD,aAbqD,gBAarD;AApMgB;AAAA,GAApBlB;AA4MA,SA9sBgC,OA8sBhC;AA9sBa,EAqtBb,8CAA6BrE,MAAAA,CAA7B,UA5tBF,EAOe,CAAf;;AAwtBA,IAAI;AACFwF,EAAAA,kBAAAA,GADE,OACFA;AADF,EAEE,6BAA6B;AAW7B,MAAI,4EAAJ,UAAoC;AAClC1L,IAAAA,UAAAA,CAAAA,kBAAAA,GADkC,OAClCA;AADF,SAEO;AACL2L,IAAAA,QAAAA,CAAAA,GAAAA,EAAAA,wBAAAA,CAAAA,CADK,OACLA;AAd2B;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjuB/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAMC,eAAAA,GAAkB,kBAAxB;;AACA,IAAMC,oBAAAA,GAAuB,0BAA7B;;AAcA,IAAMC,mBAAAA,GAAsB;AAC1BC,EAAAA,GAAAA,EAD0B;AAE1BC,EAAAA,OAAAA,EAF0B;AAG1BC,EAAAA,KAAAA,EAH0B;AAI1BC,EAAAA,iBAAAA,EAJ0B;AAK1BC,EAAAA,mBAAAA,EAL0B;AAM1BC,EAAAA,mBAAAA,EAN0B;AAO1BC,EAAAA,MAAAA,EAP0B;AAAA,CAA5B;;AAUA,IAAMC,cAAAA,GAAiB;AACrBC,EAAAA,OAAAA,EADqB;AAErBC,EAAAA,MAAAA,EAFqB;AAGrBC,EAAAA,YAAAA,EAHqB;AAIrBC,EAAAA,cAAAA,EAJqB;AAAA,CAAvB;;AAQA,IAAMC,cAAAA,GAAiB;AACrBV,EAAAA,KAAAA,EADqB;AAErBW,EAAAA,eAAAA,EAFqB;AAGrBC,EAAAA,IAAAA,EAHqB;AAIrBC,EAAAA,kBAAAA,EAJqB;AAKrBC,EAAAA,sBAAAA,EALqB;AAMrBC,EAAAA,sBAAAA,EANqB;AAOrBC,EAAAA,QAAAA,EAPqB;AAQrBC,EAAAA,kBAAAA,EARqB;AAAA,CAAvB;;AAWA,IAAMC,iBAAAA,GAAoB;AACxBC,EAAAA,IAAAA,EADwB;AAExBC,EAAAA,MAAAA,EAFwB;AAGxBC,EAAAA,WAAAA,EAHwB;AAIxBC,EAAAA,SAAAA,EAJwB;AAKxBC,EAAAA,gBAAAA,EALwB;AAMxBC,EAAAA,kBAAAA,EANwB;AAOxBC,EAAAA,uBAAAA,EAPwB;AAQxBC,EAAAA,WAAAA,EARwB;AASxBC,EAAAA,gBAAAA,EATwB;AAUxBC,EAAAA,gBAAAA,EAVwB;AAAA,CAA1B;;AAaA,IAAMC,SAAAA,GAAY;AAChBC,EAAAA,cAAAA,EADgB;AAEhBC,EAAAA,SAAAA,EAFgB;AAGhBC,EAAAA,UAAAA,EAHgB;AAAA,CAAlB;;AAMA,IAAMC,cAAAA,GAAiB;AACrBC,EAAAA,IAAAA,EADqB;AAErBC,EAAAA,IAAAA,EAFqB;AAGrBC,EAAAA,QAAAA,EAHqB;AAIrBC,EAAAA,IAAAA,EAJqB;AAKrBC,EAAAA,MAAAA,EALqB;AAMrBC,EAAAA,MAAAA,EANqB;AAOrBC,EAAAA,OAAAA,EAPqB;AAQrBC,EAAAA,QAAAA,EARqB;AASrBC,EAAAA,SAAAA,EATqB;AAUrBC,EAAAA,SAAAA,EAVqB;AAWrBC,EAAAA,QAAAA,EAXqB;AAYrBC,EAAAA,SAAAA,EAZqB;AAarBC,EAAAA,KAAAA,EAbqB;AAcrBC,EAAAA,KAAAA,EAdqB;AAerBC,EAAAA,GAAAA,EAfqB;AAgBrBC,EAAAA,KAAAA,EAhBqB;AAiBrBC,EAAAA,cAAAA,EAjBqB;AAkBrBC,EAAAA,KAAAA,EAlBqB;AAmBrBC,EAAAA,KAAAA,EAnBqB;AAoBrBC,EAAAA,MAAAA,EApBqB;AAqBrBC,EAAAA,MAAAA,EArBqB;AAsBrBC,EAAAA,WAAAA,EAtBqB;AAuBrBC,EAAAA,OAAAA,EAvBqB;AAwBrBC,EAAAA,SAAAA,EAxBqB;AAyBrBC,EAAAA,MAAAA,EAzBqB;AA0BrBC,EAAAA,MAAAA,EA1BqB;AAAA,CAAvB;;AA6BA,IAAMC,wBAAAA,GAA2B;AAC/BC,EAAAA,MAAAA,EAD+B;AAE/BC,EAAAA,MAAAA,EAF+B;AAAA,CAAjC;;AAKA,IAAMC,qBAAAA,GAAwB;AAC5BF,EAAAA,MAAAA,EAD4B;AAE5BG,EAAAA,QAAAA,EAF4B;AAAA,CAA9B;;AAKA,IAAMC,qBAAAA,GAAwB;AAC5BC,EAAAA,QAAAA,EAD4B;AAE5BC,EAAAA,QAAAA,EAF4B;AAG5BC,EAAAA,SAAAA,EAH4B;AAI5BC,EAAAA,SAAAA,EAJ4B;AAK5B1N,EAAAA,IAAAA,EAL4B;AAAA,CAA9B;;AAQA,IAAM2N,mBAAAA,GAAsB;AAC1BC,EAAAA,KAAAA,EAD0B;AAE1BC,EAAAA,KAAAA,EAF0B;AAAA,CAA5B;;AAKA,IAAMC,cAAAA,GAAiB;AACrBnD,EAAAA,SAAAA,EADqB;AAErBoD,EAAAA,MAAAA,EAFqB;AAGrB1E,EAAAA,KAAAA,EAHqB;AAIrB2E,EAAAA,MAAAA,EAJqB;AAKrBC,EAAAA,QAAAA,EALqB;AAMrBC,EAAAA,MAAAA,EANqB;AAOrBC,EAAAA,QAAAA,EAPqB;AAQrBC,EAAAA,MAAAA,EARqB;AASrBC,EAAAA,YAAAA,EATqB;AAUrBC,EAAAA,cAAAA,EAVqB;AAAA,CAAvB;;AAaA,IAAMC,mBAAAA,GAAsB;AAC1BJ,EAAAA,QAAAA,EAD0B;AAE1BK,EAAAA,QAAAA,EAF0B;AAG1BC,EAAAA,QAAAA,EAH0B;AAI1BC,EAAAA,SAAAA,EAJ0B;AAK1BC,EAAAA,QAAAA,EAL0B;AAM1BC,EAAAA,aAAAA,EAN0B;AAO1BC,EAAAA,KAAAA,EAP0B;AAQ1BC,EAAAA,UAAAA,EAR0B;AAS1BC,EAAAA,KAAAA,EAT0B;AAU1BC,EAAAA,IAAAA,EAV0B;AAW1BC,EAAAA,IAAAA,EAX0B;AAY1BC,EAAAA,UAAAA,EAZ0B;AAa1BC,EAAAA,WAAAA,EAb0B;AAc1BC,EAAAA,eAAAA,EAd0B;AAe1BC,EAAAA,WAAAA,EAf0B;AAgB1BC,EAAAA,IAAAA,EAhB0B;AAiB1BC,EAAAA,QAAAA,EAjB0B;AAkB1BC,EAAAA,cAAAA,EAlB0B;AAmB1BC,EAAAA,iBAAAA,EAnB0B;AAAA,CAA5B;;AAsBA,IAAMC,yBAAAA,GAA4B;AAChCC,EAAAA,KAAAA,EADgC;AAEhCC,EAAAA,MAAAA,EAFgC;AAGhCC,EAAAA,OAAAA,EAHgC;AAIhCC,EAAAA,KAAAA,EAJgC;AAKhC9D,EAAAA,SAAAA,EALgC;AAAA,CAAlC;;AAQA,IAAM+D,yBAAAA,GAA4B;AAChCC,EAAAA,CAAAA,EADgC;AAEhCC,EAAAA,CAAAA,EAFgC;AAGhCC,EAAAA,CAAAA,EAHgC;AAIhCC,EAAAA,CAAAA,EAJgC;AAKhCC,EAAAA,EAAAA,EALgC;AAMhCC,EAAAA,EAAAA,EANgC;AAOhCC,EAAAA,EAAAA,EAPgC;AAQhCC,EAAAA,EAAAA,EARgC;AAShCC,EAAAA,EAAAA,EATgC;AAUhCC,EAAAA,EAAAA,EAVgC;AAWhCC,EAAAA,CAAAA,EAXgC;AAYhCC,EAAAA,CAAAA,EAZgC;AAahCC,EAAAA,CAAAA,EAbgC;AAchCC,EAAAA,CAAAA,EAdgC;AAAA,CAAlC;;AAiBA,IAAMC,uBAAAA,GAA0B;AAC9BC,EAAAA,EAAAA,EAD8B;AAE9BC,EAAAA,EAAAA,EAF8B;AAG9BC,EAAAA,EAAAA,EAH8B;AAI9BC,EAAAA,EAAAA,EAJ8B;AAK9BC,EAAAA,EAAAA,EAL8B;AAAA,CAAhC;;AAQA,IAAMC,mBAAAA,GAAsB;AAC1BC,EAAAA,CAAAA,EAD0B;AAE1BR,EAAAA,CAAAA,EAF0B;AAAA,CAA5B;;AAKA,IAAMS,UAAAA,GAAa;AACjBC,EAAAA,OAAAA,EADiB;AAEjBC,EAAAA,KAAAA,EAFiB;AAGjBC,EAAAA,GAAAA,EAHiB;AAIjBC,EAAAA,GAAAA,EAJiB;AAKjBC,EAAAA,GAAAA,EALiB;AAMjBC,EAAAA,IAAAA,EANiB;AAOjBC,EAAAA,GAAAA,EAPiB;AAQjBC,EAAAA,GAAAA,EARiB;AASjBC,EAAAA,GAAAA,EATiB;AAUjBC,EAAAA,GAAAA,EAViB;AAAA,CAAnB;;AAaA,IAAMC,QAAAA,GAAW;AACfV,EAAAA,OAAAA,EADe;AAEfW,EAAAA,KAAAA,EAFe;AAGfC,EAAAA,aAAAA,EAHe;AAIfC,EAAAA,MAAAA,EAJe;AAKfC,EAAAA,YAAAA,EALe;AAMfC,EAAAA,aAAAA,EANe;AAOfC,EAAAA,QAAAA,EAPe;AAQfC,EAAAA,YAAAA,EARe;AASfC,EAAAA,KAAAA,EATe;AAUfC,EAAAA,QAAAA,EAVe;AAWfC,EAAAA,KAAAA,EAXe;AAYfC,EAAAA,OAAAA,EAZe;AAAA,CAAjB;;AAeA,IAAMC,cAAAA,GAAiB;AACrBC,EAAAA,MAAAA,EADqB;AAErBC,EAAAA,QAAAA,EAFqB;AAGrBC,EAAAA,KAAAA,EAHqB;AAAA,CAAvB;;AAMA,IAAMC,mBAAAA,GAAsB;AAC1BjT,EAAAA,IAAAA,EAD0B;AAE1BkT,EAAAA,MAAAA,EAF0B;AAG1BC,EAAAA,MAAAA,EAH0B;AAAA,CAA5B;;AAOA,IAAMC,GAAAA,GAAM;AAGVC,EAAAA,UAAAA,EAHU;AAIVC,EAAAA,YAAAA,EAJU;AAKVC,EAAAA,UAAAA,EALU;AAMVC,EAAAA,WAAAA,EANU;AAOVC,EAAAA,aAAAA,EAPU;AAQVC,EAAAA,OAAAA,EARU;AASVC,EAAAA,kBAAAA,EATU;AAUVC,EAAAA,WAAAA,EAVU;AAWVC,EAAAA,SAAAA,EAXU;AAYVC,EAAAA,IAAAA,EAZU;AAaVC,EAAAA,OAAAA,EAbU;AAcVC,EAAAA,SAAAA,EAdU;AAeVC,EAAAA,MAAAA,EAfU;AAgBVC,EAAAA,MAAAA,EAhBU;AAiBVC,EAAAA,OAAAA,EAjBU;AAkBVC,EAAAA,QAAAA,EAlBU;AAmBVC,EAAAA,QAAAA,EAnBU;AAoBVC,EAAAA,SAAAA,EApBU;AAqBVC,EAAAA,SAAAA,EArBU;AAsBVC,EAAAA,MAAAA,EAtBU;AAuBVC,EAAAA,WAAAA,EAvBU;AAwBVC,EAAAA,IAAAA,EAxBU;AAyBVC,EAAAA,MAAAA,EAzBU;AA0BVC,EAAAA,UAAAA,EA1BU;AA2BVC,EAAAA,YAAAA,EA3BU;AA4BVC,EAAAA,eAAAA,EA5BU;AA6BVC,EAAAA,iBAAAA,EA7BU;AA8BVC,EAAAA,OAAAA,EA9BU;AA+BVC,EAAAA,IAAAA,EA/BU;AAgCVC,EAAAA,MAAAA,EAhCU;AAiCVC,EAAAA,SAAAA,EAjCU;AAkCVC,EAAAA,OAAAA,EAlCU;AAmCVC,EAAAA,cAAAA,EAnCU;AAoCVC,EAAAA,cAAAA,EApCU;AAqCVC,EAAAA,SAAAA,EArCU;AAsCVC,EAAAA,UAAAA,EAtCU;AAuCVC,EAAAA,OAAAA,EAvCU;AAwCVC,EAAAA,oBAAAA,EAxCU;AAyCVC,EAAAA,WAAAA,EAzCU;AA0CVC,EAAAA,QAAAA,EA1CU;AA2CVC,EAAAA,kBAAAA,EA3CU;AA4CVC,EAAAA,aAAAA,EA5CU;AA6CVC,EAAAA,QAAAA,EA7CU;AA8CVC,EAAAA,QAAAA,EA9CU;AA+CVC,EAAAA,cAAAA,EA/CU;AAgDVC,EAAAA,gBAAAA,EAhDU;AAiDVC,EAAAA,0BAAAA,EAjDU;AAkDVC,EAAAA,YAAAA,EAlDU;AAmDVC,EAAAA,qBAAAA,EAnDU;AAoDVC,EAAAA,mBAAAA,EApDU;AAqDVC,EAAAA,iBAAAA,EArDU;AAsDVC,EAAAA,cAAAA,EAtDU;AAuDVC,EAAAA,eAAAA,EAvDU;AAwDVC,EAAAA,YAAAA,EAxDU;AAyDVC,EAAAA,aAAAA,EAzDU;AA0DVC,EAAAA,aAAAA,EA1DU;AA2DVC,EAAAA,WAAAA,EA3DU;AA4DVC,EAAAA,iBAAAA,EA5DU;AA6DVC,EAAAA,eAAAA,EA7DU;AA8DVC,EAAAA,kBAAAA,EA9DU;AA+DVC,EAAAA,gBAAAA,EA/DU;AAgEVC,EAAAA,WAAAA,EAhEU;AAiEVC,EAAAA,gBAAAA,EAjEU;AAkEVC,EAAAA,cAAAA,EAlEU;AAmEVC,EAAAA,cAAAA,EAnEU;AAoEVC,EAAAA,YAAAA,EApEU;AAqEVC,EAAAA,SAAAA,EArEU;AAsEVC,EAAAA,cAAAA,EAtEU;AAuEVC,EAAAA,kBAAAA,EAvEU;AAwEVC,EAAAA,uBAAAA,EAxEU;AAyEVC,EAAAA,gBAAAA,EAzEU;AA0EVC,EAAAA,WAAAA,EA1EU;AA2EVC,EAAAA,SAAAA,EA3EU;AA4EVC,EAAAA,qBAAAA,EA5EU;AA6EVC,EAAAA,mBAAAA,EA7EU;AA8EVC,EAAAA,UAAAA,EA9EU;AA+EVC,EAAAA,QAAAA,EA/EU;AAgFVC,EAAAA,gBAAAA,EAhFU;AAiFVC,EAAAA,cAAAA,EAjFU;AAkFVC,EAAAA,eAAAA,EAlFU;AAmFVC,EAAAA,aAAAA,EAnFU;AAoFVC,EAAAA,gBAAAA,EApFU;AAqFVC,EAAAA,qBAAAA,EArFU;AAsFVC,EAAAA,0BAAAA,EAtFU;AAuFVC,EAAAA,iBAAAA,EAvFU;AAwFVC,EAAAA,uBAAAA,EAxFU;AAyFVC,EAAAA,4BAAAA,EAzFU;AA0FVC,EAAAA,uBAAAA,EA1FU;AA2FVC,EAAAA,2BAAAA,EA3FU;AA4FVC,EAAAA,wBAAAA,EA5FU;AA6FVC,EAAAA,aAAAA,EA7FU;AAAA,CAAZ;;AAgGA,IAAMC,oBAAAA,GAAuB;AAE3BC,EAAAA,OAAAA,EAF2B;AAG3BC,EAAAA,KAAAA,EAH2B;AAI3BC,EAAAA,UAAAA,EAJ2B;AAK3BC,EAAAA,UAAAA,EAL2B;AAM3BC,EAAAA,KAAAA,EAN2B;AAO3BC,EAAAA,cAAAA,EAP2B;AAS3BC,EAAAA,IAAAA,EAT2B;AAU3BC,EAAAA,kBAAAA,EAV2B;AAW3BC,EAAAA,cAAAA,EAX2B;AAY3BC,EAAAA,YAAAA,EAZ2B;AAa3BC,EAAAA,kBAAAA,EAb2B;AAc3BC,EAAAA,cAAAA,EAd2B;AAe3BC,EAAAA,gBAAAA,EAf2B;AAgB3BC,EAAAA,kBAAAA,EAhB2B;AAiB3BC,EAAAA,eAAAA,EAjB2B;AAkB3BC,EAAAA,iBAAAA,EAlB2B;AAmB3BC,EAAAA,kBAAAA,EAnB2B;AAoB3BC,EAAAA,mBAAAA,EApB2B;AAqB3BC,EAAAA,kBAAAA,EArB2B;AAsB3BC,EAAAA,gBAAAA,EAtB2B;AAuB3BC,EAAAA,kBAAAA,EAvB2B;AAwB3BC,EAAAA,qBAAAA,EAxB2B;AAAA,CAA7B;;AA2BA,IAAMC,iBAAAA,GAAoB;AACxBC,EAAAA,aAAAA,EADwB;AAExBC,EAAAA,kBAAAA,EAFwB;AAAA,CAA1B;;AAKA,IAAIC,SAAAA,GAAY7H,cAAAA,CAtXhB,QAsXA;;AAEA,kCAAkC;AAChC,MAAI8H,MAAAA,CAAAA,SAAAA,CAAJ,KAAIA,CAAJ,EAA6B;AAC3BD,IAAAA,SAAAA,GAD2B,KAC3BA;AAF8B;AAxXlC;;AA8XA,6BAA6B;AAC3B,SAD2B,SAC3B;AA/XF;;AAqYA,mBAAmB;AACjB,MAAIA,SAAAA,IAAa7H,cAAAA,CAAjB,OAAuC;AACrCtQ,IAAAA,OAAAA,CAAAA,GAAAA,iBADqC,GACrCA;AAFe;AArYnB;;AA4YA,mBAAmB;AACjB,MAAImY,SAAAA,IAAa7H,cAAAA,CAAjB,UAA0C;AACxCtQ,IAAAA,OAAAA,CAAAA,GAAAA,oBADwC,GACxCA;AAFe;AA5YnB;;AAkZA,0BAA0B;AACxB,QAAM,UADkB,GAClB,CAAN;AAnZF;;AAsZA,2BAA2B;AACzB,MAAI,CAAJ,MAAW;AACTqY,IAAAA,WAAAA,CADS,GACTA,CAAAA;AAFuB;AAtZ3B;;AA6ZA,yCAAyC;AACvC,MADuC,IACvC;;AACA,MAAI;AACFC,IAAAA,IAAAA,GAAO,QADL,OACK,CAAPA;;AACA,QAAI,CAACA,IAAAA,CAAD,UAAgBA,IAAAA,CAAAA,MAAAA,KAApB,QAA4C;AAC1C,aAD0C,KAC1C;AAHA;AAAJ,IAKE,UAAU;AACV,WADU,KACV;AARqC;;AAWvC,MAAMC,KAAAA,GAAQ,kBAXyB,IAWzB,CAAd;AACA,SAAOD,IAAAA,CAAAA,MAAAA,KAAgBC,KAAAA,CAZgB,MAYvC;AAzaF;;AA6aA,+BAA+B;AAC7B,MAAI,CAAJ,KAAU;AACR,WADQ,KACR;AAF2B;;AAI7B,UAAQva,GAAAA,CAAR;AACE,SADF,OACE;AACA,SAFF,QAEE;AACA,SAHF,MAGE;AACA,SAJF,SAIE;AACA;AACE,aANJ,IAMI;;AACF;AACE,aARJ,KAQI;AARJ;AAjbF;;AAocA,8CAA8C;AAC5C,MAAI,CAAJ,KAAU;AACR,WADQ,IACR;AAF0C;;AAI5C,MAAI;AACF,QAAMwa,WAAAA,GAAc5Y,OAAAA,GAAU,aAAVA,OAAU,CAAVA,GAAkC,QADpD,GACoD,CAAtD;;AACA,QAAI6Y,gBAAAA,CAAJ,WAAIA,CAAJ,EAAmC;AACjC,aADiC,WACjC;AAHA;AAAJ,IAKE,WAAW,CAT+B;;AAY5C,SAZ4C,IAY5C;AAhdF;;AAmdA,kCAAkC;AAChCvZ,EAAAA,MAAAA,CAAAA,cAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAAiC;AAC/BsC,IAAAA,KAD+B,EAC/BA,KAD+B;AAE/BC,IAAAA,UAAAA,EAF+B;AAG/BC,IAAAA,YAAAA,EAH+B;AAI/BC,IAAAA,QAAAA,EAJ+B;AAAA,GAAjCzC;AAMA,SAPgC,KAOhC;AA1dF;;AAgeA,IAAMwZ,aAAAA,GAAiB,gCAAgC;AAErD,wCAAsC;AACpC,QAAI,qBAAJ,eAAwC;AACtCL,MAAAA,WAAAA,CADsC,kCACtCA,CAAAA;AAFkC;;AAIpC,mBAJoC,OAIpC;AACA,gBALoC,IAKpC;AAPmD;;AASrDK,EAAAA,aAAAA,CAAAA,SAAAA,GAA0B,IAT2B,KAS3B,EAA1BA;AACAA,EAAAA,aAAAA,CAAAA,WAAAA,GAVqD,aAUrDA;AAEA,SAZqD,aAYrD;AA5eF,CAgeuB,EAAvB;;;;IAeA;;;;;AACE/d,6BAAAA,GAAAA,EAAAA,IAAAA,EAAuB;AAAA;;AAAA;;AACrB,mCADqB,mBACrB;AACA,iBAFqB,IAErB;AAFqB;AADqB;;;EAA9C;;;;IAOA;;;;;AACEA,iCAAAA,GAAAA,EAAAA,OAAAA,EAA0B;AAAA;;AAAA;;AACxB,qCADwB,uBACxB;AACA,qBAFwB,OAExB;AAFwB;AADsB;;;EAAlD;;;;IAOA;;;;;AACEA,+BAAAA,GAAAA,EAAiB;AAAA;;AAAA,8BACf,GADe;AAD6B;;;EAAhD;;;;IAMA;;;;;AACEA,+BAAAA,GAAAA,EAAiB;AAAA;;AAAA,8BACf,GADe;AAD6B;;;EAAhD;;;;IAMA;;;;;AACEA,uCAAAA,GAAAA,EAAAA,MAAAA,EAAyB;AAAA;;AAAA;;AACvB,qCADuB,6BACvB;AACA,oBAFuB,MAEvB;AAFuB;AAD6B;;;EAAxD;;;;IAUA;;;;;AACEA,uBAAAA,GAAAA,EAAiB;AAAA;;AAAA,8BACf,GADe;AADqB;;;EAAxC;;;;IASA;;;;;AACEA,0BAAAA,GAAAA,EAAiB;AAAA;;AAAA,8BACf,GADe;AADwB;;;EAA3C;;;AAMA,IAAMge,oBAAAA,GAliBN,OAkiBA;;AAKA,mCAAmC;AACjC,MAAI,eAAJ,UAA6B;AAC3B/Z,IAAAA,IAAAA,CAD2B,yDAC3BA,CAAAA;AACA,WAF2B,GAE3B;AAH+B;;AAKjC,SAAOga,GAAAA,CAAAA,OAAAA,CAAAA,oBAAAA,EAL0B,EAK1BA,CAAP;AA5iBF;;AA+iBA,8BAA8B;AAC5B7a,EAAAA,MAAAA,CACE8a,KAAAA,KAAAA,IAAAA,IAAkB,mBAAlBA,QAAAA,IAA+CA,KAAAA,CAAAA,MAAAA,KADjD9a,SAAAA,EAD4B,oCAC5BA,CAAAA;AAIA,MAAM+a,MAAAA,GAASD,KAAAA,CALa,MAK5B;AACA,MAAME,kBAAAA,GANsB,IAM5B;;AACA,MAAID,MAAAA,GAAJ,oBAAiC;AAC/B,WAAOE,MAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EADwB,KACxBA,CAAP;AAR0B;;AAU5B,MAAMC,MAAAA,GAVsB,EAU5B;;AACA,OAAK,IAAI3a,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,QAA4BA,CAAAA,IAA5B,oBAAqD;AACnD,QAAM4a,QAAAA,GAAWtc,IAAAA,CAAAA,GAAAA,CAAS0B,CAAAA,GAAT1B,kBAAAA,EADkC,MAClCA,CAAjB;AACA,QAAMuc,KAAAA,GAAQN,KAAAA,CAAAA,QAAAA,CAAAA,CAAAA,EAFqC,QAErCA,CAAd;AACAI,IAAAA,MAAAA,CAAAA,IAAAA,CAAYD,MAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAHuC,KAGvCA,CAAZC;AAd0B;;AAgB5B,SAAOA,MAAAA,CAAAA,IAAAA,CAhBqB,EAgBrBA,CAAP;AA/jBF;;AAkkBA,4BAA4B;AAC1Blb,EAAAA,MAAAA,CAAO,eAAPA,QAAAA,EAD0B,oCAC1BA,CAAAA;AACA,MAAM+a,MAAAA,GAASF,GAAAA,CAFW,MAE1B;AACA,MAAMC,KAAAA,GAAQ,eAHY,MAGZ,CAAd;;AACA,OAAK,IAAIva,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,QAA4B,EAA5B,GAAiC;AAC/Bua,IAAAA,KAAAA,CAAAA,CAAAA,CAAAA,GAAWD,GAAAA,CAAAA,UAAAA,CAAAA,CAAAA,IADoB,IAC/BC;AALwB;;AAO1B,SAP0B,KAO1B;AAzkBF;;AAilBA,8BAA8B;AAC5B,MAAIO,GAAAA,CAAAA,MAAAA,KAAJ,WAA8B;AAC5B,WAAOA,GAAAA,CADqB,MAC5B;AAF0B;;AAI5Brb,EAAAA,MAAAA,CAAOqb,GAAAA,CAAAA,UAAAA,KAAPrb,SAAAA,EAJ4B,qCAI5BA,CAAAA;AACA,SAAOqb,GAAAA,CALqB,UAK5B;AAtlBF;;AA+lBA,4BAA4B;AAC1B,MAAMN,MAAAA,GAASM,GAAAA,CADW,MAC1B;;AAEA,MAAIN,MAAAA,KAAAA,CAAAA,IAAgBM,GAAAA,CAAAA,CAAAA,CAAAA,YAApB,YAAkD;AAChD,WAAOA,GAAAA,CADyC,CACzCA,CAAP;AAJwB;;AAM1B,MAAIC,YAAAA,GANsB,CAM1B;;AACA,OAAK,IAAI/a,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,QAA4BA,CAA5B,IAAiC;AAC/B+a,IAAAA,YAAAA,IAAgBC,eAAAA,CAAgBF,GAAAA,CADD,CACCA,CAAhBE,CAAhBD;AARwB;;AAU1B,MAAIE,GAAAA,GAVsB,CAU1B;AACA,MAAM/d,IAAAA,GAAO,eAXa,YAWb,CAAb;;AACA,OAAK,IAAI8C,EAAAA,GAAT,GAAgBA,EAAAA,GAAhB,QAA4BA,EAA5B,IAAiC;AAC/B,QAAIkb,IAAAA,GAAOJ,GAAAA,CADoB,EACpBA,CAAX;;AACA,QAAI,EAAE,gBAAN,UAAI,CAAJ,EAAmC;AACjC,UAAI,gBAAJ,UAA8B;AAC5BI,QAAAA,IAAAA,GAAOne,aAAAA,CADqB,IACrBA,CAAPme;AADF,aAEO;AACLA,QAAAA,IAAAA,GAAO,eADF,IACE,CAAPA;AAJ+B;AAFJ;;AAS/B,QAAMC,UAAAA,GAAaD,IAAAA,CATY,UAS/B;AACAhe,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,EAV+B,GAU/BA;AACA+d,IAAAA,GAAAA,IAX+B,UAW/BA;AAvBwB;;AAyB1B,SAzB0B,IAyB1B;AAxnBF;;AA2nBA,yBAAyB;AAUvB,SAAOP,MAAAA,CAAAA,YAAAA,CACJxX,KAAAA,IAAD,EAACA,GADIwX,IAAAA,EAEJxX,KAAAA,IAAD,EAACA,GAFIwX,IAAAA,EAGJxX,KAAAA,IAAD,CAACA,GAHIwX,IAAAA,EAILxX,KAAAA,GAdqB,IAUhBwX,CAAP;AAroBF;;AA6oBA,yBAAyB;AACvB,SAAO9Z,MAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EADgB,MACvB;AA9oBF;;AAmpBA,4BAA4B;AAC1B,MAAM0C,GAAAA,GAAM1C,MAAAA,CAAAA,MAAAA,CADc,IACdA,CAAZ;;AAD0B,6CAE1B,GAF0B;AAAA;;AAAA;AAE1B,wDAAgC;AAAA;AAAA,UAArB,GAAqB;AAAA,UAAhC,KAAgC;;AAC9B0C,MAAAA,GAAAA,CAAAA,GAAAA,CAAAA,GAD8B,KAC9BA;AAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAK1B,SAL0B,GAK1B;AAxpBF;;AA4pBA,0BAA0B;AACxB,MAAM8X,OAAAA,GAAU,eADQ,CACR,CAAhB;AACAA,EAAAA,OAAAA,CAAAA,CAAAA,CAAAA,GAFwB,CAExBA;AACA,MAAMC,MAAAA,GAAS,gBAAgBD,OAAAA,CAAhB,WAHS,CAGT,CAAf;AACA,SAAOC,MAAAA,CAAAA,CAAAA,CAAAA,KAJiB,CAIxB;AAhqBF;;AAkqBA,IAAMC,oBAAAA,GAAuB;AAC3B,cAAY;AACV,WAAOC,MAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAsBC,cADnB,EACHD,CAAP;AAFyB;;AAAA,CAA7B;;;AAOA,2BAA2B;AACzB,MAAI;AACF,iBADE,EACF;AACA,WAFE,IAEF;AAFF,IAGE,UAAU;AACV,WADU,KACV;AALuB;AAzqB3B;;AAirBA,IAAME,qBAAAA,GAAwB;AAC5B,cAAY;AACV,WAAOF,MAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAsBG,eADnB,EACHH,CAAP;AAF0B;;AAAA,CAA9B;;;AAMA,IAAMI,UAAAA,GAAa,mBAAIC,KAAAA,CAAAA,GAAAA,CAAAA,CAAJ,IAAIA,EAAJ,MAA2BC,UAAAA,CAAAA;AAAAA,SAC5CA,CAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAAA,QAAAA,CAAAA,CAAAA,EAxrBF,GAwrBEA,CAD4CA;AAAAA,CAA3B,CAAnB;;IAIA;;;;;;;WACE,+BAA6B;AAC3B,wBAAWF,UAAAA,CAAJ,CAAIA,CAAX,SAA2BA,UAAAA,CAApB,CAAoBA,CAA3B,SAA2CA,UAAAA,CADhB,CACgBA,CAA3C;AAFO;;;WAMT,2BAAyB;AACvB,aAAO,CACLG,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAARD,CAAQC,CAARD,GAAgBA,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CADnB,CACmBA,CADnB,EAELD,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAARD,CAAQC,CAARD,GAAgBA,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAFnB,CAEmBA,CAFnB,EAGLD,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAARD,CAAQC,CAARD,GAAgBA,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAHnB,CAGmBA,CAHnB,EAILD,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAARD,CAAQC,CAARD,GAAgBA,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAJnB,CAImBA,CAJnB,EAKLD,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAARD,CAAQC,CAARD,GAAgBA,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAAxBD,CAAwBC,CAAxBD,GAAgCA,EAAAA,CAL3B,CAK2BA,CAL3B,EAMLA,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAARD,CAAQC,CAARD,GAAgBA,EAAAA,CAAAA,CAAAA,CAAAA,GAAQC,EAAAA,CAAxBD,CAAwBC,CAAxBD,GAAgCA,EAAAA,CAN3B,CAM2BA,CAN3B,CAAP;AAPO;;;WAkBT,8BAA4B;AAC1B,UAAME,EAAAA,GAAKC,CAAAA,CAAAA,CAAAA,CAAAA,GAAOC,CAAAA,CAAPD,CAAOC,CAAPD,GAAcA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOC,CAAAA,CAArBD,CAAqBC,CAArBD,GAA4BC,CAAAA,CADb,CACaA,CAAvC;AACA,UAAMC,EAAAA,GAAKF,CAAAA,CAAAA,CAAAA,CAAAA,GAAOC,CAAAA,CAAPD,CAAOC,CAAPD,GAAcA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOC,CAAAA,CAArBD,CAAqBC,CAArBD,GAA4BC,CAAAA,CAFb,CAEaA,CAAvC;AACA,aAAO,QAAP;AArBO;;;WAwBT,qCAAmC;AACjC,UAAME,CAAAA,GAAIF,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAAPA,CAAOA,CAAPA,GAAcA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CADE,CACFA,CAA/B;AACA,UAAMF,EAAAA,GAAM,QAAOE,CAAAA,CAAP,CAAOA,CAAP,GAAcD,CAAAA,CAAAA,CAAAA,CAAAA,GAAOC,CAAAA,CAArB,CAAqBA,CAArB,GAA4BA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAAnC,CAAmCA,CAAnC,GAA0CA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAAlD,CAAkDA,CAAjD,IAFqB,CAEjC;AACA,UAAMC,EAAAA,GAAM,EAACF,CAAAA,CAAD,CAACA,CAAD,GAAQC,CAAAA,CAAR,CAAQA,CAAR,GAAeD,CAAAA,CAAAA,CAAAA,CAAAA,GAAOC,CAAAA,CAAtB,CAAsBA,CAAtB,GAA6BA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAApC,CAAoCA,CAApC,GAA2CA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAAnD,CAAmDA,CAAlD,IAHqB,CAGjC;AACA,aAAO,QAAP;AA5BO;;;WAiCT,0CAAwC;AACtC,UAAMG,EAAAA,GAAKC,IAAAA,CAAAA,cAAAA,CAAAA,CAAAA,EAD2B,CAC3BA,CAAX;AACA,UAAMC,EAAAA,GAAKD,IAAAA,CAAAA,cAAAA,CAAoBE,CAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAApBF,CAAoBE,CAApBF,EAF2B,CAE3BA,CAAX;AACA,UAAMG,EAAAA,GAAK,oBAAoB,CAACD,CAAAA,CAAD,CAACA,CAAD,EAAOA,CAAAA,CAAP,CAAOA,CAAP,CAApB,EAH2B,CAG3B,CAAX;AACA,UAAME,EAAAA,GAAK,oBAAoB,CAACF,CAAAA,CAAD,CAACA,CAAD,EAAOA,CAAAA,CAAP,CAAOA,CAAP,CAApB,EAJ2B,CAI3B,CAAX;AACA,aAAO,CACLle,IAAAA,CAAAA,GAAAA,CAAS+d,EAAAA,CAAT/d,CAAS+d,CAAT/d,EAAgBie,EAAAA,CAAhBje,CAAgBie,CAAhBje,EAAuBme,EAAAA,CAAvBne,CAAuBme,CAAvBne,EAA8Boe,EAAAA,CADzB,CACyBA,CAA9Bpe,CADK,EAELA,IAAAA,CAAAA,GAAAA,CAAS+d,EAAAA,CAAT/d,CAAS+d,CAAT/d,EAAgBie,EAAAA,CAAhBje,CAAgBie,CAAhBje,EAAuBme,EAAAA,CAAvBne,CAAuBme,CAAvBne,EAA8Boe,EAAAA,CAFzB,CAEyBA,CAA9Bpe,CAFK,EAGLA,IAAAA,CAAAA,GAAAA,CAAS+d,EAAAA,CAAT/d,CAAS+d,CAAT/d,EAAgBie,EAAAA,CAAhBje,CAAgBie,CAAhBje,EAAuBme,EAAAA,CAAvBne,CAAuBme,CAAvBne,EAA8Boe,EAAAA,CAHzB,CAGyBA,CAA9Bpe,CAHK,EAILA,IAAAA,CAAAA,GAAAA,CAAS+d,EAAAA,CAAT/d,CAAS+d,CAAT/d,EAAgBie,EAAAA,CAAhBje,CAAgBie,CAAhBje,EAAuBme,EAAAA,CAAvBne,CAAuBme,CAAvBne,EAA8Boe,EAAAA,CAJzB,CAIyBA,CAA9Bpe,CAJK,CAAP;AAtCO;;;WA8CT,6BAA2B;AACzB,UAAM8d,CAAAA,GAAIF,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAAPA,CAAOA,CAAPA,GAAcA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CADN,CACMA,CAA/B;AACA,aAAO,CACLA,CAAAA,CAAAA,CAAAA,CAAAA,GADK,GAEL,CAACA,CAAAA,CAAD,CAACA,CAAD,GAFK,GAGL,CAACA,CAAAA,CAAD,CAACA,CAAD,GAHK,GAILA,CAAAA,CAAAA,CAAAA,CAAAA,GAJK,GAKJ,QAAOA,CAAAA,CAAP,CAAOA,CAAP,GAAcA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAAtB,CAAsBA,CAArB,IALI,GAMJ,QAAOA,CAAAA,CAAP,CAAOA,CAAP,GAAcA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAAtB,CAAsBA,CAArB,IANI,EAAP;AAhDO;;;WAgET,gCAA8B;AAC5B,aAAO,CACLA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOS,CAAAA,CAAPT,CAAOS,CAAPT,GAAcA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOS,CAAAA,CAArBT,CAAqBS,CAArBT,GAA4BA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOS,CAAAA,CAD9B,CAC8BA,CAD9B,EAELT,CAAAA,CAAAA,CAAAA,CAAAA,GAAOS,CAAAA,CAAPT,CAAOS,CAAPT,GAAcA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOS,CAAAA,CAArBT,CAAqBS,CAArBT,GAA4BA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOS,CAAAA,CAF9B,CAE8BA,CAF9B,EAGLT,CAAAA,CAAAA,CAAAA,CAAAA,GAAOS,CAAAA,CAAPT,CAAOS,CAAPT,GAAcA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOS,CAAAA,CAArBT,CAAqBS,CAArBT,GAA4BA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOS,CAAAA,CAH9B,CAG8BA,CAH9B,CAAP;AAjEO;;;WA2ET,0CAAwC;AACtC,UAAMC,SAAAA,GAAY,CAACV,CAAAA,CAAD,CAACA,CAAD,EAAOA,CAAAA,CAAP,CAAOA,CAAP,EAAaA,CAAAA,CAAb,CAAaA,CAAb,EAAmBA,CAAAA,CAAnB,CAAmBA,CAAnB,CAAlB;AAGA,UAAMW,CAAAA,GAAIX,CAAAA,CAAAA,CAAAA,CAAAA,GAAOU,SAAAA,CAAPV,CAAOU,CAAPV,GAAsBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOU,SAAAA,CAJD,CAICA,CAAvC;AACA,UAAME,CAAAA,GAAIZ,CAAAA,CAAAA,CAAAA,CAAAA,GAAOU,SAAAA,CAAPV,CAAOU,CAAPV,GAAsBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOU,SAAAA,CALD,CAKCA,CAAvC;AACA,UAAMG,CAAAA,GAAIb,CAAAA,CAAAA,CAAAA,CAAAA,GAAOU,SAAAA,CAAPV,CAAOU,CAAPV,GAAsBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOU,SAAAA,CAND,CAMCA,CAAvC;AACA,UAAMR,CAAAA,GAAIF,CAAAA,CAAAA,CAAAA,CAAAA,GAAOU,SAAAA,CAAPV,CAAOU,CAAPV,GAAsBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOU,SAAAA,CAPD,CAOCA,CAAvC;AAGA,UAAMI,KAAAA,GAAS,KAAD,CAAC,IAVuB,CAUtC;AACA,UAAM5a,MAAAA,GAAS9D,IAAAA,CAAAA,IAAAA,CAAW,aAAD,CAAC,EAAD,CAAC,IAAc,KAAK,QAAQye,CAAAA,GAAtCze,CAAyB,CAAzBA,IAXuB,CAWtC;AACA,UAAM2e,EAAAA,GAAKD,KAAAA,GAAAA,MAAAA,IAZ2B,CAYtC;AACA,UAAME,EAAAA,GAAKF,KAAAA,GAAAA,MAAAA,IAb2B,CAatC;AAGA,aAAO,CAAC1e,IAAAA,CAAAA,IAAAA,CAAD,EAACA,CAAD,EAAgBA,IAAAA,CAAAA,IAAAA,CAAhB,EAAgBA,CAAhB,CAAP;AA3FO;;;WAkGT,6BAA2B;AACzB,UAAMke,CAAAA,GAAIzd,IAAAA,CAAAA,KAAAA,CADe,CACfA,CAAV;;AACA,UAAIA,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CAAd,CAAcA,CAAd,EAAuB;AACrByd,QAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOzd,IAAAA,CADc,CACdA,CAAPyd;AACAA,QAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOzd,IAAAA,CAFc,CAEdA,CAAPyd;AAJuB;;AAMzB,UAAIzd,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CAAd,CAAcA,CAAd,EAAuB;AACrByd,QAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOzd,IAAAA,CADc,CACdA,CAAPyd;AACAA,QAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOzd,IAAAA,CAFc,CAEdA,CAAPyd;AARuB;;AAUzB,aAVyB,CAUzB;AA5GO;;;WAkHT,iCAA+B;AAC7B,6BAAuB;AACrB,eAAOK,CAAAA,GADc,CACrB;AAF2B;;AAM7B,UAAMM,QAAAA,GAAW,CAACC,KAAAA,CAAD,CAACA,CAAD,EAAWA,KAAAA,CAAX,CAAWA,CAAX,EAAqBC,KAAAA,CAArB,CAAqBA,CAArB,EAA+BA,KAAAA,CAA/B,CAA+BA,CAA/B,OANY,OAMZ,CAAjB;AACA,UAAMC,QAAAA,GAAW,CAACF,KAAAA,CAAD,CAACA,CAAD,EAAWA,KAAAA,CAAX,CAAWA,CAAX,EAAqBC,KAAAA,CAArB,CAAqBA,CAArB,EAA+BA,KAAAA,CAA/B,CAA+BA,CAA/B,OAPY,OAOZ,CAAjB;AACA,UAAMjY,MAAAA,GARuB,EAQ7B;AAEAgY,MAAAA,KAAAA,GAAQd,IAAAA,CAAAA,aAAAA,CAVqB,KAUrBA,CAARc;AACAC,MAAAA,KAAAA,GAAQf,IAAAA,CAAAA,aAAAA,CAXqB,KAWrBA,CAARe;;AAGA,UACGF,QAAAA,CAAAA,CAAAA,CAAAA,KAAgBC,KAAAA,CAAhBD,CAAgBC,CAAhBD,IAA4BA,QAAAA,CAAAA,CAAAA,CAAAA,KAAgBE,KAAAA,CAA7C,CAA6CA,CAA5CF,IACAA,QAAAA,CAAAA,CAAAA,CAAAA,KAAgBE,KAAAA,CAAhBF,CAAgBE,CAAhBF,IAA4BA,QAAAA,CAAAA,CAAAA,CAAAA,KAAgBC,KAAAA,CAF/C,CAE+CA,CAF/C,EAGE;AAEAhY,QAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAAY+X,QAAAA,CAFZ,CAEYA,CAAZ/X;AACAA,QAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAAY+X,QAAAA,CAHZ,CAGYA,CAAZ/X;AANF,aAOO;AACL,eADK,IACL;AAtB2B;;AA0B7B,UACGkY,QAAAA,CAAAA,CAAAA,CAAAA,KAAgBF,KAAAA,CAAhBE,CAAgBF,CAAhBE,IAA4BA,QAAAA,CAAAA,CAAAA,CAAAA,KAAgBD,KAAAA,CAA7C,CAA6CA,CAA5CC,IACAA,QAAAA,CAAAA,CAAAA,CAAAA,KAAgBD,KAAAA,CAAhBC,CAAgBD,CAAhBC,IAA4BA,QAAAA,CAAAA,CAAAA,CAAAA,KAAgBF,KAAAA,CAF/C,CAE+CA,CAF/C,EAGE;AAEAhY,QAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAAYkY,QAAAA,CAFZ,CAEYA,CAAZlY;AACAA,QAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAAYkY,QAAAA,CAHZ,CAGYA,CAAZlY;AANF,aAOO;AACL,eADK,IACL;AAlC2B;;AAqC7B,aArC6B,MAqC7B;AAvJO;;;;;;;AA2JX,IAAMmY,uBAAAA,GAA0B,wpBAAhC;;AAYA,gCAAgC;AAC9B,MAAM/C,MAAAA,GAASF,GAAAA,CAAf;AAAA,MACEK,MAAAA,GAF4B,EAC9B;;AAEA,MAAIL,GAAAA,CAAAA,CAAAA,CAAAA,KAAAA,MAAAA,IAAqBA,GAAAA,CAAAA,CAAAA,CAAAA,KAAzB,QAA4C;AAE1C,SAAK,IAAIta,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,QAA4BA,CAAAA,IAA5B,GAAoC;AAClC2a,MAAAA,MAAAA,CAAAA,IAAAA,CACED,MAAAA,CAAAA,YAAAA,CAAqBJ,GAAAA,CAAAA,UAAAA,CAAAA,CAAAA,KAAD,CAACA,GAA0BA,GAAAA,CAAAA,UAAAA,CAAeta,CAAAA,GAF9B,CAEesa,CAA/CI,CADFC;AAHwC;AAA5C,SAOO,IAAIL,GAAAA,CAAAA,CAAAA,CAAAA,KAAAA,MAAAA,IAAqBA,GAAAA,CAAAA,CAAAA,CAAAA,KAAzB,QAA4C;AAEjD,SAAK,IAAIta,GAAAA,GAAT,GAAgBA,GAAAA,GAAhB,QAA4BA,GAAAA,IAA5B,GAAoC;AAClC2a,MAAAA,MAAAA,CAAAA,IAAAA,CACED,MAAAA,CAAAA,YAAAA,CAAqBJ,GAAAA,CAAAA,UAAAA,CAAeta,GAAAA,GAAfsa,CAAAA,KAAD,CAACA,GAA8BA,GAAAA,CAAAA,UAAAA,CAFnB,GAEmBA,CAAnDI,CADFC;AAH+C;AAA5C,SAOA;AACL,SAAK,IAAI3a,GAAAA,GAAT,GAAgBA,GAAAA,GAAhB,QAA4B,EAA5B,KAAiC;AAC/B,UAAMwd,IAAAA,GAAOD,uBAAAA,CAAwBjD,GAAAA,CAAAA,UAAAA,CADN,GACMA,CAAxBiD,CAAb;AACA5C,MAAAA,MAAAA,CAAAA,IAAAA,CAAY6C,IAAAA,GAAO9C,MAAAA,CAAAA,YAAAA,CAAP8C,IAAO9C,CAAP8C,GAAmClD,GAAAA,CAAAA,MAAAA,CAFhB,GAEgBA,CAA/CK;AAHG;AAjBuB;;AAuB9B,SAAOA,MAAAA,CAAAA,IAAAA,CAvBuB,EAuBvBA,CAAP;AAz3BF;;AA43BA,2BAA2B;AAIzB,SAAO,6BAA6B8C,UAAAA,KAAAA,EAAS;AAC3C,QAAIA,KAAAA,KAAJ,MAAoB;AAClB,aADkB,KAClB;AADF,WAEO,IAAIA,KAAAA,KAAJ,MAAoB;AACzB,aADyB,KACzB;AAJyC;;AAM3C,uBAN2C,KAM3C;AAVuB,GAIlB,CAAP;AAh4BF;;AA04BA,sBAAsB;AACpB,SAAO,sBADa,GACb,CAAP;AA34BF;;AA84BA,oCAAoC;AAClC,MAAMC,GAAAA,GAAM,CADsB,UACtB,CAAZ;;AACA,OAAK,IAAI1d,CAAAA,GAAJ,GAAWD,EAAAA,GAAKua,GAAAA,CAArB,QAAiCta,CAAAA,GAAjC,IAAyCA,CAAzC,IAA8C;AAC5C,QAAM2d,KAAAA,GAAOrD,GAAAA,CAAAA,UAAAA,CAD+B,CAC/BA,CAAb;;AACAoD,IAAAA,GAAAA,CAAAA,IAAAA,CACEhD,MAAAA,CAAAA,YAAAA,CAAqBiD,KAAAA,IAAD,CAACA,GADvBD,IACEhD,CADFgD,EAEEhD,MAAAA,CAAAA,YAAAA,CAAoBiD,KAAAA,GAJsB,IAI1CjD,CAFFgD;AAJgC;;AASlC,SAAOA,GAAAA,CAAAA,IAAAA,CAT2B,EAS3BA,CAAP;AAv5BF;;AA05BA,iCAAiC;AAC/B,SAAO/c,kBAAAA,CAAmBid,MAAAA,CADK,GACLA,CAAnBjd,CAAP;AA35BF;;AA85BA,iCAAiC;AAC/B,SAAOkd,QAAAA,CAASC,kBAAAA,CADe,GACfA,CAATD,CAAP;AA/5BF;;AAk6BA,mBAAmB;AACjB,SAAO,aADU,SACjB;AAn6BF;;AAs6BA,kBAAkB;AAChB,SAAO,aADS,QAChB;AAv6BF;;AA06BA,qBAAqB;AACnB,SAAO,aADY,QACnB;AA36BF;;AA86BA,0BAA0B;AACxB,SAAO,2BAAyBlB,CAAAA,KAAzB,QAAuCA,CAAAA,CAAAA,UAAAA,KADtB,SACxB;AA/6BF;;AAk7BA,kCAAkC;AAChC,MAAIoB,IAAAA,CAAAA,MAAAA,KAAgBC,IAAAA,CAApB,QAAiC;AAC/B,WAD+B,KAC/B;AAF8B;;AAIhC,OAAK,IAAIhe,CAAAA,GAAJ,GAAWD,EAAAA,GAAKge,IAAAA,CAArB,QAAkC/d,CAAAA,GAAlC,IAA0CA,CAA1C,IAA+C;AAC7C,QAAI+d,IAAAA,CAAAA,CAAAA,CAAAA,KAAYC,IAAAA,CAAhB,CAAgBA,CAAhB,EAAyB;AACvB,aADuB,KACvB;AAF2C;AAJf;;AAShC,SATgC,IAShC;AA37BF;;AA87BA,+BAAgD;AAAA,MAAnBC,IAAmB,uEAAZ,IAApC,IAAoC,EAAY;AAC9C,MAAMC,MAAAA,GAAS,CACbD,IAAAA,CAAAA,cAAAA,GADa,QACbA,EADa,EAEZ,sBAAD,CAAC,EAAD,QAAC,GAAD,QAAC,CAAD,CAAC,EAFY,GAEZ,CAFY,EAGbA,IAAAA,CAAAA,UAAAA,GAAAA,QAAAA,GAAAA,QAAAA,CAAAA,CAAAA,EAHa,GAGbA,CAHa,EAIbA,IAAAA,CAAAA,WAAAA,GAAAA,QAAAA,GAAAA,QAAAA,CAAAA,CAAAA,EAJa,GAIbA,CAJa,EAKbA,IAAAA,CAAAA,aAAAA,GAAAA,QAAAA,GAAAA,QAAAA,CAAAA,CAAAA,EALa,GAKbA,CALa,EAMbA,IAAAA,CAAAA,aAAAA,GAAAA,QAAAA,GAAAA,QAAAA,CAAAA,CAAAA,EANa,GAMbA,CANa,CAAf;AASA,SAAOC,MAAAA,CAAAA,IAAAA,CAVuC,EAUvCA,CAAP;AAx8BF;;AA29BA,mCAAmC;AACjC,MAAMC,UAAAA,GAAavd,MAAAA,CAAAA,MAAAA,CADc,IACdA,CAAnB;AACA,MAAIwd,SAAAA,GAF6B,KAEjC;AAEAxd,EAAAA,MAAAA,CAAAA,cAAAA,CAAAA,UAAAA,EAAAA,SAAAA,EAA6C;AAC3Cyd,IAAAA,GAD2C,iBACrC;AACJ,aADI,SACJ;AAFyC;AAAA,GAA7Czd;AAKAud,EAAAA,UAAAA,CAAAA,OAAAA,GAAqB,YAAY,2BAA2B;AAC1DA,IAAAA,UAAAA,CAAAA,OAAAA,GAAqB,gBAAgB;AACnCC,MAAAA,SAAAA,GADmC,IACnCA;AACAjhB,MAAAA,OAAAA,CAFmC,IAEnCA,CAAAA;AAHwD,KAC1DghB;;AAIAA,IAAAA,UAAAA,CAAAA,MAAAA,GAAoB,kBAAkB;AACpCC,MAAAA,SAAAA,GADoC,IACpCA;AACAhhB,MAAAA,MAAAA,CAFoC,MAEpCA,CAAAA;AAPwD,KAK1D+gB;AAd+B,GASZ,CAArBA;AAUA,SAnBiC,UAmBjC;AA9+BF;;AAi/BA,+BAA0E;AAAA,MAA3CG,WAA2C,uEAA1E,EAA0E;AAAA,MAAzBC,eAAyB,uEAA1E,KAA0E;;AACxE,MAAIC,GAAAA,CAAAA,eAAAA,IAAuB,CAA3B,iBAA6C;AAC3C,WAAOA,GAAAA,CAAAA,eAAAA,CAAoB,SAAS,CAAT,IAAS,CAAT,EAAiB;AAAEza,MAAAA,IAAAA,EADH;AACC,KAAjB,CAApBya,CAAP;AAFsE;;AAKxE,MAAMC,MAAAA,GALkE,mEAKxE;AAGA,MAAIP,MAAAA,kBARoE,WAQpEA,aAAJ;;AACA,OAAK,IAAIle,CAAAA,GAAJ,GAAWD,EAAAA,GAAK7C,IAAAA,CAArB,QAAkC8C,CAAAA,GAAlC,IAA0CA,CAAAA,IAA1C,GAAkD;AAChD,QAAM0e,EAAAA,GAAKxhB,IAAAA,CAAAA,CAAAA,CAAAA,GADqC,IAChD;AACA,QAAMyhB,EAAAA,GAAKzhB,IAAAA,CAAK8C,CAAAA,GAAL9C,CAAAA,CAAAA,GAFqC,IAEhD;AACA,QAAM0hB,EAAAA,GAAK1hB,IAAAA,CAAK8C,CAAAA,GAAL9C,CAAAA,CAAAA,GAHqC,IAGhD;AACA,QAAM2hB,EAAAA,GAAKH,EAAAA,IAAX;AAAA,QACEI,EAAAA,GAAO,MAAD,CAAC,KAAF,CAAE,GAAiBH,EAAAA,IALsB,CAIhD;AAEA,QAAMI,EAAAA,GAAK/e,CAAAA,GAAAA,CAAAA,GAAAA,EAAAA,GAAe,MAAD,GAAC,KAAF,CAAE,GAAmB4e,EAAAA,IAAlC5e,CAAAA,GANqC,EAMhD;AACA,QAAMgf,EAAAA,GAAKhf,CAAAA,GAAAA,CAAAA,GAAAA,EAAAA,GAAa4e,EAAAA,GAAb5e,IAAAA,GAPqC,EAOhD;AACAke,IAAAA,MAAAA,IAAUO,MAAAA,CAAAA,EAAAA,CAAAA,GAAaA,MAAAA,CAAbA,EAAaA,CAAbA,GAA0BA,MAAAA,CAA1BA,EAA0BA,CAA1BA,GAAuCA,MAAAA,CARD,EAQCA,CAAjDP;AAjBsE;;AAmBxE,SAnBwE,MAmBxE;AApgCF;;;;;;;;ACAA;;AAkBA,IAEG,qCAAqC,CAAC3hB,UAAAA,CAFzC,4BAGE;AAGA,MAAI,qCAAqCA,UAAAA,CAAAA,IAAAA,KAAzC,MAAmE;AAEjEA,IAAAA,UAAAA,GAAamG,mBAAAA,CAFoD,CAEpDA,CAAbnG;AALF;;AAOAA,EAAAA,UAAAA,CAAAA,0BAAAA,GAPA,IAOAA;;AAGC,4BAAyB;AACxB,QAAIA,UAAAA,CAAAA,IAAAA,IAAmB,CAAvB,mBAAkC;AAAA;AADV;;AAIxBA,IAAAA,UAAAA,CAAAA,IAAAA,GAAkB,iBAAiB;AAEjC,aAAO0iB,MAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAAA,QAAAA,CAF0B,QAE1BA,CAAP;AANsB,KAIxB1iB;AAdF,GAUC,GAAD;;AAWC,4BAAyB;AACxB,QAAIA,UAAAA,CAAAA,IAAAA,IAAmB,CAAvB,mBAAkC;AAAA;AADV;;AAIxBA,IAAAA,UAAAA,CAAAA,IAAAA,GAAkB,iBAAiB;AAEjC,aAAO0iB,MAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAAA,QAAAA,CAF0B,QAE1BA,CAAP;AANsB,KAIxB1iB;AAzBF,GAqBC,GAAD;;AAWC,6BAA0B;AACzB,QAAIA,UAAAA,CAAAA,SAAAA,IAAwB,CAA5B,mBAAuC;AAAA;AADd;;AAIzBA,IAAAA,UAAAA,CAAAA,SAAAA,GAAuBmG,mBAAAA,CAJE,EAIFA,CAAvBnG;AApCF,GAgCC,GAAD;;AASC,qCAAkC;AACjC,QAAIqE,MAAAA,CAAJ,aAAwB;AAAA;AADS;;AAIjC8B,IAAAA,mBAAAA,CAJiC,EAIjCA,CAAAA;AA7CF,GAyCC,GAAD;;AAUC,2BAAwB;AAMvB,QAAInG,UAAAA,CAAAA,OAAAA,CAAJ,YAAmC;AAAA;AANZ;;AASvBA,IAAAA,UAAAA,CAAAA,OAAAA,GAAqBmG,mBAAAA,CATE,EASFA,CAArBnG;AA5DF,GAmDC,GAAD;;AAaC,kCAA+B;AAW9B,QAAIA,UAAAA,CAAAA,cAAAA,IAA6B,CAAjC,mBAA4C;AAAA;AAXd;;AAc9BA,IAAAA,UAAAA,CAAAA,cAAAA,GACEmG,uCADFnG;AA9EF,GAgEC,GAAD;AAhEA;;;;;;;;;;;;;;;ACDF,IAAM2iB,QAAAA,GACJ,kFACAC,OAAAA,GAAAA,EAAAA,KADA,sBAEA,CAACA,OAAAA,CAAAA,QAAAA,CAFD,MAGA,EAAE,6BAA6BA,OAAAA,CAA7B,QAA6CA,OAAAA,CAAAA,IAAAA,KAxBjD,SAwBE,CAJF;;;;;;;;;ACpBAzc,mBAAAA,CAAAA,CAAAA,CAAAA;;AAEAD,wCAAAA;;;;;;;;ACFA,IAAI2c,CAAAA,GAAI1c,mBAAAA,CAAR,CAAQA,CAAR;;AACA,IAAI2c,MAAAA,GAAS3c,mBAAAA,CADb,EACaA,CAAb;;AAIA0c,CAAAA,CAAE;AAAEC,EAAAA,MAAAA,EAAJD;AAAE,CAAFA,EAAoB;AAClB7iB,EAAAA,UAAAA,EADF6iB;AAAoB,CAApBA,CAAAA;;;;;;;;;;ACLA,IAAIC,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AACA,IAAI4c,wBAAAA,GAA2B5c,yBAA/B;;AACA,IAAI6c,2BAAAA,GAA8B7c,mBAAAA,CAFlC,EAEkCA,CAAlC;;AACA,IAAI8c,QAAAA,GAAW9c,mBAAAA,CAHf,EAGeA,CAAf;;AACA,IAAI+c,SAAAA,GAAY/c,mBAAAA,CAJhB,EAIgBA,CAAhB;;AACA,IAAIgd,yBAAAA,GAA4Bhd,mBAAAA,CALhC,EAKgCA,CAAhC;;AACA,IAAIid,QAAAA,GAAWjd,mBAAAA,CANf,EAMeA,CAAf;;AAgBAD,MAAAA,CAAAA,OAAAA,GAAiB,2BAA2B;AAC1C,MAAImd,MAAAA,GAASC,OAAAA,CAD6B,MAC1C;AACA,MAAIC,MAAAA,GAASD,OAAAA,CAF6B,MAE1C;AACA,MAAIE,MAAAA,GAASF,OAAAA,CAH6B,IAG1C;AACA,2DAJ0C,UAI1C;;AACA,cAAY;AACVG,IAAAA,MAAAA,GADU,MACVA;AADF,SAEO,YAAY;AACjBA,IAAAA,MAAAA,GAASX,MAAAA,CAAAA,MAAAA,CAAAA,IAAkBI,SAAAA,CAAAA,MAAAA,EADV,EACUA,CAA3BO;AADK,SAEA;AACLA,IAAAA,MAAAA,GAAU,mBAAD,EAAC,EADL,SACLA;AAVwC;;AAY1C,cAAY,oBAAoB;AAC9BC,IAAAA,cAAAA,GAAiBC,MAAAA,CADa,GACbA,CAAjBD;;AACA,QAAIJ,OAAAA,CAAJ,aAAyB;AACvBM,MAAAA,UAAAA,GAAab,wBAAAA,CAAAA,MAAAA,EADU,GACVA,CAAba;AACAC,MAAAA,cAAAA,GAAiBD,UAAAA,IAAcA,UAAAA,CAFR,KAEvBC;AAFF,WAGOA,cAAAA,GAAiBJ,MAAAA,CALM,GAKNA,CAAjBI;;AACPC,IAAAA,MAAAA,GAASV,QAAAA,CAASG,MAAAA,GAAAA,GAAAA,GAAeF,MAAAA,IAAU,eAAVA,GAAAA,CAAAA,GAAxBD,GAAAA,EAA6DE,OAAAA,CANxC,MAMrBF,CAATU;;AAEA,QAAI,WAAWD,cAAAA,KAAf,WAA6C;AAC3C,UAAI,oCAAJ,cAAI,CAAJ,EAD2C;AAE3CV,MAAAA,yBAAAA,CAAAA,cAAAA,EAF2C,cAE3CA,CAAAA;AAV4B;;AAa9B,QAAIG,OAAAA,CAAAA,IAAAA,IAAiBO,cAAAA,IAAkBA,cAAAA,CAAvC,MAA6D;AAC3Db,MAAAA,2BAAAA,CAAAA,cAAAA,EAAAA,MAAAA,EAD2D,IAC3DA,CAAAA;AAd4B;;AAiB9BC,IAAAA,QAAAA,CAAAA,MAAAA,EAAAA,GAAAA,EAAAA,cAAAA,EAjB8B,OAiB9BA,CAAAA;AA7BwC;AAA5C/c,CAAAA;;;;;;;;;;ACtBA,IAAI6d,KAAAA,GAAQ,SAARA,KAAQ,KAAc;AACxB,SAAOC,EAAAA,IAAMA,EAAAA,CAAAA,IAAAA,IAANA,IAAAA,IADiB,EACxB;AADF;;AAKA9d,MAAAA,CAAAA,OAAAA,GAEE,MAAM,uFAAN,eACA6d,KAAAA,CAAM,+EADN,MACAA,CADA,IAGAA,KAAAA,CAAM,2EAHN,IAGAA,CAHA,IAIAA,KAAAA,CAAM,+EAJN,MAIAA,CAJA,IAMC,YAAY;AAAE,SAAF,IAAE;AANf,CAMC,EAND,IAMoCpY,QAAAA,CARtCzF,aAQsCyF,CAAAA,EARtCzF;;;;;;;;ACLA,IAAI+d,WAAAA,GAAc9d,mBAAAA,CAAlB,EAAkBA,CAAlB;;AACA,IAAI+d,0BAAAA,GAA6B/d,mBAAAA,CADjC,EACiCA,CAAjC;;AACA,IAAIge,wBAAAA,GAA2Bhe,mBAAAA,CAF/B,EAE+BA,CAA/B;;AACA,IAAIie,eAAAA,GAAkBje,mBAAAA,CAHtB,EAGsBA,CAAtB;;AACA,IAAIke,aAAAA,GAAgBle,mBAAAA,CAJpB,EAIoBA,CAApB;;AACA,IAAIme,GAAAA,GAAMne,mBAAAA,CALV,EAKUA,CAAV;;AACA,IAAIoe,cAAAA,GAAiBpe,mBAAAA,CANrB,EAMqBA,CAArB;;AAGA,IAAIqe,yBAAAA,GAA4BngB,MAAAA,CAThC,wBASA;AAIAkD,SAAAA,GAAY0c,WAAAA,GAAAA,yBAAAA,GAA0C,wCAAwC;AAC5FhQ,EAAAA,CAAAA,GAAImQ,eAAAA,CADwF,CACxFA,CAAJnQ;AACAwQ,EAAAA,CAAAA,GAAIJ,aAAAA,CAFwF,CAExFA,CAAJI;AACA,sBAAoB,IAAI;AACtB,WAAOD,yBAAAA,CAAAA,CAAAA,EADe,CACfA,CAAP;AADkB,IAElB,cAAc,CAL4E;AAM5F,MAAIF,GAAAA,CAAAA,CAAAA,EAAJ,CAAIA,CAAJ,EAAe,OAAOH,wBAAAA,CAAyB,CAACD,0BAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAA1BC,CAA0BD,CAA1BC,EAAmElQ,CAAAA,CANG,CAMHA,CAAnEkQ,CAAP;AANjB5c,CAAAA;;;;;;;;ACbA,IAAImd,KAAAA,GAAQve,mBAAAA,CAAZ,EAAYA,CAAZ;;AAGAD,MAAAA,CAAAA,OAAAA,GAAiB,CAAC,MAAM,YAAY;AAElC,SAAO,6BAA6B;AAAE4b,IAAAA,GAAAA,EAAK,eAAY;AAAE,aAAF,CAAE;AAArB;AAAA,GAA7B,QAF2B,CAElC;AAFF5b,CAAkB,CAAlBA;;;;;;;;ACHAA,MAAAA,CAAAA,OAAAA,GAAiB,gBAAgB;AAC/B,MAAI;AACF,WAAO,CAAC,CAACye,IADP,EACF;AADF,IAEE,cAAc;AACd,WADc,IACd;AAJ6B;AAAjCze,CAAAA;;;;;;ACAa;;AACb,IAAI0e,qBAAAA,GAAwB,GAD5B,oBACA;AAEA,IAAI7B,wBAAAA,GAA2B1e,MAAAA,CAH/B,wBAGA;AAGA,IAAIwgB,WAAAA,GAAc9B,wBAAAA,IAA4B,CAAC6B,qBAAAA,CAAAA,IAAAA,CAA2B;AAAE,KAA7BA;AAA2B,CAA3BA,EAN/C,CAM+CA,CAA/C;AAIArd,SAAAA,GAAY,cAAc,iCAAiC;AACzD,MAAIqc,UAAAA,GAAab,wBAAAA,CAAAA,IAAAA,EADwC,CACxCA,CAAjB;AACA,SAAO,CAAC,CAAD,cAAgBa,UAAAA,CAFkC,UAEzD;AAFU,IAAZrc,qBAAAA;;;;;;;;ACVArB,MAAAA,CAAAA,OAAAA,GAAiB,yBAAyB;AACxC,SAAO;AACLU,IAAAA,UAAAA,EAAY,EAAE,SADT,CACO,CADP;AAELC,IAAAA,YAAAA,EAAc,EAAE,SAFX,CAES,CAFT;AAGLC,IAAAA,QAAAA,EAAU,EAAE,SAHP,CAGK,CAHL;AAILH,IAAAA,KAAAA,EAJK;AAAA,GAAP;AADFT,CAAAA;;;;;;;;ACCA,IAAI4e,aAAAA,GAAgB3e,mBAAAA,CADpB,EACoBA,CAApB;;AACA,IAAI4e,sBAAAA,GAAyB5e,mBAAAA,CAF7B,EAE6BA,CAA7B;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,cAAc;AAC7B,SAAO4e,aAAAA,CAAcC,sBAAAA,CADQ,EACRA,CAAdD,CAAP;AADF5e,CAAAA;;;;;;;;ACJA,IAAIwe,KAAAA,GAAQve,mBAAAA,CAAZ,EAAYA,CAAZ;;AACA,IAAI6e,OAAAA,GAAU7e,mBAAAA,CADd,EACcA,CAAd;;AAEA,IAAI8e,KAAAA,GAAQ,GAHZ,KAGA;AAGA/e,MAAAA,CAAAA,OAAAA,GAAiB,MAAM,YAAY;AAGjC,SAAO,CAAC7B,MAAAA,CAAAA,GAAAA,CAAAA,CAAAA,oBAAAA,CAHyB,CAGzBA,CAAR;AAHe,KAIZ,cAAc;AACjB,SAAO2gB,OAAAA,CAAAA,EAAAA,CAAAA,IAAAA,QAAAA,GAA0BC,KAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAA1BD,EAA0BC,CAA1BD,GAA+C3gB,MAAAA,CADrC,EACqCA,CAAtD;AALe,IAAjB6B,MAAAA;;;;;;;;ACNA,IAAIvB,QAAAA,GAAW,GAAf;;AAEAuB,MAAAA,CAAAA,OAAAA,GAAiB,cAAc;AAC7B,SAAOvB,QAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,KAAAA,CAAAA,CAAAA,EAA2B,CADL,CACtBA,CAAP;AADFuB,CAAAA;;;;;;;;ACAAA,MAAAA,CAAAA,OAAAA,GAAiB,cAAc;AAC7B,MAAI8d,EAAAA,IAAJ,WAAqB,MAAMkB,SAAAA,CAAU,0BADR,EACFA,CAAN;AACrB,SAF6B,EAE7B;AAFFhf,CAAAA;;;;;;;;ACFA,IAAIif,WAAAA,GAAchf,mBAAAA,CAAlB,EAAkBA,CAAlB;;AACA,IAAIif,QAAAA,GAAWjf,mBAAAA,CADf,EACeA,CAAf;;AAIAD,MAAAA,CAAAA,OAAAA,GAAiB,oBAAoB;AACnC,MAAIgE,GAAAA,GAAMib,WAAAA,CAAAA,QAAAA,EADyB,QACzBA,CAAV;AACA,SAAOC,QAAAA,CAAAA,GAAAA,CAAAA,GAAAA,GAAAA,GAAsBjH,MAAAA,CAFM,GAENA,CAA7B;AAFFjY,CAAAA;;;;;;;;ACLA,IAAImf,QAAAA,GAAWlf,mBAAAA,CAAf,EAAeA,CAAf;;AACA,IAAIif,QAAAA,GAAWjf,mBAAAA,CADf,EACeA,CAAf;;AACA,IAAImf,mBAAAA,GAAsBnf,mBAAAA,CAF1B,EAE0BA,CAA1B;;AACA,IAAIof,eAAAA,GAAkBpf,mBAAAA,CAHtB,EAGsBA,CAAtB;;AAEA,IAAIqf,YAAAA,GAAeD,eAAAA,CALnB,aAKmBA,CAAnB;;AAIArf,MAAAA,CAAAA,OAAAA,GAAiB,uBAAuB;AACtC,MAAI,CAACmf,QAAAA,CAAD,KAACA,CAAD,IAAoBD,QAAAA,CAAxB,KAAwBA,CAAxB,EAAyC,OADH,KACG;AACzC,MAAIK,YAAAA,GAAeC,KAAAA,CAFmB,YAEnBA,CAAnB;AACA,MAHsC,MAGtC;;AACA,MAAID,YAAAA,KAAJ,WAAgC;AAC9B,QAAIE,IAAAA,KAAJ,WAAwBA,IAAAA,GADM,SACNA;AACxB9c,IAAAA,MAAAA,GAAS4c,YAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAFqB,IAErBA,CAAT5c;AACA,QAAI,CAACwc,QAAAA,CAAD,MAACA,CAAD,IAAqBD,QAAAA,CAAzB,MAAyBA,CAAzB,EAA2C,OAHb,MAGa;AAC3C,UAAMF,SAAAA,CAJwB,yCAIxBA,CAAN;AARoC;;AAUtC,MAAIS,IAAAA,KAAJ,WAAwBA,IAAAA,GAVc,QAUdA;AACxB,SAAOL,mBAAAA,CAAAA,KAAAA,EAX+B,IAW/BA,CAAP;AAXFpf,CAAAA;;;;;;;;;;ACTAA,MAAAA,CAAAA,OAAAA,GAAiB,cAAc;AAC7B,SAAO,2BAAyB8d,EAAAA,KAAzB,OAAuC,cADjB,UAC7B;AADF9d,CAAAA;;;;;;;;;;ACAA,IAAI0f,UAAAA,GAAazf,mBAAAA,CAAjB,EAAiBA,CAAjB;;AACA,IAAI0f,iBAAAA,GAAoB1f,mBAAAA,CADxB,EACwBA,CAAxB;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,oBAAoB,cAAc;AACjD,SAAO,eAD0C,QACjD;AADe,IAEb,cAAc;AAChB,MAAIK,OAAAA,GAAUqf,UAAAA,CADE,QACFA,CAAd;AACA,SAAO,gCAAgCvhB,MAAAA,CAAAA,EAAAA,CAAAA,YAFvB,OAEhB;AAJF6B,CAAAA;;;;;;;;ACHA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AAEA,IAAI2f,SAAAA,GAAY,SAAZA,SAAY,WAAoB;AAClC,SAAO,2CAD2B,SAClC;AAHF,CAEA;;AAIA5f,MAAAA,CAAAA,OAAAA,GAAiB,6BAA6B;AAC5C,SAAO6f,SAAAA,CAAAA,MAAAA,GAAAA,CAAAA,GAAuBD,SAAAA,CAAUhD,MAAAA,CAAjCiD,SAAiCjD,CAAVgD,CAAvBC,GAAsDjD,MAAAA,CAAAA,SAAAA,CAAAA,IAAqBA,MAAAA,CAAAA,SAAAA,CAAAA,CADtC,MACsCA,CAAlF;AADF5c,CAAAA;;;;;;;;;;ACLA,IAAI8f,aAAAA,GAAgB7f,mBAAAA,CADpB,EACoBA,CAApB;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB8f,aAAAA,IACZ,CAACC,MAAAA,CADWD,IAAAA,IAEZ,QAAOC,MAAAA,CAAP,aAFL/f,QAAAA;;;;;;;;ACFA,IAAIggB,UAAAA,GAAa/f,mBAAAA,CADjB,EACiBA,CAAjB;;AACA,IAAIue,KAAAA,GAAQve,mBAAAA,CAFZ,EAEYA,CAAZ;;AAGAD,MAAAA,CAAAA,OAAAA,GAAiB,CAAC,CAAC7B,MAAAA,CAAF,yBAAkC,CAAC,MAAM,YAAY;AACpE,MAAI8hB,MAAAA,GAASF,MADuD,EACpE;AAGA,SAAO,CAAC9H,MAAAA,CAAD,MAACA,CAAD,IAAmB,EAAE,0BAArB,MAAmB,CAAnB,IAEL,CAAC8H,MAAAA,CAAD,sBAA8BC,UAAAA,GANoC,EAIpE;AAJFhgB,CAAoD,CAApDA;;;;;;;;ACLA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AACA,IAAIigB,SAAAA,GAAYjgB,mBAAAA,CADhB,EACgBA,CAAhB;;AAEA,IAAIyc,OAAAA,GAAUE,MAAAA,CAHd,OAGA;AACA,IAAIuD,IAAAA,GAAOvD,MAAAA,CAJX,IAIA;AACA,IAAIwD,QAAAA,GAAW1D,OAAAA,IAAWA,OAAAA,CAAXA,QAAAA,IAA+ByD,IAAAA,IAAQA,IAAAA,CALtD,OAKA;AACA,IAAIE,EAAAA,GAAKD,QAAAA,IAAYA,QAAAA,CANrB,EAMA;AACA,WAPA,OAOA;;AAEA,QAAQ;AACNpF,EAAAA,KAAAA,GAAQqF,EAAAA,CAAAA,KAAAA,CADF,GACEA,CAARrF;AACAsF,EAAAA,OAAAA,GAAUtF,KAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAAA,CAAAA,GAAmBA,KAAAA,CAAAA,CAAAA,CAAAA,GAAWA,KAAAA,CAFlC,CAEkCA,CAAxCsF;AAFF,OAGO,eAAe;AACpBtF,EAAAA,KAAAA,GAAQkF,SAAAA,CAAAA,KAAAA,CADY,aACZA,CAARlF;;AACA,MAAI,UAAUA,KAAAA,CAAAA,CAAAA,CAAAA,IAAd,IAA8B;AAC5BA,IAAAA,KAAAA,GAAQkF,SAAAA,CAAAA,KAAAA,CADoB,eACpBA,CAARlF;AACA,eAAWsF,OAAAA,GAAUtF,KAAAA,CAFO,CAEPA,CAAVsF;AAJO;AAZtB;;AAoBAtgB,MAAAA,CAAAA,OAAAA,GAAiBsgB,OAAAA,IAAW,CAA5BtgB,OAAAA;;;;;;;;ACpBA,IAAI0f,UAAAA,GAAazf,mBAAAA,CAAjB,EAAiBA,CAAjB;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB0f,UAAAA,CAAAA,WAAAA,EAAAA,WAAAA,CAAAA,IAAjB1f,EAAAA;;;;;;;;ACFA,IAAImf,QAAAA,GAAWlf,mBAAAA,CAAf,EAAeA,CAAf;;AAIAD,MAAAA,CAAAA,OAAAA,GAAiB,uBAAuB;AACtC,UADsC,GACtC;AACA,MAAIyf,IAAAA,KAAAA,QAAAA,IAAqB,QAAQ,KAAKD,KAAAA,CAAb,aAArBC,UAAAA,IAAmE,CAACN,QAAAA,CAASoB,GAAAA,GAAM/e,EAAAA,CAAAA,IAAAA,CAAvF,KAAuFA,CAAf2d,CAAxE,EAAwG,OAFlE,GAEkE;AACxG,MAAI,QAAQ,KAAKK,KAAAA,CAAb,0BAA6C,CAACL,QAAAA,CAASoB,GAAAA,GAAM/e,EAAAA,CAAAA,IAAAA,CAAjE,KAAiEA,CAAf2d,CAAlD,EAAkF,OAH5C,GAG4C;AAClF,MAAIM,IAAAA,KAAAA,QAAAA,IAAqB,QAAQ,KAAKD,KAAAA,CAAb,aAArBC,UAAAA,IAAmE,CAACN,QAAAA,CAASoB,GAAAA,GAAM/e,EAAAA,CAAAA,IAAAA,CAAvF,KAAuFA,CAAf2d,CAAxE,EAAwG,OAJlE,GAIkE;AACxG,QAAMH,SAAAA,CALgC,yCAKhCA,CAAN;AALFhf,CAAAA;;;;;;;;ACJA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AACA,IAAIugB,MAAAA,GAASvgB,mBAAAA,CADb,EACaA,CAAb;;AACA,IAAIme,GAAAA,GAAMne,mBAAAA,CAFV,EAEUA,CAAV;;AACA,IAAIwgB,GAAAA,GAAMxgB,mBAAAA,CAHV,EAGUA,CAAV;;AACA,IAAI6f,aAAAA,GAAgB7f,mBAAAA,CAJpB,EAIoBA,CAApB;;AACA,IAAI0f,iBAAAA,GAAoB1f,mBAAAA,CALxB,EAKwBA,CAAxB;;AAEA,IAAIygB,qBAAAA,GAAwBF,MAAAA,CAP5B,KAO4BA,CAA5B;AACA,IAAIT,OAAAA,GAASnD,MAAAA,CARb,MAQA;AACA,IAAI+D,qBAAAA,GAAwBhB,iBAAAA,GAAAA,OAAAA,GAA6BI,OAAAA,IAAUA,OAAAA,CAAVA,aAAAA,IATzD,GASA;;AAEA/f,MAAAA,CAAAA,OAAAA,GAAiB,gBAAgB;AAC/B,MAAI,CAACoe,GAAAA,CAAAA,qBAAAA,EAAD,IAACA,CAAD,IAAqC,EAAE,iBAAiB,OAAOsC,qBAAAA,CAAP,IAAOA,CAAP,IAA5D,QAAyC,CAAzC,EAA6G;AAC3G,QAAIZ,aAAAA,IAAiB1B,GAAAA,CAAAA,OAAAA,EAArB,IAAqBA,CAArB,EAAwC;AACtCsC,MAAAA,qBAAAA,CAAAA,IAAAA,CAAAA,GAA8BX,OAAAA,CADQ,IACRA,CAA9BW;AADF,WAEO;AACLA,MAAAA,qBAAAA,CAAAA,IAAAA,CAAAA,GAA8BC,qBAAAA,CAAsB,YAD/C,IACyBA,CAA9BD;AAJyG;AAD9E;;AAO7B,SAAOA,qBAAAA,CAPsB,IAOtBA,CAAP;AAPJ1gB,CAAAA;;;;;;;;ACXA,IAAI4gB,OAAAA,GAAU3gB,mBAAAA,CAAd,EAAcA,CAAd;;AACA,IAAI4gB,KAAAA,GAAQ5gB,mBAAAA,CADZ,EACYA,CAAZ;;AAEC,kBAAiB,sBAAsB;AACtC,SAAO4gB,KAAAA,CAAAA,GAAAA,CAAAA,KAAe,aAAapgB,KAAAA,KAAAA,SAAAA,GAAAA,KAAAA,GADG,EAC/BogB,CAAP;AADF,CAAC,EAAD,UAAC,EAAD,EAAC,EAAD,IAAC,CAEuB;AACtBP,EAAAA,OAAAA,EADsB;AAEtBQ,EAAAA,IAAAA,EAAMF,OAAAA,GAAAA,MAAAA,GAFgB;AAGtBG,EAAAA,SAAAA,EAHsB;AAAA,CAFvB;;;;;;;;ACHD/gB,MAAAA,CAAAA,OAAAA,GAAAA,KAAAA;;;;;;;;ACAA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AACA,IAAI+c,SAAAA,GAAY/c,mBAAAA,CADhB,EACgBA,CAAhB;;AAEA,IAAI+gB,MAAAA,GAHJ,oBAGA;AACA,IAAIH,KAAAA,GAAQjE,MAAAA,CAAAA,MAAAA,CAAAA,IAAkBI,SAAAA,CAAAA,MAAAA,EAJ9B,EAI8BA,CAA9B;AAEAhd,MAAAA,CAAAA,OAAAA,GAAAA,KAAAA;;;;;;;;ACNA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,sBAAsB;AACrC,MAAI;AAEF7B,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,MAAAA,EAAAA,GAAAA,EAAmC;AAAEsC,MAAAA,KAAAA,EAAF;AAAgBE,MAAAA,YAAAA,EAAhB;AAAoCC,MAAAA,QAAAA,EAApC;AAAA,KAAnCzC;AAFF,IAGE,cAAc;AACdye,IAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GADc,KACdA;AALmC;;AAMnC,SANmC,KAMnC;AANJ5c,CAAAA;;;;;;;;ACFA,IAAIihB,QAAAA,GAAWhhB,mBAAAA,CAAf,EAAeA,CAAf;;AAEA,IAAIihB,cAAAA,GAAiB,GAFrB,cAEA;;AAEAlhB,MAAAA,CAAAA,OAAAA,GAAiB7B,MAAAA,CAAAA,MAAAA,IAAiB,yBAAyB;AACzD,SAAO+iB,cAAAA,CAAAA,IAAAA,CAAoBD,QAAAA,CAApBC,EAAoBD,CAApBC,EADkD,GAClDA,CAAP;AADFlhB,CAAAA;;;;;;;;ACJA,IAAI6e,sBAAAA,GAAyB5e,mBAAAA,CAA7B,EAA6BA,CAA7B;;AAIAD,MAAAA,CAAAA,OAAAA,GAAiB,oBAAoB;AACnC,SAAO7B,MAAAA,CAAO0gB,sBAAAA,CADqB,QACrBA,CAAP1gB,CAAP;AADF6B,CAAAA;;;;;;;;ACJA,IAAImhB,EAAAA,GAAJ;AACA,IAAIC,OAAAA,GAAUvlB,IAAAA,CADd,MACcA,EAAd;;AAEAmE,MAAAA,CAAAA,OAAAA,GAAiB,eAAe;AAC9B,SAAO,YAAYiY,MAAAA,CAAOjU,GAAAA,KAAAA,SAAAA,GAAAA,EAAAA,GAAnB,GAAYiU,CAAZ,UAA2D,QAAD,OAAC,EAAD,QAAC,CADpC,EACoC,CAAlE;AADFjY,CAAAA;;;;;;;;ACHA,IAAI+d,WAAAA,GAAc9d,mBAAAA,CAAlB,EAAkBA,CAAlB;;AACA,IAAIue,KAAAA,GAAQve,mBAAAA,CADZ,EACYA,CAAZ;;AACA,IAAIohB,aAAAA,GAAgBphB,mBAAAA,CAFpB,EAEoBA,CAApB;;AAGAD,MAAAA,CAAAA,OAAAA,GAAiB,gBAAgB,CAAC,MAAM,YAAY;AAElD,SAAO,sBAAsBqhB,aAAAA,CAAtB,KAAsBA,CAAtB,OAAiD;AACtDzF,IAAAA,GAAAA,EAAK,eAAY;AAAE,aAAF,CAAE;AADmC;AAAA,GAAjD,OAF2C,CAElD;AAFF5b,CAAkC,CAAlCA;;;;;;;;ACLA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AACA,IAAIkf,QAAAA,GAAWlf,mBAAAA,CADf,EACeA,CAAf;;AAEA,IAAI9F,QAAAA,GAAWyiB,MAAAA,CAHf,QAGA;AAEA,IAAI0E,MAAAA,GAASnC,QAAAA,CAAAA,QAAAA,CAAAA,IAAsBA,QAAAA,CAAShlB,QAAAA,CAL5C,aAKmCglB,CAAnC;;AAEAnf,MAAAA,CAAAA,OAAAA,GAAiB,cAAc;AAC7B,SAAOshB,MAAAA,GAASnnB,QAAAA,CAAAA,aAAAA,CAATmnB,EAASnnB,CAATmnB,GADsB,EAC7B;AADFthB,CAAAA;;;;;;;;ACPA,IAAI+d,WAAAA,GAAc9d,mBAAAA,CAAlB,EAAkBA,CAAlB;;AACA,IAAIshB,oBAAAA,GAAuBthB,mBAAAA,CAD3B,EAC2BA,CAA3B;;AACA,IAAIge,wBAAAA,GAA2Bhe,mBAAAA,CAF/B,EAE+BA,CAA/B;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,cAAc,8BAA8B;AAC3D,SAAOuhB,oBAAAA,CAAAA,CAAAA,CAAAA,MAAAA,EAAAA,GAAAA,EAAoCtD,wBAAAA,CAAAA,CAAAA,EADgB,KAChBA,CAApCsD,CAAP;AADe,IAEb,8BAA8B;AAChCC,EAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GADgC,KAChCA;AACA,SAFgC,MAEhC;AAJFxhB,CAAAA;;;;;;;;ACJA,IAAI+d,WAAAA,GAAc9d,mBAAAA,CAAlB,EAAkBA,CAAlB;;AACA,IAAIoe,cAAAA,GAAiBpe,mBAAAA,CADrB,EACqBA,CAArB;;AACA,IAAIwhB,QAAAA,GAAWxhB,mBAAAA,CAFf,EAEeA,CAAf;;AACA,IAAIke,aAAAA,GAAgBle,mBAAAA,CAHpB,EAGoBA,CAApB;;AAGA,IAAIyhB,eAAAA,GAAkBvjB,MAAAA,CANtB,cAMA;AAIAkD,SAAAA,GAAY0c,WAAAA,GAAAA,eAAAA,GAAgC,0CAA0C;AACpF0D,EAAAA,QAAAA,CADoF,CACpFA,CAAAA;AACAlD,EAAAA,CAAAA,GAAIJ,aAAAA,CAFgF,CAEhFA,CAAJI;AACAkD,EAAAA,QAAAA,CAHoF,UAGpFA,CAAAA;AACA,sBAAoB,IAAI;AACtB,WAAOC,eAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EADe,UACfA,CAAP;AADkB,IAElB,cAAc,CANoE;AAOpF,MAAI,uBAAuB,SAA3B,YAAgD,MAAM1C,SAAAA,CAP8B,yBAO9BA,CAAN;AAChD,MAAI,WAAJ,YAA2BjR,CAAAA,CAAAA,CAAAA,CAAAA,GAAO4T,UAAAA,CARkD,KAQzD5T;AAC3B,SAToF,CASpF;AATF1M,CAAAA;;;;;;;;ACVA,IAAI8d,QAAAA,GAAWlf,mBAAAA,CAAf,EAAeA,CAAf;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,cAAc;AAC7B,MAAI,CAACmf,QAAAA,CAAL,EAAKA,CAAL,EAAmB;AACjB,UAAMH,SAAAA,CAAU/G,MAAAA,CAAAA,EAAAA,CAAAA,GADC,mBACX+G,CAAN;AAF2B;;AAG3B,SAH2B,EAG3B;AAHJhf,CAAAA;;;;;;;;ACFA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AACA,IAAI6c,2BAAAA,GAA8B7c,mBAAAA,CADlC,EACkCA,CAAlC;;AACA,IAAIme,GAAAA,GAAMne,mBAAAA,CAFV,EAEUA,CAAV;;AACA,IAAI+c,SAAAA,GAAY/c,mBAAAA,CAHhB,EAGgBA,CAAhB;;AACA,IAAI2hB,aAAAA,GAAgB3hB,mBAAAA,CAJpB,EAIoBA,CAApB;;AACA,IAAI4hB,mBAAAA,GAAsB5hB,mBAAAA,CAL1B,EAK0BA,CAA1B;;AAEA,IAAI6hB,gBAAAA,GAAmBD,mBAAAA,CAPvB,GAOA;AACA,IAAIE,oBAAAA,GAAuBF,mBAAAA,CAR3B,OAQA;AACA,IAAIG,QAAAA,GAAW/J,MAAAA,CAAAA,MAAAA,CAAAA,CAAAA,KAAAA,CATf,QASeA,CAAf;AAEC,kBAAiB,kCAAkC;AAClD,MAAIgK,MAAAA,GAAS7E,OAAAA,GAAU,CAAC,CAACA,OAAAA,CAAZA,MAAAA,GADqC,KAClD;AACA,MAAI8E,MAAAA,GAAS9E,OAAAA,GAAU,CAAC,CAACA,OAAAA,CAAZA,UAAAA,GAFqC,KAElD;AACA,MAAI+E,WAAAA,GAAc/E,OAAAA,GAAU,CAAC,CAACA,OAAAA,CAAZA,WAAAA,GAHgC,KAGlD;AACA,MAJkD,KAIlD;;AACA,MAAI,gBAAJ,YAAgC;AAC9B,QAAI,0BAA0B,CAACgB,GAAAA,CAAAA,KAAAA,EAA/B,MAA+BA,CAA/B,EAAmD;AACjDtB,MAAAA,2BAAAA,CAAAA,KAAAA,EAAAA,MAAAA,EADiD,GACjDA,CAAAA;AAF4B;;AAI9B1Z,IAAAA,KAAAA,GAAQ2e,oBAAAA,CAJsB,KAItBA,CAAR3e;;AACA,QAAI,CAACA,KAAAA,CAAL,QAAmB;AACjBA,MAAAA,KAAAA,CAAAA,MAAAA,GAAe4e,QAAAA,CAAAA,IAAAA,CAAc,+BADZ,EACFA,CAAf5e;AAN4B;AALkB;;AAclD,MAAI2K,CAAAA,KAAJ,QAAkB;AAChB,gBAAYA,CAAAA,CAAAA,GAAAA,CAAAA,GAAZ,KAAYA,CAAZ,KACKiP,SAAAA,CAAAA,GAAAA,EAFW,KAEXA,CAAAA;AAFW;AAAlB,SAIO,IAAI,CAAJ,QAAa;AAClB,WAAOjP,CAAAA,CADW,GACXA,CAAP;AADK,SAEA,IAAI,gBAAgBA,CAAAA,CAApB,GAAoBA,CAApB,EAA4B;AACjCmU,IAAAA,MAAAA,GADiC,IACjCA;AArBgD;;AAuBlD,cAAYnU,CAAAA,CAAAA,GAAAA,CAAAA,GAAZ,KAAYA,CAAZ,KACK+O,2BAAAA,CAAAA,CAAAA,EAAAA,GAAAA,EAxB6C,KAwB7CA,CAAAA;AAxBP,CAAC,EA0BErX,QAAAA,CA1BH,SAAC,EAAD,UAAC,EA0BkC,oBAAoB;AACrD,SAAO,6BAA6Bqc,gBAAAA,CAAAA,IAAAA,CAAAA,CAA7B,UAA8DF,aAAAA,CADhB,IACgBA,CAArE;AA3BF,CAAC;;;;;;;;ACXD,IAAIf,KAAAA,GAAQ5gB,mBAAAA,CAAZ,EAAYA,CAAZ;;AAEA,IAAImiB,gBAAAA,GAAmB3c,QAAAA,CAFvB,QAEA;;AAGA,IAAI,OAAOob,KAAAA,CAAP,iBAAJ,YAA8C;AAC5CA,EAAAA,KAAAA,CAAAA,aAAAA,GAAsB,cAAc;AAClC,WAAOuB,gBAAAA,CAAAA,IAAAA,CAD2B,EAC3BA,CAAP;AAF0C,GAC5CvB;AANF;;AAWA7gB,MAAAA,CAAAA,OAAAA,GAAiB6gB,KAAAA,CAAjB7gB,aAAAA;;;;;;;;ACXA,IAAIqiB,eAAAA,GAAkBpiB,mBAAAA,CAAtB,EAAsBA,CAAtB;;AACA,IAAI2c,MAAAA,GAAS3c,mBAAAA,CADb,EACaA,CAAb;;AACA,IAAIkf,QAAAA,GAAWlf,mBAAAA,CAFf,EAEeA,CAAf;;AACA,IAAI6c,2BAAAA,GAA8B7c,mBAAAA,CAHlC,EAGkCA,CAAlC;;AACA,IAAIqiB,SAAAA,GAAYriB,mBAAAA,CAJhB,EAIgBA,CAAhB;;AACA,IAAIugB,MAAAA,GAASvgB,mBAAAA,CALb,EAKaA,CAAb;;AACA,IAAIsiB,SAAAA,GAAYtiB,mBAAAA,CANhB,EAMgBA,CAAhB;;AACA,IAAIuiB,UAAAA,GAAaviB,mBAAAA,CAPjB,EAOiBA,CAAjB;;AAEA,IAAIwiB,0BAAAA,GATJ,4BASA;AACA,IAAIC,OAAAA,GAAU9F,MAAAA,CAVd,OAUA;AACA,cAXA,GAWA;;AAEA,IAAI+F,OAAAA,GAAU,SAAVA,OAAU,KAAc;AAC1B,SAAOvE,GAAAA,CAAAA,EAAAA,CAAAA,GAAUxC,GAAAA,CAAVwC,EAAUxC,CAAVwC,GAAoBwE,GAAAA,CAAAA,EAAAA,EADD,EACCA,CAA3B;AAdF,CAaA;;AAIA,IAAIC,SAAAA,GAAY,SAAZA,SAAY,OAAgB;AAC9B,SAAO,cAAc;AACnB,QADmB,KACnB;;AACA,QAAI,CAAC1D,QAAAA,CAAD,EAACA,CAAD,IAAkB,SAAQvD,GAAAA,CAAT,EAASA,CAAR,EAAD,IAAC,KAAtB,MAAsD;AACpD,YAAMoD,SAAAA,CAAU,mCADoC,WAC9CA,CAAN;AAHiB;;AAIjB,WAJiB,KAIjB;AAL0B,GAC9B;AAlBF,CAiBA;;AASA,IAAIqD,eAAAA,IAAmB7B,MAAAA,CAAvB,OAAqC;AACnC,MAAIK,KAAAA,GAAQL,MAAAA,CAAAA,KAAAA,KAAiB,eAAe,IADT,OACS,EAAhCA,CAAZ;AACA,MAAIsC,KAAAA,GAAQjC,KAAAA,CAFuB,GAEnC;AACA,MAAIkC,KAAAA,GAAQlC,KAAAA,CAHuB,GAGnC;AACA,MAAImC,KAAAA,GAAQnC,KAAAA,CAJuB,GAInC;;AACA+B,EAAAA,GAAAA,GAAM,2BAAwB;AAC5B,QAAIG,KAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAAJ,EAAIA,CAAJ,EAA2B,MAAM,cADL,0BACK,CAAN;AAC3BE,IAAAA,QAAAA,CAAAA,MAAAA,GAF4B,EAE5BA;AACAD,IAAAA,KAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAAAA,EAAAA,EAH4B,QAG5BA;AACA,WAJ4B,QAI5B;AATiC,GAKnCJ;;AAMAhH,EAAAA,GAAAA,GAAM,iBAAc;AAClB,WAAOkH,KAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAAAA,EAAAA,KADW,EAClB;AAZiC,GAWnClH;;AAGAwC,EAAAA,GAAAA,GAAM,iBAAc;AAClB,WAAO2E,KAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EADW,EACXA,CAAP;AAfiC,GAcnC3E;AAdF,OAiBO;AACL,MAAI8E,KAAAA,GAAQX,SAAAA,CADP,OACOA,CAAZ;AACAC,EAAAA,UAAAA,CAAAA,KAAAA,CAAAA,GAFK,IAELA;;AACAI,EAAAA,GAAAA,GAAM,2BAAwB;AAC5B,QAAIN,SAAAA,CAAAA,EAAAA,EAAJ,KAAIA,CAAJ,EAA0B,MAAM,cADJ,0BACI,CAAN;AAC1BW,IAAAA,QAAAA,CAAAA,MAAAA,GAF4B,EAE5BA;AACAnG,IAAAA,2BAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAH4B,QAG5BA,CAAAA;AACA,WAJ4B,QAI5B;AAPG,GAGL8F;;AAMAhH,EAAAA,GAAAA,GAAM,iBAAc;AAClB,WAAO0G,SAAAA,CAAAA,EAAAA,EAAAA,KAAAA,CAAAA,GAAuBxE,EAAAA,CAAvBwE,KAAuBxE,CAAvBwE,GADW,EAClB;AAVG,GASL1G;;AAGAwC,EAAAA,GAAAA,GAAM,iBAAc;AAClB,WAAOkE,SAAAA,CAAAA,EAAAA,EADW,KACXA,CAAP;AAbG,GAYLlE;AAvDF;;AA4DApe,MAAAA,CAAAA,OAAAA,GAAiB;AACf4iB,EAAAA,GAAAA,EADe;AAEfhH,EAAAA,GAAAA,EAFe;AAGfwC,EAAAA,GAAAA,EAHe;AAIfuE,EAAAA,OAAAA,EAJe;AAKfE,EAAAA,SAAAA,EALe;AAAA,CAAjB7iB;;;;;;;;AC5DA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AACA,IAAI2hB,aAAAA,GAAgB3hB,mBAAAA,CADpB,EACoBA,CAApB;;AAEA,IAAIyiB,OAAAA,GAAU9F,MAAAA,CAHd,OAGA;AAEA5c,MAAAA,CAAAA,OAAAA,GAAiB,iCAAiC,mBAAmB4hB,aAAAA,CAArE5hB,OAAqE4hB,CAAnB,CAAlD5hB;;;;;;;;ACLA,IAAIwgB,MAAAA,GAASvgB,mBAAAA,CAAb,EAAaA,CAAb;;AACA,IAAIwgB,GAAAA,GAAMxgB,mBAAAA,CADV,EACUA,CAAV;;AAEA,IAAI8D,IAAAA,GAAOyc,MAAAA,CAHX,MAGWA,CAAX;;AAEAxgB,MAAAA,CAAAA,OAAAA,GAAiB,eAAe;AAC9B,SAAO+D,IAAAA,CAAAA,GAAAA,CAAAA,KAAc,YAAY0c,GAAAA,CADH,GACGA,CAA1B1c,CAAP;AADF/D,CAAAA;;;;;;;;ACLAA,MAAAA,CAAAA,OAAAA,GAAAA,EAAAA;;;;;;;;ACAA,IAAIoe,GAAAA,GAAMne,mBAAAA,CAAV,EAAUA,CAAV;;AACA,IAAIkjB,OAAAA,GAAUljB,mBAAAA,CADd,EACcA,CAAd;;AACA,IAAImjB,8BAAAA,GAAiCnjB,mBAAAA,CAFrC,EAEqCA,CAArC;;AACA,IAAIshB,oBAAAA,GAAuBthB,mBAAAA,CAH3B,EAG2BA,CAA3B;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,0BAA0B;AACzC,MAAI+D,IAAAA,GAAOof,OAAAA,CAD8B,MAC9BA,CAAX;AACA,MAAIE,cAAAA,GAAiB9B,oBAAAA,CAFoB,CAEzC;AACA,MAAI1E,wBAAAA,GAA2BuG,8BAAAA,CAHU,CAGzC;;AACA,OAAK,IAAI7lB,CAAAA,GAAT,GAAgBA,CAAAA,GAAIwG,IAAAA,CAApB,QAAiCxG,CAAjC,IAAsC;AACpC,QAAIyG,GAAAA,GAAMD,IAAAA,CAD0B,CAC1BA,CAAV;AACA,QAAI,CAACqa,GAAAA,CAAAA,MAAAA,EAAL,GAAKA,CAAL,EAAuBiF,cAAAA,CAAAA,MAAAA,EAAAA,GAAAA,EAA4BxG,wBAAAA,CAAAA,MAAAA,EAFf,GAEeA,CAA5BwG,CAAAA;AANgB;AAA3CrjB,CAAAA;;;;;;;;ACLA,IAAI0f,UAAAA,GAAazf,mBAAAA,CAAjB,EAAiBA,CAAjB;;AACA,IAAIqjB,yBAAAA,GAA4BrjB,mBAAAA,CADhC,EACgCA,CAAhC;;AACA,IAAIsjB,2BAAAA,GAA8BtjB,mBAAAA,CAFlC,EAEkCA,CAAlC;;AACA,IAAIwhB,QAAAA,GAAWxhB,mBAAAA,CAHf,EAGeA,CAAf;;AAGAD,MAAAA,CAAAA,OAAAA,GAAiB0f,UAAAA,CAAAA,SAAAA,EAAAA,SAAAA,CAAAA,IAAoC,qBAAqB;AACxE,MAAI3b,IAAAA,GAAOuf,yBAAAA,CAAAA,CAAAA,CAA4B7B,QAAAA,CADiC,EACjCA,CAA5B6B,CAAX;AACA,MAAIE,qBAAAA,GAAwBD,2BAAAA,CAF4C,CAExE;AACA,SAAOC,qBAAAA,GAAwBzf,IAAAA,CAAAA,MAAAA,CAAYyf,qBAAAA,CAApCA,EAAoCA,CAAZzf,CAAxByf,GAHiE,IAGxE;AAHFxjB,CAAAA;;;;;;;;ACNA,IAAIyjB,kBAAAA,GAAqBxjB,mBAAAA,CAAzB,EAAyBA,CAAzB;;AACA,IAAIyjB,WAAAA,GAAczjB,mBAAAA,CADlB,EACkBA,CAAlB;;AAEA,IAAIuiB,UAAAA,GAAakB,WAAAA,CAAAA,MAAAA,CAAAA,QAAAA,EAHjB,WAGiBA,CAAjB;;AAKAriB,SAAAA,GAAYlD,MAAAA,CAAAA,mBAAAA,IAA8B,gCAAgC;AACxE,SAAOslB,kBAAAA,CAAAA,CAAAA,EADiE,UACjEA,CAAP;AADFpiB,CAAAA;;;;;;;;ACRA,IAAI+c,GAAAA,GAAMne,mBAAAA,CAAV,EAAUA,CAAV;;AACA,IAAIie,eAAAA,GAAkBje,mBAAAA,CADtB,EACsBA,CAAtB;;AACA,IAAI0jB,OAAAA,GAAU1jB,+BAAd;;AACA,IAAIuiB,UAAAA,GAAaviB,mBAAAA,CAHjB,EAGiBA,CAAjB;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,yBAAyB;AACxC,MAAI+N,CAAAA,GAAImQ,eAAAA,CADgC,MAChCA,CAAR;AACA,MAAI3gB,CAAAA,GAFoC,CAExC;AACA,MAAIoF,MAAAA,GAHoC,EAGxC;AACA,MAJwC,GAIxC;;AACA;AAAe,KAACyb,GAAAA,CAAAA,UAAAA,EAAD,GAACA,CAAD,IAAyBA,GAAAA,CAAAA,CAAAA,EAAzB,GAAyBA,CAAzB,IAAwCzb,MAAAA,CAAAA,IAAAA,CALf,GAKeA,CAAxC;AAAf;;AAEA,SAAOihB,KAAAA,CAAAA,MAAAA,GAAP;AAAyB,QAAIxF,GAAAA,CAAAA,CAAAA,EAAOpa,GAAAA,GAAM4f,KAAAA,CAAMrmB,CAAvB,EAAiBqmB,CAAbxF,CAAJ,EAA8B;AACrD,OAACuF,OAAAA,CAAAA,MAAAA,EAAD,GAACA,CAAD,IAAyBhhB,MAAAA,CAAAA,IAAAA,CAD4B,GAC5BA,CAAzB;AARsC;AAOxC;;AAGA,SAVwC,MAUxC;AAVF3C,CAAAA;;;;;;;;ACLA,IAAIke,eAAAA,GAAkBje,mBAAAA,CAAtB,EAAsBA,CAAtB;;AACA,IAAI4jB,QAAAA,GAAW5jB,mBAAAA,CADf,EACeA,CAAf;;AACA,IAAI6jB,eAAAA,GAAkB7jB,mBAAAA,CAFtB,EAEsBA,CAAtB;;AAGA,IAAI8jB,YAAAA,GAAe,SAAfA,YAAe,cAAuB;AACxC,SAAO,gCAAgC;AACrC,QAAIhW,CAAAA,GAAImQ,eAAAA,CAD6B,KAC7BA,CAAR;AACA,QAAInG,MAAAA,GAAS8L,QAAAA,CAAS9V,CAAAA,CAFe,MAExB8V,CAAb;AACA,QAAIG,KAAAA,GAAQF,eAAAA,CAAAA,SAAAA,EAHyB,MAGzBA,CAAZ;AACA,QAJqC,KAIrC;AAGA,QAAIG,WAAAA,IAAeC,EAAAA,IAAnB,IAA6B,OAAOnM,MAAAA,GAAP,OAAuB;AAClDtX,MAAAA,KAAAA,GAAQsN,CAAAA,CAAEiW,KADwC,EAC1CjW,CAARtN;AAEA,UAAIA,KAAAA,IAAJ,OAAoB,OAH8B,IAG9B;AAHtB,WAKO,OAAMsX,MAAAA,GAAN,OAAsBiM,KAAtB,IAA+B;AACpC,UAAK,gBAAeA,KAAAA,IAAhB,CAAC,KAA8BjW,CAAAA,CAAAA,KAAAA,CAAAA,KAAnC,IAAoD,OAAOkW,WAAAA,IAAAA,KAAAA,IADvB,CACgB;AAbjB;AAcnC,WAAO,gBAAgB,CAdY,CAcnC;AAfoC,GACxC;AANF,CAKA;;AAmBAjkB,MAAAA,CAAAA,OAAAA,GAAiB;AAGfmkB,EAAAA,QAAAA,EAAUJ,YAAAA,CAHK,IAGLA,CAHK;AAMfJ,EAAAA,OAAAA,EAASI,YAAAA,CANM,KAMNA;AANM,CAAjB/jB;;;;;;;;ACxBA,IAAIokB,SAAAA,GAAYnkB,mBAAAA,CAAhB,EAAgBA,CAAhB;;AAEA,IAAIokB,GAAAA,GAAMxoB,IAAAA,CAFV,GAEA;;AAIAmE,MAAAA,CAAAA,OAAAA,GAAiB,oBAAoB;AACnC,SAAOskB,QAAAA,GAAAA,CAAAA,GAAeD,GAAAA,CAAID,SAAAA,CAAJC,QAAID,CAAJC,EAAfC,gBAAeD,CAAfC,GAD4B,CACnC;AADFtkB,CAAAA;;;;;;;;ACNA,IAAIukB,IAAAA,GAAO1oB,IAAAA,CAAX;AACA,IAAI2oB,KAAAA,GAAQ3oB,IAAAA,CADZ,KACA;;AAIAmE,MAAAA,CAAAA,OAAAA,GAAiB,oBAAoB;AACnC,SAAOoE,KAAAA,CAAMkgB,QAAAA,GAAW,CAAjBlgB,QAAAA,CAAAA,GAAAA,CAAAA,GAAmC,wBAAD,IAAC,EADP,QACO,CAA1C;AADFpE,CAAAA;;;;;;;;ACLA,IAAIokB,SAAAA,GAAYnkB,mBAAAA,CAAhB,EAAgBA,CAAhB;;AAEA,IAAIwkB,GAAAA,GAAM5oB,IAAAA,CAFV,GAEA;AACA,IAAIwoB,GAAAA,GAAMxoB,IAAAA,CAHV,GAGA;;AAKAmE,MAAAA,CAAAA,OAAAA,GAAiB,yBAAyB;AACxC,MAAI0kB,OAAAA,GAAUN,SAAAA,CAD0B,KAC1BA,CAAd;AACA,SAAOM,OAAAA,GAAAA,CAAAA,GAAcD,GAAAA,CAAIC,OAAAA,GAAJD,MAAAA,EAAdC,CAAcD,CAAdC,GAAyCL,GAAAA,CAAAA,OAAAA,EAFR,MAEQA,CAAhD;AAFFrkB,CAAAA;;;;;;;;ACPAA,MAAAA,CAAAA,OAAAA,GAAiB,mHAAjBA;;;;;;;;ACAAqB,SAAAA,GAAYlD,MAAAA,CAAZkD,qBAAAA;;;;;;;;ACDA,IAAImd,KAAAA,GAAQve,mBAAAA,CAAZ,EAAYA,CAAZ;;AAEA,IAAI0kB,WAAAA,GAFJ,iBAEA;;AAEA,IAAIzH,QAAAA,GAAW,SAAXA,QAAW,qBAA8B;AAC3C,MAAIzc,KAAAA,GAAQhG,IAAAA,CAAKmqB,SAAAA,CAD0B,OAC1BA,CAALnqB,CAAZ;AACA,SAAOgG,KAAAA,IAAAA,QAAAA,GAAAA,IAAAA,GACHA,KAAAA,IAAAA,MAAAA,GAAAA,KAAAA,GACA,iCAAiC+d,KAAAA,CAAjC,SAAiCA,CAAjC,GACA,CAAC,CALsC,SAE3C;AANF,CAIA;;AAQA,IAAIoG,SAAAA,GAAY1H,QAAAA,CAAAA,SAAAA,GAAqB,kBAAkB;AACrD,SAAOjF,MAAAA,CAAAA,MAAAA,CAAAA,CAAAA,OAAAA,CAAAA,WAAAA,EAAAA,GAAAA,EAD8C,WAC9CA,EAAP;AAbF,CAYA;;AAIA,IAAIxd,IAAAA,GAAOyiB,QAAAA,CAAAA,IAAAA,GAhBX,EAgBA;AACA,IAAI2H,MAAAA,GAAS3H,QAAAA,CAAAA,MAAAA,GAjBb,GAiBA;AACA,IAAI4H,QAAAA,GAAW5H,QAAAA,CAAAA,QAAAA,GAlBf,GAkBA;AAEAld,MAAAA,CAAAA,OAAAA,GAAAA,QAAAA;;;;;;;;;;ACfC,4BAA2B;AAC1B,kDAA+B,aAA/B,cAA+DA,MAAAA,CAAAA,OAAAA,GAAiB+kB,OAAhF,KACA,QAA6CjkB,oCAA7C,OAA6CA;AAAA;AAAA;AAAA;AAAA,kGAA7C,IACC,CADD,CADA;AADD,WAIQ,YAAY;AAAA;;AAiBnB,MAAIkkB,SAAAA,GAAY,qBAAqB;AACnC,QAAIC,IAAAA,GAAJ;AAAA,QAAeC,GAAAA,GAAMrF,SAAAA,CADc,MACnC;;AACA,WAAQqF,GAAR;AAAgBD,MAAAA,IAAAA,CAAAA,GAAAA,CAAAA,GAAcpF,SAAAA,CAFK,GAELA,CAAdoF;AAAhB;;AAEA,SAJmC,WAInC;AACA,WAAOA,IAAAA,IAAQA,IAAAA,CAARA,MAAAA,IAAuB,oBALK,IAKL,CAA9B;AAtBiB,GAiBnB;;AAQA,MAAIE,kBAAAA,GAAqB;AAAEC,IAAAA,UAAAA,EAAY;AAAEzkB,MAAAA,YAAAA,EAAhB;AAAc,KAAd;AAAqC0kB,IAAAA,IAAAA,EAAM;AAAE1kB,MAAAA,YAAAA,EAA7C;AAA2C;AAA3C,GAAzB;;AASAwkB,EAAAA,kBAAAA,CAAAA,UAAAA,CAAAA,GAAAA,GAAoC,YAAY;AAC9C,QAAI1L,CAAAA,GAD0C,IAC9C;AACA,WAAQA,CAAAA,CAAAA,GAAAA,KAAAA,CAAAA,IAAeA,CAAAA,CAAAA,GAAAA,KAAfA,CAAAA,IAA8BA,CAAAA,CAAAA,GAAAA,KAA9BA,CAAAA,IAA6CA,CAAAA,CAAAA,GAAAA,KAA7CA,CAAAA,IACGA,CAAAA,CAAAA,GAAAA,KADHA,CAAAA,IACkBA,CAAAA,CAAAA,GAAAA,KADlBA,CAAAA,IACiCA,CAAAA,CAAAA,GAAAA,KADjCA,CAAAA,IACgDA,CAAAA,CAAAA,GAAAA,KADhDA,CAAAA,IAEGA,CAAAA,CAAAA,GAAAA,KAFHA,CAAAA,IAEkBA,CAAAA,CAAAA,GAAAA,KAFlBA,CAAAA,IAEiCA,CAAAA,CAAAA,GAAAA,KAFjCA,CAAAA,IAEgDA,CAAAA,CAAAA,GAAAA,KAFhDA,CAAAA,IAGGA,CAAAA,CAAAA,GAAAA,KAHHA,CAAAA,IAGkBA,CAAAA,CAAAA,GAAAA,KAHlBA,CAAAA,IAGiCA,CAAAA,CAAAA,GAAAA,KAHjCA,CAAAA,IAGgDA,CAAAA,CAAAA,GAAAA,KALV,CAE9C;AApCiB,GAkCnB0L;;AAaAA,EAAAA,kBAAAA,CAAAA,UAAAA,CAAAA,GAAAA,GAAoC,iBAAiB;AACnD,sBADmD,KACnD;AAhDiB,GA+CnBA;;AAUAA,EAAAA,kBAAAA,CAAAA,IAAAA,CAAAA,GAAAA,GAA8B,YAAY;AACxC,QAAI1L,CAAAA,GADoC,IACxC;AACA,WAAQA,CAAAA,CAAAA,GAAAA,KAAAA,CAAAA,IAAeA,CAAAA,CAAAA,GAAAA,KAAfA,CAAAA,IAA8BA,CAAAA,CAAAA,GAAAA,KAA9BA,CAAAA,IAA6CA,CAAAA,CAAAA,GAAAA,KAA7CA,CAAAA,IAA4DA,CAAAA,CAAAA,GAAAA,KAA5DA,CAAAA,IAA2EA,CAAAA,CAAAA,GAAAA,KAF3C,CAExC;AA3DiB,GAyDnB0L;;AAUAA,EAAAA,kBAAAA,CAAAA,IAAAA,CAAAA,GAAAA,GAA8B,iBAAiB;AAC7C,gBAD6C,KAC7C;AApEiB,GAmEnBA;;AAIAhnB,EAAAA,MAAAA,CAAAA,gBAAAA,CAAyB6mB,SAAAA,CAAzB7mB,SAAAA,EAvEmB,kBAuEnBA;AAGA,MAAImnB,cAAAA,GAAiBN,SAAAA,CA1EF,SA0EnB;;AAeA,8BAA4B;AAC1B,QAAIvL,CAAAA,GAAI,IADkB,SAClB,EAAR;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GAF0B,CAE1BA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GAH0B,CAG1BA;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GAJ0B,CAI1BA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GAL0B,CAK1BA;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GAN0B,CAM1BA;AACA,WAP0B,CAO1B;AAhGiB;;AA6GnB,8BAA4B;AAC1B,QAAIA,CAAAA,GAAI,IADkB,SAClB,EAAR;AAEA,QAAI8L,IAAAA,GAAQC,EAAAA,GAAK3pB,IAAAA,CAAN,EAAC2pB,GAHc,GAG1B;AACA,QAAIC,IAAAA,GAAQC,EAAAA,GAAK7pB,IAAAA,CAAN,EAAC6pB,GAJc,GAI1B;AACA,QAAIC,IAAAA,GAAQC,EAAAA,GAAK/pB,IAAAA,CAAN,EAAC+pB,GALc,GAK1B;AAGA,QAAIC,IAAAA,GAAOhqB,IAAAA,CAAAA,GAAAA,CARe,IAQfA,CAAX;AACA,QAAIiqB,IAAAA,GAAO,CAACjqB,IAAAA,CAAAA,GAAAA,CATc,IASdA,CAAZ;AACA,QAAIkqB,IAAAA,GAAOlqB,IAAAA,CAAAA,GAAAA,CAVe,IAUfA,CAAX;AACA,QAAImqB,IAAAA,GAAO,CAACnqB,IAAAA,CAAAA,GAAAA,CAXc,IAWdA,CAAZ;AACA,QAAIoqB,IAAAA,GAAOpqB,IAAAA,CAAAA,GAAAA,CAZe,IAYfA,CAAX;AACA,QAAIqqB,IAAAA,GAAO,CAACrqB,IAAAA,CAAAA,GAAAA,CAbc,IAadA,CAAZ;AAEA,QAAIsqB,IAAAA,GAAOJ,IAAAA,GAfe,IAe1B;AACA,QAAIK,IAAAA,GAAO,QAhBe,IAgB1B;AAEA3M,IAAAA,CAAAA,CAAAA,GAAAA,GAlB0B,IAkB1BA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GAnB0B,IAmB1BA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GArB0B,IAqB1BA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GAtB0B,IAsB1BA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GAxB0B,IAwB1BA;AAEA,QAAI4M,IAAAA,GAAOP,IAAAA,GAAAA,IAAAA,GAAAA,IAAAA,GAAqBD,IAAAA,GA1BN,IA0B1B;AACApM,IAAAA,CAAAA,CAAAA,GAAAA,GA3B0B,IA2B1BA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GA5B0B,IA4B1BA;AAEA,QAAI6M,IAAAA,GAAOT,IAAAA,GAAAA,IAAAA,GAAcC,IAAAA,GAAAA,IAAAA,GA9BC,IA8B1B;AACArM,IAAAA,CAAAA,CAAAA,GAAAA,GA/B0B,IA+B1BA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GAhC0B,IAgC1BA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GAAQ,QAlCkB,IAkC1BA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GAAQqM,IAAAA,GAAAA,IAAAA,GAAcD,IAAAA,GAAAA,IAAAA,GApCI,IAoC1BpM;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GAAQqM,IAAAA,GAAAA,IAAAA,GAAcD,IAAAA,GAAAA,IAAAA,GArCI,IAqC1BpM;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GAAQoM,IAAAA,GAtCkB,IAsC1BpM;AAEA,WAxC0B,CAwC1B;AArJiB;;AAmKnB,2CAAyC;AACvC,QAAIA,CAAAA,GAAI,IAD+B,SAC/B,EAAR;AACA,QAAI8M,IAAAA,GAAQC,KAAAA,GAAQ3qB,IAAAA,CAAT,EAAC2qB,GAF2B,GAEvC;AACA,QAAIC,IAAAA,GAAO5qB,IAAAA,CAAAA,GAAAA,CAH4B,IAG5BA,CAAX;AACA,QAAI6qB,IAAAA,GAAO7qB,IAAAA,CAAAA,GAAAA,CAJ4B,IAI5BA,CAAX;AACA,QAAI8qB,KAAAA,GAAQF,IAAAA,GAL2B,IAKvC;AACA,QAAI1O,MAAAA,GAASlc,IAAAA,CAAAA,IAAAA,CAAU+qB,CAAAA,GAAAA,CAAAA,GAAQC,CAAAA,GAARD,CAAAA,GAAgBE,CAAAA,GANA,CAM1BjrB,CAAb;AACA,QAAI8Q,CAAAA,GAPmC,CAOvC;AACA,QAAIoa,CAAAA,GARmC,CAQvC;AACA,QAAIC,CAAAA,GATmC,CASvC;;AAGA,QAAIjP,MAAAA,KAAJ,GAAkB;AAChBpL,MAAAA,CAAAA,GAAIia,CAAAA,GADY,MAChBja;AACAoa,MAAAA,CAAAA,GAAIF,CAAAA,GAFY,MAEhBE;AACAC,MAAAA,CAAAA,GAAIF,CAAAA,GAHY,MAGhBE;AAfqC;;AAkBvC,QAAIC,EAAAA,GAAKta,CAAAA,GAlB8B,CAkBvC;AACA,QAAIua,EAAAA,GAAKH,CAAAA,GAnB8B,CAmBvC;AACA,QAAII,EAAAA,GAAKH,CAAAA,GApB8B,CAoBvC;AAEA,QAAII,GAAAA,GAAM,IAAI,KAAK,KAAL,MAtByB,KAsBvC;AACA3N,IAAAA,CAAAA,CAAAA,GAAAA,GAvBuC,GAuBvCA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GAxBuC,GAwBvCA;AAEA,QAAI4N,GAAAA,GAAM,KAAK,gBAAgBP,CAAAA,GAAAA,IAAAA,GA1BQ,IA0B7B,CAAV;AACArN,IAAAA,CAAAA,CAAAA,GAAAA,GA3BuC,GA2BvCA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GA5BuC,GA4BvCA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GAAQ,KAAK,gBAAgBoN,CAAAA,GAAAA,IAAAA,GA9BU,IA8B/B,CAARpN;AAEA,QAAI6N,GAAAA,GAAM,KAAK,gBAAgBR,CAAAA,GAAAA,IAAAA,GAhCQ,IAgC7B,CAAV;AACArN,IAAAA,CAAAA,CAAAA,GAAAA,GAjCuC,GAiCvCA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GAlCuC,GAkCvCA;AAEA,QAAI8N,GAAAA,GAAM,IAAI,KAAK,KAAL,MApCyB,KAoCvC;AACA9N,IAAAA,CAAAA,CAAAA,GAAAA,GArCuC,GAqCvCA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GAtCuC,GAsCvCA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GAAQ,KAAK,gBAAgBmN,CAAAA,GAAAA,IAAAA,GAxCU,IAwC/B,CAARnN;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GAAQ,KAAK,gBAAgBoN,CAAAA,GAAAA,IAAAA,GAzCU,IAyC/B,CAARpN;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GAAQ,KAAK,gBAAgBmN,CAAAA,GAAAA,IAAAA,GA1CU,IA0C/B,CAARnN;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GAAQ,IAAI,KAAK,KAAL,MA3C2B,KA2CvCA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GA7CuC,CA6CvCA;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GA9CuC,CA8CvCA;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GA/CuC,CA+CvCA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GAjDuC,CAiDvCA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GAlDuC,CAkDvCA;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GAnDuC,CAmDvCA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GApDuC,CAoDvCA;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GArDuC,CAqDvCA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GAvDuC,CAuDvCA;AAEA,WAzDuC,CAyDvC;AA5NiB;;AAyOnB,0BAAwB;AACtB,QAAIA,CAAAA,GAAI,IADc,SACd,EAAR;AACAA,IAAAA,CAAAA,CAAAA,GAAAA,GAFsB,CAEtBA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GAHsB,CAGtBA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GALsB,CAKtBA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GANsB,CAMtBA;AAEAA,IAAAA,CAAAA,CAAAA,GAAAA,GARsB,CAQtBA;AACA,WATsB,CAStB;AAlPiB;;AA6PnB,wBAAsB;AACpB,QAAI8M,IAAAA,GAAQC,KAAAA,GAAQ3qB,IAAAA,CAAT,EAAC2qB,GADQ,GACpB;AACA,QAAI/M,CAAAA,GAAI,IAFY,SAEZ,EAAR;AACA,QAAI+N,CAAAA,GAAI3rB,IAAAA,CAAAA,GAAAA,CAHY,IAGZA,CAAR;AACA4d,IAAAA,CAAAA,CAAAA,GAAAA,GAJoB,CAIpBA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GALoB,CAKpBA;AACA,WANoB,CAMpB;AAnQiB;;AA8QnB,wBAAsB;AACpB,QAAI8M,IAAAA,GAAQC,KAAAA,GAAQ3qB,IAAAA,CAAT,EAAC2qB,GADQ,GACpB;AACA,QAAI/M,CAAAA,GAAI,IAFY,SAEZ,EAAR;AACA,QAAI+N,CAAAA,GAAI3rB,IAAAA,CAAAA,GAAAA,CAHY,IAGZA,CAAR;AACA4d,IAAAA,CAAAA,CAAAA,GAAAA,GAJoB,CAIpBA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,GALoB,CAKpBA;AACA,WANoB,CAMpB;AApRiB;;AA8RnB,4BAA0B;AACxB,QAAI2N,GAAAA,GAAM9N,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CADjD,GACxB;AACA,QAAIgO,GAAAA,GAAM/N,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAFjD,GAExB;AACA,QAAIoO,GAAAA,GAAMnO,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAHjD,GAGxB;AACA,QAAIqO,GAAAA,GAAMpO,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAJjD,GAIxB;AAEA,QAAIiO,GAAAA,GAAMhO,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CANjD,GAMxB;AACA,QAAIkO,GAAAA,GAAMjO,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAPjD,GAOxB;AACA,QAAIsO,GAAAA,GAAMrO,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CARjD,GAQxB;AACA,QAAIuO,GAAAA,GAAMtO,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CATjD,GASxB;AAEA,QAAIwO,GAAAA,GAAMvO,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAXjD,GAWxB;AACA,QAAIyO,GAAAA,GAAMxO,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAZjD,GAYxB;AACA,QAAI0O,GAAAA,GAAMzO,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAbjD,GAaxB;AACA,QAAI2O,GAAAA,GAAM1O,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAdjD,GAcxB;AAEA,QAAI4O,GAAAA,GAAM3O,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAhBjD,GAgBxB;AACA,QAAI6O,GAAAA,GAAM5O,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAjBjD,GAiBxB;AACA,QAAI8O,GAAAA,GAAM7O,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAlBjD,GAkBxB;AACA,QAAI+O,GAAAA,GAAM9O,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAATC,GAAAA,GAAkBA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA3BC,GAAAA,GAAoCA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAA7CC,GAAAA,GAAsDA,EAAAA,CAAAA,GAAAA,GAASD,EAAAA,CAnBjD,GAmBxB;AAEA,WAAO,cACL,gFADK,CAAP;AAnTiB;;AAuVnB,yBAAuB;AACrB,WAAO,cAEL,CAACI,CAAAA,CAAD,KAAQA,CAAAA,CAAR,KAAeA,CAAAA,CAAf,KAAsBA,CAAAA,CAAtB,KACEA,CAAAA,CADF,KACSA,CAAAA,CADT,KACgBA,CAAAA,CADhB,KACuBA,CAAAA,CADvB,KAEEA,CAAAA,CAFF,KAESA,CAAAA,CAFT,KAEgBA,CAAAA,CAFhB,KAEuBA,CAAAA,CAFvB,KAGEA,CAAAA,CAHF,KAGSA,CAAAA,CAHT,KAGgBA,CAAAA,CAHhB,KAGuBA,CAAAA,CAHvB,IAFK,CAAP;AAxViB;;AAuWnB,mCAAiC;AAC/B,QAAIW,CAAAA,GAAIjB,KAAAA,CAAAA,IAAAA,CADuB,KACvBA,CAAR;;AACA,QAAIiB,CAAAA,CAAAA,MAAAA,KAAJ,IAAqB;AACnB,UAAIgN,GAAAA,GAAMhN,CAAAA,CADS,CACTA,CAAV;AACA,UAAIkN,GAAAA,GAAMlN,CAAAA,CAFS,CAETA,CAAV;AACA,UAAIyN,GAAAA,GAAMzN,CAAAA,CAHS,CAGTA,CAAV;AACA,UAAI6N,GAAAA,GAAM7N,CAAAA,CAJS,CAITA,CAAV;AACA,UAAIiN,GAAAA,GAAMjN,CAAAA,CALS,CAKTA,CAAV;AACA,UAAImN,GAAAA,GAAMnN,CAAAA,CANS,CAMTA,CAAV;AACA,UAAI0N,GAAAA,GAAM1N,CAAAA,CAPS,CAOTA,CAAV;AACA,UAAI8N,GAAAA,GAAM9N,CAAAA,CARS,CAQTA,CAAV;AACA,UAAIqN,GAAAA,GAAMrN,CAAAA,CATS,CASTA,CAAV;AACA,UAAIuN,GAAAA,GAAMvN,CAAAA,CAVS,CAUTA,CAAV;AACA,UAAI2N,GAAAA,GAAM3N,CAAAA,CAXS,EAWTA,CAAV;AACA,UAAI+N,GAAAA,GAAM/N,CAAAA,CAZS,EAYTA,CAAV;AACA,UAAIsN,GAAAA,GAAMtN,CAAAA,CAbS,EAaTA,CAAV;AACA,UAAIwN,GAAAA,GAAMxN,CAAAA,CAdS,EAcTA,CAAV;AACA,UAAI4N,GAAAA,GAAM5N,CAAAA,CAfS,EAeTA,CAAV;AACA,UAAIgO,GAAAA,GAAMhO,CAAAA,CAhBS,EAgBTA,CAAV;AAEAX,MAAAA,CAAAA,CAAAA,GAAAA,GAlBmB,GAkBnBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GAnBmB,GAmBnBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GArBmB,GAqBnBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GAtBmB,GAsBnBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GAxBmB,GAwBnBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GA1BmB,GA0BnBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GA3BmB,GA2BnBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GA7BmB,GA6BnBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GA9BmB,GA8BnBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GAhCmB,GAgCnBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GAjCmB,GAiCnBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GAnCmB,GAmCnBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GArCmB,GAqCnBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GAtCmB,GAsCnBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GAxCmB,GAwCnBA;AACAA,MAAAA,CAAAA,CAAAA,GAAAA,GAzCmB,GAyCnBA;AACAA,MAAAA,CAAAA,CAAAA,GAAAA,GA1CmB,GA0CnBA;AACAA,MAAAA,CAAAA,CAAAA,GAAAA,GA3CmB,GA2CnBA;AACAA,MAAAA,CAAAA,CAAAA,GAAAA,GA5CmB,GA4CnBA;AACAA,MAAAA,CAAAA,CAAAA,GAAAA,GA7CmB,GA6CnBA;AACAA,MAAAA,CAAAA,CAAAA,GAAAA,GA9CmB,GA8CnBA;AACAA,MAAAA,CAAAA,CAAAA,GAAAA,GA/CmB,GA+CnBA;AA/CF,WAgDO,IAAIW,CAAAA,CAAAA,MAAAA,KAAJ,GAAoB;AACzB,UAAIiO,KAAAA,GAAQjO,CAAAA,CADa,CACbA,CAAZ;AACA,UAAIkO,KAAAA,GAAQlO,CAAAA,CAFa,CAEbA,CAAZ;AACA,UAAImO,KAAAA,GAAQnO,CAAAA,CAHa,CAGbA,CAAZ;AACA,UAAIoO,KAAAA,GAAQpO,CAAAA,CAJa,CAIbA,CAAZ;AACA,UAAIqO,KAAAA,GAAQrO,CAAAA,CALa,CAKbA,CAAZ;AACA,UAAIsO,KAAAA,GAAQtO,CAAAA,CANa,CAMbA,CAAZ;AAEAX,MAAAA,CAAAA,CAAAA,GAAAA,GARyB,KAQzBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GATyB,KASzBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GAXyB,KAWzBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GAZyB,KAYzBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GAdyB,KAczBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GAfyB,KAezBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GAjByB,KAiBzBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GAlByB,KAkBzBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GApByB,KAoBzBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GArByB,KAqBzBA;AAEAA,MAAAA,CAAAA,CAAAA,GAAAA,GAvByB,KAuBzBA;AACAA,MAAAA,CAAAA,CAAAA,CAAAA,GAxByB,KAwBzBA;AAxBK,WAyBA;AACL,YAAM,cADD,0CACC,CAAN;AA5E6B;;AA8E/B,WA9E+B,CA8E/B;AArbiB;;AAicnB,wBAAsB;AACpB,WAAOkP,aAAAA,CAAc,IAAdA,SAAc,EAAdA,EADa,CACbA,CAAP;AAlciB;;AAoenBrD,EAAAA,cAAAA,CAAAA,cAAAA,GAAgC,gCAAgC;AAC9D,QAAI7L,CAAAA,GAD0D,IAC9D;;AAEA,QAAI,WAAW,CAACgE,MAAAA,CAAhB,QAA+B;AAC7B,aAD6B,CAC7B;AAJ4D;;AAK5D,QAAIA,MAAAA,CAAAA,MAAAA,IAAiB,OAAOA,MAAAA,CAAP,CAAOA,CAAP,KAAjBA,QAAAA,IAAkDA,MAAAA,CAAAA,CAAAA,CAAAA,CAAtD,QAAwE;AACxE,UAAImL,MAAAA,GAAS3Q,MAAAA,CAAOwF,MAAAA,CAAPxF,CAAOwF,CAAPxF,CAAAA,CAD2D,IAC3DA,EAAb;AACA,UAAI3W,IAAAA,GAFoE,EAExE;AACA,UAAIW,MAAAA,GAHoE,EAGxE;;AAEA,UAAI2mB,MAAAA,KAAJ,QAAuB;AAAE,eAAF,CAAE;AAL+C;;AAOxEtnB,MAAAA,IAAAA,GAAOsnB,MAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAgBA,MAAAA,CAAAA,OAAAA,CAPiD,GAOjDA,CAAhBA,CAAPtnB;AACAW,MAAAA,MAAAA,GAAS,aAAcX,IAAAA,KAAAA,QAAAA,GAAAA,CAAAA,GAAd,GAA0C,CAA1C,kBACF,aAAa;AAAE,eAAQzF,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,IAAAA,IAAAA,GAAAA,CAAAA,GAAyB,CAAnC,CAAE;AATkD,OAQ/D,CAAToG;;AAGA,UAAI,gBAAgBA,MAAAA,CAAhB,UAAiC,CAArC,GAAyC;AACvC0mB,QAAAA,aAAAA,CAAAA,CAAAA,EADuC,MACvCA,CAAAA;AADF,aAEO;AACL,cAAM,cADD,6DACC,CAAN;AAdsE;AAAxE,WAgBK,IAAIlL,MAAAA,CAAAA,CAAAA,CAAAA,YAAJ,WAAoC;AACzCkL,MAAAA,aAAAA,CAAAA,CAAAA,EAAiBlL,MAAAA,CAAAA,CAAAA,CAAAA,CADwB,OACxBA,EAAjBkL,CAAAA;AADK,WAEA,IAAIxP,KAAAA,CAAAA,OAAAA,CAAcsE,MAAAA,CAAlB,CAAkBA,CAAdtE,CAAJ,EAA8B;AACnCwP,MAAAA,aAAAA,CAAAA,CAAAA,EAAiBlL,MAAAA,CADkB,CAClBA,CAAjBkL,CAAAA;AADK,WAEA,IAAIxP,KAAAA,CAAAA,OAAAA,CAAJ,MAAIA,CAAJ,EAA2B;AAChCwP,MAAAA,aAAAA,CAAAA,CAAAA,EADgC,MAChCA,CAAAA;AA1B4D;;AA4B9D,WA5B8D,CA4B9D;AAhgBiB,GAoenBrD;;AA0CAA,EAAAA,cAAAA,CAAAA,QAAAA,GAA0B,oBAAoB;AAC5C,QAAI7L,CAAAA,GADwC,IAC5C;AACA,QAAInY,IAAAA,GAAOmY,CAAAA,CAAAA,IAAAA,GAAAA,QAAAA,GAFiC,UAE5C;AAEA,WAAQnY,IAAAA,GAAAA,GAAAA,GAAcmY,CAAAA,CAAAA,OAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CAAdnY,GAAcmY,CAAdnY,GAJoC,GAI5C;AAlhBiB,GA8gBnBgkB;;AAiBAA,EAAAA,cAAAA,CAAAA,OAAAA,GAAyB,6BAA6B;AACpD,QAAI7L,CAAAA,GADgD,IACpD;AACA,QAFoD,MAEpD;;AAEA,QAAIA,CAAAA,CAAJ,MAAY;AACV9W,MAAAA,MAAAA,GAAS,CAAC8W,CAAAA,CAAD,GAAMA,CAAAA,CAAN,GAAWA,CAAAA,CAAX,GAAgBA,CAAAA,CAAhB,GAAqBA,CAAAA,CAArB,GAA0BA,CAAAA,CAA1B,EAAT9W;AADF,WAEO,gBAAgB;AACrBA,MAAAA,MAAAA,GAAS,CAAC8W,CAAAA,CAAD,KAAQA,CAAAA,CAAR,KAAeA,CAAAA,CAAf,KAAsBA,CAAAA,CAAtB,KACPA,CAAAA,CADO,KACAA,CAAAA,CADA,KACOA,CAAAA,CADP,KACcA,CAAAA,CADd,KAEPA,CAAAA,CAFO,KAEAA,CAAAA,CAFA,KAEOA,CAAAA,CAFP,KAEcA,CAAAA,CAFd,KAGPA,CAAAA,CAHO,KAGAA,CAAAA,CAHA,KAGOA,CAAAA,CAHP,KAGcA,CAAAA,CAHd,IAAT9W;AADK,WAKA;AACLA,MAAAA,MAAAA,GAAS,CAAC8W,CAAAA,CAAD,KAAQA,CAAAA,CAAR,KAAeA,CAAAA,CAAf,KAAsBA,CAAAA,CAAtB,KACPA,CAAAA,CADO,KACAA,CAAAA,CADA,KACOA,CAAAA,CADP,KACcA,CAAAA,CADd,KAEPA,CAAAA,CAFO,KAEAA,CAAAA,CAFA,KAEOA,CAAAA,CAFP,KAEcA,CAAAA,CAFd,KAGPA,CAAAA,CAHO,KAGAA,CAAAA,CAHA,KAGOA,CAAAA,CAHP,KAGcA,CAAAA,CAHd,IAAT9W;AAZkD;;AAiBpD,WAjBoD,MAiBpD;AAhjBiB,GA+hBnB2iB;;AA4BAA,EAAAA,cAAAA,CAAAA,QAAAA,GAA0B,sBAAsB;AAC9C,WAAOuD,QAAAA,CAAAA,IAAAA,EADuC,EACvCA,CAAP;AA5jBiB,GA2jBnBvD;;AAyBAA,EAAAA,cAAAA,CAAAA,SAAAA,GAA2B,4BAA4B;AACrD,QAAI3Y,CAAAA,GADiD,CACrD;AACA,QAAIoa,CAAAA,GAFiD,CAErD;AACA,QAAIC,CAAAA,GAHiD,CAGrD;;AACA,QAAIA,CAAAA,IAAJ,MAAe;AAAEA,MAAAA,CAAAA,GAAF,CAAEA;AAJoC;;AAKrD,QAAID,CAAAA,IAAJ,MAAe;AAAEA,MAAAA,CAAAA,GAAF,CAAEA;AALoC;;AAMrD,WAAO8B,QAAAA,CAAAA,IAAAA,EAAeC,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAN+B,CAM/BA,CAAfD,CAAP;AA1lBiB,GAolBnBvD;;AAoBAA,EAAAA,cAAAA,CAAAA,KAAAA,GAAuB,wBAAwB;AAC7C,QAAI3Y,CAAAA,GADyC,CAC7C;AACA,QAAIoa,CAAAA,GAFyC,CAE7C;AACA,QAAIC,CAAAA,GAHyC,CAG7C;;AACA,QAAID,CAAAA,IAAJ,MAAe;AAAEA,MAAAA,CAAAA,GAAF,CAAEA;AAJ4B;;AAK7C,QAAIC,CAAAA,IAAJ,MAAe;AAAEA,MAAAA,CAAAA,GAAF,CAAEA;AAL4B;;AAO7C,WAAO6B,QAAAA,CAAAA,IAAAA,EAAeE,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAPuB,CAOvBA,CAAfF,CAAP;AA/mBiB,GAwmBnBvD;;AAsBAA,EAAAA,cAAAA,CAAAA,MAAAA,GAAwB,4BAA4B;AAClD,QAAI0D,EAAAA,GAD8C,EAClD;AACA,QAAIC,EAAAA,GAF8C,EAElD;AACA,QAAIC,EAAAA,GAH8C,EAGlD;;AACA,QAAID,EAAAA,IAAJ,MAAgB;AAAEA,MAAAA,EAAAA,GAAF,CAAEA;AAJgC;;AAKlD,QAAIC,EAAAA,IAAJ,MAAgB;AAAEA,MAAAA,EAAAA,GAAF,EAAEA;AAASF,MAAAA,EAAAA,GAAX,CAAWA;AALuB;;AAMlD,WAAOH,QAAAA,CAAAA,IAAAA,EAAeM,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAN4B,EAM5BA,CAAfN,CAAP;AApoBiB,GA8nBnBvD;;AAsBAA,EAAAA,cAAAA,CAAAA,eAAAA,GAAiC,yCAAyC;AACxE,QAAIzF,SAAAA,CAAAA,MAAAA,KAAJ,GAA4B;AAC1B,YAAM,cADoB,+BACpB,CAAN;AAFsE;;AAIxE,WAAOgJ,QAAAA,CAAAA,IAAAA,EAAeO,eAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAJkD,KAIlDA,CAAfP,CAAP;AAxpBiB,GAopBnBvD;;AAeAA,EAAAA,cAAAA,CAAAA,KAAAA,GAAuB,sBAAsB;AAC3C,WAAOuD,QAAAA,CAAAA,IAAAA,EAAeQ,KAAAA,CADqB,KACrBA,CAAfR,CAAP;AApqBiB,GAmqBnBvD;;AAYAA,EAAAA,cAAAA,CAAAA,KAAAA,GAAuB,sBAAsB;AAC3C,WAAOuD,QAAAA,CAAAA,IAAAA,EAAeS,KAAAA,CADqB,KACrBA,CAAfT,CAAP;AAhrBiB,GA+qBnBvD;;AASAA,EAAAA,cAAAA,CAAAA,WAAAA,GAA6B,uBAAuB;AAClD,QAAIiE,QAAAA,GAAW,gDAAf;AACA,WAAOZ,aAAAA,CAAAA,IAAAA,EAF2C,QAE3CA,CAAP;AA1rBiB,GAwrBnBrD;;AAkBAA,EAAAA,cAAAA,CAAAA,cAAAA,GAAgC,2BAA2B;AACzD,QAAIkE,CAAAA,GADqD,IACzD;AACA,QAAI/P,CAAAA,GAAIqP,SAAAA,CAAU5O,CAAAA,CAAV4O,CAAAA,EAAe5O,CAAAA,CAAf4O,CAAAA,EAAoB5O,CAAAA,CAF6B,CAEjD4O,CAAR;AAEArP,IAAAA,CAAAA,CAAAA,GAAAA,GAAQS,CAAAA,CAAAA,CAAAA,IAJiD,CAIzDT;AACAA,IAAAA,CAAAA,GAAI+P,CAAAA,CAAAA,QAAAA,CALqD,CAKrDA,CAAJ/P;AAEA,WAAO;AACLmN,MAAAA,CAAAA,EAAGnN,CAAAA,CADE;AAELoN,MAAAA,CAAAA,EAAGpN,CAAAA,CAFE;AAGLqN,MAAAA,CAAAA,EAAGrN,CAAAA,CAHE;AAILgQ,MAAAA,CAAAA,EAAGhQ,CAAAA,CAJE;AAAA,KAAP;AAjtBiB,GA0sBnB6L;;AAuBAA,EAAAA,cAAAA,CAAAA,SAAAA,GAA2B,sBAAsB;AAC/C,QAAI7L,CAAAA,GAD2C,IAC/C;AACA,QAAImN,CAAAA,GAAInN,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAAR/N,CAAAA,GAAcA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAAtB/N,CAAAA,GAA4BA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAApC/N,CAAAA,GAA0CA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAFX,CAE/C;AACA,QAAIX,CAAAA,GAAIpN,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAAR/N,CAAAA,GAAcA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAAtB/N,CAAAA,GAA4BA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAApC/N,CAAAA,GAA0CA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAHX,CAG/C;AACA,QAAIV,CAAAA,GAAIrN,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAAR/N,CAAAA,GAAcA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAAtB/N,CAAAA,GAA4BA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAApC/N,CAAAA,GAA0CA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAJX,CAI/C;AACA,QAAIiC,CAAAA,GAAIhQ,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAAR/N,CAAAA,GAAcA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAAtB/N,CAAAA,GAA4BA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CAApC/N,CAAAA,GAA0CA,CAAAA,CAAAA,GAAAA,GAAQ+N,CAAAA,CALX,CAK/C;AAEA,WAAO;AACLZ,MAAAA,CAAAA,EAAGA,CAAAA,GADE;AAELC,MAAAA,CAAAA,EAAGA,CAAAA,GAFE;AAGLC,MAAAA,CAAAA,EAAGA,CAAAA,GAHE;AAIL2C,MAAAA,CAAAA,EAJK;AAAA,KAAP;AAxuBiB,GAiuBnBnE;;AAgBAN,EAAAA,SAAAA,CAAAA,SAAAA,GAjvBmB,SAivBnBA;AACAA,EAAAA,SAAAA,CAAAA,MAAAA,GAlvBmB,MAkvBnBA;AACAA,EAAAA,SAAAA,CAAAA,eAAAA,GAnvBmB,eAmvBnBA;AACAA,EAAAA,SAAAA,CAAAA,KAAAA,GApvBmB,KAovBnBA;AACAA,EAAAA,SAAAA,CAAAA,KAAAA,GArvBmB,KAqvBnBA;AACAA,EAAAA,SAAAA,CAAAA,KAAAA,GAtvBmB,KAsvBnBA;AACAA,EAAAA,SAAAA,CAAAA,QAAAA,GAvvBmB,QAuvBnBA;AACAA,EAAAA,SAAAA,CAAAA,UAAAA,GAxvBmB,UAwvBnBA;AACAA,EAAAA,SAAAA,CAAAA,SAAAA,GAzvBmB,SAyvBnBA;AACAA,EAAAA,SAAAA,CAAAA,aAAAA,GA1vBmB,aA0vBnBA;AAEA,SA5vBmB,SA4vBnB;AAhwBF,CAAC,CAAD;;;;;;;;ACLA/kB,mBAAAA,CAAAA,EAAAA,CAAAA;;AACAA,mBAAAA,CADAA,EACAA,CAAAA;;AACA,IAAIypB,IAAAA,GAAOzpB,mBAAAA,CAFXA,EAEWA,CAAX;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB0pB,IAAAA,CAAAA,MAAAA,CAAjB1pB,WAAAA;;;;;;ACJa;;AACb,IAAIke,eAAAA,GAAkBje,mBAAAA,CADtB,EACsBA,CAAtB;;AACA,IAAI0pB,gBAAAA,GAAmB1pB,mBAAAA,CAFvB,EAEuBA,CAAvB;;AACA,IAAI2pB,SAAAA,GAAY3pB,mBAAAA,CAHhB,EAGgBA,CAAhB;;AACA,IAAI4hB,mBAAAA,GAAsB5hB,mBAAAA,CAJ1B,EAI0BA,CAA1B;;AACA,IAAI4pB,cAAAA,GAAiB5pB,mBAAAA,CALrB,EAKqBA,CAArB;;AAEA,IAAI6pB,cAAAA,GAPJ,gBAOA;AACA,IAAIC,gBAAAA,GAAmBlI,mBAAAA,CARvB,GAQA;AACA,IAAIC,gBAAAA,GAAmBD,mBAAAA,CAAAA,SAAAA,CATvB,cASuBA,CAAvB;AAYA7hB,MAAAA,CAAAA,OAAAA,GAAiB,+BAA+B,0BAA0B;AACxE+pB,EAAAA,gBAAAA,CAAAA,IAAAA,EAAuB;AACrBzoB,IAAAA,IAAAA,EADqB;AAErBic,IAAAA,MAAAA,EAAQW,eAAAA,CAFa,QAEbA,CAFa;AAGrB8F,IAAAA,KAAAA,EAHqB;AAIrBgG,IAAAA,IAAAA,EAJqB;AAAA,GAAvBD,CAAAA;AADe,GASd,YAAY;AACb,MAAI3mB,KAAAA,GAAQ0e,gBAAAA,CADC,IACDA,CAAZ;AACA,MAAIvE,MAAAA,GAASna,KAAAA,CAFA,MAEb;AACA,MAAI4mB,IAAAA,GAAO5mB,KAAAA,CAHE,IAGb;AACA,MAAI4gB,KAAAA,GAAQ5gB,KAAAA,CAJC,KAIDA,EAAZ;;AACA,MAAI,WAAW4gB,KAAAA,IAASzG,MAAAA,CAAxB,QAAuC;AACrCna,IAAAA,KAAAA,CAAAA,MAAAA,GADqC,SACrCA;AACA,WAAO;AAAE3C,MAAAA,KAAAA,EAAF;AAAoBiD,MAAAA,IAAAA,EAApB;AAAA,KAAP;AAPW;;AASb,MAAIsmB,IAAAA,IAAJ,QAAoB,OAAO;AAAEvpB,IAAAA,KAAAA,EAAF;AAAgBiD,IAAAA,IAAAA,EAAhB;AAAA,GAAP;AACpB,MAAIsmB,IAAAA,IAAJ,UAAsB,OAAO;AAAEvpB,IAAAA,KAAAA,EAAO8c,MAAAA,CAAT,KAASA,CAAT;AAAwB7Z,IAAAA,IAAAA,EAAxB;AAAA,GAAP;AACtB,SAAO;AAAEjD,IAAAA,KAAAA,EAAO,QAAQ8c,MAAAA,CAAR,KAAQA,CAAR,CAAT;AAAiC7Z,IAAAA,IAAAA,EAAjC;AAAA,GAAP;AApBe,GArBjB,QAqBiB,CAAjB1D;AA0BA4pB,SAAAA,CAAAA,SAAAA,GAAsBA,SAAAA,CA/CtB,KA+CAA;AAGAD,gBAAAA,CAlDA,MAkDAA,CAAAA;AACAA,gBAAAA,CAnDA,QAmDAA,CAAAA;AACAA,gBAAAA,CAAAA,SAAAA,CAAAA;;;;;;;;ACpDA,IAAItK,eAAAA,GAAkBpf,mBAAAA,CAAtB,EAAsBA,CAAtB;;AACA,IAAIgqB,MAAAA,GAAShqB,mBAAAA,CADb,EACaA,CAAb;;AACA,IAAIshB,oBAAAA,GAAuBthB,mBAAAA,CAF3B,EAE2BA,CAA3B;;AAEA,IAAIiqB,WAAAA,GAAc7K,eAAAA,CAJlB,aAIkBA,CAAlB;AACA,IAAI8K,cAAAA,GAAiBhR,KAAAA,CALrB,SAKA;;AAIA,IAAIgR,cAAAA,CAAAA,WAAAA,CAAAA,IAAJ,WAA8C;AAC5C5I,EAAAA,oBAAAA,CAAAA,CAAAA,CAAAA,cAAAA,EAAAA,WAAAA,EAAoD;AAClD5gB,IAAAA,YAAAA,EADkD;AAElDF,IAAAA,KAAAA,EAAOwpB,MAAAA,CAF2C,IAE3CA;AAF2C,GAApD1I;AAVF;;AAiBAvhB,MAAAA,CAAAA,OAAAA,GAAiB,eAAe;AAC9BmqB,EAAAA,cAAAA,CAAAA,WAAAA,CAAAA,CAAAA,GAAAA,IAD8B,IAC9BA;AADFnqB,CAAAA;;;;;;;;AChBA,IAAIyhB,QAAAA,GAAWxhB,mBAAAA,CADf,EACeA,CAAf;;AACA,IAAImqB,gBAAAA,GAAmBnqB,mBAAAA,CAFvB,EAEuBA,CAAvB;;AACA,IAAIyjB,WAAAA,GAAczjB,mBAAAA,CAHlB,EAGkBA,CAAlB;;AACA,IAAIuiB,UAAAA,GAAaviB,mBAAAA,CAJjB,EAIiBA,CAAjB;;AACA,IAAIoqB,IAAAA,GAAOpqB,mBAAAA,CALX,EAKWA,CAAX;;AACA,IAAIqqB,qBAAAA,GAAwBrqB,mBAAAA,CAN5B,EAM4BA,CAA5B;;AACA,IAAIsiB,SAAAA,GAAYtiB,mBAAAA,CAPhB,EAOgBA,CAAhB;;AAEA,IAAIsqB,EAAAA,GATJ,GASA;AACA,IAAIC,EAAAA,GAVJ,GAUA;AACA,IAAIC,SAAAA,GAXJ,WAWA;AACA,IAAIC,MAAAA,GAZJ,QAYA;AACA,IAAIC,QAAAA,GAAWpI,SAAAA,CAbf,UAaeA,CAAf;;AAEA,IAAIqI,gBAAAA,GAAmB,SAAnBA,gBAAmB,GAAY,CAfnC,CAeA;;AAEA,IAAIC,SAAAA,GAAY,SAAZA,SAAY,UAAmB;AACjC,SAAOL,EAAAA,GAAAA,MAAAA,GAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,GAAAA,GAAAA,GAAAA,MAAAA,GAD0B,EACjC;AAlBF,CAiBA;;AAKA,IAAIM,yBAAAA,GAA4B,SAA5BA,yBAA4B,kBAA2B;AACzDC,EAAAA,eAAAA,CAAAA,KAAAA,CAAsBF,SAAAA,CADmC,EACnCA,CAAtBE;AACAA,EAAAA,eAAAA,CAFyD,KAEzDA;AACA,MAAIC,IAAAA,GAAOD,eAAAA,CAAAA,YAAAA,CAH8C,MAGzD;AACAA,EAAAA,eAAAA,GAJyD,IAIzDA;AACA,SALyD,IAKzD;AA3BF,CAsBA;;AASA,IAAIE,wBAAAA,GAA2B,SAA3BA,wBAA2B,GAAY;AAEzC,MAAIC,MAAAA,GAASZ,qBAAAA,CAF4B,QAE5BA,CAAb;AACA,MAAIa,EAAAA,GAAK,kBAHgC,GAGzC;AACA,MAJyC,cAIzC;AACAD,EAAAA,MAAAA,CAAAA,KAAAA,CAAAA,OAAAA,GALyC,MAKzCA;AACAb,EAAAA,IAAAA,CAAAA,WAAAA,CANyC,MAMzCA;AAEAa,EAAAA,MAAAA,CAAAA,GAAAA,GAAajT,MAAAA,CAR4B,EAQ5BA,CAAbiT;AACAE,EAAAA,cAAAA,GAAiBF,MAAAA,CAAAA,aAAAA,CATwB,QASzCE;AACAA,EAAAA,cAAAA,CAVyC,IAUzCA;AACAA,EAAAA,cAAAA,CAAAA,KAAAA,CAAqBP,SAAAA,CAXoB,mBAWpBA,CAArBO;AACAA,EAAAA,cAAAA,CAZyC,KAYzCA;AACA,SAAOA,cAAAA,CAbkC,CAazC;AA5CF,CA+BA;;AAqBA,IApDA,eAoDA;;AACA,IAAIC,gBAAAA,GAAkB,2BAAY;AAChC,MAAI;AACFN,IAAAA,eAAAA,GAAkB,kBADhB,UACgB,CAAlBA;AADF,IAEE,cAAc,CAHgB;;AAIhCM,EAAAA,gBAAAA,GAAkB,iCACdlxB,QAAAA,CAAAA,MAAAA,IAAAA,eAAAA,GACE2wB,yBAAAA,CADF3wB,eACE2wB,CADF3wB,GAEE8wB,wBAHY,KAIdH,yBAAAA,CAR4B,eAQ5BA,CAJJO;AAKA,MAAItT,MAAAA,GAAS2L,WAAAA,CATmB,MAShC;;AACA,SAAO3L,MAAP;AAAiB,WAAOsT,gBAAAA,CAAAA,SAAAA,CAAAA,CAA2B3H,WAAAA,CAVnB,MAUmBA,CAA3B2H,CAAP;AAAjB;;AACA,SAAOA,gBAXyB,EAWhC;AAhEF,CAqDA;;AAcA7I,UAAAA,CAAAA,QAAAA,CAAAA,GAnEA,IAmEAA;;AAIAxiB,MAAAA,CAAAA,OAAAA,GAAiB7B,MAAAA,CAAAA,MAAAA,IAAiB,+BAA+B;AAC/D,MAD+D,MAC/D;;AACA,MAAI4P,CAAAA,KAAJ,MAAgB;AACd6c,IAAAA,gBAAAA,CAAAA,SAAAA,CAAAA,GAA8BnJ,QAAAA,CADhB,CACgBA,CAA9BmJ;AACAjoB,IAAAA,MAAAA,GAAS,IAFK,gBAEL,EAATA;AACAioB,IAAAA,gBAAAA,CAAAA,SAAAA,CAAAA,GAHc,IAGdA;AAEAjoB,IAAAA,MAAAA,CAAAA,QAAAA,CAAAA,GALc,CAKdA;AALF,SAMOA,MAAAA,GAAS0oB,gBAR+C,EAQxD1oB;;AACP,SAAO2oB,UAAAA,KAAAA,SAAAA,GAAAA,MAAAA,GAAoClB,gBAAAA,CAAAA,MAAAA,EAToB,UASpBA,CAA3C;AATFpqB,CAAAA;;;;;;;;ACvEA,IAAI+d,WAAAA,GAAc9d,mBAAAA,CAAlB,EAAkBA,CAAlB;;AACA,IAAIshB,oBAAAA,GAAuBthB,mBAAAA,CAD3B,EAC2BA,CAA3B;;AACA,IAAIwhB,QAAAA,GAAWxhB,mBAAAA,CAFf,EAEeA,CAAf;;AACA,IAAIsrB,UAAAA,GAAatrB,mBAAAA,CAHjB,EAGiBA,CAAjB;;AAKAD,MAAAA,CAAAA,OAAAA,GAAiB+d,WAAAA,GAAc5f,MAAAA,CAAd4f,gBAAAA,GAAwC,yCAAyC;AAChG0D,EAAAA,QAAAA,CADgG,CAChGA,CAAAA;AACA,MAAI1d,IAAAA,GAAOwnB,UAAAA,CAFqF,UAErFA,CAAX;AACA,MAAIxT,MAAAA,GAAShU,IAAAA,CAHmF,MAGhG;AACA,MAAIigB,KAAAA,GAJ4F,CAIhG;AACA,MALgG,GAKhG;;AACA,SAAOjM,MAAAA,GAAP;AAAuBwJ,IAAAA,oBAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAA0Bvd,GAAAA,GAAMD,IAAAA,CAAKigB,KAArCzC,EAAgCxd,CAAhCwd,EAA+C+J,UAAAA,CAN0B,GAM1BA,CAA/C/J;AAAvB;;AACA,SAPgG,CAOhG;AAPFvhB,CAAAA;;;;;;;;ACRA,IAAIyjB,kBAAAA,GAAqBxjB,mBAAAA,CAAzB,EAAyBA,CAAzB;;AACA,IAAIyjB,WAAAA,GAAczjB,mBAAAA,CADlB,EACkBA,CAAlB;;AAKAD,MAAAA,CAAAA,OAAAA,GAAiB7B,MAAAA,CAAAA,IAAAA,IAAe,iBAAiB;AAC/C,SAAOslB,kBAAAA,CAAAA,CAAAA,EADwC,WACxCA,CAAP;AADFzjB,CAAAA;;;;;;;;ACNA,IAAI0f,UAAAA,GAAazf,mBAAAA,CAAjB,EAAiBA,CAAjB;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB0f,UAAAA,CAAAA,UAAAA,EAAjB1f,iBAAiB0f,CAAjB1f;;;;;;;;ACFAA,MAAAA,CAAAA,OAAAA,GAAAA,EAAAA;;;;;;ACAa;;AACb,IAAI2c,CAAAA,GAAI1c,mBAAAA,CADR,CACQA,CAAR;;AACA,IAAIurB,yBAAAA,GAA4BvrB,mBAAAA,CAFhC,EAEgCA,CAAhC;;AACA,IAAIwrB,cAAAA,GAAiBxrB,mBAAAA,CAHrB,EAGqBA,CAArB;;AACA,IAAIyrB,cAAAA,GAAiBzrB,mBAAAA,CAJrB,EAIqBA,CAArB;;AACA,IAAI0rB,cAAAA,GAAiB1rB,mBAAAA,CALrB,EAKqBA,CAArB;;AACA,IAAI6c,2BAAAA,GAA8B7c,mBAAAA,CANlC,EAMkCA,CAAlC;;AACA,IAAI8c,QAAAA,GAAW9c,mBAAAA,CAPf,EAOeA,CAAf;;AACA,IAAIof,eAAAA,GAAkBpf,mBAAAA,CARtB,EAQsBA,CAAtB;;AACA,IAAI2gB,OAAAA,GAAU3gB,mBAAAA,CATd,EAScA,CAAd;;AACA,IAAI2pB,SAAAA,GAAY3pB,mBAAAA,CAVhB,EAUgBA,CAAhB;;AACA,IAAI2rB,aAAAA,GAAgB3rB,mBAAAA,CAXpB,EAWoBA,CAApB;;AAEA,IAAI6B,iBAAAA,GAAoB8pB,aAAAA,CAbxB,iBAaA;AACA,IAAIC,sBAAAA,GAAyBD,aAAAA,CAd7B,sBAcA;AACA,IAAIE,QAAAA,GAAWzM,eAAAA,CAff,UAeeA,CAAf;AACA,IAAI0M,IAAAA,GAhBJ,MAgBA;AACA,IAAIC,MAAAA,GAjBJ,QAiBA;AACA,IAAIC,OAAAA,GAlBJ,SAkBA;;AAEA,IAAIC,UAAAA,GAAa,SAAbA,UAAa,GAAY;AAAE,SAAF,IAAE;AApB/B,CAoBA;;AAEAlsB,MAAAA,CAAAA,OAAAA,GAAiB,8EAA8E;AAC7FwrB,EAAAA,yBAAAA,CAAAA,mBAAAA,EAAAA,IAAAA,EAD6F,IAC7FA,CAAAA;;AAEA,MAAIW,kBAAAA,GAAqB,SAArBA,kBAAqB,OAAgB;AACvC,QAAIC,IAAAA,KAAAA,OAAAA,IAAJ,iBAAyC,OADF,eACE;AACzC,QAAI,2BAA2BA,IAAAA,IAA/B,mBAA0D,OAAOC,iBAAAA,CAF1B,IAE0BA,CAAP;;AAC1D;AACE;AAAW,eAAO,gBAAgB;AAAE,iBAAO,8BAAT,IAAS,CAAP;AADtC,SACa;;AACX;AAAa,eAAO,kBAAkB;AAAE,iBAAO,8BAAT,IAAS,CAAP;AAF1C,SAEe;;AACb;AAAc,eAAO,mBAAmB;AAAE,iBAAO,8BAAT,IAAS,CAAP;AAH5C,SAGgB;AAHhB;;AAIE,WAAO,YAAY;AAAE,aAAO,wBAAT,IAAS,CAAP;AAPgB,KAOrC;AAVyF,GAG7F;;AAUA,MAAIC,aAAAA,GAAgBC,IAAAA,GAbyE,WAa7F;AACA,MAAIC,qBAAAA,GAdyF,KAc7F;AACA,MAAIH,iBAAAA,GAAoBI,QAAAA,CAfqE,SAe7F;AACA,MAAIC,cAAAA,GAAiBL,iBAAAA,CAAAA,QAAAA,CAAAA,IAChBA,iBAAAA,CADgBA,YAChBA,CADgBA,IAEhBM,OAAAA,IAAWN,iBAAAA,CAlB6E,OAkB7EA,CAFhB;AAGA,MAAIO,eAAAA,GAAkB,6CAA6CT,kBAAAA,CAnB0B,OAmB1BA,CAAnE;AACA,MAAIU,iBAAAA,GAAoBN,IAAAA,IAAAA,OAAAA,GAAkBF,iBAAAA,CAAAA,OAAAA,IAAlBE,cAAAA,GApBqE,cAoB7F;AACA,yCArB6F,GAqB7F;;AAGA,yBAAuB;AACrBO,IAAAA,wBAAAA,GAA2BrB,cAAAA,CAAeoB,iBAAAA,CAAAA,IAAAA,CAAuB,IAD5C,QAC4C,EAAvBA,CAAfpB,CAA3BqB;;AACA,QAAIhrB,iBAAAA,KAAsB3D,MAAAA,CAAtB2D,SAAAA,IAA0CgrB,wBAAAA,CAA9C,MAA6E;AAC3E,UAAI,YAAYrB,cAAAA,CAAAA,wBAAAA,CAAAA,KAAhB,mBAAgF;AAC9E,4BAAoB;AAClBC,UAAAA,cAAAA,CAAAA,wBAAAA,EADkB,iBAClBA,CAAAA;AADF,eAEO,IAAI,OAAOoB,wBAAAA,CAAP,QAAOA,CAAP,IAAJ,YAA6D;AAClEhQ,UAAAA,2BAAAA,CAAAA,wBAAAA,EAAAA,QAAAA,EADkE,UAClEA,CAAAA;AAJ4E;AADL;;AAS3E6O,MAAAA,cAAAA,CAAAA,wBAAAA,EAAAA,aAAAA,EAAAA,IAAAA,EAT2E,IAS3EA,CAAAA;AACA,mBAAa/B,SAAAA,CAAAA,aAAAA,CAAAA,GAV8D,UAU9DA;AAZM;AAxBsE;;AAyC7F,MAAI+C,OAAAA,IAAAA,MAAAA,IAAAA,cAAAA,IAAuCD,cAAAA,CAAAA,IAAAA,KAA3C,QAA2E;AACzEF,IAAAA,qBAAAA,GADyE,IACzEA;;AACAI,IAAAA,eAAAA,GAAkB,kBAAkB;AAAE,aAAOF,cAAAA,CAAAA,IAAAA,CAAT,IAASA,CAAP;AAFmC,KAEzEE;AA3C2F;;AA+C7F,MAAK,aAAD,MAAC,KAAuBP,iBAAAA,CAAAA,QAAAA,CAAAA,KAA5B,iBAA6E;AAC3EvP,IAAAA,2BAAAA,CAAAA,iBAAAA,EAAAA,QAAAA,EAD2E,eAC3EA,CAAAA;AAhD2F;;AAkD7F8M,EAAAA,SAAAA,CAAAA,IAAAA,CAAAA,GAlD6F,eAkD7FA;;AAGA,eAAa;AACXmD,IAAAA,OAAAA,GAAU;AACR9qB,MAAAA,MAAAA,EAAQkqB,kBAAAA,CADA,MACAA,CADA;AAERpoB,MAAAA,IAAAA,EAAMipB,MAAAA,GAAAA,eAAAA,GAA2Bb,kBAAAA,CAFzB,IAEyBA,CAFzB;AAGRc,MAAAA,OAAAA,EAASd,kBAAAA,CAHD,OAGCA;AAHD,KAAVY;AAKA,gBAAY,qBAAqB;AAC/B,UAAIlB,sBAAAA,IAAAA,qBAAAA,IAAmD,EAAE,OAAzD,iBAAuD,CAAvD,EAAoF;AAClF9O,QAAAA,QAAAA,CAAAA,iBAAAA,EAAAA,GAAAA,EAAiCgQ,OAAAA,CADiD,GACjDA,CAAjChQ,CAAAA;AAF6B;AAAjC,WAIOJ,CAAAA,CAAE;AAAEY,MAAAA,MAAAA,EAAF;AAAgB2P,MAAAA,KAAAA,EAAhB;AAA6BC,MAAAA,MAAAA,EAAQtB,sBAAAA,IAArC;AAAA,KAAFlP,EAVI,OAUJA,CAAAA;AA/DoF;;AAkE7F,SAlE6F,OAkE7F;AAlEF3c,CAAAA;;;;;;ACtBa;;AACb,IAAI8B,iBAAAA,GAAoB7B,yCAAxB;;AACA,IAAIgqB,MAAAA,GAAShqB,mBAAAA,CAFb,EAEaA,CAAb;;AACA,IAAIge,wBAAAA,GAA2Bhe,mBAAAA,CAH/B,EAG+BA,CAA/B;;AACA,IAAI0rB,cAAAA,GAAiB1rB,mBAAAA,CAJrB,EAIqBA,CAArB;;AACA,IAAI2pB,SAAAA,GAAY3pB,mBAAAA,CALhB,EAKgBA,CAAhB;;AAEA,IAAIisB,UAAAA,GAAa,SAAbA,UAAa,GAAY;AAAE,SAAF,IAAE;AAP/B,CAOA;;AAEAlsB,MAAAA,CAAAA,OAAAA,GAAiB,2CAA2C;AAC1D,MAAIssB,aAAAA,GAAgBC,IAAAA,GADsC,WAC1D;AACAa,EAAAA,mBAAAA,CAAAA,SAAAA,GAAgCnD,MAAAA,CAAAA,iBAAAA,EAA0B;AAAEhmB,IAAAA,IAAAA,EAAMga,wBAAAA,CAAAA,CAAAA,EAFR,IAEQA;AAAR,GAA1BgM,CAAhCmD;AACAzB,EAAAA,cAAAA,CAAAA,mBAAAA,EAAAA,aAAAA,EAAAA,KAAAA,EAH0D,IAG1DA,CAAAA;AACA/B,EAAAA,SAAAA,CAAAA,aAAAA,CAAAA,GAJ0D,UAI1DA;AACA,SAL0D,mBAK1D;AALF5pB,CAAAA;;;;;;ACTa;;AACb,IAAIwe,KAAAA,GAAQve,mBAAAA,CADZ,EACYA,CAAZ;;AACA,IAAIwrB,cAAAA,GAAiBxrB,mBAAAA,CAFrB,EAEqBA,CAArB;;AACA,IAAI6c,2BAAAA,GAA8B7c,mBAAAA,CAHlC,EAGkCA,CAAlC;;AACA,IAAIme,GAAAA,GAAMne,mBAAAA,CAJV,EAIUA,CAAV;;AACA,IAAIof,eAAAA,GAAkBpf,mBAAAA,CALtB,EAKsBA,CAAtB;;AACA,IAAI2gB,OAAAA,GAAU3gB,mBAAAA,CANd,EAMcA,CAAd;;AAEA,IAAI6rB,QAAAA,GAAWzM,eAAAA,CARf,UAQeA,CAAf;AACA,IAAIwM,sBAAAA,GATJ,KASA;;AAEA,IAAIK,UAAAA,GAAa,SAAbA,UAAa,GAAY;AAAE,SAAF,IAAE;AAX/B,CAWA;;AAIA,0DAfA,aAeA;;AAGA,IAAI,GAAJ,MAAa;AACXmB,EAAAA,aAAAA,GAAgB,GADL,IACK,EAAhBA;AAEA,MAAI,EAAE,UAAN,aAAI,CAAJ,EAAgCxB,sBAAAA,GAAhC,IAAgCA,CAAhC,KACK;AACHyB,IAAAA,iCAAAA,GAAoC7B,cAAAA,CAAeA,cAAAA,CADhD,aACgDA,CAAfA,CAApC6B;AACA,QAAIA,iCAAAA,KAAsCnvB,MAAAA,CAA1C,WAA4D2D,iBAAAA,GAFzD,iCAEyDA;AANnD;AAlBb;;AA4BA,IAAIyrB,sBAAAA,GAAyBzrB,iBAAAA,IAAAA,SAAAA,IAAkC,MAAM,YAAY;AAC/E,MAAI0rB,IAAAA,GAD2E,EAC/E;AAEA,SAAO1rB,iBAAAA,CAAAA,QAAAA,CAAAA,CAAAA,IAAAA,CAAAA,IAAAA,MAHwE,IAG/E;AA/BF,CA4B+D,CAA/D;AAMA,4BAA4BA,iBAAAA,GAlC5B,EAkC4BA;;AAI5B,IAAK,aAAD,sBAAC,KAAuC,CAACsc,GAAAA,CAAAA,iBAAAA,EAA7C,QAA6CA,CAA7C,EAA+E;AAC7EtB,EAAAA,2BAAAA,CAAAA,iBAAAA,EAAAA,QAAAA,EAD6E,UAC7EA,CAAAA;AAvCF;;AA0CA9c,MAAAA,CAAAA,OAAAA,GAAiB;AACf8B,EAAAA,iBAAAA,EADe;AAEf+pB,EAAAA,sBAAAA,EAFe;AAAA,CAAjB7rB;;;;;;;;AC1CA,IAAIoe,GAAAA,GAAMne,mBAAAA,CAAV,EAAUA,CAAV;;AACA,IAAIghB,QAAAA,GAAWhhB,mBAAAA,CADf,EACeA,CAAf;;AACA,IAAIsiB,SAAAA,GAAYtiB,mBAAAA,CAFhB,EAEgBA,CAAhB;;AACA,IAAIwtB,wBAAAA,GAA2BxtB,mBAAAA,CAH/B,EAG+BA,CAA/B;;AAEA,IAAI0qB,QAAAA,GAAWpI,SAAAA,CALf,UAKeA,CAAf;AACA,IAAImL,eAAAA,GAAkBvvB,MAAAA,CANtB,SAMA;AAKA6B,MAAAA,CAAAA,OAAAA,GAAiBytB,wBAAAA,GAA2BtvB,MAAAA,CAA3BsvB,cAAAA,GAAmD,aAAa;AAC/E1f,EAAAA,CAAAA,GAAIkT,QAAAA,CAD2E,CAC3EA,CAAJlT;AACA,MAAIqQ,GAAAA,CAAAA,CAAAA,EAAJ,QAAIA,CAAJ,EAAsB,OAAOrQ,CAAAA,CAFkD,QAElDA,CAAP;;AACtB,MAAI,OAAOA,CAAAA,CAAP,6BAAsCA,CAAAA,YAAaA,CAAAA,CAAvD,aAAsE;AACpE,WAAOA,CAAAA,CAAAA,WAAAA,CAD6D,SACpE;AAJ6E;;AAK7E,SAAOA,CAAAA,YAAAA,MAAAA,GAAAA,eAAAA,GALsE,IAK7E;AALJ/N,CAAAA;;;;;;;;ACXA,IAAIwe,KAAAA,GAAQve,mBAAAA,CAAZ,EAAYA,CAAZ;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,CAAC,MAAM,YAAY;AAClC,eAAa,CADqB;;AAElCqN,EAAAA,CAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAFkC,IAElCA;AAEA,SAAOlP,MAAAA,CAAAA,cAAAA,CAAsB,IAAtBA,CAAsB,EAAtBA,MAAmCkP,CAAAA,CAJR,SAIlC;AAJFrN,CAAkB,CAAlBA;;;;;;;;ACFA,IAAIqjB,cAAAA,GAAiBpjB,yBAArB;;AACA,IAAIme,GAAAA,GAAMne,mBAAAA,CADV,EACUA,CAAV;;AACA,IAAIof,eAAAA,GAAkBpf,mBAAAA,CAFtB,EAEsBA,CAAtB;;AAEA,IAAIqsB,aAAAA,GAAgBjN,eAAAA,CAJpB,aAIoBA,CAApB;;AAEArf,MAAAA,CAAAA,OAAAA,GAAiB,2BAA2B;AAC1C,MAAI8d,EAAAA,IAAM,CAACM,GAAAA,CAAIN,EAAAA,GAAKR,MAAAA,GAAAA,EAAAA,GAAcQ,EAAAA,CAAvBM,SAAAA,EAAX,aAAWA,CAAX,EAAgE;AAC9DiF,IAAAA,cAAAA,CAAAA,EAAAA,EAAAA,aAAAA,EAAkC;AAAE1iB,MAAAA,YAAAA,EAAF;AAAsBF,MAAAA,KAAAA,EAAtB;AAAA,KAAlC4iB,CAAAA;AAFwC;AAA5CrjB,CAAAA;;;;;;;;ACLA,IAAIyhB,QAAAA,GAAWxhB,mBAAAA,CADf,EACeA,CAAf;;AACA,IAAI0tB,kBAAAA,GAAqB1tB,mBAAAA,CAFzB,EAEyBA,CAAzB;;AAMAD,MAAAA,CAAAA,OAAAA,GAAiB7B,MAAAA,CAAAA,cAAAA,KAA0B,oBAAoB,YAAY;AACzE,MAAIyvB,cAAAA,GADqE,KACzE;AACA,MAAIJ,IAAAA,GAFqE,EAEzE;AACA,MAHyE,MAGzE;;AACA,MAAI;AAEFK,IAAAA,MAAAA,GAAS1vB,MAAAA,CAAAA,wBAAAA,CAAgCA,MAAAA,CAAhCA,SAAAA,EAAAA,WAAAA,EAFP,GAEF0vB;AACAA,IAAAA,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAHE,EAGFA;AACAD,IAAAA,cAAAA,GAAiBJ,IAAAA,YAJf,KAIFI;AAJF,IAKE,cAAc,CATyD;;AAUzE,SAAO,kCAAkC;AACvCnM,IAAAA,QAAAA,CADuC,CACvCA,CAAAA;AACAkM,IAAAA,kBAAAA,CAFuC,KAEvCA,CAAAA;AACA,wBAAoBE,MAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAApB,KAAoBA,EAApB,KACK9f,CAAAA,CAAAA,SAAAA,GAJkC,KAIlCA;AACL,WALuC,CAKvC;AAfuE,GAUzE;AAVyC,CAAoB,EAApB,GAA3C/N,SAAiB7B,CAAjB6B;;;;;;;;ACRA,IAAImf,QAAAA,GAAWlf,mBAAAA,CAAf,EAAeA,CAAf;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,cAAc;AAC7B,MAAI,CAACmf,QAAAA,CAAD,EAACA,CAAD,IAAiBrB,EAAAA,KAArB,MAAkC;AAChC,UAAMkB,SAAAA,CAAU,eAAe/G,MAAAA,CAAf,EAAeA,CAAf,GADgB,iBAC1B+G,CAAN;AAF2B;;AAG3B,SAH2B,EAG3B;AAHJhf,CAAAA;;;;;;;;ACFA,IAAI2c,CAAAA,GAAI1c,mBAAAA,CAAR,CAAQA,CAAR;;AACA,IAAI6tB,OAAAA,GAAU7tB,mBAAAA,CADd,EACcA,CAAd;;AACA,IAAI8tB,cAAAA,GAAiB9tB,mBAAAA,CAFrB,EAEqBA,CAArB;;AAIA0c,CAAAA,CAAE;AAAEY,EAAAA,MAAAA,EAAF;AAAoByQ,EAAAA,IAAAA,EAApB;AAAA,CAAFrR,EAAoC;AAClCsR,EAAAA,WAAAA,EAAa,+BAA+B;AAC1C,QAAIptB,GAAAA,GADsC,EAC1C;AACAitB,IAAAA,OAAAA,CAAAA,QAAAA,EAAkB,gBAAgB;AAChCC,MAAAA,cAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EADgC,CAChCA,CAAAA;AADFD,KAAAA,EAEG;AAAEI,MAAAA,UAAAA,EAJqC;AAIvC,KAFHJ,CAAAA;AAGA,WAL0C,GAK1C;AANgC;AAAA,CAApCnR,CAAAA;;;;;;;;;;ACNA,IAAI8E,QAAAA,GAAWxhB,mBAAAA,CAAf,EAAeA,CAAf;;AACA,IAAIkuB,qBAAAA,GAAwBluB,mBAAAA,CAD5B,EAC4BA,CAA5B;;AACA,IAAI4jB,QAAAA,GAAW5jB,mBAAAA,CAFf,EAEeA,CAAf;;AACA,IAAImuB,IAAAA,GAAOnuB,mBAAAA,CAHX,EAGWA,CAAX;;AACA,IAAIouB,WAAAA,GAAcpuB,mBAAAA,CAJlB,EAIkBA,CAAlB;;AACA,IAAIquB,iBAAAA,GAAoBruB,mBAAAA,CALxB,EAKwBA,CAAxB;;AACA,IAAIsuB,aAAAA,GAAgBtuB,mBAAAA,CANpB,EAMoBA,CAApB;;AAEA,IAAIuuB,MAAAA,GAAS,SAATA,MAAS,kBAA2B;AACtC,iBADsC,OACtC;AACA,gBAFsC,MAEtC;AAVF,CAQA;;AAKAxuB,MAAAA,CAAAA,OAAAA,GAAiB,8CAA8C;AAC7D,MAAIyuB,IAAAA,GAAOrR,OAAAA,IAAWA,OAAAA,CADuC,IAC7D;AACA,MAAI8Q,UAAAA,GAAa,CAAC,EAAE,WAAW9Q,OAAAA,CAF8B,UAE3C,CAAlB;AACA,MAAIsR,WAAAA,GAAc,CAAC,EAAE,WAAWtR,OAAAA,CAH6B,WAG1C,CAAnB;AACA,MAAIuR,WAAAA,GAAc,CAAC,EAAE,WAAWvR,OAAAA,CAJ6B,WAI1C,CAAnB;AACA,MAAI5b,EAAAA,GAAK4sB,IAAAA,CAAAA,eAAAA,EAAAA,IAAAA,EAA4B,iBALwB,WAKpDA,CAAT;AACA,qDAN6D,IAM7D;;AAEA,MAAI7pB,IAAAA,GAAO,SAAPA,IAAO,YAAqB;AAC9B,kBAAcgqB,aAAAA,CAAAA,QAAAA,EAAAA,QAAAA,EADgB,SAChBA,CAAAA;AACd,WAAO,iBAFuB,SAEvB,CAAP;AAV2D,GAQ7D;;AAKA,MAAIK,MAAAA,GAAS,SAATA,MAAS,QAAiB;AAC5B,oBAAgB;AACdnN,MAAAA,QAAAA,CADc,KACdA,CAAAA;AACA,aAAOkN,WAAAA,GAAcntB,EAAAA,CAAGf,KAAAA,CAAHe,CAAGf,CAAHe,EAAaf,KAAAA,CAAbe,CAAaf,CAAbe,EAAdmtB,IAAcntB,CAAdmtB,GAA6CntB,EAAAA,CAAGf,KAAAA,CAAHe,CAAGf,CAAHe,EAAaf,KAAAA,CAFnD,CAEmDA,CAAbe,CAApD;AAH0B;;AAI1B,WAAOmtB,WAAAA,GAAcntB,EAAAA,CAAAA,KAAAA,EAAdmtB,IAAcntB,CAAdmtB,GAAgCntB,EAAAA,CAJb,KAIaA,CAAvC;AAjByD,GAa7D;;AAOA,mBAAiB;AACf6D,IAAAA,QAAAA,GADe,QACfA;AADF,SAEO;AACLwpB,IAAAA,MAAAA,GAASP,iBAAAA,CADJ,QACIA,CAATO;AACA,QAAI,iBAAJ,YAAiC,MAAM7P,SAAAA,CAFlC,wBAEkCA,CAAN;;AAEjC,QAAImP,qBAAAA,CAAJ,MAAIA,CAAJ,EAAmC;AACjC,WAAKnK,KAAAA,GAAAA,CAAAA,EAAWjM,MAAAA,GAAS8L,QAAAA,CAAS1f,QAAAA,CAAlC,MAAyB0f,CAAzB,EAAoD9L,MAAAA,GAApD,OAAoEiM,KAApE,IAA6E;AAC3ErhB,QAAAA,MAAAA,GAASisB,MAAAA,CAAOzqB,QAAAA,CAD2D,KAC3DA,CAAPyqB,CAATjsB;AACA,YAAIA,MAAAA,IAAUA,MAAAA,YAAd,QAAwC,OAFmC,MAEnC;AAHT;;AAI/B,aAAO,WAJwB,KAIxB,CAAP;AARC;;AAUL0C,IAAAA,QAAAA,GAAWgpB,WAAAA,CAAAA,QAAAA,EAVN,MAUMA,CAAXhpB;AAhC2D;;AAmC7DpB,EAAAA,IAAAA,GAAOoB,QAAAA,CAnCsD,IAmC7DpB;;AACA,SAAO,CAAE,QAAOA,IAAAA,CAAAA,IAAAA,CAAR,QAAQA,CAAP,EAAT,MAA2C;AACzC,QAAI;AACFtB,MAAAA,MAAAA,GAASisB,MAAAA,CAAOE,IAAAA,CADd,KACOF,CAATjsB;AADF,MAEE,cAAc;AACd4rB,MAAAA,aAAAA,CAAAA,QAAAA,EAAAA,OAAAA,EADc,KACdA,CAAAA;AAJuC;;AAMzC,QAAI,yCAAuC5rB,MAAAA,YAA3C,QAAqE,OAN5B,MAM4B;AA1CV;;AA2C3D,SAAO,WA3CoD,KA2CpD,CAAP;AA3CJ3C,CAAAA;;;;;;;;ACbA,IAAIqf,eAAAA,GAAkBpf,mBAAAA,CAAtB,EAAsBA,CAAtB;;AACA,IAAI2pB,SAAAA,GAAY3pB,mBAAAA,CADhB,EACgBA,CAAhB;;AAEA,IAAI6rB,QAAAA,GAAWzM,eAAAA,CAHf,UAGeA,CAAf;AACA,IAAI8K,cAAAA,GAAiBhR,KAAAA,CAJrB,SAIA;;AAGAnZ,MAAAA,CAAAA,OAAAA,GAAiB,cAAc;AAC7B,SAAO8d,EAAAA,KAAAA,SAAAA,KAAqB,0BAA0BqM,cAAAA,CAAAA,QAAAA,CAAAA,KADzB,EACtBrM,CAAP;AADF9d,CAAAA;;;;;;;;ACPA,IAAI4f,SAAAA,GAAY3f,mBAAAA,CAAhB,EAAgBA,CAAhB;;AAGAD,MAAAA,CAAAA,OAAAA,GAAiB,4BAA4B;AAC3C4f,EAAAA,SAAAA,CAD2C,EAC3CA,CAAAA;AACA,MAAI6O,IAAAA,KAAJ,WAAwB,OAFmB,EAEnB;;AACxB;AACE;AAAQ,aAAO,YAAY;AACzB,eAAOjtB,EAAAA,CAAAA,IAAAA,CADkB,IAClBA,CAAP;AAFJ,OACU;;AAGR;AAAQ,aAAO,aAAa;AAC1B,eAAOA,EAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EADmB,CACnBA,CAAP;AALJ,OAIU;;AAGR;AAAQ,aAAO,gBAAgB;AAC7B,eAAOA,EAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EADsB,CACtBA,CAAP;AARJ,OAOU;;AAGR;AAAQ,aAAO,mBAAmB;AAChC,eAAOA,EAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EADyB,CACzBA,CAAP;AAXJ,OAUU;AAVV;;AAcA,SAAO,YAAyB;AAC9B,WAAOA,EAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EADuB,SACvBA,CAAP;AAlByC,GAiB3C;AAjBFxB,CAAAA;;;;;;;;ACHAA,MAAAA,CAAAA,OAAAA,GAAiB,cAAc;AAC7B,MAAI,aAAJ,YAA6B;AAC3B,UAAMgf,SAAAA,CAAU/G,MAAAA,CAAAA,EAAAA,CAAAA,GADW,oBACrB+G,CAAN;AAF2B;;AAG3B,SAH2B,EAG3B;AAHJhf,CAAAA;;;;;;;;ACAA,IAAIyhB,QAAAA,GAAWxhB,mBAAAA,CAAf,EAAeA,CAAf;;AACA,IAAIquB,iBAAAA,GAAoBruB,mBAAAA,CADxB,EACwBA,CAAxB;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,6BAA6B;AAC5C,MAAIkE,cAAAA,GAAiB2b,SAAAA,CAAAA,MAAAA,GAAAA,CAAAA,GAAuByO,iBAAAA,CAAvBzO,EAAuByO,CAAvBzO,GADuB,aAC5C;;AACA,MAAI,yBAAJ,YAAyC;AACvC,UAAMb,SAAAA,CAAU/G,MAAAA,CAAAA,EAAAA,CAAAA,GADuB,kBACjC+G,CAAN;AAH0C;;AAI1C,SAAOyC,QAAAA,CAASvd,cAAAA,CAAAA,IAAAA,CAJ0B,EAI1BA,CAATud,CAAP;AAJJzhB,CAAAA;;;;;;;;ACHA,IAAI8e,OAAAA,GAAU7e,mBAAAA,CAAd,EAAcA,CAAd;;AACA,IAAI2pB,SAAAA,GAAY3pB,mBAAAA,CADhB,EACgBA,CAAhB;;AACA,IAAIof,eAAAA,GAAkBpf,mBAAAA,CAFtB,EAEsBA,CAAtB;;AAEA,IAAI6rB,QAAAA,GAAWzM,eAAAA,CAJf,UAIeA,CAAf;;AAEArf,MAAAA,CAAAA,OAAAA,GAAiB,cAAc;AAC7B,MAAI8d,EAAAA,IAAJ,WAAqB,OAAOA,EAAAA,CAAAA,QAAAA,CAAAA,IACvBA,EAAAA,CADuBA,YACvBA,CADuBA,IAEvB8L,SAAAA,CAAU9K,OAAAA,CAHc,EAGdA,CAAV8K,CAFgB;AADvB5pB,CAAAA;;;;;;;;ACNA,IAAI+uB,qBAAAA,GAAwB9uB,mBAAAA,CAA5B,EAA4BA,CAA5B;;AACA,IAAI+uB,UAAAA,GAAa/uB,mBAAAA,CADjB,EACiBA,CAAjB;;AACA,IAAIof,eAAAA,GAAkBpf,mBAAAA,CAFtB,EAEsBA,CAAtB;;AAEA,IAAIqsB,aAAAA,GAAgBjN,eAAAA,CAJpB,aAIoBA,CAApB;AAEA,IAAI4P,iBAAAA,GAAoB,WAAW,YAAY;AAAE,SAAF,SAAE;AAAzB,CAAW,EAAX,KANxB,WAMA;;AAGA,IAAIC,MAAAA,GAAS,SAATA,MAAS,UAAmB;AAC9B,MAAI;AACF,WAAOpR,EAAAA,CADL,GACKA,CAAP;AADF,IAEE,cAAc,CAHc;AAThC,CASA;;AAOA9d,MAAAA,CAAAA,OAAAA,GAAiB+uB,qBAAAA,GAAAA,UAAAA,GAAqC,cAAc;AAClE,cADkE,MAClE;AACA,SAAOjR,EAAAA,KAAAA,SAAAA,GAAAA,WAAAA,GAAiCA,EAAAA,KAAAA,IAAAA,GAAAA,MAAAA,GAEpC,QAAQ,MAAMoR,MAAAA,CAAOnhB,CAAAA,GAAI5P,MAAAA,CAAX+wB,EAAW/wB,CAAX+wB,EAAd,aAAcA,CAAd,sBAEAD,iBAAAA,GAAoBD,UAAAA,CAApBC,CAAoBD,CAApBC,GAEC,UAASD,UAAAA,CAAV,CAAUA,CAAT,KAAD,QAAC,IAAuC,OAAOjhB,CAAAA,CAAP,UAAxC,UAAC,GAAD,WAAC,GAR6D,MAElE;AAFF/N,CAAAA;;;;;;;;AChBA,IAAIqf,eAAAA,GAAkBpf,mBAAAA,CAAtB,EAAsBA,CAAtB;;AAEA,IAAIqsB,aAAAA,GAAgBjN,eAAAA,CAFpB,aAEoBA,CAApB;AACA,IAAImO,IAAAA,GAHJ,EAGA;AAEAA,IAAAA,CAAAA,aAAAA,CAAAA,GALA,GAKAA;AAEAxtB,MAAAA,CAAAA,OAAAA,GAAiBiY,MAAAA,CAAAA,IAAAA,CAAAA,KAAjBjY,YAAAA;;;;;;;;ACPA,IAAIyhB,QAAAA,GAAWxhB,mBAAAA,CAAf,EAAeA,CAAf;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,iCAAiC;AAChD,mBADgD,UAChD;AACAyhB,EAAAA,QAAAA,CAFgD,QAEhDA,CAAAA;;AACA,MAAI;AACF0N,IAAAA,WAAAA,GAAc9pB,QAAAA,CADZ,QACYA,CAAd8pB;;AACA,QAAIA,WAAAA,KAAJ,WAA+B;AAC7B,UAAInF,IAAAA,KAAJ,SAAsB,MADO,KACP;AACtB,aAF6B,KAE7B;AAJA;;AAMFmF,IAAAA,WAAAA,GAAcA,WAAAA,CAAAA,IAAAA,CANZ,QAMYA,CAAdA;AANF,IAOE,cAAc;AACdC,IAAAA,UAAAA,GADc,IACdA;AACAD,IAAAA,WAAAA,GAFc,KAEdA;AAZ8C;;AAchD,MAAInF,IAAAA,KAAJ,SAAsB,MAd0B,KAc1B;AACtB,kBAAgB,MAfgC,WAehC;AAChBvI,EAAAA,QAAAA,CAhBgD,WAgBhDA,CAAAA;AACA,SAjBgD,KAiBhD;AAjBFzhB,CAAAA;;;;;;ACFa;;AACb,IAAIme,aAAAA,GAAgBle,mBAAAA,CADpB,EACoBA,CAApB;;AACA,IAAIshB,oBAAAA,GAAuBthB,mBAAAA,CAF3B,EAE2BA,CAA3B;;AACA,IAAIge,wBAAAA,GAA2Bhe,mBAAAA,CAH/B,EAG+BA,CAA/B;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,8BAA8B;AAC7C,MAAIqvB,WAAAA,GAAclR,aAAAA,CAD2B,GAC3BA,CAAlB;AACA,MAAIkR,WAAAA,IAAJ,QAA2B9N,oBAAAA,CAAAA,CAAAA,CAAAA,MAAAA,EAAAA,WAAAA,EAA4CtD,wBAAAA,CAAAA,CAAAA,EAAvE,KAAuEA,CAA5CsD,EAA3B,KACKC,MAAAA,CAAAA,WAAAA,CAAAA,GAHwC,KAGxCA;AAHPxhB,CAAAA;;;;;;;;ACLA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AAEAD,MAAAA,CAAAA,OAAAA,GAAAA,MAAAA;;;;;;;;ACFAC,mBAAAA,CAAAA,EAAAA,CAAAA;;AACAA,mBAAAA,CADAA,EACAA,CAAAA;;AACAA,mBAAAA,CAFAA,EAEAA,CAAAA;;AACAA,mBAAAA,CAHAA,EAGAA,CAAAA;;AACAA,mBAAAA,CAJAA,GAIAA,CAAAA;;AACAA,mBAAAA,CALAA,GAKAA,CAAAA;;AACAA,mBAAAA,CANAA,GAMAA,CAAAA;;AACAA,mBAAAA,CAPAA,GAOAA,CAAAA;;AACA,IAAIypB,IAAAA,GAAOzpB,mBAAAA,CARXA,EAQWA,CAAX;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB0pB,IAAAA,CAAjB1pB,OAAAA;;;;;;ACVa;;AACb,IAAI2c,CAAAA,GAAI1c,mBAAAA,CADR,CACQA,CAAR;;AACA,IAAIwrB,cAAAA,GAAiBxrB,mBAAAA,CAFrB,EAEqBA,CAArB;;AACA,IAAIyrB,cAAAA,GAAiBzrB,mBAAAA,CAHrB,EAGqBA,CAArB;;AACA,IAAIgqB,MAAAA,GAAShqB,mBAAAA,CAJb,EAIaA,CAAb;;AACA,IAAI6c,2BAAAA,GAA8B7c,mBAAAA,CALlC,EAKkCA,CAAlC;;AACA,IAAIge,wBAAAA,GAA2Bhe,mBAAAA,CAN/B,EAM+BA,CAA/B;;AACA,IAAI6tB,OAAAA,GAAU7tB,mBAAAA,CAPd,EAOcA,CAAd;;AACA,IAAIxB,QAAAA,GAAWwB,mBAAAA,CARf,EAQeA,CAAf;;AAEA,IAAIqvB,eAAAA,GAAkB,yCAAyC;AAC7D,MAAIb,IAAAA,GADyD,IAC7D;AACA,MAAI,EAAE,gBAAN,eAAI,CAAJ,EAAwC,OAAO,4BAFc,OAEd,CAAP;;AACxC,sBAAoB;AAElBA,IAAAA,IAAAA,GAAO/C,cAAAA,CAAe,UAAfA,SAAe,CAAfA,EAAqCD,cAAAA,CAF1B,IAE0BA,CAArCC,CAAP+C;AAL2D;;AAO7D,MAAIc,OAAAA,KAAJ,WAA2BzS,2BAAAA,CAAAA,IAAAA,EAAAA,SAAAA,EAA6Cre,QAAAA,CAPX,OAOWA,CAA7Cqe,CAAAA;AAC3B,MAAI0S,WAAAA,GARyD,EAQ7D;AACA1B,EAAAA,OAAAA,CAAAA,MAAAA,EAAgB0B,WAAAA,CAAhB1B,IAAAA,EAAkC;AAAEW,IAAAA,IAAAA,EATyB;AAS3B,GAAlCX,CAAAA;AACAhR,EAAAA,2BAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAV6D,WAU7DA,CAAAA;AACA,SAX6D,IAW7D;AArBF,CAUA;;AAcAwS,eAAAA,CAAAA,SAAAA,GAA4B,OAAOG,KAAAA,CAAP,WAAwB;AAClD71B,EAAAA,WAAAA,EAAaqkB,wBAAAA,CAAAA,CAAAA,EADqC,eACrCA,CADqC;AAElDsR,EAAAA,OAAAA,EAAStR,wBAAAA,CAAAA,CAAAA,EAFyC,EAEzCA,CAFyC;AAGlD5f,EAAAA,IAAAA,EAAM4f,wBAAAA,CAAAA,CAAAA,EAH4C,gBAG5CA;AAH4C,CAAxB,CAA5BqR;AAQA3S,CAAAA,CAAE;AAAEC,EAAAA,MAAAA,EAAJD;AAAE,CAAFA,EAAoB;AAClB+S,EAAAA,cAAAA,EADF/S;AAAoB,CAApBA,CAAAA;;;;;;;;AChCA,IAAIuC,QAAAA,GAAWjf,mBAAAA,CAAf,EAAeA,CAAf;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,oBAAoB;AACnC,MAAIkf,QAAAA,CAAJ,QAAIA,CAAJ,EAAwB,MAAMF,SAAAA,CADK,2CACLA,CAAN;AACxB,SAAO/G,MAAAA,CAF4B,QAE5BA,CAAP;AAFFjY,CAAAA;;;;;;;;ACFA,IAAI+uB,qBAAAA,GAAwB9uB,mBAAAA,CAA5B,EAA4BA,CAA5B;;AACA,IAAI8c,QAAAA,GAAW9c,mBAAAA,CADf,EACeA,CAAf;;AACA,IAAIxB,QAAAA,GAAWwB,mBAAAA,CAFf,EAEeA,CAAf;;AAIA,IAAI,CAAJ,uBAA4B;AAC1B8c,EAAAA,QAAAA,CAAS5e,MAAAA,CAAT4e,SAAAA,EAAAA,UAAAA,EAAAA,QAAAA,EAAiD;AAAEkF,IAAAA,MAAAA,EADzB;AACuB,GAAjDlF,CAAAA;AAD0B;;;;;;ACNf;;AACb,IAAIgS,qBAAAA,GAAwB9uB,mBAAAA,CAD5B,EAC4BA,CAA5B;;AACA,IAAI6e,OAAAA,GAAU7e,mBAAAA,CAFd,EAEcA,CAAd;;AAIAD,MAAAA,CAAAA,OAAAA,GAAiB+uB,qBAAAA,GAAwB,GAAxBA,QAAAA,GAAsC,oBAAoB;AACzE,SAAO,aAAajQ,OAAAA,CAAb,IAAaA,CAAb,GADkE,GACzE;AADF9e,CAAAA;;;;;;ACNa;;AACb,IAAI2c,CAAAA,GAAI1c,mBAAAA,CADR,CACQA,CAAR;;AACA,IAAI2gB,OAAAA,GAAU3gB,mBAAAA,CAFd,EAEcA,CAAd;;AACA,IAAI2c,MAAAA,GAAS3c,mBAAAA,CAHb,EAGaA,CAAb;;AACA,IAAIyf,UAAAA,GAAazf,mBAAAA,CAJjB,EAIiBA,CAAjB;;AACA,IAAI0vB,aAAAA,GAAgB1vB,mBAAAA,CALpB,EAKoBA,CAApB;;AACA,IAAI8c,QAAAA,GAAW9c,mBAAAA,CANf,EAMeA,CAAf;;AACA,IAAI2vB,WAAAA,GAAc3vB,mBAAAA,CAPlB,EAOkBA,CAAlB;;AACA,IAAIyrB,cAAAA,GAAiBzrB,mBAAAA,CARrB,EAQqBA,CAArB;;AACA,IAAI0rB,cAAAA,GAAiB1rB,mBAAAA,CATrB,EASqBA,CAArB;;AACA,IAAI4vB,UAAAA,GAAa5vB,mBAAAA,CAVjB,EAUiBA,CAAjB;;AACA,IAAIkf,QAAAA,GAAWlf,mBAAAA,CAXf,EAWeA,CAAf;;AACA,IAAI2f,SAAAA,GAAY3f,mBAAAA,CAZhB,EAYgBA,CAAhB;;AACA,IAAI6vB,UAAAA,GAAa7vB,mBAAAA,CAbjB,EAaiBA,CAAjB;;AACA,IAAI2hB,aAAAA,GAAgB3hB,mBAAAA,CAdpB,EAcoBA,CAApB;;AACA,IAAI6tB,OAAAA,GAAU7tB,mBAAAA,CAfd,EAecA,CAAd;;AACA,IAAI8vB,2BAAAA,GAA8B9vB,mBAAAA,CAhBlC,EAgBkCA,CAAlC;;AACA,IAAI+vB,kBAAAA,GAAqB/vB,mBAAAA,CAjBzB,GAiByBA,CAAzB;;AACA,IAAIgwB,IAAAA,GAAOhwB,4BAAX;;AACA,IAAIiwB,SAAAA,GAAYjwB,mBAAAA,CAnBhB,GAmBgBA,CAAhB;;AACA,IAAIkwB,cAAAA,GAAiBlwB,mBAAAA,CApBrB,GAoBqBA,CAArB;;AACA,IAAImwB,gBAAAA,GAAmBnwB,mBAAAA,CArBvB,GAqBuBA,CAAvB;;AACA,IAAIowB,0BAAAA,GAA6BpwB,mBAAAA,CAtBjC,GAsBiCA,CAAjC;;AACA,IAAIqwB,OAAAA,GAAUrwB,mBAAAA,CAvBd,GAuBcA,CAAd;;AACA,IAAI4hB,mBAAAA,GAAsB5hB,mBAAAA,CAxB1B,EAwB0BA,CAA1B;;AACA,IAAIid,QAAAA,GAAWjd,mBAAAA,CAzBf,EAyBeA,CAAf;;AACA,IAAIof,eAAAA,GAAkBpf,mBAAAA,CA1BtB,EA0BsBA,CAAtB;;AACA,IAAIswB,UAAAA,GAAatwB,mBAAAA,CA3BjB,GA2BiBA,CAAjB;;AACA,IAAIuwB,OAAAA,GAAUvwB,mBAAAA,CA5Bd,GA4BcA,CAAd;;AACA,IAAI+f,UAAAA,GAAa/f,mBAAAA,CA7BjB,EA6BiBA,CAAjB;;AAEA,IAAIwwB,OAAAA,GAAUpR,eAAAA,CA/Bd,SA+BcA,CAAd;AACA,IAAIqR,OAAAA,GAhCJ,SAgCA;AACA,IAAI5O,gBAAAA,GAAmBD,mBAAAA,CAjCvB,GAiCA;AACA,IAAIkI,gBAAAA,GAAmBlI,mBAAAA,CAlCvB,GAkCA;AACA,IAAI8O,uBAAAA,GAA0B9O,mBAAAA,CAAAA,SAAAA,CAnC9B,OAmC8BA,CAA9B;AACA,IAAI+O,sBAAAA,GAAyBjB,aAAAA,IAAiBA,aAAAA,CApC9C,SAoCA;AACA,IAAIkB,kBAAAA,GArCJ,aAqCA;AACA,IAAIC,2BAAAA,GAtCJ,sBAsCA;AACA,IAAI9R,SAAAA,GAAYpC,MAAAA,CAvChB,SAuCA;AACA,IAAIziB,QAAAA,GAAWyiB,MAAAA,CAxCf,QAwCA;AACA,IAAIF,OAAAA,GAAUE,MAAAA,CAzCd,OAyCA;AACA,IAAImU,oBAAAA,GAAuBV,0BAAAA,CA1C3B,CA0CA;AACA,IAAIW,2BAAAA,GA3CJ,oBA2CA;AACA,IAAIC,cAAAA,GAAiB,CAAC,EAAE,YAAY92B,QAAAA,CAAZ,eAAoCyiB,MAAAA,CA5C5D,aA4CsB,CAAtB;AACA,IAAIsU,sBAAAA,GAAyB,gCA7C7B,UA6CA;AACA,IAAIC,mBAAAA,GA9CJ,oBA8CA;AACA,IAAIC,iBAAAA,GA/CJ,kBA+CA;AACA,IAAIC,OAAAA,GAhDJ,CAgDA;AACA,IAAIC,SAAAA,GAjDJ,CAiDA;AACA,IAAIpnB,QAAAA,GAlDJ,CAkDA;AACA,IAAIqnB,OAAAA,GAnDJ,CAmDA;AACA,IAAIC,SAAAA,GApDJ,CAoDA;AACA,IAAIC,WAAAA,GArDJ,KAqDA;AACA,oDAtDA,UAsDA;AAEA,IAAI7T,MAAAA,GAAS,kBAAkB,YAAY;AACzC,MAAI8T,0BAAAA,GAA6B9P,aAAAA,CADQ,kBACRA,CAAjC;AACA,MAAI+P,sBAAAA,GAAyBD,0BAAAA,KAA+BzZ,MAAAA,CAFnB,kBAEmBA,CAA5D;AAIA,MAAI,2BAA2B+H,UAAAA,KAA/B,IAAkD,OANT,IAMS;AAElD,MAAIY,OAAAA,IAAW,CAACkQ,2BAAAA,CAAhB,SAAgBA,CAAhB,EAAwD,OARf,IAQe;AAIxD,MAAI9Q,UAAAA,IAAAA,EAAAA,IAAoB,mBAAxB,0BAAwB,CAAxB,EAAwE,OAZ/B,KAY+B;AAExE,MAAI4R,OAAAA,GAAU,uBAAuB,mBAAmB;AAAEl3B,IAAAA,OAAAA,CAAF,CAAEA,CAAAA;AAdjB,GAc3B,CAAd;;AACA,MAAIm3B,WAAAA,GAAc,SAAdA,WAAc,OAAgB;AAChCpT,IAAAA,IAAAA,CAAK,YAAY,CAAjBA,CAAAA,EAAkC,YAAY,CADd,CAChCA,CAAAA;AAhBuC,GAezC;;AAGA,MAAI7kB,WAAAA,GAAcg4B,OAAAA,CAAAA,WAAAA,GAlBuB,EAkBzC;AACAh4B,EAAAA,WAAAA,CAAAA,OAAAA,CAAAA,GAnByC,WAmBzCA;AACA63B,EAAAA,WAAAA,GAAc,aAAa,YAAY,CAAzB,cApB2B,WAoBzCA;AACA,MAAI,CAAJ,aAAkB,OArBuB,IAqBvB;AAElB,SAAO,yCAAyC,CAvBP,sBAuBzC;AA/EF,CAwDa,CAAb;AA0BA,IAAIK,mBAAAA,GAAsBlU,MAAAA,IAAU,CAAC,4BAA4B,oBAAoB;AACnFiT,EAAAA,kBAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAAAA,OAAAA,EAA0C,YAAY,CAD6B,CACnFA;AAnFF,CAkFqC,CAArC;;AAKA,IAAIkB,UAAAA,GAAa,SAAbA,UAAa,KAAc;AAC7B,MAD6B,IAC7B;AACA,SAAO5S,QAAAA,CAAAA,EAAAA,CAAAA,IAAgB,QAAQ,OAAOrB,EAAAA,CAAf,SAAhBqB,UAAAA,GAAAA,IAAAA,GAFsB,KAE7B;AAzFF,CAuFA;;AAKA,IAAI6S,MAAAA,GAAS,SAATA,MAAS,kBAA2B;AACtC,MAAI5uB,KAAAA,CAAJ,UADsC;AAEtCA,EAAAA,KAAAA,CAAAA,QAAAA,GAFsC,IAEtCA;AACA,MAAI6uB,KAAAA,GAAQ7uB,KAAAA,CAH0B,SAGtC;AACA8sB,EAAAA,SAAAA,CAAU,YAAY;AACpB,QAAIzvB,KAAAA,GAAQ2C,KAAAA,CADQ,KACpB;AACA,QAAI8uB,EAAAA,GAAK9uB,KAAAA,CAAAA,KAAAA,IAFW,SAEpB;AACA,QAAI4gB,KAAAA,GAHgB,CAGpB;;AAEA,WAAOiO,KAAAA,CAAAA,MAAAA,GAAP,OAA6B;AAC3B,UAAIE,QAAAA,GAAWF,KAAAA,CAAMjO,KADM,EACZiO,CAAf;AACA,UAAIG,OAAAA,GAAUF,EAAAA,GAAKC,QAAAA,CAALD,EAAAA,GAAmBC,QAAAA,CAFN,IAE3B;AACA,UAAIz3B,OAAAA,GAAUy3B,QAAAA,CAHa,OAG3B;AACA,UAAIx3B,MAAAA,GAASw3B,QAAAA,CAJc,MAI3B;AACA,UAAIE,MAAAA,GAASF,QAAAA,CALc,MAK3B;AACA,wBAN2B,MAM3B;;AACA,UAAI;AACF,qBAAa;AACX,cAAI,CAAJ,IAAS;AACP,gBAAI/uB,KAAAA,CAAAA,SAAAA,KAAJ,WAAmCkvB,iBAAAA,CAD5B,KAC4BA,CAAAA;AACnClvB,YAAAA,KAAAA,CAAAA,SAAAA,GAFO,OAEPA;AAHS;;AAKX,cAAIgvB,OAAAA,KAAJ,MAAsBzvB,MAAAA,GAAtB,KAAsBA,CAAtB,KACK;AACH,wBAAY0vB,MAAAA,CADT,KACSA;AACZ1vB,YAAAA,MAAAA,GAASyvB,OAAAA,CAFN,KAEMA,CAATzvB;;AACA,wBAAY;AACV0vB,cAAAA,MAAAA,CADU,IACVA;AACAE,cAAAA,MAAAA,GAFU,IAEVA;AALC;AANM;;AAcX,cAAI5vB,MAAAA,KAAWwvB,QAAAA,CAAf,SAAiC;AAC/Bx3B,YAAAA,MAAAA,CAAOqkB,SAAAA,CADwB,qBACxBA,CAAPrkB,CAAAA;AADF,iBAEO,IAAI63B,IAAAA,GAAOT,UAAAA,CAAX,MAAWA,CAAX,EAA+B;AACpCS,YAAAA,IAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAAA,OAAAA,EADoC,MACpCA;AADK,iBAEA93B,OAAAA,CAlBI,MAkBJA,CAAAA;AAlBT,eAmBOC,MAAAA,CApBL,KAoBKA,CAAAA;AApBT,QAqBE,cAAc;AACd,YAAI03B,MAAAA,IAAU,CAAd,QAAuBA,MAAAA,CADT,IACSA;AACvB13B,QAAAA,MAAAA,CAFc,KAEdA,CAAAA;AA9ByB;AALT;;AAsCpByI,IAAAA,KAAAA,CAAAA,SAAAA,GAtCoB,EAsCpBA;AACAA,IAAAA,KAAAA,CAAAA,QAAAA,GAvCoB,KAuCpBA;AACA,QAAIqvB,QAAAA,IAAY,CAACrvB,KAAAA,CAAjB,WAAkCsvB,WAAAA,CAxCd,KAwCcA,CAAAA;AA5CE,GAItCxC,CAAAA;AAhGF,CA4FA;;AAgDA,IAAIyC,aAAAA,GAAgB,SAAhBA,aAAgB,wBAAiC;AACnD,aADmD,OACnD;;AACA,sBAAoB;AAClBC,IAAAA,KAAAA,GAAQz4B,QAAAA,CAAAA,WAAAA,CADU,OACVA,CAARy4B;AACAA,IAAAA,KAAAA,CAAAA,OAAAA,GAFkB,OAElBA;AACAA,IAAAA,KAAAA,CAAAA,MAAAA,GAHkB,MAGlBA;AACAA,IAAAA,KAAAA,CAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAJkB,IAIlBA;AACAhW,IAAAA,MAAAA,CAAAA,aAAAA,CALkB,KAKlBA;AALF,SAMOgW,KAAAA,GAAQ;AAAEhB,IAAAA,OAAAA,EAAF;AAAoBiB,IAAAA,MAAAA,EAApB;AAAA,GAARD;;AACP,MAAI,4BAA4B,UAAUhW,MAAAA,CAAO,OAAjD,IAA0CA,CAAtC,CAAJ,EAAgEwV,OAAAA,CAAhE,KAAgEA,CAAAA,CAAhE,KACK,IAAI/zB,IAAAA,KAAJ,qBAAkC+xB,gBAAAA,CAAAA,6BAAAA,EAVY,MAUZA,CAAAA;AAtJzC,CA4IA;;AAaA,IAAIsC,WAAAA,GAAc,SAAdA,WAAc,QAAiB;AACjCzC,EAAAA,IAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAkB,YAAY;AAC5B,QAAI2B,OAAAA,GAAUxuB,KAAAA,CADc,MAC5B;AACA,QAAI3C,KAAAA,GAAQ2C,KAAAA,CAFgB,KAE5B;AACA,QAAI0vB,YAAAA,GAAeC,WAAAA,CAHS,KAGTA,CAAnB;AACA,QAJ4B,MAI5B;;AACA,sBAAkB;AAChBpwB,MAAAA,MAAAA,GAAS,QAAQ,YAAY;AAC3B,qBAAa;AACX+Z,UAAAA,OAAAA,CAAAA,IAAAA,CAAAA,oBAAAA,EAAAA,KAAAA,EADW,OACXA;AADF,eAEOiW,aAAAA,CAAAA,mBAAAA,EAAAA,OAAAA,EAHoB,KAGpBA,CAAAA;AAJO,OACP,CAAThwB;AAMAS,MAAAA,KAAAA,CAAAA,SAAAA,GAAkBotB,OAAAA,IAAWuC,WAAAA,CAAXvC,KAAWuC,CAAXvC,GAAAA,SAAAA,GAPF,OAOhBptB;AACA,UAAIT,MAAAA,CAAJ,OAAkB,MAAMA,MAAAA,CARR,KAQE;AAbQ;AADG,GACjCstB;AA1JF,CAyJA;;AAmBA,IAAI8C,WAAAA,GAAc,SAAdA,WAAc,QAAiB;AACjC,SAAO3vB,KAAAA,CAAAA,SAAAA,KAAAA,OAAAA,IAA+B,CAACA,KAAAA,CADN,MACjC;AA7KF,CA4KA;;AAIA,IAAIkvB,iBAAAA,GAAoB,SAApBA,iBAAoB,QAAiB;AACvCrC,EAAAA,IAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAkB,YAAY;AAC5B,QAAI2B,OAAAA,GAAUxuB,KAAAA,CADc,MAC5B;;AACA,iBAAa;AACXsZ,MAAAA,OAAAA,CAAAA,IAAAA,CAAAA,kBAAAA,EADW,OACXA;AADF,WAEOiW,aAAAA,CAAAA,iBAAAA,EAAAA,OAAAA,EAA0CvvB,KAAAA,CAJrB,KAIrBuvB,CAAAA;AAL8B,GACvC1C;AAjLF,CAgLA;;AASA,IAAI7B,IAAAA,GAAO,SAAPA,IAAO,oBAA6B;AACtC,SAAO,iBAAiB;AACtB5sB,IAAAA,EAAAA,CAAAA,KAAAA,EAAAA,KAAAA,EADsB,MACtBA,CAAAA;AAFoC,GACtC;AA1LF,CAyLA;;AAMA,IAAIwxB,cAAAA,GAAiB,SAAjBA,cAAiB,uBAAgC;AACnD,MAAI5vB,KAAAA,CAAJ,MADmD;AAEnDA,EAAAA,KAAAA,CAAAA,IAAAA,GAFmD,IAEnDA;AACA,cAAYA,KAAAA,GAHuC,MAGvCA;AACZA,EAAAA,KAAAA,CAAAA,KAAAA,GAJmD,KAInDA;AACAA,EAAAA,KAAAA,CAAAA,KAAAA,GALmD,QAKnDA;AACA4uB,EAAAA,MAAAA,CAAAA,KAAAA,EANmD,IAMnDA,CAAAA;AArMF,CA+LA;;AASA,IAAIiB,eAAAA,GAAkB,SAAlBA,eAAkB,uBAAgC;AACpD,MAAI7vB,KAAAA,CAAJ,MADoD;AAEpDA,EAAAA,KAAAA,CAAAA,IAAAA,GAFoD,IAEpDA;AACA,cAAYA,KAAAA,GAHwC,MAGxCA;;AACZ,MAAI;AACF,QAAIA,KAAAA,CAAAA,MAAAA,KAAJ,OAA4B,MAAM4b,SAAAA,CADhC,kCACgCA,CAAN;AAC5B,QAAIwT,IAAAA,GAAOT,UAAAA,CAFT,KAESA,CAAX;;AACA,cAAU;AACR7B,MAAAA,SAAAA,CAAU,YAAY;AACpB,YAAIgD,OAAAA,GAAU;AAAExvB,UAAAA,IAAAA,EADI;AACN,SAAd;;AACA,YAAI;AACF8uB,UAAAA,IAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EACEpE,IAAAA,CAAAA,eAAAA,EAAAA,OAAAA,EADFoE,KACEpE,CADFoE,EAEEpE,IAAAA,CAAAA,cAAAA,EAAAA,OAAAA,EAHA,KAGAA,CAFFoE;AADF,UAKE,cAAc;AACdQ,UAAAA,cAAAA,CAAAA,OAAAA,EAAAA,KAAAA,EADc,KACdA,CAAAA;AARkB;AADd,OACR9C,CAAAA;AADF,WAYO;AACL9sB,MAAAA,KAAAA,CAAAA,KAAAA,GADK,KACLA;AACAA,MAAAA,KAAAA,CAAAA,KAAAA,GAFK,SAELA;AACA4uB,MAAAA,MAAAA,CAAAA,KAAAA,EAHK,KAGLA,CAAAA;AAlBA;AAAJ,IAoBE,cAAc;AACdgB,IAAAA,cAAAA,CAAe;AAAEtvB,MAAAA,IAAAA,EAAjBsvB;AAAe,KAAfA,EAAAA,KAAAA,EADc,KACdA,CAAAA;AAzBkD;AAxMtD,CAwMA;;AA8BA,YAAY;AAEVnC,EAAAA,kBAAAA,GAAqB,2BAA2B;AAC9Cf,IAAAA,UAAAA,CAAAA,IAAAA,EAAAA,kBAAAA,EAD8C,OAC9CA,CAAAA;AACAlQ,IAAAA,SAAAA,CAF8C,QAE9CA,CAAAA;AACAuT,IAAAA,QAAAA,CAAAA,IAAAA,CAH8C,IAG9CA;AACA,QAAI/vB,KAAAA,GAAQ0e,gBAAAA,CAJkC,IAIlCA,CAAZ;;AACA,QAAI;AACFsR,MAAAA,QAAAA,CAAShF,IAAAA,CAAAA,eAAAA,EAATgF,KAAShF,CAATgF,EAAuChF,IAAAA,CAAAA,cAAAA,EADrC,KACqCA,CAAvCgF,CAAAA;AADF,MAEE,cAAc;AACdJ,MAAAA,cAAAA,CAAAA,KAAAA,EADc,KACdA,CAAAA;AAR4C;AAFtC,GAEVnC;;AAWAC,EAAAA,2BAAAA,GAA8BD,kBAAAA,CAbpB,SAaVC;;AAEAqC,EAAAA,QAAAA,GAAW,2BAA2B;AACpCpJ,IAAAA,gBAAAA,CAAAA,IAAAA,EAAuB;AACrBzoB,MAAAA,IAAAA,EADqB;AAErBoC,MAAAA,IAAAA,EAFqB;AAGrB2vB,MAAAA,QAAAA,EAHqB;AAIrBC,MAAAA,MAAAA,EAJqB;AAKrBC,MAAAA,SAAAA,EALqB;AAMrBC,MAAAA,SAAAA,EANqB;AAOrBpwB,MAAAA,KAAAA,EAPqB;AAQrB3C,MAAAA,KAAAA,EARqB;AAAA,KAAvBspB,CAAAA;AAhBQ,GAeVoJ;;AAYAA,EAAAA,QAAAA,CAAAA,SAAAA,GAAqB,yCAAyC;AAG5DX,IAAAA,IAAAA,EAAM,uCAAuC;AAC3C,UAAIpvB,KAAAA,GAAQutB,uBAAAA,CAD+B,IAC/BA,CAAZ;AACA,UAAIwB,QAAAA,GAAWpB,oBAAAA,CAAqBf,kBAAAA,CAAAA,IAAAA,EAFO,kBAEPA,CAArBe,CAAf;AACAoB,MAAAA,QAAAA,CAAAA,EAAAA,GAAc,iDAH6B,IAG3CA;AACAA,MAAAA,QAAAA,CAAAA,IAAAA,GAAgB,mCAJ2B,UAI3CA;AACAA,MAAAA,QAAAA,CAAAA,MAAAA,GAAkB3B,OAAAA,GAAU9T,OAAAA,CAAV8T,MAAAA,GALyB,SAK3C2B;AACA/uB,MAAAA,KAAAA,CAAAA,MAAAA,GAN2C,IAM3CA;AACAA,MAAAA,KAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAP2C,QAO3CA;AACA,UAAIA,KAAAA,CAAAA,KAAAA,IAAJ,SAA4B4uB,MAAAA,CAAAA,KAAAA,EARe,KAQfA,CAAAA;AAC5B,aAAOG,QAAAA,CAToC,OAS3C;AAZ0D;AAgB5D,aAAS,4BAAsB;AAC7B,aAAO,qBADsB,UACtB,CAAP;AAjB0D;AAAA,GAAzC,CAArBgB;;AAoBAM,EAAAA,oBAAAA,GAAuB,gCAAY;AACjC,QAAI7B,OAAAA,GAAU,IADmB,QACnB,EAAd;AACA,QAAIxuB,KAAAA,GAAQ0e,gBAAAA,CAFqB,OAErBA,CAAZ;AACA,mBAHiC,OAGjC;AACA,mBAAesM,IAAAA,CAAAA,eAAAA,EAJkB,KAIlBA,CAAf;AACA,kBAAcA,IAAAA,CAAAA,cAAAA,EALmB,KAKnBA,CAAd;AApDQ,GA+CVqF;;AAOApD,EAAAA,0BAAAA,CAAAA,CAAAA,GAA+BU,oBAAAA,GAAuB,iCAAa;AACjE,WAAOxjB,CAAAA,KAAAA,kBAAAA,IAA4BA,CAAAA,KAA5BA,cAAAA,GACH,yBADGA,CACH,CADGA,GAEHyjB,2BAAAA,CAH6D,CAG7DA,CAFJ;AAvDQ,GAsDVX;;AAMA,MAAI,YAAY,wBAAZ,cAAkDO,sBAAAA,KAA2BzyB,MAAAA,CAAjF,WAAmG;AACjGu1B,IAAAA,UAAAA,GAAa9C,sBAAAA,CADoF,IACjG8C;;AAEA,QAAI,CAAJ,aAAkB;AAEhB3W,MAAAA,QAAAA,CAAAA,sBAAAA,EAAAA,MAAAA,EAAyC,uCAAuC;AAC9E,YAAI0R,IAAAA,GAD0E,IAC9E;AACA,eAAO,uBAAuB,2BAA2B;AACvDiF,UAAAA,UAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EADuD,MACvDA;AADK,6BAFuE,UAEvE,CAAP;AAFF3W,OAAAA,EAMG;AAAEkF,QAAAA,MAAAA,EARW;AAQb,OANHlF,CAAAA;AASAA,MAAAA,QAAAA,CAAAA,sBAAAA,EAAAA,OAAAA,EAA0C+T,2BAAAA,CAA1C/T,OAA0C+T,CAA1C/T,EAAgF;AAAEkF,QAAAA,MAAAA,EAXlE;AAWgE,OAAhFlF,CAAAA;AAd+F;;AAkBjG,QAAI;AACF,aAAO6T,sBAAAA,CADL,WACF;AADF,MAEE,cAAc,CApBiF;;AAuBjG,wBAAoB;AAClBlF,MAAAA,cAAAA,CAAAA,sBAAAA,EADkB,2BAClBA,CAAAA;AAxB+F;AA5DzF;AAtOZ;;AA+TA/O,CAAAA,CAAE;AAAEC,EAAAA,MAAAA,EAAF;AAAgBzZ,EAAAA,IAAAA,EAAhB;AAA4BgqB,EAAAA,MAAAA,EAA5B;AAAA,CAAFxQ,EAAgD;AAC9CgX,EAAAA,OAAAA,EAhUF;AA+TgD,CAAhDhX,CAAAA;AAIAgP,cAAAA,CAAAA,kBAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAnUA,IAmUAA,CAAAA;AACAkE,UAAAA,CApUA,OAoUAA,CAAAA;AAEA+D,cAAAA,GAAiBlU,UAAAA,CAtUjB,OAsUiBA,CAAjBkU;AAGAjX,CAAAA,CAAE;AAAEY,EAAAA,MAAAA,EAAF;AAAmByQ,EAAAA,IAAAA,EAAnB;AAA+Bb,EAAAA,MAAAA,EAA/B;AAAA,CAAFxQ,EAAmD;AAGjDhiB,EAAAA,MAAAA,EAAQ,mBAAmB;AACzB,QAAI+gB,UAAAA,GAAaqV,oBAAAA,CADQ,IACRA,CAAjB;AACArV,IAAAA,UAAAA,CAAAA,MAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAFyB,CAEzBA;AACA,WAAOA,UAAAA,CAHkB,OAGzB;AAN+C;AAAA,CAAnDiB,CAAAA;AAUAA,CAAAA,CAAE;AAAEY,EAAAA,MAAAA,EAAF;AAAmByQ,EAAAA,IAAAA,EAAnB;AAA+Bb,EAAAA,MAAAA,EAAQvM,OAAAA,IAAvC;AAAA,CAAFjE,EAA8D;AAG5DjiB,EAAAA,OAAAA,EAAS,oBAAoB;AAC3B,WAAOy1B,cAAAA,CAAevP,OAAAA,IAAW,SAAXA,cAAAA,GAAAA,kBAAAA,GAAfuP,IAAAA,EADoB,CACpBA,CAAP;AAJ0D;AAAA,CAA9DxT,CAAAA;AAQAA,CAAAA,CAAE;AAAEY,EAAAA,MAAAA,EAAF;AAAmByQ,EAAAA,IAAAA,EAAnB;AAA+Bb,EAAAA,MAAAA,EAA/B;AAAA,CAAFxQ,EAAgE;AAG9DkX,EAAAA,GAAAA,EAAK,uBAAuB;AAC1B,QAAItmB,CAAAA,GADsB,IAC1B;AACA,QAAImO,UAAAA,GAAaqV,oBAAAA,CAFS,CAETA,CAAjB;AACA,QAAIr2B,OAAAA,GAAUghB,UAAAA,CAHY,OAG1B;AACA,QAAI/gB,MAAAA,GAAS+gB,UAAAA,CAJa,MAI1B;AACA,QAAI/Y,MAAAA,GAAS,QAAQ,YAAY;AAC/B,UAAImxB,eAAAA,GAAkBlU,SAAAA,CAAUrS,CAAAA,CADD,OACTqS,CAAtB;AACA,UAAI3d,MAAAA,GAF2B,EAE/B;AACA,UAAI8xB,OAAAA,GAH2B,CAG/B;AACA,UAAIC,SAAAA,GAJ2B,CAI/B;AACAlG,MAAAA,OAAAA,CAAAA,QAAAA,EAAkB,mBAAmB;AACnC,YAAI9J,KAAAA,GAAQ+P,OADuB,EACnC;AACA,YAAIE,aAAAA,GAF+B,KAEnC;AACAhyB,QAAAA,MAAAA,CAAAA,IAAAA,CAHmC,SAGnCA;AACA+xB,QAAAA,SAJmC;AAKnCF,QAAAA,eAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,OAAAA,EAAAA,IAAAA,CAAsC,iBAAiB;AACrD,6BADqD;AAErDG,UAAAA,aAAAA,GAFqD,IAErDA;AACAhyB,UAAAA,MAAAA,CAAAA,KAAAA,CAAAA,GAHqD,KAGrDA;AACA,yBAAevH,OAAAA,CAJsC,MAItCA,CAAf;AAJFo5B,SAAAA,EALmC,MAKnCA;AAV6B,OAK/BhG,CAAAA;AAYA,qBAAepzB,OAAAA,CAjBgB,MAiBhBA,CAAf;AAtBwB,KAKb,CAAb;AAmBA,QAAIiI,MAAAA,CAAJ,OAAkBhI,MAAAA,CAAOgI,MAAAA,CAxBC,KAwBRhI,CAAAA;AAClB,WAAO+gB,UAAAA,CAzBmB,OAyB1B;AA5B4D;AAgC9DwY,EAAAA,IAAAA,EAAM,wBAAwB;AAC5B,QAAI3mB,CAAAA,GADwB,IAC5B;AACA,QAAImO,UAAAA,GAAaqV,oBAAAA,CAFW,CAEXA,CAAjB;AACA,QAAIp2B,MAAAA,GAAS+gB,UAAAA,CAHe,MAG5B;AACA,QAAI/Y,MAAAA,GAAS,QAAQ,YAAY;AAC/B,UAAImxB,eAAAA,GAAkBlU,SAAAA,CAAUrS,CAAAA,CADD,OACTqS,CAAtB;AACAkO,MAAAA,OAAAA,CAAAA,QAAAA,EAAkB,mBAAmB;AACnCgG,QAAAA,eAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,OAAAA,EAAAA,IAAAA,CAAsCpY,UAAAA,CAAtCoY,OAAAA,EADmC,MACnCA;AAH6B,OAE/BhG,CAAAA;AAN0B,KAIf,CAAb;AAMA,QAAInrB,MAAAA,CAAJ,OAAkBhI,MAAAA,CAAOgI,MAAAA,CAVG,KAUVhI,CAAAA;AAClB,WAAO+gB,UAAAA,CAXqB,OAW5B;AA3C4D;AAAA,CAAhEiB,CAAAA;;;;;;;;AC3VA,IAAIC,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB4c,MAAAA,CAAjB5c,OAAAA;;;;;;;;ACFA,IAAI+c,QAAAA,GAAW9c,mBAAAA,CAAf,EAAeA,CAAf;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,gCAAgC;AAC/C;AAAqB+c,IAAAA,QAAAA,CAAAA,MAAAA,EAAAA,GAAAA,EAAsBoX,GAAAA,CAAtBpX,GAAsBoX,CAAtBpX,EAD0B,OAC1BA,CAAAA;AAArB;;AACA,SAF+C,MAE/C;AAFF/c,CAAAA;;;;;;ACFa;;AACb,IAAI0f,UAAAA,GAAazf,mBAAAA,CADjB,EACiBA,CAAjB;;AACA,IAAIshB,oBAAAA,GAAuBthB,mBAAAA,CAF3B,EAE2BA,CAA3B;;AACA,IAAIof,eAAAA,GAAkBpf,mBAAAA,CAHtB,EAGsBA,CAAtB;;AACA,IAAI8d,WAAAA,GAAc9d,mBAAAA,CAJlB,EAIkBA,CAAlB;;AAEA,IAAIwwB,OAAAA,GAAUpR,eAAAA,CANd,SAMcA,CAAd;;AAEArf,MAAAA,CAAAA,OAAAA,GAAiB,4BAA4B;AAC3C,MAAIo0B,WAAAA,GAAc1U,UAAAA,CADyB,gBACzBA,CAAlB;AACA,MAAI2D,cAAAA,GAAiB9B,oBAAAA,CAFsB,CAE3C;;AAEA,MAAIxD,WAAAA,IAAAA,WAAAA,IAA8B,CAACqW,WAAAA,CAAnC,OAAmCA,CAAnC,EAAyD;AACvD/Q,IAAAA,cAAAA,CAAAA,WAAAA,EAAAA,OAAAA,EAAqC;AACnC1iB,MAAAA,YAAAA,EADmC;AAEnCib,MAAAA,GAAAA,EAAK,eAAY;AAAE,eAAF,IAAE;AAFgB;AAAA,KAArCyH,CAAAA;AALyC;AAA7CrjB,CAAAA;;;;;;;;ACRAA,MAAAA,CAAAA,OAAAA,GAAiB,iCAAiC;AAChD,MAAI,EAAE,cAAN,WAAI,CAAJ,EAAkC;AAChC,UAAMgf,SAAAA,CAAU,gBAAgB,OAAO3gB,IAAAA,GAAP,MAAhB,MADgB,YAC1B2gB,CAAN;AAF8C;;AAG9C,SAH8C,EAG9C;AAHJhf,CAAAA;;;;;;;;ACAA,IAAIqf,eAAAA,GAAkBpf,mBAAAA,CAAtB,EAAsBA,CAAtB;;AAEA,IAAI6rB,QAAAA,GAAWzM,eAAAA,CAFf,UAEeA,CAAf;AACA,IAAIgV,YAAAA,GAHJ,KAGA;;AAEA,IAAI;AACF,MAAIC,MAAAA,GADF,CACF;AACA,MAAIC,kBAAAA,GAAqB;AACvBtwB,IAAAA,IAAAA,EAAM,gBAAY;AAChB,aAAO;AAAEP,QAAAA,IAAAA,EAAM,CAAC,CAAC4wB,MADD;AACT,OAAP;AAFqB;AAIvB,cAAU,mBAAY;AACpBD,MAAAA,YAAAA,GADoB,IACpBA;AALqB;AAAA,GAAzB;;AAQAE,EAAAA,kBAAAA,CAAAA,QAAAA,CAAAA,GAA+B,YAAY;AACzC,WADyC,IACzC;AAXA,GAUFA;;AAIApb,EAAAA,KAAAA,CAAAA,IAAAA,CAAAA,kBAAAA,EAA+B,YAAY;AAAE,UAAF,CAAE;AAd3C,GAcFA;AAdF,EAeE,cAAc,CApBhB;;AAsBAnZ,MAAAA,CAAAA,OAAAA,GAAiB,8BAA8B;AAC7C,MAAI,iBAAiB,CAArB,cAAoC,OADS,KACT;AACpC,MAAIw0B,iBAAAA,GAFyC,KAE7C;;AACA,MAAI;AACF,QAAIhT,MAAAA,GADF,EACF;;AACAA,IAAAA,MAAAA,CAAAA,QAAAA,CAAAA,GAAmB,YAAY;AAC7B,aAAO;AACLvd,QAAAA,IAAAA,EAAM,gBAAY;AAChB,iBAAO;AAAEP,YAAAA,IAAAA,EAAM8wB,iBAAAA,GADC;AACT,WAAP;AAFG;AAAA,OAAP;AAHA,KAEFhT;;AAOA/C,IAAAA,IAAAA,CATE,MASFA,CAAAA;AATF,IAUE,cAAc,CAb6B;;AAc7C,SAd6C,iBAc7C;AAdFze,CAAAA;;;;;;;;ACtBA,IAAIyhB,QAAAA,GAAWxhB,mBAAAA,CAAf,EAAeA,CAAf;;AACA,IAAI2f,SAAAA,GAAY3f,mBAAAA,CADhB,EACgBA,CAAhB;;AACA,IAAIof,eAAAA,GAAkBpf,mBAAAA,CAFtB,EAEsBA,CAAtB;;AAEA,IAAIwwB,OAAAA,GAAUpR,eAAAA,CAJd,SAIcA,CAAd;;AAIArf,MAAAA,CAAAA,OAAAA,GAAiB,iCAAiC;AAChD,MAAIuN,CAAAA,GAAIkU,QAAAA,CAAAA,CAAAA,CAAAA,CADwC,WAChD;AACA,MAFgD,CAEhD;AACA,SAAOlU,CAAAA,KAAAA,SAAAA,IAAoB,KAAIkU,QAAAA,CAAAA,CAAAA,CAAAA,CAAL,OAAKA,CAAJ,KAApBlU,SAAAA,GAAAA,kBAAAA,GAAkFqS,SAAAA,CAHzC,CAGyCA,CAAzF;AAHF5f,CAAAA;;;;;;;;ACRA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AACA,IAAIue,KAAAA,GAAQve,mBAAAA,CADZ,EACYA,CAAZ;;AACA,IAAImuB,IAAAA,GAAOnuB,mBAAAA,CAFX,EAEWA,CAAX;;AACA,IAAIoqB,IAAAA,GAAOpqB,mBAAAA,CAHX,EAGWA,CAAX;;AACA,IAAIohB,aAAAA,GAAgBphB,mBAAAA,CAJpB,EAIoBA,CAApB;;AACA,IAAIw0B,MAAAA,GAASx0B,mBAAAA,CALb,GAKaA,CAAb;;AACA,IAAIuwB,OAAAA,GAAUvwB,mBAAAA,CANd,GAMcA,CAAd;;AAEA,IAAI2iB,GAAAA,GAAMhG,MAAAA,CARV,YAQA;AACA,IAAI8X,KAAAA,GAAQ9X,MAAAA,CATZ,cASA;AACA,IAAIF,OAAAA,GAAUE,MAAAA,CAVd,OAUA;AACA,IAAI+X,cAAAA,GAAiB/X,MAAAA,CAXrB,cAWA;AACA,IAAIgY,QAAAA,GAAWhY,MAAAA,CAZf,QAYA;AACA,IAAImX,OAAAA,GAbJ,CAaA;AACA,IAAIc,KAAAA,GAdJ,EAcA;AACA,IAAIC,kBAAAA,GAfJ,oBAeA;AACA,8BAhBA,IAgBA;;AAEA,IAAI;AAEFC,EAAAA,QAAAA,GAAWnY,MAAAA,CAFT,QAEFmY;AAFF,EAGE,cAAc,CArBhB;;AAuBA,IAAIC,GAAAA,GAAM,SAANA,GAAM,KAAc;AAEtB,MAAIH,KAAAA,CAAAA,cAAAA,CAAJ,EAAIA,CAAJ,EAA8B;AAC5B,QAAIrzB,EAAAA,GAAKqzB,KAAAA,CADmB,EACnBA,CAAT;AACA,WAAOA,KAAAA,CAFqB,EAErBA,CAAP;AACArzB,IAAAA,EAH4B;AAFR;AAvBxB,CAuBA;;AASA,IAAIyzB,MAAAA,GAAS,SAATA,MAAS,KAAc;AACzB,SAAO,YAAY;AACjBD,IAAAA,GAAAA,CADiB,EACjBA,CAAAA;AAFuB,GACzB;AAjCF,CAgCA;;AAMA,IAAIE,QAAAA,GAAW,SAAXA,QAAW,QAAiB;AAC9BF,EAAAA,GAAAA,CAAIpC,KAAAA,CAD0B,IAC9BoC,CAAAA;AAvCF,CAsCA;;AAIA,IAAIG,IAAAA,GAAO,SAAPA,IAAO,KAAc;AAEvBvY,EAAAA,MAAAA,CAAAA,WAAAA,CAAmB3E,MAAAA,CAAnB2E,EAAmB3E,CAAnB2E,EAA+BmY,QAAAA,CAAAA,QAAAA,GAAAA,IAAAA,GAA2BA,QAAAA,CAFnC,IAEvBnY;AA5CF,CA0CA;;AAMA,IAAI,QAAQ,CAAZ,OAAoB;AAClBgG,EAAAA,GAAAA,GAAM,0BAA0B;AAC9B,QAAIqC,IAAAA,GAD0B,EAC9B;AACA,QAAImQ,eAAAA,GAAkBvV,SAAAA,CAFQ,MAE9B;AACA,QAAItiB,CAAAA,GAH0B,CAG9B;;AACA,WAAO63B,eAAAA,GAAP;AAA4BnQ,MAAAA,IAAAA,CAAAA,IAAAA,CAAUpF,SAAAA,CAAUtiB,CAJlB,EAIQsiB,CAAVoF;AAA5B;;AACA4P,IAAAA,KAAAA,CAAM,EAANA,OAAAA,CAAAA,GAAmB,YAAY;AAE5B,sCAA+BpvB,QAAAA,CAAhC,EAAgCA,CAA/B,EAAD,KAAC,CAAD,SAAC,EAF4B,IAE5B;AAP2B,KAK9BovB;;AAIAQ,IAAAA,KAAAA,CAT8B,OAS9BA,CAAAA;AACA,WAV8B,OAU9B;AAXgB,GAClBzS;;AAYA8R,EAAAA,KAAAA,GAAQ,4BAA4B;AAClC,WAAOG,KAAAA,CAD2B,EAC3BA,CAAP;AAdgB,GAalBH;;AAIA,eAAa;AACXW,IAAAA,KAAAA,GAAQ,mBAAc;AACpB3Y,MAAAA,OAAAA,CAAAA,QAAAA,CAAiBuY,MAAAA,CADG,EACHA,CAAjBvY;AAFS,KACX2Y;AADF,SAKO,IAAIT,QAAAA,IAAYA,QAAAA,CAAhB,KAA8B;AACnCS,IAAAA,KAAAA,GAAQ,mBAAc;AACpBT,MAAAA,QAAAA,CAAAA,GAAAA,CAAaK,MAAAA,CADO,EACPA,CAAbL;AAFiC,KACnCS;AADK,SAMA,IAAIV,cAAAA,IAAkB,CAAtB,QAA+B;AACpCW,IAAAA,OAAAA,GAAU,IAD0B,cAC1B,EAAVA;AACAC,IAAAA,IAAAA,GAAOD,OAAAA,CAF6B,KAEpCC;AACAD,IAAAA,OAAAA,CAAAA,KAAAA,CAAAA,SAAAA,GAHoC,QAGpCA;AACAD,IAAAA,KAAAA,GAAQjH,IAAAA,CAAKmH,IAAAA,CAALnH,WAAAA,EAAAA,IAAAA,EAJ4B,CAI5BA,CAARiH;AAJK,SAOA,IACLzY,MAAAA,CAAAA,gBAAAA,IACA,sBADAA,UAAAA,IAEA,CAACA,MAAAA,CAFDA,aAAAA,IAAAA,QAAAA,IAGYmY,QAAAA,CAAAA,QAAAA,KAHZnY,OAAAA,IAIA,CAAC4B,KAAAA,CALI,IAKJA,CALI,EAML;AACA6W,IAAAA,KAAAA,GADA,IACAA;AACAzY,IAAAA,MAAAA,CAAAA,gBAAAA,CAAAA,SAAAA,EAAAA,QAAAA,EAFA,KAEAA;AARK,SAUA,IAAIkY,kBAAAA,IAAsBzT,aAAAA,CAA1B,QAA0BA,CAA1B,EAAmD;AACxDgU,IAAAA,KAAAA,GAAQ,mBAAc;AACpBhL,MAAAA,IAAAA,CAAAA,WAAAA,CAAiBhJ,aAAAA,CAAjBgJ,QAAiBhJ,CAAjBgJ,EAAAA,kBAAAA,IAAgE,YAAY;AAC1EA,QAAAA,IAAAA,CAAAA,WAAAA,CAD0E,IAC1EA;AACA2K,QAAAA,GAAAA,CAF0E,EAE1EA,CAAAA;AAHkB,OACpB3K;AAFsD,KACxDgL;AADK,SAQA;AACLA,IAAAA,KAAAA,GAAQ,mBAAc;AACpBG,MAAAA,UAAAA,CAAWP,MAAAA,CAAXO,EAAWP,CAAXO,EADoB,CACpBA,CAAAA;AAFG,KACLH;AAtDgB;AAhDpB;;AA4GAr1B,MAAAA,CAAAA,OAAAA,GAAiB;AACf4iB,EAAAA,GAAAA,EADe;AAEf8R,EAAAA,KAAAA,EAFe;AAAA,CAAjB10B;;;;;;;;AC5GA,IAAIkgB,SAAAA,GAAYjgB,mBAAAA,CAAhB,EAAgBA,CAAhB;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,0CAAjBA,SAAiB,CAAjBA;;;;;;;;ACFA,IAAI8e,OAAAA,GAAU7e,mBAAAA,CAAd,EAAcA,CAAd;;AACA,IAAI2c,MAAAA,GAAS3c,mBAAAA,CADb,EACaA,CAAb;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB8e,OAAAA,CAAQlC,MAAAA,CAARkC,OAAAA,CAAAA,IAAjB9e,SAAAA;;;;;;;;ACHA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AACA,IAAI4c,wBAAAA,GAA2B5c,yBAA/B;;AACA,IAAIw1B,SAAAA,GAAYx1B,4BAAhB;;AACA,IAAIw0B,MAAAA,GAASx0B,mBAAAA,CAHb,GAGaA,CAAb;;AACA,IAAIy1B,aAAAA,GAAgBz1B,mBAAAA,CAJpB,GAIoBA,CAApB;;AACA,IAAI01B,eAAAA,GAAkB11B,mBAAAA,CALtB,GAKsBA,CAAtB;;AACA,IAAIuwB,OAAAA,GAAUvwB,mBAAAA,CANd,GAMcA,CAAd;;AAEA,IAAI21B,gBAAAA,GAAmBhZ,MAAAA,CAAAA,gBAAAA,IAA2BA,MAAAA,CARlD,sBAQA;AACA,IAAIziB,QAAAA,GAAWyiB,MAAAA,CATf,QASA;AACA,IAAIF,OAAAA,GAAUE,MAAAA,CAVd,OAUA;AACA,IAAI+W,OAAAA,GAAU/W,MAAAA,CAXd,OAWA;AAEA,IAAIiZ,wBAAAA,GAA2BhZ,wBAAAA,CAAAA,MAAAA,EAb/B,gBAa+BA,CAA/B;AACA,IAAIiZ,cAAAA,GAAiBD,wBAAAA,IAA4BA,wBAAAA,CAdjD,KAcA;AAEA,sDAhBA,IAgBA;;AAGA,IAAI,CAAJ,gBAAqB;AACnBE,EAAAA,KAAAA,GAAQ,iBAAY;AAClB,gBADkB,EAClB;AACA,QAAIvF,OAAAA,KAAY,SAAS9T,OAAAA,CAAzB,MAAI8T,CAAJ,EAA0C8C,MAAAA,CAFxB,IAEwBA;;AAC1C,iBAAa;AACX9xB,MAAAA,EAAAA,GAAKw0B,IAAAA,CADM,EACXx0B;AACAw0B,MAAAA,IAAAA,GAAOA,IAAAA,CAFI,IAEXA;;AACA,UAAI;AACFx0B,QAAAA,EADE;AAAJ,QAEE,cAAc;AACd,kBAAUwwB,MAAV,QACKiE,IAAAA,GAFS,SAETA;AACL,cAHc,KAGd;AARS;AAHK;;AAahBA,IAAAA,IAAAA,GAbgB,SAahBA;AACF,gBAAY3C,MAAAA,CAdM,KAcNA;AAfK,GACnByC;;AAmBA,MAAI,WAAW,CAAX,WAAuB,CAAvB,uCAAJ,UAA6E;AAC3EG,IAAAA,MAAAA,GAD2E,IAC3EA;AACAC,IAAAA,IAAAA,GAAOh8B,QAAAA,CAAAA,cAAAA,CAFoE,EAEpEA,CAAPg8B;AACA,8CAA0C;AAAEC,MAAAA,aAAAA,EAH+B;AAGjC,KAA1C;;AACApE,IAAAA,MAAAA,GAAS,kBAAY;AACnBmE,MAAAA,IAAAA,CAAAA,IAAAA,GAAYD,MAAAA,GAAS,CADF,MACnBC;AALyE,KAI3EnE;AAJF,SAQO,IAAI,6BAA6B2B,OAAAA,CAAjC,SAAkD;AAEvD/B,IAAAA,OAAAA,GAAU+B,OAAAA,CAAAA,OAAAA,CAF6C,SAE7CA,CAAV/B;AAEAA,IAAAA,OAAAA,CAAAA,WAAAA,GAJuD,OAIvDA;AACAY,IAAAA,IAAAA,GAAOZ,OAAAA,CALgD,IAKvDY;;AACAR,IAAAA,MAAAA,GAAS,kBAAY;AACnBQ,MAAAA,IAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EADmB,KACnBA;AAPqD,KAMvDR;AANK,SAUA,aAAa;AAClBA,IAAAA,MAAAA,GAAS,kBAAY;AACnBtV,MAAAA,OAAAA,CAAAA,QAAAA,CADmB,KACnBA;AAFgB,KAClBsV;AADK,SAUA;AACLA,IAAAA,MAAAA,GAAS,kBAAY;AAEnByD,MAAAA,SAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAFmB,KAEnBA;AAHG,KACLzD;AAjDiB;AAnBrB;;AA2EAhyB,MAAAA,CAAAA,OAAAA,GAAiB81B,cAAAA,IAAkB,cAAc;AAC/C,MAAI7F,IAAAA,GAAO;AAAEzuB,IAAAA,EAAAA,EAAF;AAAUyC,IAAAA,IAAAA,EAAV;AAAA,GAAX;AACA,YAAUgyB,IAAAA,CAAAA,IAAAA,GAFqC,IAErCA;;AACV,MAAI,CAAJ,MAAW;AACTD,IAAAA,IAAAA,GADS,IACTA;AACAhE,IAAAA,MAFS;AAHoC;;AAM7CiE,EAAAA,IAAAA,GAN6C,IAM7CA;AANJj2B,CAAAA;;;;;;;;AC3EA,IAAIkgB,SAAAA,GAAYjgB,mBAAAA,CAAhB,EAAgBA,CAAhB;;AACA,IAAI2c,MAAAA,GAAS3c,mBAAAA,CADb,EACaA,CAAb;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,uCAAuC4c,MAAAA,CAAAA,MAAAA,KAAxD5c,SAAAA;;;;;;;;ACHA,IAAIkgB,SAAAA,GAAYjgB,mBAAAA,CAAhB,EAAgBA,CAAhB;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,0BAAjBA,SAAiB,CAAjBA;;;;;;;;ACFA,IAAIyhB,QAAAA,GAAWxhB,mBAAAA,CAAf,EAAeA,CAAf;;AACA,IAAIkf,QAAAA,GAAWlf,mBAAAA,CADf,EACeA,CAAf;;AACA,IAAI8wB,oBAAAA,GAAuB9wB,mBAAAA,CAF3B,GAE2BA,CAA3B;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,gBAAgB;AAC/ByhB,EAAAA,QAAAA,CAD+B,CAC/BA,CAAAA;AACA,MAAItC,QAAAA,CAAAA,CAAAA,CAAAA,IAAeyH,CAAAA,CAAAA,WAAAA,KAAnB,GAAwC,OAFT,CAES;AACxC,MAAIyP,iBAAAA,GAAoBtF,oBAAAA,CAAAA,CAAAA,CAHO,CAGPA,CAAxB;AACA,MAAIr2B,OAAAA,GAAU27B,iBAAAA,CAJiB,OAI/B;AACA37B,EAAAA,OAAAA,CAL+B,CAK/BA,CAAAA;AACA,SAAO27B,iBAAAA,CANwB,OAM/B;AANFr2B,CAAAA;;;;;;ACJa;;AACb,IAAI4f,SAAAA,GAAY3f,mBAAAA,CADhB,EACgBA,CAAhB;;AAEA,IAAIq2B,iBAAAA,GAAoB,SAApBA,iBAAoB,IAAa;AACnC,eADmC,MACnC;AACA,iBAAe,MAAM,+BAA+B;AAClD,QAAI57B,OAAAA,KAAAA,SAAAA,IAAyBC,MAAAA,KAA7B,WAAmD,MAAMqkB,SAAAA,CADP,yBACOA,CAAN;AACnDtkB,IAAAA,OAAAA,GAFkD,SAElDA;AACAC,IAAAA,MAAAA,GAHkD,QAGlDA;AALiC,GAEpB,CAAf;AAKA,iBAAeilB,SAAAA,CAPoB,OAOpBA,CAAf;AACA,gBAAcA,SAAAA,CARqB,MAQrBA,CAAd;AAXF,CAGA;;AAaA5f,gBAAAA,GAAmB,aAAa;AAC9B,SAAO,sBADuB,CACvB,CAAP;AADFA,CAAAA;;;;;;;;AChBA,IAAI4c,MAAAA,GAAS3c,mBAAAA,CAAb,EAAaA,CAAb;;AAEAD,MAAAA,CAAAA,OAAAA,GAAiB,gBAAgB;AAC/B,MAAIf,OAAAA,GAAU2d,MAAAA,CADiB,OAC/B;;AACA,MAAI3d,OAAAA,IAAWA,OAAAA,CAAf,OAA8B;AAC5B4gB,IAAAA,SAAAA,CAAAA,MAAAA,KAAAA,CAAAA,GAAyB5gB,OAAAA,CAAAA,KAAAA,CAAzB4gB,CAAyB5gB,CAAzB4gB,GAA4C5gB,OAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EADhB,CACgBA,CAA5C4gB;AAH6B;AAAjC7f,CAAAA;;;;;;;;ACFAA,MAAAA,CAAAA,OAAAA,GAAiB,gBAAgB;AAC/B,MAAI;AACF,WAAO;AAAEu2B,MAAAA,KAAAA,EAAF;AAAgB91B,MAAAA,KAAAA,EAAOge,IAAvB;AAAA,KAAP;AADF,IAEE,cAAc;AACd,WAAO;AAAE8X,MAAAA,KAAAA,EAAF;AAAe91B,MAAAA,KAAAA,EAAf;AAAA,KAAP;AAJ6B;AAAjCT,CAAAA;;;;;;;;;;ACAAA,MAAAA,CAAAA,OAAAA,GAAiB,mEAAjBA,QAAAA;;;;;;ACAa;;AACb,IAAI2c,CAAAA,GAAI1c,mBAAAA,CADR,CACQA,CAAR;;AACA,IAAI2f,SAAAA,GAAY3f,mBAAAA,CAFhB,EAEgBA,CAAhB;;AACA,IAAIowB,0BAAAA,GAA6BpwB,mBAAAA,CAHjC,GAGiCA,CAAjC;;AACA,IAAIqwB,OAAAA,GAAUrwB,mBAAAA,CAJd,GAIcA,CAAd;;AACA,IAAI6tB,OAAAA,GAAU7tB,mBAAAA,CALd,EAKcA,CAAd;;AAIA0c,CAAAA,CAAE;AAAEY,EAAAA,MAAAA,EAAF;AAAqByQ,EAAAA,IAAAA,EAArB;AAAA,CAAFrR,EAAqC;AACnC6Z,EAAAA,UAAAA,EAAY,8BAA8B;AACxC,QAAIjpB,CAAAA,GADoC,IACxC;AACA,QAAImO,UAAAA,GAAa2U,0BAAAA,CAAAA,CAAAA,CAFuB,CAEvBA,CAAjB;AACA,QAAI31B,OAAAA,GAAUghB,UAAAA,CAH0B,OAGxC;AACA,QAAI/gB,MAAAA,GAAS+gB,UAAAA,CAJ2B,MAIxC;AACA,QAAI/Y,MAAAA,GAAS,QAAQ,YAAY;AAC/B,UAAIwtB,cAAAA,GAAiBvQ,SAAAA,CAAUrS,CAAAA,CADA,OACVqS,CAArB;AACA,UAAI3d,MAAAA,GAF2B,EAE/B;AACA,UAAI8xB,OAAAA,GAH2B,CAG/B;AACA,UAAIC,SAAAA,GAJ2B,CAI/B;AACAlG,MAAAA,OAAAA,CAAAA,QAAAA,EAAkB,mBAAmB;AACnC,YAAI9J,KAAAA,GAAQ+P,OADuB,EACnC;AACA,YAAIE,aAAAA,GAF+B,KAEnC;AACAhyB,QAAAA,MAAAA,CAAAA,IAAAA,CAHmC,SAGnCA;AACA+xB,QAAAA,SAJmC;AAKnC7D,QAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,OAAAA,EAAAA,IAAAA,CAAqC,iBAAiB;AACpD,6BADoD;AAEpD8D,UAAAA,aAAAA,GAFoD,IAEpDA;AACAhyB,UAAAA,MAAAA,CAAAA,KAAAA,CAAAA,GAAgB;AAAEw0B,YAAAA,MAAAA,EAAF;AAAuBh2B,YAAAA,KAAAA,EAAvB;AAAA,WAAhBwB;AACA,yBAAevH,OAAAA,CAJqC,MAIrCA,CAAf;AAJFy1B,SAAAA,EAKG,iBAAiB;AAClB,6BADkB;AAElB8D,UAAAA,aAAAA,GAFkB,IAElBA;AACAhyB,UAAAA,MAAAA,CAAAA,KAAAA,CAAAA,GAAgB;AAAEw0B,YAAAA,MAAAA,EAAF;AAAsB5D,YAAAA,MAAAA,EAAtB;AAAA,WAAhB5wB;AACA,yBAAevH,OAAAA,CAJG,MAIHA,CAAf;AAdiC,SAKnCy1B;AAV6B,OAK/BrC,CAAAA;AAiBA,qBAAepzB,OAAAA,CAtBgB,MAsBhBA,CAAf;AA3BsC,KAK3B,CAAb;AAwBA,QAAIiI,MAAAA,CAAJ,OAAkBhI,MAAAA,CAAOgI,MAAAA,CA7Be,KA6BtBhI,CAAAA;AAClB,WAAO+gB,UAAAA,CA9BiC,OA8BxC;AA/BiC;AAAA,CAArCiB,CAAAA;;;;;;ACTa;;AACb,IAAIA,CAAAA,GAAI1c,mBAAAA,CADR,CACQA,CAAR;;AACA,IAAI2f,SAAAA,GAAY3f,mBAAAA,CAFhB,EAEgBA,CAAhB;;AACA,IAAIyf,UAAAA,GAAazf,mBAAAA,CAHjB,EAGiBA,CAAjB;;AACA,IAAIowB,0BAAAA,GAA6BpwB,mBAAAA,CAJjC,GAIiCA,CAAjC;;AACA,IAAIqwB,OAAAA,GAAUrwB,mBAAAA,CALd,GAKcA,CAAd;;AACA,IAAI6tB,OAAAA,GAAU7tB,mBAAAA,CANd,EAMcA,CAAd;;AAEA,IAAIy2B,iBAAAA,GARJ,yBAQA;AAIA/Z,CAAAA,CAAE;AAAEY,EAAAA,MAAAA,EAAF;AAAqByQ,EAAAA,IAAAA,EAArB;AAAA,CAAFrR,EAAqC;AACnCga,EAAAA,GAAAA,EAAK,uBAAuB;AAC1B,QAAIppB,CAAAA,GADsB,IAC1B;AACA,QAAImO,UAAAA,GAAa2U,0BAAAA,CAAAA,CAAAA,CAFS,CAETA,CAAjB;AACA,QAAI31B,OAAAA,GAAUghB,UAAAA,CAHY,OAG1B;AACA,QAAI/gB,MAAAA,GAAS+gB,UAAAA,CAJa,MAI1B;AACA,QAAI/Y,MAAAA,GAAS,QAAQ,YAAY;AAC/B,UAAIwtB,cAAAA,GAAiBvQ,SAAAA,CAAUrS,CAAAA,CADA,OACVqS,CAArB;AACA,UAAIgX,MAAAA,GAF2B,EAE/B;AACA,UAAI7C,OAAAA,GAH2B,CAG/B;AACA,UAAIC,SAAAA,GAJ2B,CAI/B;AACA,UAAI6C,eAAAA,GAL2B,KAK/B;AACA/I,MAAAA,OAAAA,CAAAA,QAAAA,EAAkB,mBAAmB;AACnC,YAAI9J,KAAAA,GAAQ+P,OADuB,EACnC;AACA,YAAI+C,eAAAA,GAF+B,KAEnC;AACAF,QAAAA,MAAAA,CAAAA,IAAAA,CAHmC,SAGnCA;AACA5C,QAAAA,SAJmC;AAKnC7D,QAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,OAAAA,EAAAA,IAAAA,CAAqC,iBAAiB;AACpD,cAAI2G,eAAAA,IAAJ,iBADoD;AAEpDD,UAAAA,eAAAA,GAFoD,IAEpDA;AACAn8B,UAAAA,OAAAA,CAHoD,KAGpDA,CAAAA;AAHFy1B,SAAAA,EAIG,iBAAiB;AAClB,cAAI2G,eAAAA,IAAJ,iBADkB;AAElBA,UAAAA,eAAAA,GAFkB,IAElBA;AACAF,UAAAA,MAAAA,CAAAA,KAAAA,CAAAA,GAHkB,KAGlBA;AACA,yBAAej8B,MAAAA,CAAO,KAAK,WAAL,gBAAK,CAAL,UAJJ,iBAII,CAAPA,CAAf;AAbiC,SAKnCw1B;AAX6B,OAM/BrC,CAAAA;AAgBA,qBAAenzB,MAAAA,CAAO,KAAK,WAAL,gBAAK,CAAL,UAtBS,iBAsBT,CAAPA,CAAf;AA3BwB,KAKb,CAAb;AAwBA,QAAIgI,MAAAA,CAAJ,OAAkBhI,MAAAA,CAAOgI,MAAAA,CA7BC,KA6BRhI,CAAAA;AAClB,WAAO+gB,UAAAA,CA9BmB,OA8B1B;AA/BiC;AAAA,CAArCiB,CAAAA;;;;;;ACZa;;AACb,IAAIA,CAAAA,GAAI1c,mBAAAA,CADR,CACQA,CAAR;;AACA,IAAI2gB,OAAAA,GAAU3gB,mBAAAA,CAFd,EAEcA,CAAd;;AACA,IAAI0vB,aAAAA,GAAgB1vB,mBAAAA,CAHpB,EAGoBA,CAApB;;AACA,IAAIue,KAAAA,GAAQve,mBAAAA,CAJZ,EAIYA,CAAZ;;AACA,IAAIyf,UAAAA,GAAazf,mBAAAA,CALjB,EAKiBA,CAAjB;;AACA,IAAI+vB,kBAAAA,GAAqB/vB,mBAAAA,CANzB,GAMyBA,CAAzB;;AACA,IAAIkwB,cAAAA,GAAiBlwB,mBAAAA,CAPrB,GAOqBA,CAArB;;AACA,IAAI8c,QAAAA,GAAW9c,mBAAAA,CARf,EAQeA,CAAf;;AAGA,IAAI82B,WAAAA,GAAc,CAAC,CAAD,iBAAmB,MAAM,YAAY;AACrDpH,EAAAA,aAAAA,CAAAA,SAAAA,CAAAA,SAAAA,EAAAA,IAAAA,CAAwC;AAAE6C,IAAAA,IAAAA,EAAM,gBAAY,CAApB;AAAA,GAAxC7C,EAA+E,YAAY,CADtC,CACrDA;AAZF,CAWqC,CAArC;AAMAhT,CAAAA,CAAE;AAAEY,EAAAA,MAAAA,EAAF;AAAqB2P,EAAAA,KAAAA,EAArB;AAAkC8J,EAAAA,IAAAA,EAAlC;AAA8C7J,EAAAA,MAAAA,EAA9C;AAAA,CAAFxQ,EAAuE;AACrE,aAAW,6BAAqB;AAC9B,QAAIpP,CAAAA,GAAIyiB,kBAAAA,CAAAA,IAAAA,EAAyBtQ,UAAAA,CADH,SACGA,CAAzBsQ,CAAR;AACA,QAAIiH,UAAAA,GAAa,oBAFa,UAE9B;AACA,WAAO,UACL,aAAa,aAAa;AACxB,aAAO,kBAAkBC,SAAlB,SAAoC,YAAY;AAAE,eAAF,CAAE;AADjC,OACjB,CAAP;AADF,QADK,WAIL,aAAa,aAAa;AACxB,aAAO,kBAAkBA,SAAlB,SAAoC,YAAY;AAAE,cAAF,CAAE;AADjC,OACjB,CAAP;AADF,QAP4B,SAGvB,CAAP;AAJmE;AAAA,CAAvEva,CAAAA;;AAgBA,IAAI,YAAY,wBAAhB,YAAoD;AAClD,MAAItZ,MAAAA,GAASqc,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,SAAAA,CADqC,SACrCA,CAAb;;AACA,MAAIiQ,aAAAA,CAAAA,SAAAA,CAAAA,SAAAA,MAAJ,QAAmD;AACjD5S,IAAAA,QAAAA,CAAS4S,aAAAA,CAAT5S,SAAAA,EAAAA,SAAAA,EAAAA,MAAAA,EAAqD;AAAEkF,MAAAA,MAAAA,EADN;AACI,KAArDlF,CAAAA;AAHgD;AAAA;;;;;;ACjCvC;;AACb,IAAIoa,MAAAA,GAASl3B,+BAAb;;AACA,IAAIxB,QAAAA,GAAWwB,mBAAAA,CAFf,EAEeA,CAAf;;AACA,IAAI4hB,mBAAAA,GAAsB5hB,mBAAAA,CAH1B,EAG0BA,CAA1B;;AACA,IAAI4pB,cAAAA,GAAiB5pB,mBAAAA,CAJrB,EAIqBA,CAArB;;AAEA,IAAIm3B,eAAAA,GANJ,iBAMA;AACA,IAAIrN,gBAAAA,GAAmBlI,mBAAAA,CAPvB,GAOA;AACA,IAAIC,gBAAAA,GAAmBD,mBAAAA,CAAAA,SAAAA,CARvB,eAQuBA,CAAvB;AAIAgI,cAAAA,CAAAA,MAAAA,EAAAA,QAAAA,EAAiC,oBAAoB;AACnDE,EAAAA,gBAAAA,CAAAA,IAAAA,EAAuB;AACrBzoB,IAAAA,IAAAA,EADqB;AAErBsnB,IAAAA,MAAAA,EAAQnqB,QAAAA,CAFa,QAEbA,CAFa;AAGrBulB,IAAAA,KAAAA,EAHqB;AAAA,GAAvB+F,CAAAA;AADFF,CAAAA,EAQG,gBAAgB;AACjB,MAAIzmB,KAAAA,GAAQ0e,gBAAAA,CADK,IACLA,CAAZ;AACA,MAAI8G,MAAAA,GAASxlB,KAAAA,CAFI,MAEjB;AACA,MAAI4gB,KAAAA,GAAQ5gB,KAAAA,CAHK,KAGjB;AACA,MAJiB,KAIjB;AACA,MAAI4gB,KAAAA,IAAS4E,MAAAA,CAAb,QAA4B,OAAO;AAAEnoB,IAAAA,KAAAA,EAAF;AAAoBiD,IAAAA,IAAAA,EAApB;AAAA,GAAP;AAC5B2zB,EAAAA,KAAAA,GAAQF,MAAAA,CAAAA,MAAAA,EANS,KAMTA,CAARE;AACAj0B,EAAAA,KAAAA,CAAAA,KAAAA,IAAei0B,KAAAA,CAPE,MAOjBj0B;AACA,SAAO;AAAE3C,IAAAA,KAAAA,EAAF;AAAgBiD,IAAAA,IAAAA,EAAhB;AAAA,GAAP;AAhBFmmB,CAAAA,CAAAA;;;;;;;;ACZA,IAAIzF,SAAAA,GAAYnkB,mBAAAA,CAAhB,EAAgBA,CAAhB;;AACA,IAAIxB,QAAAA,GAAWwB,mBAAAA,CADf,EACeA,CAAf;;AACA,IAAI4e,sBAAAA,GAAyB5e,mBAAAA,CAF7B,EAE6BA,CAA7B;;AAGA,IAAI8jB,YAAAA,GAAe,SAAfA,YAAe,oBAA6B;AAC9C,SAAO,sBAAsB;AAC3B,QAAIuT,CAAAA,GAAI74B,QAAAA,CAASogB,sBAAAA,CADU,KACVA,CAATpgB,CAAR;AACA,QAAI84B,QAAAA,GAAWnT,SAAAA,CAFY,GAEZA,CAAf;AACA,QAAIoT,IAAAA,GAAOF,CAAAA,CAHgB,MAG3B;AACA,eAJ2B,MAI3B;AACA,QAAIC,QAAAA,GAAAA,CAAAA,IAAgBA,QAAAA,IAApB,MAAsC,OAAOE,iBAAAA,GAAAA,EAAAA,GALlB,SAKW;AACtCld,IAAAA,KAAAA,GAAQ+c,CAAAA,CAAAA,UAAAA,CANmB,QAMnBA,CAAR/c;AACA,WAAOA,KAAAA,GAAAA,MAAAA,IAAkBA,KAAAA,GAAlBA,MAAAA,IAAoCgd,QAAAA,GAAAA,CAAAA,KAApChd,IAAAA,IACD,UAAS+c,CAAAA,CAAAA,UAAAA,CAAaC,QAAAA,GAAvB,CAAUD,CAAT,IADC/c,MAAAA,IACgD5a,MAAAA,GADhD4a,MAAAA,GAEDkd,iBAAAA,GAAoBH,CAAAA,CAAAA,MAAAA,CAApBG,QAAoBH,CAApBG,GAFCld,KAAAA,GAGDkd,iBAAAA,GAAoBH,CAAAA,CAAAA,KAAAA,CAAAA,QAAAA,EAAkBC,QAAAA,GAAtCE,CAAoBH,CAApBG,GAAuD,mBAAD,EAAC,KAAyB,SAA1B,MAAC,IAVlC,OAO3B;AAR4C,GAC9C;AANF,CAKA;;AAeAz3B,MAAAA,CAAAA,OAAAA,GAAiB;AAGf03B,EAAAA,MAAAA,EAAQ3T,YAAAA,CAHO,KAGPA,CAHO;AAMfoT,EAAAA,MAAAA,EAAQpT,YAAAA,CANO,IAMPA;AANO,CAAjB/jB;;;;;;;;;;ACjBC,4BAA2B;AACxB,kDAA+B,aAA/B,cAA+D+kB,OAAAA,CAA/D,OAA+DA,CAA/D,GACA,QAA6CjkB,iCAAO,CAAPA,OAAO,CAAPA,oCAA7C,OAA6CA;AAAA;AAAA;AAAA,kGAA7C,IACC,CADD,CADA;AADH,WAIQ,mBAAmB;AAAA;;AAGxB,MAAI62B,cAAAA,GAAiB,gCAAgC,QAAO5X,MAAAA,CAAP,cAAhC,oBAEjB,uBAAuB;AAAE,WAAO,0BAAT,GAAE;AALL,GAGxB;;AAKA,kBAAgB;AACZ,WADY,SACZ;AAToB;;AAWxB,wBAAsB;AAClB,QAAI,gBAAJ,aAAiC;AAC7B,aAD6B,IAC7B;AADJ,WAGK,IAAI,kBAAJ,aAAmC;AACpC,aADoC,MACpC;AADC,WAGA,IAAI,kBAAJ,aAAmC;AACpC,aADoC,MACpC;AARc;;AAUlB,WAVkB,SAUlB;AArBoB;;AAuBxB,MAAI6X,OAAAA,GAAUC,UAvBU,EAuBxB;;AAEA,2BAAyB;AACrB,WAAQ,2BAAyBjR,CAAAA,KAA1B,IAAC,IAAwC,aAD3B,UACrB;AA1BoB;;AA4BxB,MAAIkR,8BAAAA,GA5BoB,IA4BxB;AAEA,MAAIC,eAAAA,GA9BoB,OA8BxB;AACA,MAAIC,mBAAAA,GAAsBrE,OAAAA,CAAAA,SAAAA,CA/BF,IA+BxB;AACA,MAAIsE,sBAAAA,GAAyBtE,OAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAhCL,eAgCKA,CAA7B;AACA,MAAIuE,qBAAAA,GAAwBvE,OAAAA,CAAAA,MAAAA,CAAAA,IAAAA,CAjCJ,eAiCIA,CAA5B;;AACA,gCAA8B;AAC1B,WAAO,oBADmB,QACnB,CAAP;AAnCoB;;AAqCxB,sCAAoC;AAChC,WAAOsE,sBAAAA,CADyB,KACzBA,CAAP;AAtCoB;;AAwCxB,uCAAqC;AACjC,WAAOC,qBAAAA,CAD0B,MAC1BA,CAAP;AAzCoB;;AA2CxB,gEAA8D;AAG1D,WAAOF,mBAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAAAA,WAAAA,EAHmD,UAGnDA,CAAP;AA9CoB;;AAgDxB,yDAAuD;AACnDG,IAAAA,kBAAAA,CAAmBA,kBAAAA,CAAAA,OAAAA,EAAAA,WAAAA,EAAnBA,UAAmBA,CAAnBA,EAAAA,SAAAA,EADmD,8BACnDA,CAAAA;AAjDoB;;AAmDxB,iDAA+C;AAC3CC,IAAAA,WAAAA,CAAAA,OAAAA,EAD2C,WAC3CA,CAAAA;AApDoB;;AAsDxB,8CAA4C;AACxCA,IAAAA,WAAAA,CAAAA,OAAAA,EAAAA,SAAAA,EADwC,UACxCA,CAAAA;AAvDoB;;AAyDxB,+EAA6E;AACzE,WAAOD,kBAAAA,CAAAA,OAAAA,EAAAA,kBAAAA,EADkE,gBAClEA,CAAP;AA1DoB;;AA4DxB,8CAA4C;AACxCA,IAAAA,kBAAAA,CAAAA,OAAAA,EAAAA,SAAAA,EADwC,8BACxCA,CAAAA;AA7DoB;;AA+DxB,MAAIrC,cAAAA,GAAkB,YAAY;AAC9B,QAAIuC,oBAAAA,GAAuBT,OAAAA,IAAWA,OAAAA,CADR,cAC9B;;AACA,QAAI,gCAAJ,YAAgD;AAC5C,aAD4C,oBAC5C;AAH0B;;AAK9B,QAAIU,eAAAA,GAAkBC,mBAAAA,CALQ,SAKRA,CAAtB;AACA,WAAO,cAAc;AAAE,aAAOJ,kBAAAA,CAAAA,eAAAA,EAAT,EAASA,CAAP;AANO,KAM9B;AArEoB,GA+DF,EAAtB;;AAQA,mCAAiC;AAC7B,QAAI,aAAJ,YAA6B;AACzB,YAAM,cADmB,4BACnB,CAAN;AAFyB;;AAI7B,WAAO1yB,QAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAJsB,IAItBA,CAAP;AA3EoB;;AA6ExB,mCAAiC;AAC7B,QAAI;AACA,aAAO8yB,mBAAAA,CAAoBC,WAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAD3B,IAC2BA,CAApBD,CAAP;AADJ,MAGA,cAAc;AACV,aAAOE,mBAAAA,CADG,KACHA,CAAP;AALyB;AA7ET;;AAwFxB,MAAIC,oBAAAA,GAxFoB,KAwFxB;;AAOA,MAAIC,WAAAA,GAA6B,YAAY;AACzC,2BAAuB;AACnB,qBADmB,CACnB;AACA,mBAFmB,CAEnB;AAEA,oBAAc;AACVC,QAAAA,SAAAA,EADU;AAEVC,QAAAA,KAAAA,EAFU;AAAA,OAAd;AAIA,mBAAa,KARM,MAQnB;AAIA,qBAZmB,CAYnB;AAEA,mBAdmB,CAcnB;AAfqC;;AAiBzC16B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBw6B,WAAAA,CAAtBx6B,SAAAA,EAAAA,QAAAA,EAAuD;AACnDyd,MAAAA,GAAAA,EAAK,eAAY;AACb,eAAO,KADM,KACb;AAF+C;AAInDlb,MAAAA,UAAAA,EAJmD;AAKnDC,MAAAA,YAAAA,EALmD;AAAA,KAAvDxC;;AAWAw6B,IAAAA,WAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAA6B,mBAAmB;AAC5C,UAAIG,OAAAA,GAAU,KAD8B,KAC5C;AACA,UAAIC,OAAAA,GAFwC,OAE5C;;AACA,UAAID,OAAAA,CAAAA,SAAAA,CAAAA,MAAAA,KAA6BJ,oBAAAA,GAAjC,GAA2D;AACvDK,QAAAA,OAAAA,GAAU;AACNH,UAAAA,SAAAA,EADM;AAENC,UAAAA,KAAAA,EAFM;AAAA,SAAVE;AAJwC;;AAW5CD,MAAAA,OAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAX4C,OAW5CA;;AACA,UAAIC,OAAAA,KAAJ,SAAyB;AACrB,qBADqB,OACrB;AACAD,QAAAA,OAAAA,CAAAA,KAAAA,GAFqB,OAErBA;AAdwC;;AAgB5C,QAAE,KAhB0C,KAgB5C;AA5CqC,KA4BzCH;;AAoBAA,IAAAA,WAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAA8B,YAAY;AACtC,UAAIK,QAAAA,GAAW,KADuB,MACtC;AACA,UAAIC,QAAAA,GAFkC,QAEtC;AACA,UAAIC,SAAAA,GAAY,KAHsB,OAGtC;AACA,UAAIC,SAAAA,GAAYD,SAAAA,GAJsB,CAItC;AACA,UAAIE,QAAAA,GAAWJ,QAAAA,CALuB,SAKtC;AACA,UAAIK,OAAAA,GAAUD,QAAAA,CANwB,SAMxBA,CAAd;;AACA,UAAID,SAAAA,KAAJ,sBAAwC;AACpCF,QAAAA,QAAAA,GAAWD,QAAAA,CADyB,KACpCC;AACAE,QAAAA,SAAAA,GAFoC,CAEpCA;AATkC;;AAYtC,QAAE,KAZoC,KAYtC;AACA,qBAbsC,SAatC;;AACA,UAAIH,QAAAA,KAAJ,UAA2B;AACvB,sBADuB,QACvB;AAfkC;;AAkBtCI,MAAAA,QAAAA,CAAAA,SAAAA,CAAAA,GAlBsC,SAkBtCA;AACA,aAnBsC,OAmBtC;AAnEqC,KAgDzCT;;AA6BAA,IAAAA,WAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAgC,oBAAoB;AAChD,UAAIp7B,CAAAA,GAAI,KADwC,OAChD;AACA,UAAI44B,IAAAA,GAAO,KAFqC,MAEhD;AACA,UAAIiD,QAAAA,GAAWjD,IAAAA,CAHiC,SAGhD;;AACA,aAAO54B,CAAAA,KAAM67B,QAAAA,CAAN77B,MAAAA,IAAyB44B,IAAAA,CAAAA,KAAAA,KAAhC,WAA0D;AACtD,YAAI54B,CAAAA,KAAM67B,QAAAA,CAAV,QAA2B;AACvBjD,UAAAA,IAAAA,GAAOA,IAAAA,CADgB,KACvBA;AACAiD,UAAAA,QAAAA,GAAWjD,IAAAA,CAFY,SAEvBiD;AACA77B,UAAAA,CAAAA,GAHuB,CAGvBA;;AACA,cAAI67B,QAAAA,CAAAA,MAAAA,KAAJ,GAA2B;AAAA;AAJJ;AAD2B;;AAStDE,QAAAA,QAAAA,CAASF,QAAAA,CAT6C,CAS7CA,CAATE,CAAAA;AACA,UAVsD,CAUtD;AAd4C;AA7EX,KA6EzCX;;AAmBAA,IAAAA,WAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAA6B,YAAY;AACrC,UAAIY,KAAAA,GAAQ,KADyB,MACrC;AACA,UAAIC,MAAAA,GAAS,KAFwB,OAErC;AACA,aAAOD,KAAAA,CAAAA,SAAAA,CAH8B,MAG9BA,CAAP;AAnGqC,KAgGzCZ;;AAKA,WArGyC,WAqGzC;AApMoB,GA+FS,EAAjC;;AAwGA,iEAA+D;AAC3Dc,IAAAA,MAAAA,CAAAA,oBAAAA,GAD2D,MAC3DA;AACAC,IAAAA,MAAAA,CAAAA,OAAAA,GAF2D,MAE3DA;;AACA,QAAIA,MAAAA,CAAAA,MAAAA,KAAJ,YAAkC;AAC9BC,MAAAA,oCAAAA,CAD8B,MAC9BA,CAAAA;AADJ,WAGK,IAAID,MAAAA,CAAAA,MAAAA,KAAJ,UAAgC;AACjCE,MAAAA,8CAAAA,CADiC,MACjCA,CAAAA;AADC,WAGA;AACDC,MAAAA,8CAAAA,CAAAA,MAAAA,EAAuDH,MAAAA,CADtD,YACDG,CAAAA;AAVuD;AAvMvC;;AAsNxB,6DAA2D;AACvD,QAAIH,MAAAA,GAASD,MAAAA,CAD0C,oBACvD;AACA,WAAOK,oBAAAA,CAAAA,MAAAA,EAFgD,MAEhDA,CAAP;AAxNoB;;AA0NxB,sDAAoD;AAChD,QAAIL,MAAAA,CAAAA,oBAAAA,CAAAA,MAAAA,KAAJ,YAAuD;AACnDM,MAAAA,gCAAAA,CAAAA,MAAAA,EAAyC,cADU,kFACV,CAAzCA,CAAAA;AADJ,WAGK;AACDC,MAAAA,yCAAAA,CAAAA,MAAAA,EAAkD,cADjD,kFACiD,CAAlDA,CAAAA;AAL4C;;AAOhDP,IAAAA,MAAAA,CAAAA,oBAAAA,CAAAA,OAAAA,GAPgD,SAOhDA;AACAA,IAAAA,MAAAA,CAAAA,oBAAAA,GARgD,SAQhDA;AAlOoB;;AAqOxB,qCAAmC;AAC/B,WAAO,cAAc,mBADU,mCACxB,CAAP;AAtOoB;;AAyOxB,wDAAsD;AAClDA,IAAAA,MAAAA,CAAAA,cAAAA,GAAwB,WAAW,2BAA2B;AAC1DA,MAAAA,MAAAA,CAAAA,sBAAAA,GAD0D,OAC1DA;AACAA,MAAAA,MAAAA,CAAAA,qBAAAA,GAF0D,MAE1DA;AAH8C,KAC1B,CAAxBA;AA1OoB;;AA+OxB,0EAAwE;AACpEE,IAAAA,oCAAAA,CADoE,MACpEA,CAAAA;AACAI,IAAAA,gCAAAA,CAAAA,MAAAA,EAFoE,MAEpEA,CAAAA;AAjPoB;;AAmPxB,kEAAgE;AAC5DJ,IAAAA,oCAAAA,CAD4D,MAC5DA,CAAAA;AACAM,IAAAA,iCAAAA,CAF4D,MAE5DA,CAAAA;AArPoB;;AAuPxB,4DAA0D;AACtD,QAAIR,MAAAA,CAAAA,qBAAAA,KAAJ,WAAgD;AAAA;AADM;;AAItDS,IAAAA,yBAAAA,CAA0BT,MAAAA,CAJ4B,cAItDS,CAAAA;;AACAT,IAAAA,MAAAA,CAAAA,qBAAAA,CALsD,MAKtDA;;AACAA,IAAAA,MAAAA,CAAAA,sBAAAA,GANsD,SAMtDA;AACAA,IAAAA,MAAAA,CAAAA,qBAAAA,GAPsD,SAOtDA;AA9PoB;;AAgQxB,qEAAmE;AAC/DI,IAAAA,8CAAAA,CAAAA,MAAAA,EAD+D,MAC/DA,CAAAA;AAjQoB;;AAmQxB,qDAAmD;AAC/C,QAAIJ,MAAAA,CAAAA,sBAAAA,KAAJ,WAAiD;AAAA;AADF;;AAI/CA,IAAAA,MAAAA,CAAAA,sBAAAA,CAJ+C,SAI/CA;;AACAA,IAAAA,MAAAA,CAAAA,sBAAAA,GAL+C,SAK/CA;AACAA,IAAAA,MAAAA,CAAAA,qBAAAA,GAN+C,SAM/CA;AAzQoB;;AA4QxB,MAAIU,UAAAA,GAAaxC,cAAAA,CA5QO,gBA4QPA,CAAjB;AACA,MAAIyC,UAAAA,GAAazC,cAAAA,CA7QO,gBA6QPA,CAAjB;AACA,MAAI0C,WAAAA,GAAc1C,cAAAA,CA9QM,iBA8QNA,CAAlB;AACA,MAAI2C,SAAAA,GAAY3C,cAAAA,CA/QQ,eA+QRA,CAAhB;;AAIA,MAAI4C,cAAAA,GAAiBljB,MAAAA,CAAAA,QAAAA,IAAmB,aAAa;AACjD,WAAO,yBAAyBmjB,QAAAA,CADiB,CACjBA,CAAhC;AApRoB,GAmRxB;;AAMA,MAAIC,SAAAA,GAAY5+B,IAAAA,CAAAA,KAAAA,IAAc,aAAa;AACvC,WAAOqe,CAAAA,GAAAA,CAAAA,GAAQre,IAAAA,CAAAA,IAAAA,CAARqe,CAAQre,CAARqe,GAAuBre,IAAAA,CAAAA,KAAAA,CADS,CACTA,CAA9B;AA1RoB,GAyRxB;;AAKA,2BAAyB;AACrB,WAAO,2BAAyB,aADX,UACrB;AA/RoB;;AAiSxB,0CAAwC;AACpC,QAAIgF,GAAAA,KAAAA,SAAAA,IAAqB,CAAC65B,YAAAA,CAA1B,GAA0BA,CAA1B,EAA6C;AACzC,YAAM,cAAcx5B,OAAAA,GADqB,oBACnC,CAAN;AAFgC;AAjShB;;AAuSxB,sCAAoC;AAChC,QAAI,aAAJ,YAA6B;AACzB,YAAM,cAAcA,OAAAA,GADK,qBACnB,CAAN;AAF4B;AAvSZ;;AA6SxB,uBAAqB;AACjB,WAAQ,2BAAyB0lB,CAAAA,KAA1B,IAAC,IAAwC,aAD/B,UACjB;AA9SoB;;AAgTxB,oCAAkC;AAC9B,QAAI,CAACzH,QAAAA,CAAL,CAAKA,CAAL,EAAkB;AACd,YAAM,cAAcje,OAAAA,GADN,oBACR,CAAN;AAF0B;AAhTV;;AAqTxB,wDAAsD;AAClD,QAAI0lB,CAAAA,KAAJ,WAAqB;AACjB,YAAM,cAAc,0DADH,IACX,CAAN;AAF8C;AArT9B;;AA0TxB,kDAAgD;AAC5C,QAAIA,CAAAA,KAAJ,WAAqB;AACjB,YAAM,cAAc+T,KAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,GADH,IACX,CAAN;AAFwC;AA1TxB;;AAgUxB,4CAA0C;AACtC,WAAOtjB,MAAAA,CAD+B,KAC/BA,CAAP;AAjUoB;;AAmUxB,iCAA+B;AAC3B,WAAOuP,CAAAA,KAAAA,CAAAA,GAAAA,CAAAA,GADoB,CAC3B;AApUoB;;AAsUxB,0BAAwB;AACpB,WAAOgU,kBAAAA,CAAmBH,SAAAA,CADN,CACMA,CAAnBG,CAAP;AAvUoB;;AA0UxB,mEAAiE;AAC7D,QAAIC,UAAAA,GADyD,CAC7D;AACA,QAAIC,UAAAA,GAAazjB,MAAAA,CAF4C,gBAE7D;AACA,QAAIuP,CAAAA,GAAIvP,MAAAA,CAHqD,KAGrDA,CAAR;AACAuP,IAAAA,CAAAA,GAAIgU,kBAAAA,CAJyD,CAIzDA,CAAJhU;;AACA,QAAI,CAAC2T,cAAAA,CAAL,CAAKA,CAAL,EAAwB;AACpB,YAAM,cAAcr5B,OAAAA,GADA,yBACd,CAAN;AANyD;;AAQ7D0lB,IAAAA,CAAAA,GAAImU,WAAAA,CARyD,CAQzDA,CAAJnU;;AACA,QAAIA,CAAAA,GAAAA,UAAAA,IAAkBA,CAAAA,GAAtB,YAAsC;AAClC,YAAM,cAAc1lB,OAAAA,GAAAA,oCAAAA,GAAAA,UAAAA,GAAAA,MAAAA,GAAAA,UAAAA,GADc,aAC5B,CAAN;AAVyD;;AAY7D,QAAI,CAACq5B,cAAAA,CAAD,CAACA,CAAD,IAAsB3T,CAAAA,KAA1B,GAAmC;AAC/B,aAD+B,CAC/B;AAbyD;;AAmB7D,WAnB6D,CAmB7D;AA7VoB;;AAgWxB,4CAA0C;AACtC,QAAI,CAACoU,gBAAAA,CAAL,CAAKA,CAAL,EAA0B;AACtB,YAAM,cAAc95B,OAAAA,GADE,2BAChB,CAAN;AAFkC;AAhWlB;;AAuWxB,sDAAoD;AAChD,WAAO,gCADyC,MACzC,CAAP;AAxWoB;;AA2WxB,6DAA2D;AACvDw4B,IAAAA,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAAA,IAAAA,CADuD,WACvDA;AA5WoB;;AA8WxB,iEAA+D;AAC3D,QAAID,MAAAA,GAASC,MAAAA,CAD8C,OAC3D;;AACA,QAAIuB,WAAAA,GAAcxB,MAAAA,CAAAA,aAAAA,CAFyC,KAEzCA,EAAlB;;AACA,cAAU;AACNwB,MAAAA,WAAAA,CADM,WACNA;AADJ,WAGK;AACDA,MAAAA,WAAAA,CAAAA,WAAAA,CADC,KACDA;AAPuD;AA9WvC;;AAwXxB,oDAAkD;AAC9C,WAAOvB,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CADuC,MAC9C;AAzXoB;;AA2XxB,kDAAgD;AAC5C,QAAID,MAAAA,GAASC,MAAAA,CAD+B,OAC5C;;AACA,QAAID,MAAAA,KAAJ,WAA0B;AACtB,aADsB,KACtB;AAHwC;;AAK5C,QAAI,CAACyB,6BAAAA,CAAL,MAAKA,CAAL,EAA4C;AACxC,aADwC,KACxC;AANwC;;AAQ5C,WAR4C,IAQ5C;AAnYoB;;AA0YxB,MAAIC,2BAAAA,GAA6C,YAAY;AACzD,iDAA6C;AACzCC,MAAAA,sBAAAA,CAAAA,MAAAA,EAAAA,CAAAA,EADyC,6BACzCA,CAAAA;AACAC,MAAAA,oBAAAA,CAAAA,MAAAA,EAFyC,iBAEzCA,CAAAA;;AACA,UAAIC,sBAAAA,CAAJ,MAAIA,CAAJ,EAAoC;AAChC,cAAM,cAD0B,6EAC1B,CAAN;AAJqC;;AAMzCC,MAAAA,qCAAAA,CAAAA,IAAAA,EANyC,MAMzCA,CAAAA;AACA,2BAAqB,IAPoB,WAOpB,EAArB;AARqD;;AAUzDp9B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBg9B,2BAAAA,CAAtBh9B,SAAAA,EAAAA,QAAAA,EAAuE;AAKnEyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACsf,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,iBAAOzC,mBAAAA,CAAoB+C,gCAAAA,CADW,QACXA,CAApB/C,CAAP;AAFS;;AAIb,eAAO,KAJM,cAIb;AAT+D;AAWnE/3B,MAAAA,UAAAA,EAXmE;AAYnEC,MAAAA,YAAAA,EAZmE;AAAA,KAAvExC;;AAiBAg9B,IAAAA,2BAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAA+C,kBAAkB;AAC7D,UAAItI,MAAAA,KAAW,KAAf,GAAuB;AAAEA,QAAAA,MAAAA,GAAF,SAAEA;AADoC;;AAE7D,UAAI,CAACqI,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,eAAOzC,mBAAAA,CAAoB+C,gCAAAA,CADW,QACXA,CAApB/C,CAAP;AAHyD;;AAK7D,UAAI,8BAAJ,WAA6C;AACzC,eAAOA,mBAAAA,CAAoBgD,mBAAAA,CADc,QACdA,CAApBhD,CAAP;AANyD;;AAQ7D,aAAOiD,iCAAAA,CAAAA,IAAAA,EARsD,MAQtDA,CAAP;AAnCqD,KA2BzDP;;AAeAA,IAAAA,2BAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAA6C,YAAY;AACrD,UAAI,CAACD,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,eAAOzC,mBAAAA,CAAoB+C,gCAAAA,CADW,MACXA,CAApB/C,CAAP;AAFiD;;AAIrD,UAAI,8BAAJ,WAA6C;AACzC,eAAOA,mBAAAA,CAAoBgD,mBAAAA,CADc,WACdA,CAApBhD,CAAP;AALiD;;AAOrD,UAPqD,cAOrD;AACA,UARqD,aAQrD;AACA,UAAI7G,OAAAA,GAAU,WAAW,2BAA2B;AAChD+J,QAAAA,cAAAA,GADgD,OAChDA;AACAC,QAAAA,aAAAA,GAFgD,MAEhDA;AAXiD,OASvC,CAAd;AAIA,UAAIX,WAAAA,GAAc;AACdY,QAAAA,WAAAA,EAAa,4BAAiB;AAAE,iBAAO,eAAe;AAAEp7B,YAAAA,KAAAA,EAAF;AAAgBiD,YAAAA,IAAAA,EAAhB;AAAA,WAAf,CAAP;AADlB;AAEdo4B,QAAAA,WAAAA,EAAa,uBAAY;AAAE,iBAAO,eAAe;AAAEr7B,YAAAA,KAAAA,EAAF;AAAoBiD,YAAAA,IAAAA,EAApB;AAAA,WAAf,CAAP;AAFb;AAGdq4B,QAAAA,WAAAA,EAAa,wBAAa;AAAE,iBAAOH,aAAAA,CAAT,CAASA,CAAP;AAHd;AAAA,OAAlB;AAKAI,MAAAA,+BAAAA,CAAAA,IAAAA,EAlBqD,WAkBrDA,CAAAA;AACA,aAnBqD,OAmBrD;AA7DqD,KA0CzDb;;AA8BAA,IAAAA,2BAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAoD,YAAY;AAC5D,UAAI,CAACD,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,cAAMM,gCAAAA,CADgC,aAChCA,CAAN;AAFwD;;AAI5D,UAAI,8BAAJ,WAA6C;AAAA;AAJe;;AAO5D,UAAI,4BAAJ,GAAmC;AAC/B,cAAM,cADyB,qFACzB,CAAN;AARwD;;AAU5DS,MAAAA,kCAAAA,CAV4D,IAU5DA,CAAAA;AAlFqD,KAwEzDd;;AAYA,WApFyD,2BAoFzD;AA9doB,GA0YyB,EAAjD;;AAsFAh9B,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwBg9B,2BAAAA,CAAxBh9B,SAAAA,EAA+D;AAC3D+9B,IAAAA,MAAAA,EAAQ;AAAEx7B,MAAAA,UAAAA,EADiD;AACnD,KADmD;AAE3Dy7B,IAAAA,IAAAA,EAAM;AAAEz7B,MAAAA,UAAAA,EAFmD;AAErD,KAFqD;AAG3D07B,IAAAA,WAAAA,EAAa;AAAE17B,MAAAA,UAAAA,EAH4C;AAG9C,KAH8C;AAI3D27B,IAAAA,MAAAA,EAAQ;AAAE37B,MAAAA,UAAAA,EAJiD;AAInD;AAJmD,GAA/DvC;;AAMA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBg9B,2BAAAA,CAAtBh9B,SAAAA,EAA6Dw5B,cAAAA,CAA7Dx5B,WAAAA,EAAyF;AACrFsC,MAAAA,KAAAA,EADqF;AAErFE,MAAAA,YAAAA,EAFqF;AAAA,KAAzFxC;AAveoB;;AA6exB,4CAA0C;AACtC,QAAI,CAACm+B,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFkC;;AAItC,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,eAAKA,CAAL,EAA+D;AAC3D,aAD2D,KAC3D;AALkC;;AAOtC,WAAOyoB,CAAAA,YAP+B,2BAOtC;AApfoB;;AAsfxB,gEAA8D;AAC1D,QAAI8S,MAAAA,GAASD,MAAAA,CAD6C,oBAC1D;AACAC,IAAAA,MAAAA,CAAAA,UAAAA,GAF0D,IAE1DA;;AACA,QAAIA,MAAAA,CAAAA,MAAAA,KAAJ,UAAgC;AAC5BuB,MAAAA,WAAAA,CAD4B,WAC5BA;AADJ,WAGK,IAAIvB,MAAAA,CAAAA,MAAAA,KAAJ,WAAiC;AAClCuB,MAAAA,WAAAA,CAAAA,WAAAA,CAAwBvB,MAAAA,CADU,YAClCuB;AADC,WAGA;AACDvB,MAAAA,MAAAA,CAAAA,yBAAAA,CAAAA,SAAAA,EADC,WACDA;AAVsD;AAtftC;;AAogBxB,kDAAgD;AAC5C,WAAO,cAAc,kDADuB,oDACrC,CAAP;AArgBoB;;AAygBxB,MAzgBwB,EAygBxB;;AACA,MA1gBwB,sBA0gBxB;;AACA,MAAI,QAAO/B,cAAAA,CAAP,mBAAJ,UAAsD;AAGlD4E,IAAAA,sBAAAA,IAA0B,SAGtBC,EAAAA,CAAG7E,cAAAA,CAAH6E,aAAAA,CAAAA,GAAmC,YAAY;AAC3C,aAD2C,IAC3C;AAJkB,OAHwB,EAGlDD,CAAAA;AAOAp+B,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,sBAAAA,EAA8Cw5B,cAAAA,CAA9Cx5B,aAAAA,EAA4E;AAAEuC,MAAAA,UAAAA,EAV5B;AAU0B,KAA5EvC;AArhBoB;;AAyhBxB,MAAIs+B,+BAAAA,GAAiD,YAAY;AAC7D,oEAAgE;AAC5D,6BAD4D,SAC5D;AACA,yBAF4D,KAE5D;AACA,qBAH4D,MAG5D;AACA,4BAJ4D,aAI5D;AALyD;;AAO7DA,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAAiD,YAAY;AACzD,UAAIC,KAAAA,GADqD,IACzD;;AACA,UAAIC,SAAAA,GAAY,SAAZA,SAAY,GAAY;AAAE,eAAOD,KAAAA,CAAT,UAASA,EAAP;AAF2B,OAEzD;;AACA,6BAAuB,uBACnBE,oBAAAA,CAAqB,KAArBA,eAAAA,EAAAA,SAAAA,EADmB,SACnBA,CADmB,GAEnBD,SALqD,EAGzD;AAGA,aAAO,KANkD,eAMzD;AAbyD,KAO7DF;;AAQAA,IAAAA,+BAAAA,CAAAA,SAAAA,aAAmD,iBAAiB;AAChE,UAAIC,KAAAA,GAD4D,IAChE;;AACA,UAAIG,WAAAA,GAAc,SAAdA,WAAc,GAAY;AAAE,eAAOH,KAAAA,CAAAA,YAAAA,CAAT,KAASA,CAAP;AAFgC,OAEhE;;AACA,aAAO,uBACHE,oBAAAA,CAAqB,KAArBA,eAAAA,EAAAA,WAAAA,EADG,WACHA,CADG,GAEHC,WAL4D,EAGhE;AAlByD,KAe7DJ;;AAOAA,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,UAAAA,GAAuD,YAAY;AAC/D,UAAIC,KAAAA,GAD2D,IAC/D;;AACA,UAAI,KAAJ,aAAsB;AAClB,eAAO,gBAAgB;AAAEj8B,UAAAA,KAAAA,EAAF;AAAoBiD,UAAAA,IAAAA,EAApB;AAAA,SAAhB,CAAP;AAH2D;;AAK/D,UAAI+1B,MAAAA,GAAS,KALkD,OAK/D;;AACA,UAAIA,MAAAA,CAAAA,oBAAAA,KAAJ,WAA+C;AAC3C,eAAOhB,mBAAAA,CAAoBgD,mBAAAA,CADgB,SAChBA,CAApBhD,CAAP;AAP2D;;AAS/D,UAT+D,cAS/D;AACA,UAV+D,aAU/D;AACA,UAAI7G,OAAAA,GAAU,WAAW,2BAA2B;AAChD+J,QAAAA,cAAAA,GADgD,OAChDA;AACAC,QAAAA,aAAAA,GAFgD,MAEhDA;AAb2D,OAWjD,CAAd;AAIA,UAAIX,WAAAA,GAAc;AACdY,QAAAA,WAAAA,EAAa,4BAAiB;AAC1Ba,UAAAA,KAAAA,CAAAA,eAAAA,GAD0B,SAC1BA;AAGA5G,UAAAA,cAAAA,CAAe,YAAY;AAAE,mBAAO,eAAe;AAAEr1B,cAAAA,KAAAA,EAAF;AAAgBiD,cAAAA,IAAAA,EAAhB;AAAA,aAAf,CAAP;AAJH,WAI1BoyB,CAAAA;AALU;AAOdgG,QAAAA,WAAAA,EAAa,uBAAY;AACrBY,UAAAA,KAAAA,CAAAA,eAAAA,GADqB,SACrBA;AACAA,UAAAA,KAAAA,CAAAA,WAAAA,GAFqB,IAErBA;AACAT,UAAAA,kCAAAA,CAHqB,MAGrBA,CAAAA;AACAN,UAAAA,cAAAA,CAAe;AAAEl7B,YAAAA,KAAAA,EAAF;AAAoBiD,YAAAA,IAAAA,EAApB;AAAA,WAAfi4B,CAAAA;AAXU;AAadI,QAAAA,WAAAA,EAAa,6BAAkB;AAC3BW,UAAAA,KAAAA,CAAAA,eAAAA,GAD2B,SAC3BA;AACAA,UAAAA,KAAAA,CAAAA,WAAAA,GAF2B,IAE3BA;AACAT,UAAAA,kCAAAA,CAH2B,MAG3BA,CAAAA;AACAL,UAAAA,aAAAA,CAJ2B,MAI3BA,CAAAA;AAjBU;AAAA,OAAlB;AAoBAI,MAAAA,+BAAAA,CAAAA,MAAAA,EAnC+D,WAmC/DA,CAAAA;AACA,aApC+D,OAoC/D;AA1DyD,KAsB7DS;;AAsCAA,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,YAAAA,GAAyD,iBAAiB;AACtE,UAAI,KAAJ,aAAsB;AAClB,eAAO,gBAAgB;AAAEh8B,UAAAA,KAAAA,EAAF;AAAgBiD,UAAAA,IAAAA,EAAhB;AAAA,SAAhB,CAAP;AAFkE;;AAItE,yBAJsE,IAItE;AACA,UAAI+1B,MAAAA,GAAS,KALyD,OAKtE;;AACA,UAAIA,MAAAA,CAAAA,oBAAAA,KAAJ,WAA+C;AAC3C,eAAOhB,mBAAAA,CAAoBgD,mBAAAA,CADgB,kBAChBA,CAApBhD,CAAP;AAPkE;;AAStE,UAAI,CAAC,KAAL,gBAA0B;AACtB,YAAI91B,MAAAA,GAAS+4B,iCAAAA,CAAAA,MAAAA,EADS,KACTA,CAAb;AACAO,QAAAA,kCAAAA,CAFsB,MAEtBA,CAAAA;AACA,eAAO,6BAA6B,YAAY;AAAE,iBAAQ;AAAEx7B,YAAAA,KAAAA,EAAF;AAAgBiD,YAAAA,IAAAA,EAAhB;AAAA,WAAR;AAH5B,SAGf,CAAP;AAZkE;;AActEu4B,MAAAA,kCAAAA,CAdsE,MActEA,CAAAA;AACA,aAAO,oBAAoB;AAAEx7B,QAAAA,KAAAA,EAAF;AAAgBiD,QAAAA,IAAAA,EAAhB;AAAA,OAApB,CAAP;AA3EyD,KA4D7D+4B;;AAiBA,WA7E6D,+BA6E7D;AAtmBoB,GAyhB6B,EAArD;;AA+EA,MAAIK,oCAAAA,GAAuC;AACvC74B,IAAAA,IAAAA,EAAM,gBAAY;AACd,UAAI,CAAC84B,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,eAAOtE,mBAAAA,CAAoBuE,sCAAAA,CADW,MACXA,CAApBvE,CAAP;AAFU;;AAId,aAAO,wBAJO,IAIP,EAAP;AALmC;AAOvCwE,cAAQ,wBAAiB;AACrB,UAAI,CAACF,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,eAAOtE,mBAAAA,CAAoBuE,sCAAAA,CADW,QACXA,CAApBvE,CAAP;AAFiB;;AAIrB,aAAO,kCAJc,KAId,CAAP;AAXmC;AAAA,GAA3C;;AAcA,MAAI8D,sBAAAA,KAAJ,WAA0C;AACtCp+B,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,oCAAAA,EADsC,sBACtCA;AAvnBoB;;AA0nBxB,qEAAmE;AAC/D,QAAIs7B,MAAAA,GAASyD,kCAAAA,CADkD,MAClDA,CAAb;AACA,QAAIC,IAAAA,GAAO,4CAFoD,aAEpD,CAAX;AACA,QAAI93B,QAAAA,GAAWlH,MAAAA,CAAAA,MAAAA,CAHgD,oCAGhDA,CAAf;AACAkH,IAAAA,QAAAA,CAAAA,kBAAAA,GAJ+D,IAI/DA;AACA,WAL+D,QAK/D;AA/nBoB;;AAioBxB,4CAA0C;AACtC,QAAI,CAACi3B,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFkC;;AAItC,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,oBAAKA,CAAL,EAAoE;AAChE,aADgE,KAChE;AALkC;;AAOtC,QAAI;AAEA,aAAOyoB,CAAAA,CAAAA,kBAAAA,YAFP,+BAEA;AAFJ,MAKA,WAAW;AACP,aADO,KACP;AAbkC;AAjoBlB;;AAkpBxB,wDAAsD;AAClD,WAAO,cAAc,wCAD6B,mDAC3C,CAAP;AAnpBoB;;AAwpBxB,MAAIwW,WAAAA,GAAc/lB,MAAAA,CAAAA,KAAAA,IAAgB,aAAa;AAE3C,WAAOuP,CAAAA,KAFoC,CAE3C;AA1pBoB,GAwpBxB;;AAKA,yCAAuC;AAGnC,WAAOwS,QAAAA,CAH4B,KAG5BA,EAAP;AAhqBoB;;AAkqBxB,mEAAiE;AAC7D,6BAAyB,+BAAzB,CAAyB,CAAzB,EAD6D,UAC7D;AAnqBoB;;AAsqBxB,kCAAgC;AAC5B,WAD4B,CAC5B;AAvqBoB;;AA2qBxB,+BAA6B;AACzB,WADyB,KACzB;AA5qBoB;;AA8qBxB,gDAA8C;AAG1C,QAAI3d,MAAAA,CAAJ,OAAkB;AACd,aAAOA,MAAAA,CAAAA,KAAAA,CAAAA,KAAAA,EADO,GACPA,CAAP;AAJsC;;AAM1C,QAAI1D,MAAAA,GAASra,GAAAA,GAN6B,KAM1C;AACA,QAAI2/B,KAAAA,GAAQ,gBAP8B,MAO9B,CAAZ;AACAC,IAAAA,kBAAAA,CAAAA,KAAAA,EAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAR0C,MAQ1CA,CAAAA;AACA,WAT0C,KAS1C;AAvrBoB;;AA0rBxB,kCAAgC;AAC5B,QAAI,aAAJ,UAA2B;AACvB,aADuB,KACvB;AAFwB;;AAI5B,QAAIF,WAAAA,CAAJ,CAAIA,CAAJ,EAAoB;AAChB,aADgB,KAChB;AALwB;;AAO5B,QAAIljB,CAAAA,GAAJ,GAAW;AACP,aADO,KACP;AARwB;;AAU5B,WAV4B,IAU5B;AApsBoB;;AAssBxB,gCAA8B;AAC1B,QAAIuB,MAAAA,GAAS8hB,gBAAAA,CAAiBxvB,CAAAA,CAAjBwvB,MAAAA,EAA2BxvB,CAAAA,CAA3BwvB,UAAAA,EAAyCxvB,CAAAA,CAAAA,UAAAA,GAAeA,CAAAA,CAD3C,UACbwvB,CAAb;AACA,WAAO,eAFmB,MAEnB,CAAP;AAxsBoB;;AA2sBxB,mCAAiC;AAC7B,QAAIC,IAAAA,GAAOC,SAAAA,CAAAA,MAAAA,CADkB,KAClBA,EAAX;;AACAA,IAAAA,SAAAA,CAAAA,eAAAA,IAA6BD,IAAAA,CAFA,IAE7BC;;AACA,QAAIA,SAAAA,CAAAA,eAAAA,GAAJ,GAAmC;AAC/BA,MAAAA,SAAAA,CAAAA,eAAAA,GAD+B,CAC/BA;AAJyB;;AAM7B,WAAOD,IAAAA,CANsB,KAM7B;AAjtBoB;;AAmtBxB,wDAAsD;AAClD,QAAI,CAACE,mBAAAA,CAAD,IAACA,CAAD,IAA8BlG,IAAAA,KAAlC,UAAqD;AACjD,YAAM,eAD2C,sDAC3C,CAAN;AAF8C;;AAIlDiG,IAAAA,SAAAA,CAAAA,MAAAA,CAAAA,IAAAA,CAAsB;AAAEh9B,MAAAA,KAAAA,EAAF;AAAgB+2B,MAAAA,IAAAA,EAAhB;AAAA,KAAtBiG;;AACAA,IAAAA,SAAAA,CAAAA,eAAAA,IALkD,IAKlDA;AAxtBoB;;AA0tBxB,qCAAmC;AAC/B,QAAID,IAAAA,GAAOC,SAAAA,CAAAA,MAAAA,CADoB,IACpBA,EAAX;;AACA,WAAOD,IAAAA,CAFwB,KAE/B;AA5tBoB;;AA8tBxB,iCAA+B;AAC3BC,IAAAA,SAAAA,CAAAA,MAAAA,GAAmB,IADQ,WACR,EAAnBA;AACAA,IAAAA,SAAAA,CAAAA,eAAAA,GAF2B,CAE3BA;AAhuBoB;;AAwuBxB,MAAIE,yBAAAA,GAA2C,YAAY;AACvD,yCAAqC;AACjC,YAAM,cAD2B,qBAC3B,CAAN;AAFmD;;AAIvDx/B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBw/B,yBAAAA,CAAtBx/B,SAAAA,EAAAA,MAAAA,EAAmE;AAI/Dyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACgiB,2BAAAA,CAAL,IAAKA,CAAL,EAAwC;AACpC,gBAAMC,8BAAAA,CAD8B,MAC9BA,CAAN;AAFS;;AAIb,eAAO,KAJM,KAIb;AAR2D;AAU/Dn9B,MAAAA,UAAAA,EAV+D;AAW/DC,MAAAA,YAAAA,EAX+D;AAAA,KAAnExC;;AAaAw/B,IAAAA,yBAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAA8C,wBAAwB;AAClE,UAAI,CAACC,2BAAAA,CAAL,IAAKA,CAAL,EAAwC;AACpC,cAAMC,8BAAAA,CAD8B,SAC9BA,CAAN;AAF8D;;AAIlEzC,MAAAA,sBAAAA,CAAAA,YAAAA,EAAAA,CAAAA,EAJkE,SAIlEA,CAAAA;AACA0C,MAAAA,YAAAA,GAAeC,uCAAAA,CAAAA,YAAAA,EALmD,iBAKnDA,CAAfD;;AACA,UAAI,iDAAJ,WAAgE;AAC5D,cAAM,cADsD,wCACtD,CAAN;AAP8D;;AASlE,UAAIE,gBAAAA,CAAiB,WAArB,MAAIA,CAAJ,EATkE;AAUlEC,MAAAA,mCAAAA,CAAoC,KAApCA,uCAAAA,EAVkE,YAUlEA,CAAAA;AA3BmD,KAiBvDN;;AAYAA,IAAAA,yBAAAA,CAAAA,SAAAA,CAAAA,kBAAAA,GAAyD,gBAAgB;AACrE,UAAI,CAACC,2BAAAA,CAAL,IAAKA,CAAL,EAAwC;AACpC,cAAMC,8BAAAA,CAD8B,oBAC9BA,CAAN;AAFiE;;AAIrEzC,MAAAA,sBAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EAJqE,oBAIrEA,CAAAA;;AACA,UAAI,CAAC8C,WAAAA,CAAAA,MAAAA,CAAL,IAAKA,CAAL,EAA+B;AAC3B,cAAM,cADqB,8CACrB,CAAN;AANiE;;AAQrE,UAAI,iDAAJ,WAAgE;AAC5D,cAAM,cADsD,wCACtD,CAAN;AATiE;;AAWrE,UAAIF,gBAAAA,CAAiBG,IAAAA,CAArB,MAAIH,CAAJ,EAXqE;AAYrEI,MAAAA,8CAAAA,CAA+C,KAA/CA,uCAAAA,EAZqE,IAYrEA,CAAAA;AAzCmD,KA6BvDT;;AAcA,WA3CuD,yBA2CvD;AAnxBoB,GAwuBuB,EAA/C;;AA6CAx/B,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwBw/B,yBAAAA,CAAxBx/B,SAAAA,EAA6D;AACzDkgC,IAAAA,OAAAA,EAAS;AAAE39B,MAAAA,UAAAA,EAD8C;AAChD,KADgD;AAEzD49B,IAAAA,kBAAAA,EAAoB;AAAE59B,MAAAA,UAAAA,EAFmC;AAErC,KAFqC;AAGzDy9B,IAAAA,IAAAA,EAAM;AAAEz9B,MAAAA,UAAAA,EAHiD;AAGnD;AAHmD,GAA7DvC;;AAKA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBw/B,yBAAAA,CAAtBx/B,SAAAA,EAA2Dw5B,cAAAA,CAA3Dx5B,WAAAA,EAAuF;AACnFsC,MAAAA,KAAAA,EADmF;AAEnFE,MAAAA,YAAAA,EAFmF;AAAA,KAAvFxC;AA3xBoB;;AAqyBxB,MAAIogC,4BAAAA,GAA8C,YAAY;AAC1D,4CAAwC;AACpC,YAAM,cAD8B,qBAC9B,CAAN;AAFsD;;AAI1DpgC,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBogC,4BAAAA,CAAtBpgC,SAAAA,EAAAA,aAAAA,EAA6E;AAIzEyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAAC4iB,8BAAAA,CAAL,IAAKA,CAAL,EAA2C;AACvC,gBAAMC,uCAAAA,CADiC,aACjCA,CAAN;AAFS;;AAIb,eAAOC,0CAAAA,CAJM,IAINA,CAAP;AARqE;AAUzEh+B,MAAAA,UAAAA,EAVyE;AAWzEC,MAAAA,YAAAA,EAXyE;AAAA,KAA7ExC;AAaAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBogC,4BAAAA,CAAtBpgC,SAAAA,EAAAA,aAAAA,EAA6E;AAKzEyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAAC4iB,8BAAAA,CAAL,IAAKA,CAAL,EAA2C;AACvC,gBAAMC,uCAAAA,CADiC,aACjCA,CAAN;AAFS;;AAIb,eAAOE,0CAAAA,CAJM,IAINA,CAAP;AATqE;AAWzEj+B,MAAAA,UAAAA,EAXyE;AAYzEC,MAAAA,YAAAA,EAZyE;AAAA,KAA7ExC;;AAkBAogC,IAAAA,4BAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAA+C,YAAY;AACvD,UAAI,CAACC,8BAAAA,CAAL,IAAKA,CAAL,EAA2C;AACvC,cAAMC,uCAAAA,CADiC,OACjCA,CAAN;AAFmD;;AAIvD,UAAI,KAAJ,iBAA0B;AACtB,cAAM,cADgB,4DAChB,CAAN;AALmD;;AAOvD,UAAIr7B,KAAAA,GAAQ,mCAP2C,MAOvD;;AACA,UAAIA,KAAAA,KAAJ,YAA0B;AACtB,cAAM,cAAc,4BADE,2DAChB,CAAN;AATmD;;AAWvDw7B,MAAAA,iCAAAA,CAXuD,IAWvDA,CAAAA;AA9CsD,KAmC1DL;;AAaAA,IAAAA,4BAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAiD,iBAAiB;AAC9D,UAAI,CAACC,8BAAAA,CAAL,IAAKA,CAAL,EAA2C;AACvC,cAAMC,uCAAAA,CADiC,SACjCA,CAAN;AAF0D;;AAI9DrD,MAAAA,sBAAAA,CAAAA,KAAAA,EAAAA,CAAAA,EAJ8D,SAI9DA,CAAAA;;AACA,UAAI,CAAC8C,WAAAA,CAAAA,MAAAA,CAAL,KAAKA,CAAL,EAAgC;AAC5B,cAAM,cADsB,oCACtB,CAAN;AAN0D;;AAQ9D,UAAI9lB,KAAAA,CAAAA,UAAAA,KAAJ,GAA4B;AACxB,cAAM,cADkB,qCAClB,CAAN;AAT0D;;AAW9D,UAAIA,KAAAA,CAAAA,MAAAA,CAAAA,UAAAA,KAAJ,GAAmC;AAC/B,cAAM,cADyB,8CACzB,CAAN;AAZ0D;;AAc9D,UAAI,KAAJ,iBAA0B;AACtB,cAAM,cADgB,8BAChB,CAAN;AAf0D;;AAiB9D,UAAIhV,KAAAA,GAAQ,mCAjBkD,MAiB9D;;AACA,UAAIA,KAAAA,KAAJ,YAA0B;AACtB,cAAM,cAAc,4BADE,gEAChB,CAAN;AAnB0D;;AAqB9Dy7B,MAAAA,mCAAAA,CAAAA,IAAAA,EArB8D,KAqB9DA,CAAAA;AArEsD,KAgD1DN;;AA0BAA,IAAAA,4BAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAA+C,aAAa;AACxD,UAAIO,CAAAA,KAAM,KAAV,GAAkB;AAAEA,QAAAA,CAAAA,GAAF,SAAEA;AADoC;;AAExD,UAAI,CAACN,8BAAAA,CAAL,IAAKA,CAAL,EAA2C;AACvC,cAAMC,uCAAAA,CADiC,OACjCA,CAAN;AAHoD;;AAKxDM,MAAAA,iCAAAA,CAAAA,IAAAA,EALwD,CAKxDA,CAAAA;AA/EsD,KA0E1DR;;AAQAA,IAAAA,4BAAAA,CAAAA,SAAAA,CAAAA,WAAAA,IAAsD,kBAAkB;AACpES,MAAAA,iDAAAA,CADoE,IACpEA,CAAAA;AACAC,MAAAA,UAAAA,CAFoE,IAEpEA,CAAAA;;AACA,UAAIt8B,MAAAA,GAAS,sBAHuD,MAGvD,CAAb;;AACAu8B,MAAAA,2CAAAA,CAJoE,IAIpEA,CAAAA;AACA,aALoE,MAKpE;AAvFsD,KAkF1DX;;AAQAA,IAAAA,4BAAAA,CAAAA,SAAAA,CAAAA,SAAAA,IAAoD,uBAAuB;AACvE,UAAI7E,MAAAA,GAAS,KAD0D,6BACvE;;AACA,UAAI,uBAAJ,GAA8B;AAC1B,YAAI91B,KAAAA,GAAQ,YADc,KACd,EAAZ;;AACA,gCAAwBA,KAAAA,CAFE,UAE1B;AACAu7B,QAAAA,4CAAAA,CAH0B,IAG1BA,CAAAA;AACA,YAAIhB,IAAAA,GAAO,eAAev6B,KAAAA,CAAf,QAA6BA,KAAAA,CAA7B,YAA+CA,KAAAA,CAJhC,UAIf,CAAX;;AACAq3B,QAAAA,WAAAA,CAAAA,WAAAA,CAL0B,IAK1BA;;AAL0B;AAFyC;;AAUvE,UAAImE,qBAAAA,GAAwB,KAV2C,sBAUvE;;AACA,UAAIA,qBAAAA,KAAJ,WAAyC;AACrC,YAAI3jB,MAAAA,GAAS,KADwB,CACrC;;AACA,YAAI;AACAA,UAAAA,MAAAA,GAAS,gBADT,qBACS,CAATA;AADJ,UAGA,gBAAgB;AACZwf,UAAAA,WAAAA,CAAAA,WAAAA,CADY,OACZA;;AADY;AALqB;;AASrC,YAAIoE,kBAAAA,GAAqB;AACrB5jB,UAAAA,MAAAA,EADqB;AAErB6jB,UAAAA,gBAAAA,EAFqB;AAGrBC,UAAAA,UAAAA,EAHqB;AAIrBC,UAAAA,UAAAA,EAJqB;AAKrBC,UAAAA,WAAAA,EALqB;AAMrBC,UAAAA,WAAAA,EANqB;AAOrBC,UAAAA,eAAAA,EAPqB;AAQrBC,UAAAA,UAAAA,EARqB;AAAA,SAAzB;;AAUA,oCAnBqC,kBAmBrC;AA9BmE;;AAgCvEC,MAAAA,4BAAAA,CAAAA,MAAAA,EAhCuE,WAgCvEA,CAAAA;AACAC,MAAAA,4CAAAA,CAjCuE,IAiCvEA,CAAAA;AA3HsD,KA0F1DvB;;AAmCA,WA7H0D,4BA6H1D;AAl6BoB,GAqyB0B,EAAlD;;AA+HApgC,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwBogC,4BAAAA,CAAxBpgC,SAAAA,EAAgE;AAC5D4hC,IAAAA,KAAAA,EAAO;AAAEr/B,MAAAA,UAAAA,EADmD;AACrD,KADqD;AAE5Ds/B,IAAAA,OAAAA,EAAS;AAAEt/B,MAAAA,UAAAA,EAFiD;AAEnD,KAFmD;AAG5D61B,IAAAA,KAAAA,EAAO;AAAE71B,MAAAA,UAAAA,EAHmD;AAGrD,KAHqD;AAI5Du/B,IAAAA,WAAAA,EAAa;AAAEv/B,MAAAA,UAAAA,EAJ6C;AAI/C,KAJ+C;AAK5Dw/B,IAAAA,WAAAA,EAAa;AAAEx/B,MAAAA,UAAAA,EAL6C;AAK/C;AAL+C,GAAhEvC;;AAOA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBogC,4BAAAA,CAAtBpgC,SAAAA,EAA8Dw5B,cAAAA,CAA9Dx5B,WAAAA,EAA0F;AACtFsC,MAAAA,KAAAA,EADsF;AAEtFE,MAAAA,YAAAA,EAFsF;AAAA,KAA1FxC;AA56BoB;;AAk7BxB,6CAA2C;AACvC,QAAI,CAACm+B,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFmC;;AAIvC,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,+BAAKA,CAAL,EAA+E;AAC3E,aAD2E,KAC3E;AALmC;;AAOvC,WAAOyoB,CAAAA,YAPgC,4BAOvC;AAz7BoB;;AA27BxB,0CAAwC;AACpC,QAAI,CAAC0V,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFgC;;AAIpC,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,yCAAKA,CAAL,EAAyF;AACrF,aADqF,KACrF;AALgC;;AAOpC,WAAOyoB,CAAAA,YAP6B,yBAOpC;AAl8BoB;;AAo8BxB,oEAAkE;AAC9D,QAAIuZ,UAAAA,GAAaC,0CAAAA,CAD6C,UAC7CA,CAAjB;;AACA,QAAI,CAAJ,YAAiB;AAAA;AAF6C;;AAK9D,QAAIC,UAAAA,CAAJ,UAAyB;AACrBA,MAAAA,UAAAA,CAAAA,UAAAA,GADqB,IACrBA;AADqB;AALqC;;AAS9DA,IAAAA,UAAAA,CAAAA,QAAAA,GAT8D,IAS9DA;;AAEA,QAAIC,WAAAA,GAAcD,UAAAA,CAX4C,cAW5CA,EAAlB;;AACAjI,IAAAA,WAAAA,CAAAA,WAAAA,EAAyB,YAAY;AACjCiI,MAAAA,UAAAA,CAAAA,QAAAA,GADiC,KACjCA;;AACA,UAAIA,UAAAA,CAAJ,YAA2B;AACvBA,QAAAA,UAAAA,CAAAA,UAAAA,GADuB,KACvBA;AACAP,QAAAA,4CAAAA,CAFuB,UAEvBA,CAAAA;AAJ6B;AAArC1H,KAAAA,EAMG,aAAa;AACZ2G,MAAAA,iCAAAA,CAAAA,UAAAA,EADY,CACZA,CAAAA;AAnB0D,KAY9D3G,CAAAA;AAh9BoB;;AA09BxB,yEAAuE;AACnEmI,IAAAA,iDAAAA,CADmE,UACnEA,CAAAA;AACAF,IAAAA,UAAAA,CAAAA,iBAAAA,GAA+B,IAFoC,WAEpC,EAA/BA;AA59BoB;;AA89BxB,4FAA0F;AACtF,QAAI38B,IAAAA,GADkF,KACtF;;AACA,QAAIg2B,MAAAA,CAAAA,MAAAA,KAAJ,UAAgC;AAC5Bh2B,MAAAA,IAAAA,GAD4B,IAC5BA;AAHkF;;AAKtF,QAAI88B,UAAAA,GAAaC,qDAAAA,CALqE,kBAKrEA,CAAjB;;AACA,QAAIpB,kBAAAA,CAAAA,UAAAA,KAAJ,WAAiD;AAC7CqB,MAAAA,gCAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAD6C,IAC7CA,CAAAA;AADJ,WAGK;AACDC,MAAAA,oCAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EADC,IACDA,CAAAA;AAVkF;AA99BlE;;AA2+BxB,qFAAmF;AAC/E,QAAIlB,WAAAA,GAAcJ,kBAAAA,CAD6D,WAC/E;AACA,QAAIK,WAAAA,GAAcL,kBAAAA,CAF6D,WAE/E;AACA,WAAO,IAAIA,kBAAAA,CAAJ,gBAAuCA,kBAAAA,CAAvC,QAAkEA,kBAAAA,CAAlE,YAAiGI,WAAAA,GAHzB,WAGxE,CAAP;AA9+BoB;;AAg/BxB,uGAAqG;AACjGY,IAAAA,UAAAA,CAAAA,MAAAA,CAAAA,IAAAA,CAAuB;AAAE5kB,MAAAA,MAAAA,EAAF;AAAkB8jB,MAAAA,UAAAA,EAAlB;AAA0CC,MAAAA,UAAAA,EAA1C;AAAA,KAAvBa;;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,IAFiG,UAEjGA;AAl/BoB;;AAo/BxB,uGAAqG;AACjG,QAAIX,WAAAA,GAAcL,kBAAAA,CAD+E,WACjG;AACA,QAAIuB,mBAAAA,GAAsBvB,kBAAAA,CAAAA,WAAAA,GAAiCA,kBAAAA,CAAAA,WAAAA,GAFsC,WAEjG;AACA,QAAIwB,cAAAA,GAAiBhlC,IAAAA,CAAAA,GAAAA,CAASwkC,UAAAA,CAATxkC,eAAAA,EAAqCwjC,kBAAAA,CAAAA,UAAAA,GAAgCA,kBAAAA,CAHO,WAG5ExjC,CAArB;AACA,QAAIilC,cAAAA,GAAiBzB,kBAAAA,CAAAA,WAAAA,GAJ4E,cAIjG;AACA,QAAI0B,eAAAA,GAAkBD,cAAAA,GAAiBA,cAAAA,GAL0D,WAKjG;AACA,QAAIE,yBAAAA,GAN6F,cAMjG;AACA,QAAIC,KAAAA,GAP6F,KAOjG;;AACA,QAAIF,eAAAA,GAAJ,qBAA2C;AACvCC,MAAAA,yBAAAA,GAA4BD,eAAAA,GAAkB1B,kBAAAA,CADP,WACvC2B;AACAC,MAAAA,KAAAA,GAFuC,IAEvCA;AAV6F;;AAYjG,QAAIpM,KAAAA,GAAQwL,UAAAA,CAZqF,MAYjG;;AACA,WAAOW,yBAAAA,GAAP,GAAsC;AAClC,UAAIE,WAAAA,GAAcrM,KAAAA,CADgB,IAChBA,EAAlB;AACA,UAAIsM,WAAAA,GAActlC,IAAAA,CAAAA,GAAAA,CAAAA,yBAAAA,EAAoCqlC,WAAAA,CAFpB,UAEhBrlC,CAAlB;AACA,UAAIulC,SAAAA,GAAY/B,kBAAAA,CAAAA,UAAAA,GAAgCA,kBAAAA,CAHd,WAGlC;AACA/B,MAAAA,kBAAAA,CAAmB+B,kBAAAA,CAAnB/B,MAAAA,EAAAA,SAAAA,EAAyD4D,WAAAA,CAAzD5D,MAAAA,EAA6E4D,WAAAA,CAA7E5D,UAAAA,EAJkC,WAIlCA,CAAAA;;AACA,UAAI4D,WAAAA,CAAAA,UAAAA,KAAJ,aAA4C;AACxCrM,QAAAA,KAAAA,CADwC,KACxCA;AADJ,aAGK;AACDqM,QAAAA,WAAAA,CAAAA,UAAAA,IADC,WACDA;AACAA,QAAAA,WAAAA,CAAAA,UAAAA,IAFC,WAEDA;AAV8B;;AAYlCb,MAAAA,UAAAA,CAAAA,eAAAA,IAZkC,WAYlCA;AACAgB,MAAAA,sDAAAA,CAAAA,UAAAA,EAAAA,WAAAA,EAbkC,kBAalCA,CAAAA;AACAL,MAAAA,yBAAAA,IAdkC,WAclCA;AA3B6F;;AA6BjG,WA7BiG,KA6BjG;AAjhCoB;;AAmhCxB,wGAAsG;AAClG3B,IAAAA,kBAAAA,CAAAA,WAAAA,IADkG,IAClGA;AAphCoB;;AAshCxB,oEAAkE;AAC9D,QAAIgB,UAAAA,CAAAA,eAAAA,KAAAA,CAAAA,IAAoCA,UAAAA,CAAxC,iBAAoE;AAChEnB,MAAAA,2CAAAA,CADgE,UAChEA,CAAAA;AACAoC,MAAAA,mBAAAA,CAAoBjB,UAAAA,CAF4C,6BAEhEiB,CAAAA;AAFJ,WAIK;AACDxB,MAAAA,4CAAAA,CADC,UACDA,CAAAA;AAN0D;AAthC1C;;AA+hCxB,yEAAuE;AACnE,QAAIO,UAAAA,CAAAA,YAAAA,KAAJ,MAAsC;AAAA;AAD6B;;AAInEA,IAAAA,UAAAA,CAAAA,YAAAA,CAAAA,uCAAAA,GAJmE,SAInEA;AACAA,IAAAA,UAAAA,CAAAA,YAAAA,CAAAA,KAAAA,GALmE,IAKnEA;AACAA,IAAAA,UAAAA,CAAAA,YAAAA,GANmE,IAMnEA;AAriCoB;;AAuiCxB,wFAAsF;AAClF,WAAOA,UAAAA,CAAAA,iBAAAA,CAAAA,MAAAA,GAAP,GAAgD;AAC5C,UAAIA,UAAAA,CAAAA,eAAAA,KAAJ,GAAsC;AAAA;AADM;;AAI5C,UAAIhB,kBAAAA,GAAqBgB,UAAAA,CAAAA,iBAAAA,CAJmB,IAInBA,EAAzB;;AACA,UAAIkB,2DAAAA,CAAAA,UAAAA,EAAJ,kBAAIA,CAAJ,EAAiG;AAC7FC,QAAAA,gDAAAA,CAD6F,UAC7FA,CAAAA;AACAC,QAAAA,oDAAAA,CAAqDpB,UAAAA,CAArDoB,6BAAAA,EAF6F,kBAE7FA,CAAAA;AAPwC;AADkC;AAviC9D;;AAmjCxB,mFAAiF;AAC7E,QAAI/H,MAAAA,GAAS2G,UAAAA,CADgE,6BAC7E;AACA,QAAIX,WAAAA,GAFyE,CAE7E;;AACA,QAAIvB,IAAAA,CAAAA,WAAAA,KAAJ,UAAmC;AAC/BuB,MAAAA,WAAAA,GAAcvB,IAAAA,CAAAA,WAAAA,CADiB,iBAC/BuB;AAJyE;;AAM7E,QAAIp9B,IAAAA,GAAO67B,IAAAA,CANkE,WAM7E;AAEA,QAAI1iB,MAAAA,GAASimB,mBAAAA,CAAoBvD,IAAAA,CAR4C,MAQhEuD,CAAb;AAKA,QAAIrC,kBAAAA,GAAqB;AACrB5jB,MAAAA,MAAAA,EADqB;AAErB6jB,MAAAA,gBAAAA,EAAkB7jB,MAAAA,CAFG;AAGrB8jB,MAAAA,UAAAA,EAAYpB,IAAAA,CAHS;AAIrBqB,MAAAA,UAAAA,EAAYrB,IAAAA,CAJS;AAKrBsB,MAAAA,WAAAA,EALqB;AAMrBC,MAAAA,WAAAA,EANqB;AAOrBC,MAAAA,eAAAA,EAPqB;AAQrBC,MAAAA,UAAAA,EARqB;AAAA,KAAzB;;AAUA,QAAIS,UAAAA,CAAAA,iBAAAA,CAAAA,MAAAA,GAAJ,GAA6C;AACzCA,MAAAA,UAAAA,CAAAA,iBAAAA,CAAAA,IAAAA,CADyC,kBACzCA;;AAIAsB,MAAAA,gCAAAA,CAAAA,MAAAA,EALyC,eAKzCA,CAAAA;AALyC;AAvBgC;;AA+B7E,QAAIjI,MAAAA,CAAAA,MAAAA,KAAJ,UAAgC;AAC5B,UAAIkI,SAAAA,GAAY,SAASvC,kBAAAA,CAAT,QAAoCA,kBAAAA,CAApC,YADY,CACZ,CAAhB;;AACAwC,MAAAA,eAAAA,CAAAA,WAAAA,CAF4B,SAE5BA;;AAF4B;AA/B6C;;AAoC7E,QAAIxB,UAAAA,CAAAA,eAAAA,GAAJ,GAAoC;AAChC,UAAIkB,2DAAAA,CAAAA,UAAAA,EAAJ,kBAAIA,CAAJ,EAAiG;AAC7F,YAAIf,UAAAA,GAAaC,qDAAAA,CAD4E,kBAC5EA,CAAjB;AACAtB,QAAAA,4CAAAA,CAF6F,UAE7FA,CAAAA;;AACA0C,QAAAA,eAAAA,CAAAA,WAAAA,CAH6F,UAG7FA;;AAH6F;AADjE;;AAOhC,UAAIxB,UAAAA,CAAJ,iBAAgC;AAC5B,YAAIvB,CAAAA,GAAI,cADoB,yDACpB,CAAR;AACAC,QAAAA,iCAAAA,CAAAA,UAAAA,EAF4B,CAE5BA,CAAAA;;AACA8C,QAAAA,eAAAA,CAAAA,WAAAA,CAH4B,CAG5BA;;AAH4B;AAPA;AApCyC;;AAkD7ExB,IAAAA,UAAAA,CAAAA,iBAAAA,CAAAA,IAAAA,CAlD6E,kBAkD7EA;;AACAsB,IAAAA,gCAAAA,CAAAA,MAAAA,EAnD6E,eAmD7EA,CAAAA;AACA7B,IAAAA,4CAAAA,CApD6E,UAoD7EA,CAAAA;AAvmCoB;;AAymCxB,yFAAuF;AACnF,QAAIpG,MAAAA,GAAS2G,UAAAA,CADsE,6BACnF;;AACA,QAAIyB,2BAAAA,CAAJ,MAAIA,CAAJ,EAAyC;AACrC,aAAOC,oCAAAA,CAAAA,MAAAA,CAAAA,GAAP,GAAyD;AACrD,YAAI1C,kBAAAA,GAAqBmC,gDAAAA,CAD4B,UAC5BA,CAAzB;AACAC,QAAAA,oDAAAA,CAAAA,MAAAA,EAFqD,kBAErDA,CAAAA;AAHiC;AAF0C;AAzmC/D;;AAknCxB,4GAA0G;AACtGJ,IAAAA,sDAAAA,CAAAA,UAAAA,EAAAA,YAAAA,EADsG,kBACtGA,CAAAA;;AACA,QAAIhC,kBAAAA,CAAAA,WAAAA,GAAiCA,kBAAAA,CAArC,aAAqE;AAAA;AAFiC;;AAKtGmC,IAAAA,gDAAAA,CALsG,UAKtGA,CAAAA;AACA,QAAIQ,aAAAA,GAAgB3C,kBAAAA,CAAAA,WAAAA,GAAiCA,kBAAAA,CANiD,WAMtG;;AACA,QAAI2C,aAAAA,GAAJ,GAAuB;AACnB,UAAItkC,GAAAA,GAAM2hC,kBAAAA,CAAAA,UAAAA,GAAgCA,kBAAAA,CADvB,WACnB;AACA,UAAI4C,SAAAA,GAAY1E,gBAAAA,CAAiB8B,kBAAAA,CAAjB9B,MAAAA,EAA4C7/B,GAAAA,GAA5C6/B,aAAAA,EAFG,GAEHA,CAAhB;AACA2E,MAAAA,+CAAAA,CAAAA,UAAAA,EAAAA,SAAAA,EAAAA,CAAAA,EAA0ED,SAAAA,CAHvD,UAGnBC,CAAAA;AAVkG;;AAYtG7C,IAAAA,kBAAAA,CAAAA,WAAAA,IAZsG,aAYtGA;AACAoC,IAAAA,oDAAAA,CAAqDpB,UAAAA,CAArDoB,6BAAAA,EAbsG,kBAatGA,CAAAA;AACAU,IAAAA,gEAAAA,CAdsG,UActGA,CAAAA;AAhoCoB;;AAkoCxB,iFAA+E;AAC3E,QAAIC,eAAAA,GAAkB/B,UAAAA,CAAAA,iBAAAA,CADqD,IACrDA,EAAtB;;AACAE,IAAAA,iDAAAA,CAF2E,UAE3EA,CAAAA;AACA,QAAIn9B,KAAAA,GAAQi9B,UAAAA,CAAAA,6BAAAA,CAH+D,MAG3E;;AACA,QAAIj9B,KAAAA,KAAJ,UAAwB;AACpBi/B,MAAAA,gDAAAA,CADoB,UACpBA,CAAAA;AADJ,WAGK;AACDC,MAAAA,kDAAAA,CAAAA,UAAAA,EAAAA,YAAAA,EADC,eACDA,CAAAA;AARuE;;AAU3ExC,IAAAA,4CAAAA,CAV2E,UAU3EA,CAAAA;AA5oCoB;;AA8oCxB,wEAAsE;AAClE,QAAIpiB,UAAAA,GAAa2iB,UAAAA,CAAAA,iBAAAA,CADiD,KACjDA,EAAjB;;AACA,WAFkE,UAElE;AAhpCoB;;AAkpCxB,kEAAgE;AAC5D,QAAI3G,MAAAA,GAAS2G,UAAAA,CAD+C,6BAC5D;;AACA,QAAI3G,MAAAA,CAAAA,MAAAA,KAAJ,YAAkC;AAC9B,aAD8B,KAC9B;AAHwD;;AAK5D,QAAI2G,UAAAA,CAAJ,iBAAgC;AAC5B,aAD4B,KAC5B;AANwD;;AAQ5D,QAAI,CAACA,UAAAA,CAAL,UAA0B;AACtB,aADsB,KACtB;AATwD;;AAW5D,QAAIkC,8BAAAA,CAAAA,MAAAA,CAAAA,IAA0CC,gCAAAA,CAAAA,MAAAA,CAAAA,GAA9C,GAA4F;AACxF,aADwF,IACxF;AAZwD;;AAc5D,QAAIV,2BAAAA,CAAAA,MAAAA,CAAAA,IAAuCC,oCAAAA,CAAAA,MAAAA,CAAAA,GAA3C,GAA6F;AACzF,aADyF,IACzF;AAfwD;;AAiB5D,QAAI7B,WAAAA,GAAcvB,0CAAAA,CAjB0C,UAiB1CA,CAAlB;;AACA,QAAIuB,WAAAA,GAAJ,GAAqB;AACjB,aADiB,IACjB;AAnBwD;;AAqB5D,WArB4D,KAqB5D;AAvqCoB;;AAyqCxB,mEAAiE;AAC7DG,IAAAA,UAAAA,CAAAA,cAAAA,GAD6D,SAC7DA;AACAA,IAAAA,UAAAA,CAAAA,gBAAAA,GAF6D,SAE7DA;AA3qCoB;;AA8qCxB,yDAAuD;AACnD,QAAI3G,MAAAA,GAAS2G,UAAAA,CADsC,6BACnD;;AACA,QAAIA,UAAAA,CAAAA,eAAAA,IAA8B3G,MAAAA,CAAAA,MAAAA,KAAlC,YAAgE;AAAA;AAFb;;AAKnD,QAAI2G,UAAAA,CAAAA,eAAAA,GAAJ,GAAoC;AAChCA,MAAAA,UAAAA,CAAAA,eAAAA,GADgC,IAChCA;AADgC;AALe;;AASnD,QAAIA,UAAAA,CAAAA,iBAAAA,CAAAA,MAAAA,GAAJ,GAA6C;AACzC,UAAIoC,oBAAAA,GAAuBpC,UAAAA,CAAAA,iBAAAA,CADc,IACdA,EAA3B;;AACA,UAAIoC,oBAAAA,CAAAA,WAAAA,GAAJ,GAA0C;AACtC,YAAI3D,CAAAA,GAAI,cAD8B,yDAC9B,CAAR;AACAC,QAAAA,iCAAAA,CAAAA,UAAAA,EAFsC,CAEtCA,CAAAA;AACA,cAHsC,CAGtC;AALqC;AATM;;AAiBnDG,IAAAA,2CAAAA,CAjBmD,UAiBnDA,CAAAA;AACAoC,IAAAA,mBAAAA,CAlBmD,MAkBnDA,CAAAA;AAhsCoB;;AAksCxB,kEAAgE;AAC5D,QAAI5H,MAAAA,GAAS2G,UAAAA,CAD+C,6BAC5D;;AACA,QAAIA,UAAAA,CAAAA,eAAAA,IAA8B3G,MAAAA,CAAAA,MAAAA,KAAlC,YAAgE;AAAA;AAFJ;;AAK5D,QAAIje,MAAAA,GAASrD,KAAAA,CAL+C,MAK5D;AACA,QAAImnB,UAAAA,GAAannB,KAAAA,CAN2C,UAM5D;AACA,QAAIonB,UAAAA,GAAapnB,KAAAA,CAP2C,UAO5D;AACA,QAAIsqB,iBAAAA,GAAoBhB,mBAAAA,CARoC,MAQpCA,CAAxB;;AACA,QAAIrB,UAAAA,CAAAA,iBAAAA,CAAAA,MAAAA,GAAJ,GAA6C;AACzC,UAAIoC,oBAAAA,GAAuBpC,UAAAA,CAAAA,iBAAAA,CADc,IACdA,EAA3B;;AACA,UAAIrC,gBAAAA,CAAiByE,oBAAAA,CAArB,MAAIzE,CAAJ,EAFyC;AAGzCyE,MAAAA,oBAAAA,CAAAA,MAAAA,GAA8Bf,mBAAAA,CAAoBe,oBAAAA,CAHT,MAGXf,CAA9Be;AAZwD;;AAc5DlC,IAAAA,iDAAAA,CAd4D,UAc5DA,CAAAA;;AACA,QAAIgC,8BAAAA,CAAJ,MAAIA,CAAJ,EAA4C;AACxC,UAAIC,gCAAAA,CAAAA,MAAAA,CAAAA,KAAJ,GAAoD;AAChDN,QAAAA,+CAAAA,CAAAA,UAAAA,EAAAA,iBAAAA,EAAAA,UAAAA,EADgD,UAChDA,CAAAA;AADJ,aAGK;AACD,YAAIS,eAAAA,GAAkB,8CADrB,UACqB,CAAtB;AACAjC,QAAAA,gCAAAA,CAAAA,MAAAA,EAAAA,eAAAA,EAFC,KAEDA,CAAAA;AANoC;AAA5C,WASK,IAAIoB,2BAAAA,CAAJ,MAAIA,CAAJ,EAAyC;AAE1CI,MAAAA,+CAAAA,CAAAA,UAAAA,EAAAA,iBAAAA,EAAAA,UAAAA,EAF0C,UAE1CA,CAAAA;AACAC,MAAAA,gEAAAA,CAH0C,UAG1CA,CAAAA;AAHC,WAKA;AACDD,MAAAA,+CAAAA,CAAAA,UAAAA,EAAAA,iBAAAA,EAAAA,UAAAA,EADC,UACDA,CAAAA;AA9BwD;;AAgC5DpC,IAAAA,4CAAAA,CAhC4D,UAgC5DA,CAAAA;AAluCoB;;AAouCxB,4DAA0D;AACtD,QAAIpG,MAAAA,GAAS2G,UAAAA,CADyC,6BACtD;;AACA,QAAI3G,MAAAA,CAAAA,MAAAA,KAAJ,YAAkC;AAAA;AAFoB;;AAKtDsF,IAAAA,iDAAAA,CALsD,UAKtDA,CAAAA;AACAC,IAAAA,UAAAA,CANsD,UAMtDA,CAAAA;AACAC,IAAAA,2CAAAA,CAPsD,UAOtDA,CAAAA;AACA0D,IAAAA,mBAAAA,CAAAA,MAAAA,EARsD,CAQtDA,CAAAA;AA5uCoB;;AA8uCxB,kEAAgE;AAC5D,QAAIvC,UAAAA,CAAAA,YAAAA,KAAAA,IAAAA,IAAoCA,UAAAA,CAAAA,iBAAAA,CAAAA,MAAAA,GAAxC,GAAiF;AAC7E,UAAI+B,eAAAA,GAAkB/B,UAAAA,CAAAA,iBAAAA,CADuD,IACvDA,EAAtB;;AACA,UAAIlC,IAAAA,GAAO,eAAeiE,eAAAA,CAAf,QAAuCA,eAAAA,CAAAA,UAAAA,GAA6BA,eAAAA,CAApE,aAAiGA,eAAAA,CAAAA,UAAAA,GAA6BA,eAAAA,CAF5D,WAElE,CAAX;AACA,UAAInC,WAAAA,GAAc9hC,MAAAA,CAAAA,MAAAA,CAAcw/B,yBAAAA,CAH6C,SAG3Dx/B,CAAlB;AACA0kC,MAAAA,8BAAAA,CAAAA,WAAAA,EAAAA,UAAAA,EAJ6E,IAI7EA,CAAAA;AACAxC,MAAAA,UAAAA,CAAAA,YAAAA,GAL6E,WAK7EA;AANwD;;AAQ5D,WAAOA,UAAAA,CARqD,YAQ5D;AAtvCoB;;AAwvCxB,kEAAgE;AAC5D,QAAIj9B,KAAAA,GAAQi9B,UAAAA,CAAAA,6BAAAA,CADgD,MAC5D;;AACA,QAAIj9B,KAAAA,KAAJ,WAAyB;AACrB,aADqB,IACrB;AAHwD;;AAK5D,QAAIA,KAAAA,KAAJ,UAAwB;AACpB,aADoB,CACpB;AANwD;;AAQ5D,WAAOi9B,UAAAA,CAAAA,YAAAA,GAA0BA,UAAAA,CAR2B,eAQ5D;AAhwCoB;;AAkwCxB,yEAAuE;AACnE,QAAI+B,eAAAA,GAAkB/B,UAAAA,CAAAA,iBAAAA,CAD6C,IAC7CA,EAAtB;;AACA,QAAIj9B,KAAAA,GAAQi9B,UAAAA,CAAAA,6BAAAA,CAFuD,MAEnE;;AACA,QAAIj9B,KAAAA,KAAJ,UAAwB;AACpB,UAAI06B,YAAAA,KAAJ,GAAwB;AACpB,cAAM,cADc,kEACd,CAAN;AAFgB;AAAxB,WAKK;AACD,UAAIA,YAAAA,KAAJ,GAAwB;AACpB,cAAM,cADc,iFACd,CAAN;AAFH;;AAID,UAAIsE,eAAAA,CAAAA,WAAAA,GAAAA,YAAAA,GAA6CA,eAAAA,CAAjD,YAA6E;AACzE,cAAM,eADmE,2BACnE,CAAN;AALH;AAR8D;;AAgBnEA,IAAAA,eAAAA,CAAAA,MAAAA,GAAyBV,mBAAAA,CAAoBU,eAAAA,CAhBsB,MAgB1CV,CAAzBU;AACAU,IAAAA,2CAAAA,CAAAA,UAAAA,EAjBmE,YAiBnEA,CAAAA;AAnxCoB;;AAqxCxB,4EAA0E;AACtE,QAAIV,eAAAA,GAAkB/B,UAAAA,CAAAA,iBAAAA,CADgD,IAChDA,EAAtB;;AACA,QAAIj9B,KAAAA,GAAQi9B,UAAAA,CAAAA,6BAAAA,CAF0D,MAEtE;;AACA,QAAIj9B,KAAAA,KAAJ,UAAwB;AACpB,UAAI+6B,IAAAA,CAAAA,UAAAA,KAAJ,GAA2B;AACvB,cAAM,cADiB,mFACjB,CAAN;AAFgB;AAAxB,WAKK;AACD,UAAIA,IAAAA,CAAAA,UAAAA,KAAJ,GAA2B;AACvB,cAAM,cADiB,kGACjB,CAAN;AAFH;AARiE;;AAatE,QAAIiE,eAAAA,CAAAA,UAAAA,GAA6BA,eAAAA,CAA7BA,WAAAA,KAA6DjE,IAAAA,CAAjE,YAAkF;AAC9E,YAAM,eADwE,yDACxE,CAAN;AAdkE;;AAgBtE,QAAIiE,eAAAA,CAAAA,gBAAAA,KAAqCjE,IAAAA,CAAAA,MAAAA,CAAzC,YAAiE;AAC7D,YAAM,eADuD,4DACvD,CAAN;AAjBkE;;AAmBtE,QAAIiE,eAAAA,CAAAA,WAAAA,GAA8BjE,IAAAA,CAA9BiE,UAAAA,GAAgDA,eAAAA,CAApD,YAAgF;AAC5E,YAAM,eADsE,yDACtE,CAAN;AApBkE;;AAsBtEA,IAAAA,eAAAA,CAAAA,MAAAA,GAAyBV,mBAAAA,CAAoBvD,IAAAA,CAtByB,MAsB7CuD,CAAzBU;AACAU,IAAAA,2CAAAA,CAAAA,UAAAA,EAAwD3E,IAAAA,CAvBc,UAuBtE2E,CAAAA;AA5yCoB;;AA8yCxB,uJAAqJ;AACjJzC,IAAAA,UAAAA,CAAAA,6BAAAA,GADiJ,MACjJA;AACAA,IAAAA,UAAAA,CAAAA,UAAAA,GAFiJ,KAEjJA;AACAA,IAAAA,UAAAA,CAAAA,QAAAA,GAHiJ,KAGjJA;AACAA,IAAAA,UAAAA,CAAAA,YAAAA,GAJiJ,IAIjJA;AAEAA,IAAAA,UAAAA,CAAAA,MAAAA,GAAoBA,UAAAA,CAAAA,eAAAA,GAN6H,SAMjJA;AACApB,IAAAA,UAAAA,CAPiJ,UAOjJA,CAAAA;AACAoB,IAAAA,UAAAA,CAAAA,eAAAA,GARiJ,KAQjJA;AACAA,IAAAA,UAAAA,CAAAA,QAAAA,GATiJ,KASjJA;AACAA,IAAAA,UAAAA,CAAAA,YAAAA,GAViJ,aAUjJA;AACAA,IAAAA,UAAAA,CAAAA,cAAAA,GAXiJ,aAWjJA;AACAA,IAAAA,UAAAA,CAAAA,gBAAAA,GAZiJ,eAYjJA;AACAA,IAAAA,UAAAA,CAAAA,sBAAAA,GAbiJ,qBAajJA;AACAA,IAAAA,UAAAA,CAAAA,iBAAAA,GAA+B,IAdkH,WAclH,EAA/BA;AACA3G,IAAAA,MAAAA,CAAAA,yBAAAA,GAfiJ,UAejJA;AACA,QAAIqJ,WAAAA,GAAcC,cAhB+H,EAgBjJ;AACA5K,IAAAA,WAAAA,CAAYG,mBAAAA,CAAZH,WAAYG,CAAZH,EAA8C,YAAY;AACtDiI,MAAAA,UAAAA,CAAAA,QAAAA,GADsD,IACtDA;AACAP,MAAAA,4CAAAA,CAFsD,UAEtDA,CAAAA;AAFJ1H,KAAAA,EAGG,aAAa;AACZ2G,MAAAA,iCAAAA,CAAAA,UAAAA,EADY,CACZA,CAAAA;AArB6I,KAiBjJ3G,CAAAA;AA/zCoB;;AAs0CxB,8GAA4G;AACxG,QAAIiI,UAAAA,GAAaliC,MAAAA,CAAAA,MAAAA,CAAcogC,4BAAAA,CADyE,SACvFpgC,CAAjB;;AACA,QAAI6kC,cAAAA,GAAiB,0BAAY;AAAE,aAAF,SAAE;AAFqE,KAExG;;AACA,QAAIC,aAAAA,GAAgB,yBAAY;AAAE,aAAO1K,mBAAAA,CAAT,SAASA,CAAP;AAHsE,KAGxG;;AACA,QAAI2K,eAAAA,GAAkB,2BAAY;AAAE,aAAO3K,mBAAAA,CAAT,SAASA,CAAP;AAJoE,KAIxG;;AACA,QAAI4K,oBAAAA,CAAAA,KAAAA,KAAJ,WAA8C;AAC1CH,MAAAA,cAAAA,GAAiB,0BAAY;AAAE,eAAOG,oBAAAA,CAAAA,KAAAA,CAAT,UAASA,CAAP;AADW,OAC1CH;AANoG;;AAQxG,QAAIG,oBAAAA,CAAAA,IAAAA,KAAJ,WAA6C;AACzCF,MAAAA,aAAAA,GAAgB,yBAAY;AAAE,eAAOE,oBAAAA,CAAAA,IAAAA,CAAT,UAASA,CAAP;AADW,OACzCF;AAToG;;AAWxG,QAAIE,oBAAAA,CAAAA,MAAAA,KAAJ,WAA+C;AAC3CD,MAAAA,eAAAA,GAAkB,iCAAkB;AAAE,eAAOC,oBAAAA,CAAAA,MAAAA,CAAT,MAASA,CAAP;AADK,OAC3CD;AAZoG;;AAcxG,QAAI9D,qBAAAA,GAAwB+D,oBAAAA,CAd4E,qBAcxG;;AACA,QAAI/D,qBAAAA,KAAJ,GAAiC;AAC7B,YAAM,cADuB,8CACvB,CAAN;AAhBoG;;AAkBxGgE,IAAAA,iCAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,EAAAA,aAAAA,EAAAA,eAAAA,EAAAA,aAAAA,EAlBwG,qBAkBxGA,CAAAA;AAx1CoB;;AA01CxB,qEAAmE;AAC/D7oC,IAAAA,OAAAA,CAAAA,uCAAAA,GAD+D,UAC/DA;AACAA,IAAAA,OAAAA,CAAAA,KAAAA,GAF+D,IAE/DA;AA51CoB;;AA+1CxB,gDAA8C;AAC1C,WAAO,cAAc,gDADqB,kDACnC,CAAP;AAh2CoB;;AAm2CxB,yDAAuD;AACnD,WAAO,cAAc,mDAD8B,qDAC5C,CAAP;AAp2CoB;;AAw2CxB,mDAAiD;AAC7C,WAAO,6BADsC,MACtC,CAAP;AAz2CoB;;AA42CxB,qEAAmE;AAC/Dm/B,IAAAA,MAAAA,CAAAA,OAAAA,CAAAA,iBAAAA,CAAAA,IAAAA,CAD+D,eAC/DA;AA72CoB;;AA+2CxB,qEAAmE;AAC/D,QAAID,MAAAA,GAASC,MAAAA,CADkD,OAC/D;;AACA,QAAImI,eAAAA,GAAkBpI,MAAAA,CAAAA,iBAAAA,CAFyC,KAEzCA,EAAtB;;AACA,cAAU;AACNoI,MAAAA,eAAAA,CAAAA,WAAAA,CADM,KACNA;AADJ,WAGK;AACDA,MAAAA,eAAAA,CAAAA,WAAAA,CADC,KACDA;AAP2D;AA/2C3C;;AAy3CxB,wDAAsD;AAClD,WAAOnI,MAAAA,CAAAA,OAAAA,CAAAA,iBAAAA,CAD2C,MAClD;AA13CoB;;AA43CxB,+CAA6C;AACzC,QAAID,MAAAA,GAASC,MAAAA,CAD4B,OACzC;;AACA,QAAID,MAAAA,KAAJ,WAA0B;AACtB,aADsB,KACtB;AAHqC;;AAKzC,QAAI,CAAC4J,0BAAAA,CAAL,MAAKA,CAAL,EAAyC;AACrC,aADqC,KACrC;AANqC;;AAQzC,WARyC,IAQzC;AAp4CoB;;AA24CxB,MAAIC,wBAAAA,GAA0C,YAAY;AACtD,8CAA0C;AACtClI,MAAAA,sBAAAA,CAAAA,MAAAA,EAAAA,CAAAA,EADsC,0BACtCA,CAAAA;AACAC,MAAAA,oBAAAA,CAAAA,MAAAA,EAFsC,iBAEtCA,CAAAA;;AACA,UAAIC,sBAAAA,CAAJ,MAAIA,CAAJ,EAAoC;AAChC,cAAM,cAD0B,6EAC1B,CAAN;AAJkC;;AAMtC,UAAI,CAACkD,8BAAAA,CAA+B9E,MAAAA,CAApC,yBAAK8E,CAAL,EAAuE;AACnE,cAAM,cAAc,0FAD+C,QAC7D,CAAN;AAPkC;;AAUtCjD,MAAAA,qCAAAA,CAAAA,IAAAA,EAVsC,MAUtCA,CAAAA;AACA,+BAAyB,IAXa,WAWb,EAAzB;AAZkD;;AActDp9B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBmlC,wBAAAA,CAAtBnlC,SAAAA,EAAAA,QAAAA,EAAoE;AAKhEyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACynB,0BAAAA,CAAL,IAAKA,CAAL,EAAuC;AACnC,iBAAO5K,mBAAAA,CAAoB8K,6BAAAA,CADQ,QACRA,CAApB9K,CAAP;AAFS;;AAIb,eAAO,KAJM,cAIb;AAT4D;AAWhE/3B,MAAAA,UAAAA,EAXgE;AAYhEC,MAAAA,YAAAA,EAZgE;AAAA,KAApExC;;AAiBAmlC,IAAAA,wBAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAA4C,kBAAkB;AAC1D,UAAIzQ,MAAAA,KAAW,KAAf,GAAuB;AAAEA,QAAAA,MAAAA,GAAF,SAAEA;AADiC;;AAE1D,UAAI,CAACwQ,0BAAAA,CAAL,IAAKA,CAAL,EAAuC;AACnC,eAAO5K,mBAAAA,CAAoB8K,6BAAAA,CADQ,QACRA,CAApB9K,CAAP;AAHsD;;AAK1D,UAAI,8BAAJ,WAA6C;AACzC,eAAOA,mBAAAA,CAAoBgD,mBAAAA,CADc,QACdA,CAApBhD,CAAP;AANsD;;AAQ1D,aAAOiD,iCAAAA,CAAAA,IAAAA,EARmD,MAQnDA,CAAP;AAvCkD,KA+BtD4H;;AAeAA,IAAAA,wBAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAA0C,gBAAgB;AACtD,UAAI,CAACD,0BAAAA,CAAL,IAAKA,CAAL,EAAuC;AACnC,eAAO5K,mBAAAA,CAAoB8K,6BAAAA,CADQ,MACRA,CAApB9K,CAAP;AAFkD;;AAItD,UAAI,CAACyF,WAAAA,CAAAA,MAAAA,CAAL,IAAKA,CAAL,EAA+B;AAC3B,eAAOzF,mBAAAA,CAAoB,cADA,mCACA,CAApBA,CAAP;AALkD;;AAOtD,UAAI0F,IAAAA,CAAAA,UAAAA,KAAJ,GAA2B;AACvB,eAAO1F,mBAAAA,CAAoB,cADJ,oCACI,CAApBA,CAAP;AARkD;;AAUtD,UAAI0F,IAAAA,CAAAA,MAAAA,CAAAA,UAAAA,KAAJ,GAAkC;AAC9B,eAAO1F,mBAAAA,CAAoB,cADG,6CACH,CAApBA,CAAP;AAXkD;;AAatD,UAAIuF,gBAAAA,CAAiBG,IAAAA,CAArB,MAAIH,CAAJ,EAbsD;;AActD,UAAI,8BAAJ,WAA6C;AACzC,eAAOvF,mBAAAA,CAAoBgD,mBAAAA,CADc,WACdA,CAApBhD,CAAP;AAfkD;;AAiBtD,UAjBsD,cAiBtD;AACA,UAlBsD,aAkBtD;AACA,UAAI7G,OAAAA,GAAU,WAAW,2BAA2B;AAChD+J,QAAAA,cAAAA,GADgD,OAChDA;AACAC,QAAAA,aAAAA,GAFgD,MAEhDA;AArBkD,OAmBxC,CAAd;AAIA,UAAIiG,eAAAA,GAAkB;AAClBhG,QAAAA,WAAAA,EAAa,4BAAiB;AAAE,iBAAO,eAAe;AAAEp7B,YAAAA,KAAAA,EAAF;AAAgBiD,YAAAA,IAAAA,EAAhB;AAAA,WAAf,CAAP;AADd;AAElBo4B,QAAAA,WAAAA,EAAa,4BAAiB;AAAE,iBAAO,eAAe;AAAEr7B,YAAAA,KAAAA,EAAF;AAAgBiD,YAAAA,IAAAA,EAAhB;AAAA,WAAf,CAAP;AAFd;AAGlBq4B,QAAAA,WAAAA,EAAa,wBAAa;AAAE,iBAAOH,aAAAA,CAAT,CAASA,CAAP;AAHV;AAAA,OAAtB;AAKA4H,MAAAA,4BAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EA5BsD,eA4BtDA,CAAAA;AACA,aA7BsD,OA6BtD;AA3EkD,KA8CtDF;;AAwCAA,IAAAA,wBAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAiD,YAAY;AACzD,UAAI,CAACD,0BAAAA,CAAL,IAAKA,CAAL,EAAuC;AACnC,cAAME,6BAAAA,CAD6B,aAC7BA,CAAN;AAFqD;;AAIzD,UAAI,8BAAJ,WAA6C;AAAA;AAJY;;AAOzD,UAAI,gCAAJ,GAAuC;AACnC,cAAM,cAD6B,qFAC7B,CAAN;AARqD;;AAUzDtH,MAAAA,kCAAAA,CAVyD,IAUzDA,CAAAA;AAhGkD,KAsFtDqH;;AAYA,WAlGsD,wBAkGtD;AA7+CoB,GA24CsB,EAA9C;;AAoGAnlC,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwBmlC,wBAAAA,CAAxBnlC,SAAAA,EAA4D;AACxD+9B,IAAAA,MAAAA,EAAQ;AAAEx7B,MAAAA,UAAAA,EAD8C;AAChD,KADgD;AAExDy7B,IAAAA,IAAAA,EAAM;AAAEz7B,MAAAA,UAAAA,EAFgD;AAElD,KAFkD;AAGxD07B,IAAAA,WAAAA,EAAa;AAAE17B,MAAAA,UAAAA,EAHyC;AAG3C,KAH2C;AAIxD27B,IAAAA,MAAAA,EAAQ;AAAE37B,MAAAA,UAAAA,EAJ8C;AAIhD;AAJgD,GAA5DvC;;AAMA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBmlC,wBAAAA,CAAtBnlC,SAAAA,EAA0Dw5B,cAAAA,CAA1Dx5B,WAAAA,EAAsF;AAClFsC,MAAAA,KAAAA,EADkF;AAElFE,MAAAA,YAAAA,EAFkF;AAAA,KAAtFxC;AAt/CoB;;AA4/CxB,yCAAuC;AACnC,QAAI,CAACm+B,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAF+B;;AAInC,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,mBAAKA,CAAL,EAAmE;AAC/D,aAD+D,KAC/D;AAL+B;;AAOnC,WAAOyoB,CAAAA,YAP4B,wBAOnC;AAngDoB;;AAqgDxB,uEAAqE;AACjE,QAAI8S,MAAAA,GAASD,MAAAA,CADoD,oBACjE;AACAC,IAAAA,MAAAA,CAAAA,UAAAA,GAFiE,IAEjEA;;AACA,QAAIA,MAAAA,CAAAA,MAAAA,KAAJ,WAAiC;AAC7BmI,MAAAA,eAAAA,CAAAA,WAAAA,CAA4BnI,MAAAA,CADC,YAC7BmI;AADJ,WAGK;AACD4B,MAAAA,oCAAAA,CAAqC/J,MAAAA,CAArC+J,yBAAAA,EAAAA,IAAAA,EADC,eACDA,CAAAA;AAP6D;AArgD7C;;AAghDxB,+CAA6C;AACzC,WAAO,cAAc,+CADoB,iDAClC,CAAP;AAjhDoB;;AAohDxB,sDAAoD;AAChD,QAAIC,aAAAA,GAAgBC,QAAAA,CAD4B,aAChD;;AACA,QAAID,aAAAA,KAAJ,WAAiC;AAC7B,aAD6B,UAC7B;AAH4C;;AAKhD,QAAItG,WAAAA,CAAAA,aAAAA,CAAAA,IAA8BsG,aAAAA,GAAlC,GAAqD;AACjD,YAAM,eAD2C,uBAC3C,CAAN;AAN4C;;AAQhD,WARgD,aAQhD;AA5hDoB;;AA8hDxB,0CAAwC;AACpC,QAAIlM,IAAAA,GAAOmM,QAAAA,CADyB,IACpC;;AACA,QAAI,CAAJ,MAAW;AACP,aAAO,YAAY;AAAE,eAAF,CAAE;AADd,OACP;AAHgC;;AAKpC,WALoC,IAKpC;AAniDoB;;AAsiDxB,iDAA+C;AAC3CC,IAAAA,gBAAAA,CAAAA,IAAAA,EAD2C,OAC3CA,CAAAA;AACA,QAAIF,aAAAA,GAAgBG,IAAAA,KAAAA,IAAAA,IAAiBA,IAAAA,KAAS,KAA1BA,CAAAA,GAAmC,KAAnCA,CAAAA,GAA4CA,IAAAA,CAFrB,aAE3C;AACA,QAAIrM,IAAAA,GAAOqM,IAAAA,KAAAA,IAAAA,IAAiBA,IAAAA,KAAS,KAA1BA,CAAAA,GAAmC,KAAnCA,CAAAA,GAA4CA,IAAAA,CAHZ,IAG3C;AACA,WAAO;AACHH,MAAAA,aAAAA,EAAeA,aAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAA0CI,yBAAAA,CADtD,aACsDA,CADtD;AAEHtM,MAAAA,IAAAA,EAAMA,IAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAiCuM,0BAAAA,CAAAA,IAAAA,EAAiC7iC,OAAAA,GAFrE,yBAEoC6iC;AAFpC,KAAP;AA1iDoB;;AA+iDxB,mDAAiD;AAC7CC,IAAAA,cAAAA,CAAAA,EAAAA,EAD6C,OAC7CA,CAAAA;AACA,WAAO,iBAAiB;AAAE,aAAOF,yBAAAA,CAA0BtiC,EAAAA,CAAnC,KAAmCA,CAA1BsiC,CAAP;AAFmB,KAE7C;AAjjDoB;;AAojDxB,oDAAkD;AAC9CF,IAAAA,gBAAAA,CAAAA,QAAAA,EAD8C,OAC9CA,CAAAA;AACA,QAAIK,KAAAA,GAAQC,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CAFlB,KAE9C;AACA,QAAInE,KAAAA,GAAQmE,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CAHlB,KAG9C;AACA,QAAI1lC,KAAAA,GAAQ0lC,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CAJlB,KAI9C;AACA,QAAI5iC,IAAAA,GAAO4iC,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CALjB,IAK9C;AACA,QAAIC,KAAAA,GAAQD,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CANlB,KAM9C;AACA,WAAO;AACHD,MAAAA,KAAAA,EAAOA,KAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEHG,kCAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAoDljC,OAAAA,GAHrD,0BAGCkjC,CAHD;AAIHrE,MAAAA,KAAAA,EAAOA,KAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEHsE,kCAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAoDnjC,OAAAA,GANrD,0BAMCmjC,CAND;AAOH7lC,MAAAA,KAAAA,EAAOA,KAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEH8lC,kCAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAoDpjC,OAAAA,GATrD,0BASCojC,CATD;AAUHH,MAAAA,KAAAA,EAAOA,KAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEHI,kCAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAoDrjC,OAAAA,GAZrD,0BAYCqjC,CAZD;AAaHjjC,MAAAA,IAAAA,EAbG;AAAA,KAAP;AA3jDoB;;AA2kDxB,qEAAmE;AAC/D0iC,IAAAA,cAAAA,CAAAA,EAAAA,EAD+D,OAC/DA,CAAAA;AACA,WAAO,kBAAkB;AAAE,aAAOQ,WAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAA0B,CAAnC,MAAmC,CAA1BA,CAAP;AAFoC,KAE/D;AA7kDoB;;AA+kDxB,qEAAmE;AAC/DR,IAAAA,cAAAA,CAAAA,EAAAA,EAD+D,OAC/DA,CAAAA;AACA,WAAO,YAAY;AAAE,aAAOQ,WAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAT,EAASA,CAAP;AAF0C,KAE/D;AAjlDoB;;AAmlDxB,qEAAmE;AAC/DR,IAAAA,cAAAA,CAAAA,EAAAA,EAD+D,OAC/DA,CAAAA;AACA,WAAO,sBAAsB;AAAE,aAAOxL,WAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAA0B,CAAnC,UAAmC,CAA1BA,CAAP;AAFgC,KAE/D;AArlDoB;;AAulDxB,qEAAmE;AAC/DwL,IAAAA,cAAAA,CAAAA,EAAAA,EAD+D,OAC/DA,CAAAA;AACA,WAAO,6BAA6B;AAAE,aAAO,0BAA0B,mBAA1B,CAAP;AAFyB,KAE/D;AAzlDoB;;AA4lDxB,4CAA0C;AACtC,QAAI,CAACS,gBAAAA,CAAL,CAAKA,CAAL,EAA0B;AACtB,YAAM,cAAcvjC,OAAAA,GADE,2BAChB,CAAN;AAFkC;AA5lDlB;;AAkmDxB,gCAA8B;AAC1B,QAAI,+BAA6BT,KAAAA,KAAjC,MAAiD;AAC7C,aAD6C,KAC7C;AAFsB;;AAI1B,QAAI;AACA,aAAO,OAAOA,KAAAA,CAAP,YADP,SACA;AADJ,MAGA,WAAW;AAEP,aAFO,KAEP;AATsB;AAlmDN;;AA8mDxB,MAAIikC,uBAAAA,GAA0B,2BA9mDN,UA8mDxB;;AAMA,mCAAiC;AAC7B,iCAA6B;AACzB,aAAO,IADkB,eAClB,EAAP;AAFyB;;AAI7B,WAJ6B,SAI7B;AAxnDoB;;AAgoDxB,MAAIC,cAAAA,GAAgC,YAAY;AAC5C,4DAAwD;AACpD,UAAIC,iBAAAA,KAAsB,KAA1B,GAAkC;AAAEA,QAAAA,iBAAAA,GAAF,EAAEA;AADgB;;AAEpD,UAAIC,WAAAA,KAAgB,KAApB,GAA4B;AAAEA,QAAAA,WAAAA,GAAF,EAAEA;AAFsB;;AAGpD,UAAID,iBAAAA,KAAJ,WAAqC;AACjCA,QAAAA,iBAAAA,GADiC,IACjCA;AADJ,aAGK;AACDE,QAAAA,YAAAA,CAAAA,iBAAAA,EADC,iBACDA,CAAAA;AAPgD;;AASpD,UAAInB,QAAAA,GAAWoB,sBAAAA,CAAAA,WAAAA,EATqC,kBASrCA,CAAf;AACA,UAAIC,cAAAA,GAAiBC,qBAAAA,CAAAA,iBAAAA,EAV+B,iBAU/BA,CAArB;AACAC,MAAAA,wBAAAA,CAXoD,IAWpDA,CAAAA;AACA,UAAI5jC,IAAAA,GAAO0jC,cAAAA,CAZyC,IAYpD;;AACA,UAAI1jC,IAAAA,KAAJ,WAAwB;AACpB,cAAM,eADc,2BACd,CAAN;AAdgD;;AAgBpD,UAAI6jC,aAAAA,GAAgBC,oBAAAA,CAhBgC,QAgBhCA,CAApB;AACA,UAAI1B,aAAAA,GAAgB2B,oBAAAA,CAAAA,QAAAA,EAjBgC,CAiBhCA,CAApB;AACAC,MAAAA,sDAAAA,CAAAA,IAAAA,EAAAA,cAAAA,EAAAA,aAAAA,EAlBoD,aAkBpDA,CAAAA;AAnBwC;;AAqB5CnnC,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBwmC,cAAAA,CAAtBxmC,SAAAA,EAAAA,QAAAA,EAA0D;AAItDyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAAC6oB,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,gBAAMc,2BAAAA,CADmB,QACnBA,CAAN;AAFS;;AAIb,eAAOC,sBAAAA,CAJM,IAINA,CAAP;AARkD;AAUtD9kC,MAAAA,UAAAA,EAVsD;AAWtDC,MAAAA,YAAAA,EAXsD;AAAA,KAA1DxC;;AAsBAwmC,IAAAA,cAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAiC,kBAAkB;AAC/C,UAAI9R,MAAAA,KAAW,KAAf,GAAuB;AAAEA,QAAAA,MAAAA,GAAF,SAAEA;AADsB;;AAE/C,UAAI,CAAC4R,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,eAAOhM,mBAAAA,CAAoB8M,2BAAAA,CADF,OACEA,CAApB9M,CAAP;AAH2C;;AAK/C,UAAI+M,sBAAAA,CAAJ,IAAIA,CAAJ,EAAkC;AAC9B,eAAO/M,mBAAAA,CAAoB,cADG,iDACH,CAApBA,CAAP;AAN2C;;AAQ/C,aAAOgN,mBAAAA,CAAAA,IAAAA,EARwC,MAQxCA,CAAP;AAnDwC,KA2C5Cd;;AAkBAA,IAAAA,cAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAiC,YAAY;AACzC,UAAI,CAACF,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,eAAOhM,mBAAAA,CAAoB8M,2BAAAA,CADF,OACEA,CAApB9M,CAAP;AAFqC;;AAIzC,UAAI+M,sBAAAA,CAAJ,IAAIA,CAAJ,EAAkC;AAC9B,eAAO/M,mBAAAA,CAAoB,cADG,iDACH,CAApBA,CAAP;AALqC;;AAOzC,UAAIiN,mCAAAA,CAAJ,IAAIA,CAAJ,EAA+C;AAC3C,eAAOjN,mBAAAA,CAAoB,cADgB,wCAChB,CAApBA,CAAP;AARqC;;AAUzC,aAAOkN,mBAAAA,CAVkC,IAUlCA,CAAP;AAvEwC,KA6D5ChB;;AAoBAA,IAAAA,cAAAA,CAAAA,SAAAA,CAAAA,SAAAA,GAAqC,YAAY;AAC7C,UAAI,CAACF,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,cAAMc,2BAAAA,CADmB,WACnBA,CAAN;AAFyC;;AAI7C,aAAOK,kCAAAA,CAJsC,IAItCA,CAAP;AArFwC,KAiF5CjB;;AAMA,WAvF4C,cAuF5C;AAvtDoB,GAgoDY,EAApC;;AAyFAxmC,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwBwmC,cAAAA,CAAxBxmC,SAAAA,EAAkD;AAC9C8lC,IAAAA,KAAAA,EAAO;AAAEvjC,MAAAA,UAAAA,EADqC;AACvC,KADuC;AAE9Cq/B,IAAAA,KAAAA,EAAO;AAAEr/B,MAAAA,UAAAA,EAFqC;AAEvC,KAFuC;AAG9CmlC,IAAAA,SAAAA,EAAW;AAAEnlC,MAAAA,UAAAA,EAHiC;AAGnC,KAHmC;AAI9ColC,IAAAA,MAAAA,EAAQ;AAAEplC,MAAAA,UAAAA,EAJoC;AAItC;AAJsC,GAAlDvC;;AAMA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBwmC,cAAAA,CAAtBxmC,SAAAA,EAAgDw5B,cAAAA,CAAhDx5B,WAAAA,EAA4E;AACxEsC,MAAAA,KAAAA,EADwE;AAExEE,MAAAA,YAAAA,EAFwE;AAAA,KAA5ExC;AAhuDoB;;AAsuDxB,sDAAoD;AAChD,WAAO,gCADyC,MACzC,CAAP;AAvuDoB;;AA0uDxB,8HAA4H;AACxH,QAAIulC,aAAAA,KAAkB,KAAtB,GAA8B;AAAEA,MAAAA,aAAAA,GAAF,CAAEA;AADwF;;AAExH,QAAIyB,aAAAA,KAAkB,KAAtB,GAA8B;AAAEA,MAAAA,aAAAA,GAAgB,yBAAY;AAAE,eAAF,CAAE;AAAhC,OAAEA;AAFwF;;AAGxH,QAAIzL,MAAAA,GAASv7B,MAAAA,CAAAA,MAAAA,CAAcwmC,cAAAA,CAH6F,SAG3GxmC,CAAb;AACA+mC,IAAAA,wBAAAA,CAJwH,MAIxHA,CAAAA;AACA,QAAI7E,UAAAA,GAAaliC,MAAAA,CAAAA,MAAAA,CAAc4nC,+BAAAA,CALyF,SAKvG5nC,CAAjB;AACA6nC,IAAAA,oCAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,EAAAA,cAAAA,EAAAA,cAAAA,EAAAA,cAAAA,EAAAA,aAAAA,EANwH,aAMxHA,CAAAA;AACA,WAPwH,MAOxH;AAjvDoB;;AAmvDxB,4CAA0C;AACtCtM,IAAAA,MAAAA,CAAAA,MAAAA,GADsC,UACtCA;AAGAA,IAAAA,MAAAA,CAAAA,YAAAA,GAJsC,SAItCA;AACAA,IAAAA,MAAAA,CAAAA,OAAAA,GALsC,SAKtCA;AAGAA,IAAAA,MAAAA,CAAAA,yBAAAA,GARsC,SAQtCA;AAGAA,IAAAA,MAAAA,CAAAA,cAAAA,GAAwB,IAXc,WAWd,EAAxBA;AAGAA,IAAAA,MAAAA,CAAAA,qBAAAA,GAdsC,SActCA;AAGAA,IAAAA,MAAAA,CAAAA,aAAAA,GAjBsC,SAiBtCA;AAGAA,IAAAA,MAAAA,CAAAA,qBAAAA,GApBsC,SAoBtCA;AAEAA,IAAAA,MAAAA,CAAAA,oBAAAA,GAtBsC,SAsBtCA;AAEAA,IAAAA,MAAAA,CAAAA,aAAAA,GAxBsC,KAwBtCA;AA3wDoB;;AA6wDxB,+BAA6B;AACzB,QAAI,CAAC4C,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFqB;;AAIzB,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,2BAAKA,CAAL,EAA2E;AACvE,aADuE,KACvE;AALqB;;AAOzB,WAAOyoB,CAAAA,YAPkB,cAOzB;AApxDoB;;AAsxDxB,0CAAwC;AACpC,QAAI8S,MAAAA,CAAAA,OAAAA,KAAJ,WAAkC;AAC9B,aAD8B,KAC9B;AAFgC;;AAIpC,WAJoC,IAIpC;AA1xDoB;;AA4xDxB,+CAA6C;AACzC,QADyC,EACzC;;AACA,QAAIA,MAAAA,CAAAA,MAAAA,KAAAA,QAAAA,IAA8BA,MAAAA,CAAAA,MAAAA,KAAlC,WAA+D;AAC3D,aAAOnB,mBAAAA,CADoD,SACpDA,CAAP;AAHqC;;AAKzCmB,IAAAA,MAAAA,CAAAA,yBAAAA,CAAAA,YAAAA,GALyC,MAKzCA;AACC,UAAKA,MAAAA,CAAAA,yBAAAA,CAAN,gBAAC,MAAD,IAAC,IAAoE8C,EAAAA,KAAO,KAA5E,CAAC,GAAoF,KAArF,CAAC,GAA6FA,EAAAA,CANrD,KAMqDA,EAA7F;AAID,QAAIp5B,KAAAA,GAAQs2B,MAAAA,CAV6B,MAUzC;;AACA,QAAIt2B,KAAAA,KAAAA,QAAAA,IAAsBA,KAAAA,KAA1B,WAA+C;AAC3C,aAAOm1B,mBAAAA,CADoC,SACpCA,CAAP;AAZqC;;AAczC,QAAImB,MAAAA,CAAAA,oBAAAA,KAAJ,WAA+C;AAC3C,aAAOA,MAAAA,CAAAA,oBAAAA,CADoC,QAC3C;AAfqC;;AAiBzC,QAAIuM,kBAAAA,GAjBqC,KAiBzC;;AACA,QAAI7iC,KAAAA,KAAJ,YAA0B;AACtB6iC,MAAAA,kBAAAA,GADsB,IACtBA;AAEApT,MAAAA,MAAAA,GAHsB,SAGtBA;AArBqC;;AAuBzC,QAAIjB,OAAAA,GAAU,WAAW,2BAA2B;AAChD8H,MAAAA,MAAAA,CAAAA,oBAAAA,GAA8B;AAC1BwM,QAAAA,QAAAA,EAD0B;AAE1BC,QAAAA,QAAAA,EAF0B;AAG1BC,QAAAA,OAAAA,EAH0B;AAI1BC,QAAAA,OAAAA,EAJ0B;AAK1BC,QAAAA,mBAAAA,EAL0B;AAAA,OAA9B5M;AAxBqC,KAuB3B,CAAd;AASAA,IAAAA,MAAAA,CAAAA,oBAAAA,CAAAA,QAAAA,GAhCyC,OAgCzCA;;AACA,QAAI,CAAJ,oBAAyB;AACrB6M,MAAAA,2BAAAA,CAAAA,MAAAA,EADqB,MACrBA,CAAAA;AAlCqC;;AAoCzC,WApCyC,OAoCzC;AAh0DoB;;AAk0DxB,uCAAqC;AACjC,QAAInjC,KAAAA,GAAQs2B,MAAAA,CADqB,MACjC;;AACA,QAAIt2B,KAAAA,KAAAA,QAAAA,IAAsBA,KAAAA,KAA1B,WAA+C;AAC3C,aAAOq1B,mBAAAA,CAAoB,cAAc,4BADE,2DAChB,CAApBA,CAAP;AAH6B;;AAKjC,QAAI7G,OAAAA,GAAU,WAAW,2BAA2B;AAChD,UAAI4U,YAAAA,GAAe;AACfL,QAAAA,QAAAA,EADe;AAEfC,QAAAA,OAAAA,EAFe;AAAA,OAAnB;AAIA1M,MAAAA,MAAAA,CAAAA,aAAAA,GALgD,YAKhDA;AAV6B,KAKnB,CAAd;AAOA,QAAI+M,MAAAA,GAAS/M,MAAAA,CAZoB,OAYjC;;AACA,QAAI+M,MAAAA,KAAAA,SAAAA,IAAwB/M,MAAAA,CAAxB+M,aAAAA,IAAgDrjC,KAAAA,KAApD,YAA0E;AACtEsjC,MAAAA,gCAAAA,CADsE,MACtEA,CAAAA;AAd6B;;AAgBjCC,IAAAA,oCAAAA,CAAqCjN,MAAAA,CAhBJ,yBAgBjCiN,CAAAA;AACA,WAjBiC,OAiBjC;AAn1DoB;;AAs1DxB,iDAA+C;AAC3C,QAAI/U,OAAAA,GAAU,WAAW,2BAA2B;AAChD,UAAIgV,YAAAA,GAAe;AACfT,QAAAA,QAAAA,EADe;AAEfC,QAAAA,OAAAA,EAFe;AAAA,OAAnB;;AAIA1M,MAAAA,MAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CALgD,YAKhDA;AANuC,KAC7B,CAAd;AAOA,WAR2C,OAQ3C;AA91DoB;;AAg2DxB,0DAAwD;AACpD,QAAIt2B,KAAAA,GAAQs2B,MAAAA,CADwC,MACpD;;AACA,QAAIt2B,KAAAA,KAAJ,YAA0B;AACtBmjC,MAAAA,2BAAAA,CAAAA,MAAAA,EADsB,KACtBA,CAAAA;AADsB;AAF0B;;AAMpDM,IAAAA,4BAAAA,CANoD,MAMpDA,CAAAA;AAt2DoB;;AAw2DxB,uDAAqD;AACjD,QAAIxG,UAAAA,GAAa3G,MAAAA,CADgC,yBACjD;AACAA,IAAAA,MAAAA,CAAAA,MAAAA,GAFiD,UAEjDA;AACAA,IAAAA,MAAAA,CAAAA,YAAAA,GAHiD,MAGjDA;AACA,QAAI+M,MAAAA,GAAS/M,MAAAA,CAJoC,OAIjD;;AACA,QAAI+M,MAAAA,KAAJ,WAA0B;AACtBK,MAAAA,qDAAAA,CAAAA,MAAAA,EADsB,MACtBA,CAAAA;AAN6C;;AAQjD,QAAI,CAACC,wCAAAA,CAAD,MAACA,CAAD,IAAqD1G,UAAAA,CAAzD,UAA8E;AAC1EwG,MAAAA,4BAAAA,CAD0E,MAC1EA,CAAAA;AAT6C;AAx2D7B;;AAo3DxB,gDAA8C;AAC1CnN,IAAAA,MAAAA,CAAAA,MAAAA,GAD0C,SAC1CA;;AACAA,IAAAA,MAAAA,CAAAA,yBAAAA,CAF0C,UAE1CA;;AACA,QAAIsN,WAAAA,GAActN,MAAAA,CAHwB,YAG1C;;AACAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,OAAAA,CAA8B,wBAAwB;AAClDkN,MAAAA,YAAAA,CAAAA,OAAAA,CADkD,WAClDA;AALsC,KAI1ClN;;AAGAA,IAAAA,MAAAA,CAAAA,cAAAA,GAAwB,IAPkB,WAOlB,EAAxBA;;AACA,QAAIA,MAAAA,CAAAA,oBAAAA,KAAJ,WAA+C;AAC3CuN,MAAAA,iDAAAA,CAD2C,MAC3CA,CAAAA;AAD2C;AARL;;AAY1C,QAAIC,YAAAA,GAAexN,MAAAA,CAZuB,oBAY1C;AACAA,IAAAA,MAAAA,CAAAA,oBAAAA,GAb0C,SAa1CA;;AACA,QAAIwN,YAAAA,CAAJ,qBAAsC;AAClCA,MAAAA,YAAAA,CAAAA,OAAAA,CADkC,WAClCA;;AACAD,MAAAA,iDAAAA,CAFkC,MAElCA,CAAAA;AAFkC;AAdI;;AAmB1C,QAAIrV,OAAAA,GAAU8H,MAAAA,CAAAA,yBAAAA,CAAAA,UAAAA,EAA6CwN,YAAAA,CAnBjB,OAmB5BxN,CAAd;;AACAtB,IAAAA,WAAAA,CAAAA,OAAAA,EAAqB,YAAY;AAC7B8O,MAAAA,YAAAA,CAD6B,QAC7BA;;AACAD,MAAAA,iDAAAA,CAF6B,MAE7BA,CAAAA;AAFJ7O,KAAAA,EAGG,kBAAkB;AACjB8O,MAAAA,YAAAA,CAAAA,OAAAA,CADiB,MACjBA;;AACAD,MAAAA,iDAAAA,CAFiB,MAEjBA,CAAAA;AAzBsC,KAoB1C7O,CAAAA;AAx4DoB;;AAg5DxB,qDAAmD;AAC/CsB,IAAAA,MAAAA,CAAAA,qBAAAA,CAAAA,QAAAA,CAD+C,SAC/CA;;AACAA,IAAAA,MAAAA,CAAAA,qBAAAA,GAF+C,SAE/CA;AAl5DoB;;AAo5DxB,qEAAmE;AAC/DA,IAAAA,MAAAA,CAAAA,qBAAAA,CAAAA,OAAAA,CAD+D,KAC/DA;;AACAA,IAAAA,MAAAA,CAAAA,qBAAAA,GAF+D,SAE/DA;AACAyN,IAAAA,+BAAAA,CAAAA,MAAAA,EAH+D,KAG/DA,CAAAA;AAv5DoB;;AAy5DxB,qDAAmD;AAC/CzN,IAAAA,MAAAA,CAAAA,qBAAAA,CAAAA,QAAAA,CAD+C,SAC/CA;;AACAA,IAAAA,MAAAA,CAAAA,qBAAAA,GAF+C,SAE/CA;AACA,QAAIt2B,KAAAA,GAAQs2B,MAAAA,CAHmC,MAG/C;;AACA,QAAIt2B,KAAAA,KAAJ,YAA0B;AAEtBs2B,MAAAA,MAAAA,CAAAA,YAAAA,GAFsB,SAEtBA;;AACA,UAAIA,MAAAA,CAAAA,oBAAAA,KAAJ,WAA+C;AAC3CA,QAAAA,MAAAA,CAAAA,oBAAAA,CAD2C,QAC3CA;;AACAA,QAAAA,MAAAA,CAAAA,oBAAAA,GAF2C,SAE3CA;AALkB;AAJqB;;AAY/CA,IAAAA,MAAAA,CAAAA,MAAAA,GAZ+C,QAY/CA;AACA,QAAI+M,MAAAA,GAAS/M,MAAAA,CAbkC,OAa/C;;AACA,QAAI+M,MAAAA,KAAJ,WAA0B;AACtBW,MAAAA,iCAAAA,CADsB,MACtBA,CAAAA;AAf2C;AAz5D3B;;AA26DxB,qEAAmE;AAC/D1N,IAAAA,MAAAA,CAAAA,qBAAAA,CAAAA,OAAAA,CAD+D,KAC/DA;;AACAA,IAAAA,MAAAA,CAAAA,qBAAAA,GAF+D,SAE/DA;;AAEA,QAAIA,MAAAA,CAAAA,oBAAAA,KAAJ,WAA+C;AAC3CA,MAAAA,MAAAA,CAAAA,oBAAAA,CAAAA,OAAAA,CAD2C,KAC3CA;;AACAA,MAAAA,MAAAA,CAAAA,oBAAAA,GAF2C,SAE3CA;AAN2D;;AAQ/DyN,IAAAA,+BAAAA,CAAAA,MAAAA,EAR+D,KAQ/DA,CAAAA;AAn7DoB;;AAs7DxB,uDAAqD;AACjD,QAAIzN,MAAAA,CAAAA,aAAAA,KAAAA,SAAAA,IAAsCA,MAAAA,CAAAA,qBAAAA,KAA1C,WAAsF;AAClF,aADkF,KAClF;AAF6C;;AAIjD,WAJiD,IAIjD;AA17DoB;;AA47DxB,4DAA0D;AACtD,QAAIA,MAAAA,CAAAA,qBAAAA,KAAAA,SAAAA,IAA8CA,MAAAA,CAAAA,qBAAAA,KAAlD,WAA8F;AAC1F,aAD0F,KAC1F;AAFkD;;AAItD,WAJsD,IAItD;AAh8DoB;;AAk8DxB,0DAAwD;AACpDA,IAAAA,MAAAA,CAAAA,qBAAAA,GAA+BA,MAAAA,CADqB,aACpDA;AACAA,IAAAA,MAAAA,CAAAA,aAAAA,GAFoD,SAEpDA;AAp8DoB;;AAs8DxB,+DAA6D;AACzDA,IAAAA,MAAAA,CAAAA,qBAAAA,GAA+BA,MAAAA,CAAAA,cAAAA,CAD0B,KAC1BA,EAA/BA;AAv8DoB;;AAy8DxB,qEAAmE;AAC/D,QAAIA,MAAAA,CAAAA,aAAAA,KAAJ,WAAwC;AACpCA,MAAAA,MAAAA,CAAAA,aAAAA,CAAAA,OAAAA,CAA6BA,MAAAA,CADO,YACpCA;;AACAA,MAAAA,MAAAA,CAAAA,aAAAA,GAFoC,SAEpCA;AAH2D;;AAK/D,QAAI+M,MAAAA,GAAS/M,MAAAA,CALkD,OAK/D;;AACA,QAAI+M,MAAAA,KAAJ,WAA0B;AACtBY,MAAAA,gCAAAA,CAAAA,MAAAA,EAAyC3N,MAAAA,CADnB,YACtB2N,CAAAA;AAP2D;AAz8D3C;;AAm9DxB,kEAAgE;AAC5D,QAAIZ,MAAAA,GAAS/M,MAAAA,CAD+C,OAC5D;;AACA,QAAI+M,MAAAA,KAAAA,SAAAA,IAAwBa,YAAAA,KAAiB5N,MAAAA,CAA7C,eAAmE;AAC/D,wBAAkB;AACd6N,QAAAA,8BAAAA,CADc,MACdA,CAAAA;AADJ,aAGK;AACDb,QAAAA,gCAAAA,CADC,MACDA,CAAAA;AAL2D;AAFP;;AAU5DhN,IAAAA,MAAAA,CAAAA,aAAAA,GAV4D,YAU5DA;AA79DoB;;AAo+DxB,MAAI8N,2BAAAA,GAA6C,YAAY;AACzD,iDAA6C;AACzCpM,MAAAA,sBAAAA,CAAAA,MAAAA,EAAAA,CAAAA,EADyC,6BACzCA,CAAAA;AACAqM,MAAAA,oBAAAA,CAAAA,MAAAA,EAFyC,iBAEzCA,CAAAA;;AACA,UAAIjC,sBAAAA,CAAJ,MAAIA,CAAJ,EAAoC;AAChC,cAAM,cAD0B,6EAC1B,CAAN;AAJqC;;AAMzC,kCANyC,MAMzC;AACA9L,MAAAA,MAAAA,CAAAA,OAAAA,GAPyC,IAOzCA;AACA,UAAIt2B,KAAAA,GAAQs2B,MAAAA,CAR6B,MAQzC;;AACA,UAAIt2B,KAAAA,KAAJ,YAA0B;AACtB,YAAI,CAACsiC,mCAAAA,CAAD,MAACA,CAAD,IAAgDhM,MAAAA,CAApD,eAA0E;AACtEgO,UAAAA,mCAAAA,CADsE,IACtEA,CAAAA;AADJ,eAGK;AACDC,UAAAA,6CAAAA,CADC,IACDA,CAAAA;AALkB;;AAOtBC,QAAAA,oCAAAA,CAPsB,IAOtBA,CAAAA;AAPJ,aASK,IAAIxkC,KAAAA,KAAJ,YAA0B;AAC3BykC,QAAAA,6CAAAA,CAAAA,IAAAA,EAAoDnO,MAAAA,CADzB,YAC3BmO,CAAAA;AACAD,QAAAA,oCAAAA,CAF2B,IAE3BA,CAAAA;AAFC,aAIA,IAAIxkC,KAAAA,KAAJ,UAAwB;AACzBukC,QAAAA,6CAAAA,CADyB,IACzBA,CAAAA;AACAG,QAAAA,8CAAAA,CAFyB,IAEzBA,CAAAA;AAFC,aAIA;AACD,YAAId,WAAAA,GAActN,MAAAA,CADjB,YACD;AACAmO,QAAAA,6CAAAA,CAAAA,IAAAA,EAFC,WAEDA,CAAAA;AACAE,QAAAA,8CAAAA,CAAAA,IAAAA,EAHC,WAGDA,CAAAA;AA7BqC;AADY;;AAiCzD5pC,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBqpC,2BAAAA,CAAtBrpC,SAAAA,EAAAA,QAAAA,EAAuE;AAKnEyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACosB,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,iBAAOvP,mBAAAA,CAAoBwP,gCAAAA,CADW,QACXA,CAApBxP,CAAP;AAFS;;AAIb,eAAO,KAJM,cAIb;AAT+D;AAWnE/3B,MAAAA,UAAAA,EAXmE;AAYnEC,MAAAA,YAAAA,EAZmE;AAAA,KAAvExC;AAcAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBqpC,2BAAAA,CAAtBrpC,SAAAA,EAAAA,aAAAA,EAA4E;AASxEyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACosB,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,gBAAMC,gCAAAA,CADgC,aAChCA,CAAN;AAFS;;AAIb,YAAI,8BAAJ,WAA6C;AACzC,gBAAMC,0BAAAA,CADmC,aACnCA,CAAN;AALS;;AAOb,eAAOC,yCAAAA,CAPM,IAONA,CAAP;AAhBoE;AAkBxEznC,MAAAA,UAAAA,EAlBwE;AAmBxEC,MAAAA,YAAAA,EAnBwE;AAAA,KAA5ExC;AAqBAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBqpC,2BAAAA,CAAtBrpC,SAAAA,EAAAA,OAAAA,EAAsE;AASlEyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACosB,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,iBAAOvP,mBAAAA,CAAoBwP,gCAAAA,CADW,OACXA,CAApBxP,CAAP;AAFS;;AAIb,eAAO,KAJM,aAIb;AAb8D;AAelE/3B,MAAAA,UAAAA,EAfkE;AAgBlEC,MAAAA,YAAAA,EAhBkE;AAAA,KAAtExC;;AAqBAqpC,IAAAA,2BAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAA8C,kBAAkB;AAC5D,UAAI3U,MAAAA,KAAW,KAAf,GAAuB;AAAEA,QAAAA,MAAAA,GAAF,SAAEA;AADmC;;AAE5D,UAAI,CAACmV,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,eAAOvP,mBAAAA,CAAoBwP,gCAAAA,CADW,OACXA,CAApBxP,CAAP;AAHwD;;AAK5D,UAAI,8BAAJ,WAA6C;AACzC,eAAOA,mBAAAA,CAAoByP,0BAAAA,CADc,OACdA,CAApBzP,CAAP;AANwD;;AAQ5D,aAAO2P,gCAAAA,CAAAA,IAAAA,EARqD,MAQrDA,CAAP;AAjGqD,KAyFzDZ;;AAaAA,IAAAA,2BAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAA8C,YAAY;AACtD,UAAI,CAACQ,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,eAAOvP,mBAAAA,CAAoBwP,gCAAAA,CADW,OACXA,CAApBxP,CAAP;AAFkD;;AAItD,UAAIiB,MAAAA,GAAS,KAJyC,oBAItD;;AACA,UAAIA,MAAAA,KAAJ,WAA0B;AACtB,eAAOjB,mBAAAA,CAAoByP,0BAAAA,CADL,OACKA,CAApBzP,CAAP;AANkD;;AAQtD,UAAIiN,mCAAAA,CAAJ,MAAIA,CAAJ,EAAiD;AAC7C,eAAOjN,mBAAAA,CAAoB,cADkB,wCAClB,CAApBA,CAAP;AATkD;;AAWtD,aAAO4P,gCAAAA,CAX+C,IAW/CA,CAAP;AAjHqD,KAsGzDb;;AAuBAA,IAAAA,2BAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAoD,YAAY;AAC5D,UAAI,CAACQ,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,cAAMC,gCAAAA,CADgC,aAChCA,CAAN;AAFwD;;AAI5D,UAAIvO,MAAAA,GAAS,KAJ+C,oBAI5D;;AACA,UAAIA,MAAAA,KAAJ,WAA0B;AAAA;AALkC;;AAQ5D4O,MAAAA,kCAAAA,CAR4D,IAQ5DA,CAAAA;AArIqD,KA6HzDd;;AAUAA,IAAAA,2BAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAA8C,iBAAiB;AAC3D,UAAIpvB,KAAAA,KAAU,KAAd,GAAsB;AAAEA,QAAAA,KAAAA,GAAF,SAAEA;AADmC;;AAE3D,UAAI,CAAC4vB,6BAAAA,CAAL,IAAKA,CAAL,EAA0C;AACtC,eAAOvP,mBAAAA,CAAoBwP,gCAAAA,CADW,OACXA,CAApBxP,CAAP;AAHuD;;AAK3D,UAAI,8BAAJ,WAA6C;AACzC,eAAOA,mBAAAA,CAAoByP,0BAAAA,CADc,UACdA,CAApBzP,CAAP;AANuD;;AAQ3D,aAAO8P,gCAAAA,CAAAA,IAAAA,EARoD,KAQpDA,CAAP;AA/IqD,KAuIzDf;;AAUA,WAjJyD,2BAiJzD;AArnEoB,GAo+DyB,EAAjD;;AAmJArpC,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwBqpC,2BAAAA,CAAxBrpC,SAAAA,EAA+D;AAC3D8lC,IAAAA,KAAAA,EAAO;AAAEvjC,MAAAA,UAAAA,EADkD;AACpD,KADoD;AAE3Dq/B,IAAAA,KAAAA,EAAO;AAAEr/B,MAAAA,UAAAA,EAFkD;AAEpD,KAFoD;AAG3D07B,IAAAA,WAAAA,EAAa;AAAE17B,MAAAA,UAAAA,EAH4C;AAG9C,KAH8C;AAI3DyjC,IAAAA,KAAAA,EAAO;AAAEzjC,MAAAA,UAAAA,EAJkD;AAIpD,KAJoD;AAK3D27B,IAAAA,MAAAA,EAAQ;AAAE37B,MAAAA,UAAAA,EALiD;AAKnD,KALmD;AAM3Dw/B,IAAAA,WAAAA,EAAa;AAAEx/B,MAAAA,UAAAA,EAN4C;AAM9C,KAN8C;AAO3DugC,IAAAA,KAAAA,EAAO;AAAEvgC,MAAAA,UAAAA,EAPkD;AAOpD;AAPoD,GAA/DvC;;AASA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBqpC,2BAAAA,CAAtBrpC,SAAAA,EAA6Dw5B,cAAAA,CAA7Dx5B,WAAAA,EAAyF;AACrFsC,MAAAA,KAAAA,EADqF;AAErFE,MAAAA,YAAAA,EAFqF;AAAA,KAAzFxC;AAjoEoB;;AAuoExB,4CAA0C;AACtC,QAAI,CAACm+B,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFkC;;AAItC,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,sBAAKA,CAAL,EAAsE;AAClE,aADkE,KAClE;AALkC;;AAOtC,WAAOyoB,CAAAA,YAP+B,2BAOtC;AA9oEoB;;AAipExB,4DAA0D;AACtD,QAAI8S,MAAAA,GAAS+M,MAAAA,CADyC,oBACtD;AACA,WAAOhB,mBAAAA,CAAAA,MAAAA,EAF+C,MAE/CA,CAAP;AAnpEoB;;AAqpExB,oDAAkD;AAC9C,QAAI/L,MAAAA,GAAS+M,MAAAA,CADiC,oBAC9C;AACA,WAAOd,mBAAAA,CAFuC,MAEvCA,CAAP;AAvpEoB;;AAypExB,wEAAsE;AAClE,QAAIjM,MAAAA,GAAS+M,MAAAA,CADqD,oBAClE;AACA,QAAIrjC,KAAAA,GAAQs2B,MAAAA,CAFsD,MAElE;;AACA,QAAIgM,mCAAAA,CAAAA,MAAAA,CAAAA,IAA+CtiC,KAAAA,KAAnD,UAAuE;AACnE,aAAOm1B,mBAAAA,CAD4D,SAC5DA,CAAP;AAJ8D;;AAMlE,QAAIn1B,KAAAA,KAAJ,WAAyB;AACrB,aAAOq1B,mBAAAA,CAAoBiB,MAAAA,CADN,YACdjB,CAAP;AAP8D;;AASlE,WAAO4P,gCAAAA,CAT2D,MAS3DA,CAAP;AAlqEoB;;AAoqExB,iFAA+E;AAC3E,QAAI5B,MAAAA,CAAAA,mBAAAA,KAAJ,WAA8C;AAC1CY,MAAAA,gCAAAA,CAAAA,MAAAA,EAD0C,KAC1CA,CAAAA;AADJ,WAGK;AACDmB,MAAAA,yCAAAA,CAAAA,MAAAA,EADC,KACDA,CAAAA;AALuE;AApqEvD;;AA4qExB,gFAA8E;AAC1E,QAAI/B,MAAAA,CAAAA,kBAAAA,KAAJ,WAA6C;AACzCgC,MAAAA,+BAAAA,CAAAA,MAAAA,EADyC,KACzCA,CAAAA;AADJ,WAGK;AACDC,MAAAA,wCAAAA,CAAAA,MAAAA,EADC,KACDA,CAAAA;AALsE;AA5qEtD;;AAorExB,6DAA2D;AACvD,QAAIhP,MAAAA,GAAS+M,MAAAA,CAD0C,oBACvD;AACA,QAAIrjC,KAAAA,GAAQs2B,MAAAA,CAF2C,MAEvD;;AACA,QAAIt2B,KAAAA,KAAAA,SAAAA,IAAuBA,KAAAA,KAA3B,YAAiD;AAC7C,aAD6C,IAC7C;AAJmD;;AAMvD,QAAIA,KAAAA,KAAJ,UAAwB;AACpB,aADoB,CACpB;AAPmD;;AASvD,WAAOulC,6CAAAA,CAA8CjP,MAAAA,CATE,yBAShDiP,CAAP;AA7rEoB;;AA+rExB,sDAAoD;AAChD,QAAIjP,MAAAA,GAAS+M,MAAAA,CADmC,oBAChD;AACA,QAAImC,aAAAA,GAAgB,cAF4B,kFAE5B,CAApB;AACA9B,IAAAA,qDAAAA,CAAAA,MAAAA,EAHgD,aAGhDA,CAAAA;AAGA+B,IAAAA,sDAAAA,CAAAA,MAAAA,EANgD,aAMhDA,CAAAA;AACAnP,IAAAA,MAAAA,CAAAA,OAAAA,GAPgD,SAOhDA;AACA+M,IAAAA,MAAAA,CAAAA,oBAAAA,GARgD,SAQhDA;AAvsEoB;;AAysExB,2DAAyD;AACrD,QAAI/M,MAAAA,GAAS+M,MAAAA,CADwC,oBACrD;AACA,QAAIpG,UAAAA,GAAa3G,MAAAA,CAFoC,yBAErD;AACA,QAAIoP,SAAAA,GAAYC,2CAAAA,CAAAA,UAAAA,EAHqC,KAGrCA,CAAhB;;AACA,QAAIrP,MAAAA,KAAW+M,MAAAA,CAAf,sBAA4C;AACxC,aAAOhO,mBAAAA,CAAoByP,0BAAAA,CADa,UACbA,CAApBzP,CAAP;AALiD;;AAOrD,QAAIr1B,KAAAA,GAAQs2B,MAAAA,CAPyC,MAOrD;;AACA,QAAIt2B,KAAAA,KAAJ,WAAyB;AACrB,aAAOq1B,mBAAAA,CAAoBiB,MAAAA,CADN,YACdjB,CAAP;AATiD;;AAWrD,QAAIiN,mCAAAA,CAAAA,MAAAA,CAAAA,IAA+CtiC,KAAAA,KAAnD,UAAuE;AACnE,aAAOq1B,mBAAAA,CAAoB,cADwC,0DACxC,CAApBA,CAAP;AAZiD;;AAcrD,QAAIr1B,KAAAA,KAAJ,YAA0B;AACtB,aAAOq1B,mBAAAA,CAAoBiB,MAAAA,CADL,YACfjB,CAAP;AAfiD;;AAiBrD,QAAI7G,OAAAA,GAAUoX,6BAAAA,CAjBuC,MAiBvCA,CAAd;AACAC,IAAAA,oCAAAA,CAAAA,UAAAA,EAAAA,KAAAA,EAlBqD,SAkBrDA,CAAAA;AACA,WAnBqD,OAmBrD;AA5tEoB;;AA8tExB,MAAIC,aAAAA,GA9tEoB,EA8tExB;;AAMA,MAAInD,+BAAAA,GAAiD,YAAY;AAC7D,+CAA2C;AACvC,YAAM,cADiC,qBACjC,CAAN;AAFyD;;AAI7D5nC,IAAAA,MAAAA,CAAAA,cAAAA,CAAsB4nC,+BAAAA,CAAtB5nC,SAAAA,EAAAA,aAAAA,EAAgF;AAI5Eyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACutB,iCAAAA,CAAL,IAAKA,CAAL,EAA8C;AAC1C,gBAAMC,sCAAAA,CADoC,aACpCA,CAAN;AAFS;;AAIb,eAAO,KAJM,YAIb;AARwE;AAU5E1oC,MAAAA,UAAAA,EAV4E;AAW5EC,MAAAA,YAAAA,EAX4E;AAAA,KAAhFxC;AAaAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAsB4nC,+BAAAA,CAAtB5nC,SAAAA,EAAAA,QAAAA,EAA2E;AAIvEyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACutB,iCAAAA,CAAL,IAAKA,CAAL,EAA8C;AAC1C,gBAAMC,sCAAAA,CADoC,QACpCA,CAAN;AAFS;;AAIb,YAAI,0BAAJ,WAAyC;AAIrC,gBAAM,cAJ+B,mEAI/B,CAAN;AARS;;AAUb,eAAO,sBAVM,MAUb;AAdmE;AAgBvE1oC,MAAAA,UAAAA,EAhBuE;AAiBvEC,MAAAA,YAAAA,EAjBuE;AAAA,KAA3ExC;;AA0BA4nC,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAkD,aAAa;AAC3D,UAAIjH,CAAAA,KAAM,KAAV,GAAkB;AAAEA,QAAAA,CAAAA,GAAF,SAAEA;AADuC;;AAE3D,UAAI,CAACqK,iCAAAA,CAAL,IAAKA,CAAL,EAA8C;AAC1C,cAAMC,sCAAAA,CADoC,OACpCA,CAAN;AAHuD;;AAK3D,UAAIhmC,KAAAA,GAAQ,+BAL+C,MAK3D;;AACA,UAAIA,KAAAA,KAAJ,YAA0B;AAAA;AANiC;;AAW3DimC,MAAAA,oCAAAA,CAAAA,IAAAA,EAX2D,CAW3DA,CAAAA;AAtDyD,KA2C7DtD;;AAcAA,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,UAAAA,IAAwD,kBAAkB;AACtE,UAAIpjC,MAAAA,GAAS,qBADyD,MACzD,CAAb;;AACA2mC,MAAAA,8CAAAA,CAFsE,IAEtEA,CAAAA;AACA,aAHsE,MAGtE;AA5DyD,KAyD7DvD;;AAMAA,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,UAAAA,IAAwD,YAAY;AAChE9G,MAAAA,UAAAA,CADgE,IAChEA,CAAAA;AAhEyD,KA+D7D8G;;AAGA,WAlE6D,+BAkE7D;AAtyEoB,GAouE6B,EAArD;;AAoEA5nC,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwB4nC,+BAAAA,CAAxB5nC,SAAAA,EAAmE;AAC/Do4B,IAAAA,KAAAA,EAAO;AAAE71B,MAAAA,UAAAA,EAzyEW;AAyyEb;AADwD,GAAnEvC;;AAGA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsB4nC,+BAAAA,CAAtB5nC,SAAAA,EAAiEw5B,cAAAA,CAAjEx5B,WAAAA,EAA6F;AACzFsC,MAAAA,KAAAA,EADyF;AAEzFE,MAAAA,YAAAA,EAFyF;AAAA,KAA7FxC;AA5yEoB;;AAkzExB,gDAA8C;AAC1C,QAAI,CAACm+B,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFsC;;AAI1C,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,2BAAKA,CAAL,EAA2E;AACvE,aADuE,KACvE;AALsC;;AAO1C,WAAOyoB,CAAAA,YAPmC,+BAO1C;AAzzEoB;;AA2zExB,kKAAgK;AAC5JyZ,IAAAA,UAAAA,CAAAA,yBAAAA,GAD4J,MAC5JA;AACA3G,IAAAA,MAAAA,CAAAA,yBAAAA,GAF4J,UAE5JA;AAEA2G,IAAAA,UAAAA,CAAAA,MAAAA,GAJ4J,SAI5JA;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GAL4J,SAK5JA;AACApB,IAAAA,UAAAA,CAN4J,UAM5JA,CAAAA;AACAoB,IAAAA,UAAAA,CAAAA,YAAAA,GAP4J,SAO5JA;AACAA,IAAAA,UAAAA,CAAAA,gBAAAA,GAA8BkJ,qBAR8H,EAQ5JlJ;AACAA,IAAAA,UAAAA,CAAAA,QAAAA,GAT4J,KAS5JA;AACAA,IAAAA,UAAAA,CAAAA,sBAAAA,GAV4J,aAU5JA;AACAA,IAAAA,UAAAA,CAAAA,YAAAA,GAX4J,aAW5JA;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GAZ4J,cAY5JA;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GAb4J,cAa5JA;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GAd4J,cAc5JA;AACA,QAAIiH,YAAAA,GAAekC,8CAAAA,CAfyI,UAezIA,CAAnB;AACAC,IAAAA,gCAAAA,CAAAA,MAAAA,EAhB4J,YAgB5JA,CAAAA;AACA,QAAI1G,WAAAA,GAAcC,cAjB0I,EAiB5J;AACA,QAAI0G,YAAAA,GAAenR,mBAAAA,CAlByI,WAkBzIA,CAAnB;AACAH,IAAAA,WAAAA,CAAAA,YAAAA,EAA0B,YAAY;AAClCiI,MAAAA,UAAAA,CAAAA,QAAAA,GADkC,IAClCA;AACAsJ,MAAAA,mDAAAA,CAFkC,UAElCA,CAAAA;AAFJvR,KAAAA,EAGG,aAAa;AACZiI,MAAAA,UAAAA,CAAAA,QAAAA,GADY,IACZA;AACA8G,MAAAA,+BAAAA,CAAAA,MAAAA,EAFY,CAEZA,CAAAA;AAxBwJ,KAmB5J/O,CAAAA;AA90EoB;;AAs1ExB,wHAAsH;AAClH,QAAIiI,UAAAA,GAAaliC,MAAAA,CAAAA,MAAAA,CAAc4nC,+BAAAA,CADmF,SACjG5nC,CAAjB;;AACA,QAAI6kC,cAAAA,GAAiB,0BAAY;AAAE,aAAF,SAAE;AAF+E,KAElH;;AACA,QAAI4G,cAAAA,GAAiB,0BAAY;AAAE,aAAOrR,mBAAAA,CAAT,SAASA,CAAP;AAH+E,KAGlH;;AACA,QAAIsR,cAAAA,GAAiB,0BAAY;AAAE,aAAOtR,mBAAAA,CAAT,SAASA,CAAP;AAJ+E,KAIlH;;AACA,QAAIuR,cAAAA,GAAiB,0BAAY;AAAE,aAAOvR,mBAAAA,CAAT,SAASA,CAAP;AAL+E,KAKlH;;AACA,QAAIyM,cAAAA,CAAAA,KAAAA,KAAJ,WAAwC;AACpChC,MAAAA,cAAAA,GAAiB,0BAAY;AAAE,eAAOgC,cAAAA,CAAAA,KAAAA,CAAT,UAASA,CAAP;AADK,OACpChC;AAP8G;;AASlH,QAAIgC,cAAAA,CAAAA,KAAAA,KAAJ,WAAwC;AACpC4E,MAAAA,cAAAA,GAAiB,+BAAiB;AAAE,eAAO5E,cAAAA,CAAAA,KAAAA,CAAAA,KAAAA,EAAT,UAASA,CAAP;AADA,OACpC4E;AAV8G;;AAYlH,QAAI5E,cAAAA,CAAAA,KAAAA,KAAJ,WAAwC;AACpC6E,MAAAA,cAAAA,GAAiB,0BAAY;AAAE,eAAO7E,cAAAA,CAAT,KAASA,EAAP;AADK,OACpC6E;AAb8G;;AAelH,QAAI7E,cAAAA,CAAAA,KAAAA,KAAJ,WAAwC;AACpC8E,MAAAA,cAAAA,GAAiB,gCAAkB;AAAE,eAAO9E,cAAAA,CAAAA,KAAAA,CAAT,MAASA,CAAP;AADD,OACpC8E;AAhB8G;;AAkBlH9D,IAAAA,oCAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,EAAAA,cAAAA,EAAAA,cAAAA,EAAAA,cAAAA,EAAAA,aAAAA,EAlBkH,aAkBlHA,CAAAA;AAx2EoB;;AA22ExB,sEAAoE;AAChE3F,IAAAA,UAAAA,CAAAA,eAAAA,GADgE,SAChEA;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GAFgE,SAEhEA;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GAHgE,SAGhEA;AACAA,IAAAA,UAAAA,CAAAA,sBAAAA,GAJgE,SAIhEA;AA/2EoB;;AAi3ExB,4DAA0D;AACtD0J,IAAAA,oBAAAA,CAAAA,UAAAA,EAAAA,aAAAA,EADsD,CACtDA,CAAAA;AACAJ,IAAAA,mDAAAA,CAFsD,UAEtDA,CAAAA;AAn3EoB;;AAq3ExB,0EAAwE;AACpE,QAAI;AACA,aAAOtJ,UAAAA,CAAAA,sBAAAA,CADP,KACOA,CAAP;AADJ,MAGA,mBAAmB;AACf2J,MAAAA,4CAAAA,CAAAA,UAAAA,EADe,UACfA,CAAAA;AACA,aAFe,CAEf;AANgE;AAr3EhD;;AA83ExB,qEAAmE;AAC/D,WAAO3J,UAAAA,CAAAA,YAAAA,GAA0BA,UAAAA,CAD8B,eAC/D;AA/3EoB;;AAi4ExB,8EAA4E;AACxE,QAAI;AACA0J,MAAAA,oBAAAA,CAAAA,UAAAA,EAAAA,KAAAA,EADA,SACAA,CAAAA;AADJ,MAGA,iBAAiB;AACbC,MAAAA,4CAAAA,CAAAA,UAAAA,EADa,QACbA,CAAAA;AADa;AAJuD;;AAQxE,QAAItQ,MAAAA,GAAS2G,UAAAA,CAR2D,yBAQxE;;AACA,QAAI,CAACqF,mCAAAA,CAAD,MAACA,CAAD,IAAgDhM,MAAAA,CAAAA,MAAAA,KAApD,YAAkF;AAC9E,UAAI4N,YAAAA,GAAekC,8CAAAA,CAD2D,UAC3DA,CAAnB;AACAC,MAAAA,gCAAAA,CAAAA,MAAAA,EAF8E,YAE9EA,CAAAA;AAXoE;;AAaxEE,IAAAA,mDAAAA,CAbwE,UAaxEA,CAAAA;AA94EoB;;AAi5ExB,2EAAyE;AACrE,QAAIjQ,MAAAA,GAAS2G,UAAAA,CADwD,yBACrE;;AACA,QAAI,CAACA,UAAAA,CAAL,UAA0B;AAAA;AAF2C;;AAKrE,QAAI3G,MAAAA,CAAAA,qBAAAA,KAAJ,WAAgD;AAAA;AALqB;;AAQrE,QAAIt2B,KAAAA,GAAQs2B,MAAAA,CARyD,MAQrE;;AACA,QAAIt2B,KAAAA,KAAJ,YAA0B;AACtByjC,MAAAA,4BAAAA,CADsB,MACtBA,CAAAA;AADsB;AAT2C;;AAarE,QAAIxG,UAAAA,CAAAA,MAAAA,CAAAA,MAAAA,KAAJ,GAAoC;AAAA;AAbiC;;AAgBrE,QAAI5/B,KAAAA,GAAQwpC,cAAAA,CAhByD,UAgBzDA,CAAZ;;AACA,QAAIxpC,KAAAA,KAAJ,eAA6B;AACzBypC,MAAAA,2CAAAA,CADyB,UACzBA,CAAAA;AADJ,WAGK;AACDC,MAAAA,2CAAAA,CAAAA,UAAAA,EADC,KACDA,CAAAA;AArBiE;AAj5EjD;;AAy6ExB,2EAAyE;AACrE,QAAI9J,UAAAA,CAAAA,yBAAAA,CAAAA,MAAAA,KAAJ,YAAgE;AAC5DgJ,MAAAA,oCAAAA,CAAAA,UAAAA,EAD4D,KAC5DA,CAAAA;AAFiE;AAz6EjD;;AA86ExB,mEAAiE;AAC7D,QAAI3P,MAAAA,GAAS2G,UAAAA,CADgD,yBAC7D;AACA+J,IAAAA,sCAAAA,CAF6D,MAE7DA,CAAAA;AACAC,IAAAA,YAAAA,CAH6D,UAG7DA,CAAAA;;AACA,QAAIC,gBAAAA,GAAmBjK,UAAAA,CAJsC,eAItCA,EAAvB;;AACAiJ,IAAAA,8CAAAA,CAL6D,UAK7DA,CAAAA;AACAlR,IAAAA,WAAAA,CAAAA,gBAAAA,EAA8B,YAAY;AACtCmS,MAAAA,iCAAAA,CADsC,MACtCA,CAAAA;AADJnS,KAAAA,EAEG,kBAAkB;AACjBoS,MAAAA,0CAAAA,CAAAA,MAAAA,EADiB,MACjBA,CAAAA;AATyD,KAM7DpS,CAAAA;AAp7EoB;;AA07ExB,0EAAwE;AACpE,QAAIsB,MAAAA,GAAS2G,UAAAA,CADuD,yBACpE;AACAoK,IAAAA,2CAAAA,CAFoE,MAEpEA,CAAAA;;AACA,QAAIC,gBAAAA,GAAmBrK,UAAAA,CAAAA,eAAAA,CAH6C,KAG7CA,CAAvB;;AACAjI,IAAAA,WAAAA,CAAAA,gBAAAA,EAA8B,YAAY;AACtCuS,MAAAA,iCAAAA,CADsC,MACtCA,CAAAA;AACA,UAAIvnC,KAAAA,GAAQs2B,MAAAA,CAF0B,MAEtC;AACA2Q,MAAAA,YAAAA,CAHsC,UAGtCA,CAAAA;;AACA,UAAI,CAAC3E,mCAAAA,CAAD,MAACA,CAAD,IAAgDtiC,KAAAA,KAApD,YAA0E;AACtE,YAAIkkC,YAAAA,GAAekC,8CAAAA,CADmD,UACnDA,CAAnB;AACAC,QAAAA,gCAAAA,CAAAA,MAAAA,EAFsE,YAEtEA,CAAAA;AANkC;;AAQtCE,MAAAA,mDAAAA,CARsC,UAQtCA,CAAAA;AARJvR,KAAAA,EASG,kBAAkB;AACjB,UAAIsB,MAAAA,CAAAA,MAAAA,KAAJ,YAAkC;AAC9B4P,QAAAA,8CAAAA,CAD8B,UAC9BA,CAAAA;AAFa;;AAIjBsB,MAAAA,0CAAAA,CAAAA,MAAAA,EAJiB,MAIjBA,CAAAA;AAjBgE,KAIpExS,CAAAA;AA97EoB;;AA88ExB,sEAAoE;AAChE,QAAI8H,WAAAA,GAAcyI,6CAAAA,CAD8C,UAC9CA,CAAlB;AACA,WAAOzI,WAAAA,IAFyD,CAEhE;AAh9EoB;;AAm9ExB,mEAAiE;AAC7D,QAAIxG,MAAAA,GAAS2G,UAAAA,CADgD,yBAC7D;AACAiJ,IAAAA,8CAAAA,CAF6D,UAE7DA,CAAAA;AACA/C,IAAAA,2BAAAA,CAAAA,MAAAA,EAH6D,KAG7DA,CAAAA;AAt9EoB;;AAy9ExB,6CAA2C;AACvC,WAAO,cAAc,qCADkB,uCAChC,CAAP;AA19EoB;;AA69ExB,wDAAsD;AAClD,WAAO,cAAc,sDAD6B,wDAC3C,CAAP;AA99EoB;;AAi+ExB,kDAAgD;AAC5C,WAAO,cAAc,kDADuB,oDACrC,CAAP;AAl+EoB;;AAo+ExB,4CAA0C;AACtC,WAAO,cAAc,mBADiB,mCAC/B,CAAP;AAr+EoB;;AAu+ExB,wDAAsD;AAClDE,IAAAA,MAAAA,CAAAA,cAAAA,GAAwB,WAAW,2BAA2B;AAC1DA,MAAAA,MAAAA,CAAAA,sBAAAA,GAD0D,OAC1DA;AACAA,MAAAA,MAAAA,CAAAA,qBAAAA,GAF0D,MAE1DA;AACAA,MAAAA,MAAAA,CAAAA,mBAAAA,GAH0D,SAG1DA;AAJ8C,KAC1B,CAAxBA;AAx+EoB;;AA8+ExB,0EAAwE;AACpEmB,IAAAA,oCAAAA,CADoE,MACpEA,CAAAA;AACAP,IAAAA,gCAAAA,CAAAA,MAAAA,EAFoE,MAEpEA,CAAAA;AAh/EoB;;AAk/ExB,kEAAgE;AAC5DO,IAAAA,oCAAAA,CAD4D,MAC5DA,CAAAA;AACAR,IAAAA,iCAAAA,CAF4D,MAE5DA,CAAAA;AAp/EoB;;AAs/ExB,4DAA0D;AACtD,QAAIX,MAAAA,CAAAA,qBAAAA,KAAJ,WAAgD;AAAA;AADM;;AAItDvM,IAAAA,yBAAAA,CAA0BuM,MAAAA,CAJ4B,cAItDvM,CAAAA;;AACAuM,IAAAA,MAAAA,CAAAA,qBAAAA,CALsD,MAKtDA;;AACAA,IAAAA,MAAAA,CAAAA,sBAAAA,GANsD,SAMtDA;AACAA,IAAAA,MAAAA,CAAAA,qBAAAA,GAPsD,SAOtDA;AACAA,IAAAA,MAAAA,CAAAA,mBAAAA,GARsD,UAQtDA;AA9/EoB;;AAggFxB,qEAAmE;AAC/DsB,IAAAA,8CAAAA,CAAAA,MAAAA,EAD+D,MAC/DA,CAAAA;AAjgFoB;;AAmgFxB,qDAAmD;AAC/C,QAAItB,MAAAA,CAAAA,sBAAAA,KAAJ,WAAiD;AAAA;AADF;;AAI/CA,IAAAA,MAAAA,CAAAA,sBAAAA,CAJ+C,SAI/CA;;AACAA,IAAAA,MAAAA,CAAAA,sBAAAA,GAL+C,SAK/CA;AACAA,IAAAA,MAAAA,CAAAA,qBAAAA,GAN+C,SAM/CA;AACAA,IAAAA,MAAAA,CAAAA,mBAAAA,GAP+C,UAO/CA;AA1gFoB;;AA4gFxB,uDAAqD;AACjDA,IAAAA,MAAAA,CAAAA,aAAAA,GAAuB,WAAW,2BAA2B;AACzDA,MAAAA,MAAAA,CAAAA,qBAAAA,GADyD,OACzDA;AACAA,MAAAA,MAAAA,CAAAA,oBAAAA,GAFyD,MAEzDA;AAH6C,KAC1B,CAAvBA;AAIAA,IAAAA,MAAAA,CAAAA,kBAAAA,GALiD,SAKjDA;AAjhFoB;;AAmhFxB,yEAAuE;AACnEiB,IAAAA,mCAAAA,CADmE,MACnEA,CAAAA;AACAe,IAAAA,+BAAAA,CAAAA,MAAAA,EAFmE,MAEnEA,CAAAA;AArhFoB;;AAuhFxB,iEAA+D;AAC3Df,IAAAA,mCAAAA,CAD2D,MAC3DA,CAAAA;AACAhB,IAAAA,gCAAAA,CAF2D,MAE3DA,CAAAA;AAzhFoB;;AA2hFxB,2DAAyD;AACrD,QAAID,MAAAA,CAAAA,oBAAAA,KAAJ,WAA+C;AAAA;AADM;;AAIrDvM,IAAAA,yBAAAA,CAA0BuM,MAAAA,CAJ2B,aAIrDvM,CAAAA;;AACAuM,IAAAA,MAAAA,CAAAA,oBAAAA,CALqD,MAKrDA;;AACAA,IAAAA,MAAAA,CAAAA,qBAAAA,GANqD,SAMrDA;AACAA,IAAAA,MAAAA,CAAAA,oBAAAA,GAPqD,SAOrDA;AACAA,IAAAA,MAAAA,CAAAA,kBAAAA,GARqD,UAQrDA;AAniFoB;;AAqiFxB,kDAAgD;AAC5CiB,IAAAA,mCAAAA,CAD4C,MAC5CA,CAAAA;AAtiFoB;;AAwiFxB,oEAAkE;AAC9DG,IAAAA,6CAAAA,CAAAA,MAAAA,EAD8D,MAC9DA,CAAAA;AAziFoB;;AA2iFxB,oDAAkD;AAC9C,QAAIpB,MAAAA,CAAAA,qBAAAA,KAAJ,WAAgD;AAAA;AADF;;AAI9CA,IAAAA,MAAAA,CAAAA,qBAAAA,CAJ8C,SAI9CA;;AACAA,IAAAA,MAAAA,CAAAA,qBAAAA,GAL8C,SAK9CA;AACAA,IAAAA,MAAAA,CAAAA,oBAAAA,GAN8C,SAM9CA;AACAA,IAAAA,MAAAA,CAAAA,kBAAAA,GAP8C,WAO9CA;AAljFoB;;AAsjFxB,MAAIoE,kBAAAA,GAAqB,qDAtjFD,SAsjFxB;;AAGA,2CAAyC;AACrC,QAAI,EAAE,8BAA8B,kBAApC,QAAI,CAAJ,EAA+D;AAC3D,aAD2D,KAC3D;AAFiC;;AAIrC,QAAI;AACA,UADA,IACA;AACA,aAFA,IAEA;AAFJ,MAIA,WAAW;AACP,aADO,KACP;AATiC;AAzjFjB;;AAqkFxB,wCAAsC;AAElC,QAAIvoC,IAAAA,GAAO,qCAAqC;AAC5C,qBAAeitB,OAAAA,IAD6B,EAC5C;AACA,kBAAYlxB,IAAAA,IAFgC,OAE5C;;AACA,UAAIoxB,KAAAA,CAAJ,mBAA6B;AACzBA,QAAAA,KAAAA,CAAAA,iBAAAA,CAAAA,IAAAA,EAA8B,KADL,WACzBA;AAJwC;AAFd,KAElC;;AAOAntB,IAAAA,IAAAA,CAAAA,SAAAA,GAAiBnE,MAAAA,CAAAA,MAAAA,CAAcsxB,KAAAA,CATG,SASjBtxB,CAAjBmE;AACAnE,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBmE,IAAAA,CAAtBnE,SAAAA,EAAAA,aAAAA,EAAqD;AAAEsC,MAAAA,KAAAA,EAAF;AAAeG,MAAAA,QAAAA,EAAf;AAA+BD,MAAAA,YAAAA,EAA/B;AAAA,KAArDxC;AACA,WAXkC,IAWlC;AAhlFoB;;AAmlFxB,MAAI2sC,cAAAA,GAAiBC,yBAAAA,CAAAA,kBAAAA,CAAAA,GAAAA,kBAAAA,GAAqEC,0BAnlFlE,EAmlFxB;;AAEA,iGAA+F;AAC3F,QAAIvR,MAAAA,GAASyD,kCAAAA,CAD8E,MAC9EA,CAAb;AACA,QAAIuJ,MAAAA,GAASb,kCAAAA,CAF8E,IAE9EA,CAAb;AACAnoB,IAAAA,MAAAA,CAAAA,UAAAA,GAH2F,IAG3FA;AACA,QAAIwtB,YAAAA,GAJuF,KAI3F;AAEA,QAAIC,YAAAA,GAAe3S,mBAAAA,CANwE,SAMxEA,CAAnB;AACA,WAAO,WAAW,2BAA2B;AACzC,UADyC,cACzC;;AACA,UAAI4S,MAAAA,KAAJ,WAA0B;AACtBrB,QAAAA,cAAAA,GAAiB,0BAAY;AACzB,cAAIvT,KAAAA,GAAQ,8BADa,YACb,CAAZ;AACA,cAAI6U,OAAAA,GAFqB,EAEzB;;AACA,cAAI,CAAJ,cAAmB;AACfA,YAAAA,OAAAA,CAAAA,IAAAA,CAAa,YAAY;AACrB,kBAAIC,IAAAA,CAAAA,MAAAA,KAAJ,YAAgC;AAC5B,uBAAO5F,mBAAAA,CAAAA,IAAAA,EADqB,KACrBA,CAAP;AAFiB;;AAIrB,qBAAOlN,mBAAAA,CAJc,SAIdA,CAAP;AALW,aACf6S;AAJqB;;AAWzB,cAAI,CAAJ,eAAoB;AAChBA,YAAAA,OAAAA,CAAAA,IAAAA,CAAa,YAAY;AACrB,kBAAI3tB,MAAAA,CAAAA,MAAAA,KAAJ,YAAkC;AAC9B,uBAAOqc,oBAAAA,CAAAA,MAAAA,EADuB,KACvBA,CAAP;AAFiB;;AAIrB,qBAAOvB,mBAAAA,CAJc,SAIdA,CAAP;AALY,aAChB6S;AAZqB;;AAmBzBE,UAAAA,kBAAAA,CAAmB,YAAY;AAAE,mBAAO,YAAY,YAAY,kBAAkB;AAAE,qBAAOC,MAAT,EAAE;AAArD,aAAqB,CAAZ,CAAP;AAAjCD,WAAAA,EAAAA,IAAAA,EAnByB,KAmBzBA,CAAAA;AApBkB,SACtBxB;;AAqBA,YAAIqB,MAAAA,CAAJ,SAAoB;AAChBrB,UAAAA,cADgB;AAAA;AAtBE;;AA0BtBqB,QAAAA,MAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EA1BsB,cA0BtBA;AA5BqC;;AAiCzC,0BAAoB;AAChB,eAAO,WAAW,mCAAmC;AACjD,8BAAoB;AAChB,sBAAU;AACNK,cAAAA,WADM;AAAV,mBAGK;AAGDrT,cAAAA,kBAAAA,CAAmBsT,QAAnBtT,EAAAA,EAAAA,IAAAA,EAHC,UAGDA,CAAAA;AAPY;AAD6B;;AAWjDl0B,UAAAA,IAAAA,CAXiD,KAWjDA,CAAAA;AAZY,SACT,CAAP;AAlCqC;;AAgDzC,0BAAoB;AAChB,0BAAkB;AACd,iBAAOs0B,mBAAAA,CADO,IACPA,CAAP;AAFY;;AAIhB,eAAO,mBAAmBkO,MAAAA,CAAnB,eAAyC,YAAY;AACxD,iBAAO,WAAW,mCAAmC;AACjDzK,YAAAA,+BAAAA,CAAAA,MAAAA,EAAwC;AACpCH,cAAAA,WAAAA,EAAa,4BAAiB;AAC1BqP,gBAAAA,YAAAA,GAAe/S,kBAAAA,CAAmBoQ,gCAAAA,CAAAA,MAAAA,EAAnBpQ,KAAmBoQ,CAAnBpQ,EAAAA,SAAAA,EADW,IACXA,CAAf+S;AACAQ,gBAAAA,WAAAA,CAF0B,KAE1BA,CAAAA;AAHgC;AAKpC5P,cAAAA,WAAAA,EAAa,uBAAY;AAAE,uBAAO4P,WAAAA,CAAT,IAASA,CAAP;AALS;AAMpC3P,cAAAA,WAAAA,EANoC;AAAA,aAAxCC,CAAAA;AAFoD,WACjD,CAAP;AALY,SAIT,CAAP;AApDqC;;AAkEzC2P,MAAAA,kBAAAA,CAAAA,MAAAA,EAA2BlS,MAAAA,CAA3BkS,cAAAA,EAAkD,uBAAuB;AACrE,YAAI,CAAJ,cAAmB;AACfL,UAAAA,kBAAAA,CAAmB,YAAY;AAAE,mBAAO7F,mBAAAA,CAAAA,IAAAA,EAAT,WAASA,CAAP;AAAjC6F,WAAAA,EAAAA,IAAAA,EADe,WACfA,CAAAA;AADJ,eAGK;AACDM,UAAAA,QAAAA,CAAAA,IAAAA,EADC,WACDA,CAAAA;AALiE;AAlEhC,OAkEzCD,CAAAA;AASAA,MAAAA,kBAAAA,CAAAA,IAAAA,EAAyBlF,MAAAA,CAAzBkF,cAAAA,EAAgD,uBAAuB;AACnE,YAAI,CAAJ,eAAoB;AAChBL,UAAAA,kBAAAA,CAAmB,YAAY;AAAE,mBAAOxR,oBAAAA,CAAAA,MAAAA,EAAT,WAASA,CAAP;AAAjCwR,WAAAA,EAAAA,IAAAA,EADgB,WAChBA,CAAAA;AADJ,eAGK;AACDM,UAAAA,QAAAA,CAAAA,IAAAA,EADC,WACDA,CAAAA;AAL+D;AA3E9B,OA2EzCD,CAAAA;AASAE,MAAAA,iBAAAA,CAAAA,MAAAA,EAA0BpS,MAAAA,CAA1BoS,cAAAA,EAAiD,YAAY;AACzD,YAAI,CAAJ,cAAmB;AACfP,UAAAA,kBAAAA,CAAmB,YAAY;AAAE,mBAAOQ,oDAAAA,CAAT,MAASA,CAAP;AADlB,WACfR,CAAAA;AADJ,eAGK;AACDM,UAAAA,QADC;AAJoD;AApFpB,OAoFzCC,CAAAA;;AASA,UAAInG,mCAAAA,CAAAA,IAAAA,CAAAA,IAA6C2F,IAAAA,CAAAA,MAAAA,KAAjD,UAA2E;AACvE,YAAIU,YAAAA,GAAe,cADoD,6EACpD,CAAnB;;AACA,YAAI,CAAJ,eAAoB;AAChBT,UAAAA,kBAAAA,CAAmB,YAAY;AAAE,mBAAOxR,oBAAAA,CAAAA,MAAAA,EAAT,YAASA,CAAP;AAAjCwR,WAAAA,EAAAA,IAAAA,EADgB,YAChBA,CAAAA;AADJ,eAGK;AACDM,UAAAA,QAAAA,CAAAA,IAAAA,EADC,YACDA,CAAAA;AANmE;AA7FlC;;AAsGzC1R,MAAAA,yBAAAA,CAA0B8R,QAtGe,EAsGzC9R,CAAAA;;AACA,uCAAiC;AAG7B,YAAI+R,eAAAA,GAHyB,YAG7B;AACA,eAAO,iCAAiC,YAAY;AAAE,iBAAOA,eAAAA,KAAAA,YAAAA,GAAmCC,qBAAnCD,EAAAA,GAAT,SAAE;AAJzB,SAItB,CAAP;AA3GqC;;AA6GzC,2DAAqD;AACjD,YAAIvS,MAAAA,CAAAA,MAAAA,KAAJ,WAAiC;AAC7B6R,UAAAA,MAAAA,CAAO7R,MAAAA,CADsB,YAC7B6R,CAAAA;AADJ,eAGK;AACDY,UAAAA,aAAAA,CAAAA,OAAAA,EADC,MACDA,CAAAA;AAL6C;AA7GZ;;AAqHzC,0DAAoD;AAChD,YAAIzS,MAAAA,CAAAA,MAAAA,KAAJ,UAAgC;AAC5B6R,UAAAA,MAD4B;AAAhC,eAGK;AACDa,UAAAA,eAAAA,CAAAA,OAAAA,EADC,MACDA,CAAAA;AAL4C;AArHX;;AA6HzC,0EAAoE;AAChE,0BAAkB;AAAA;AAD8C;;AAIhEnB,QAAAA,YAAAA,GAJgE,IAIhEA;;AACA,YAAII,IAAAA,CAAAA,MAAAA,KAAAA,UAAAA,IAA8B,CAAC3F,mCAAAA,CAAnC,IAAmCA,CAAnC,EAA8E;AAC1E0G,UAAAA,eAAAA,CAAgBF,qBAAhBE,EAAAA,EAD0E,SAC1EA,CAAAA;AADJ,eAGK;AACDC,UAAAA,SADC;AAR2D;;AAWhE,6BAAqB;AACjBjU,UAAAA,WAAAA,CAAYmT,MAAZnT,EAAAA,EAAsB,YAAY;AAAE,mBAAOkU,QAAAA,CAAAA,eAAAA,EAAT,aAASA,CAAP;AAApClU,WAAAA,EAAwF,oBAAoB;AAAE,mBAAOkU,QAAAA,CAAAA,IAAAA,EAAT,QAASA,CAAP;AAD7F,WACjBlU,CAAAA;AAZ4D;AA7H3B;;AA4IzC,wCAAkC;AAC9B,0BAAkB;AAAA;AADY;;AAI9B6S,QAAAA,YAAAA,GAJ8B,IAI9BA;;AACA,YAAII,IAAAA,CAAAA,MAAAA,KAAAA,UAAAA,IAA8B,CAAC3F,mCAAAA,CAAnC,IAAmCA,CAAnC,EAA8E;AAC1E0G,UAAAA,eAAAA,CAAgBF,qBAAhBE,EAAAA,EAAyC,YAAY;AAAE,mBAAOE,QAAAA,CAAAA,OAAAA,EAAT,KAASA,CAAP;AADmB,WAC1EF,CAAAA;AADJ,eAGK;AACDE,UAAAA,QAAAA,CAAAA,OAAAA,EADC,KACDA,CAAAA;AAT0B;AA5IO;;AAwJzC,wCAAkC;AAC9BhE,QAAAA,kCAAAA,CAD8B,MAC9BA,CAAAA;AACArM,QAAAA,kCAAAA,CAF8B,MAE9BA,CAAAA;;AACA,YAAIkP,MAAAA,KAAJ,WAA0B;AACtBA,UAAAA,MAAAA,CAAAA,mBAAAA,CAAAA,OAAAA,EADsB,cACtBA;AAJ0B;;AAM9B,qBAAa;AACTxwC,UAAAA,MAAAA,CADS,KACTA,CAAAA;AADJ,eAGK;AACDD,UAAAA,OAAAA,CADC,SACDA,CAAAA;AAV0B;AAxJO;AAP8C,KAOpF,CAAP;AA5lFoB;;AAywFxB,MAAI6xC,+BAAAA,GAAiD,YAAY;AAC7D,+CAA2C;AACvC,YAAM,cADiC,qBACjC,CAAN;AAFyD;;AAI7DpuC,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBouC,+BAAAA,CAAtBpuC,SAAAA,EAAAA,aAAAA,EAAgF;AAK5Eyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAAC4wB,iCAAAA,CAAL,IAAKA,CAAL,EAA8C;AAC1C,gBAAMC,sCAAAA,CADoC,aACpCA,CAAN;AAFS;;AAIb,eAAOC,6CAAAA,CAJM,IAINA,CAAP;AATwE;AAW5EhsC,MAAAA,UAAAA,EAX4E;AAY5EC,MAAAA,YAAAA,EAZ4E;AAAA,KAAhFxC;;AAkBAouC,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAkD,YAAY;AAC1D,UAAI,CAACC,iCAAAA,CAAL,IAAKA,CAAL,EAA8C;AAC1C,cAAMC,sCAAAA,CADoC,OACpCA,CAAN;AAFsD;;AAI1D,UAAI,CAACE,gDAAAA,CAAL,IAAKA,CAAL,EAA6D;AACzD,cAAM,cADmD,iDACnD,CAAN;AALsD;;AAO1DC,MAAAA,oCAAAA,CAP0D,IAO1DA,CAAAA;AA7ByD,KAsB7DL;;AASAA,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAoD,iBAAiB;AACjE,UAAIn0B,KAAAA,KAAU,KAAd,GAAsB;AAAEA,QAAAA,KAAAA,GAAF,SAAEA;AADyC;;AAEjE,UAAI,CAACo0B,iCAAAA,CAAL,IAAKA,CAAL,EAA8C;AAC1C,cAAMC,sCAAAA,CADoC,SACpCA,CAAN;AAH6D;;AAKjE,UAAI,CAACE,gDAAAA,CAAL,IAAKA,CAAL,EAA6D;AACzD,cAAM,cADmD,mDACnD,CAAN;AAN6D;;AAQjE,aAAOE,sCAAAA,CAAAA,IAAAA,EAR0D,KAQ1DA,CAAP;AAvCyD,KA+B7DN;;AAaAA,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAkD,aAAa;AAC3D,UAAIzN,CAAAA,KAAM,KAAV,GAAkB;AAAEA,QAAAA,CAAAA,GAAF,SAAEA;AADuC;;AAE3D,UAAI,CAAC0N,iCAAAA,CAAL,IAAKA,CAAL,EAA8C;AAC1C,cAAMC,sCAAAA,CADoC,OACpCA,CAAN;AAHuD;;AAK3DK,MAAAA,oCAAAA,CAAAA,IAAAA,EAL2D,CAK3DA,CAAAA;AAjDyD,KA4C7DP;;AAQAA,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,WAAAA,IAAyD,kBAAkB;AACvEtN,MAAAA,UAAAA,CADuE,IACvEA,CAAAA;;AACA,UAAIt8B,MAAAA,GAAS,sBAF0D,MAE1D,CAAb;;AACAoqC,MAAAA,8CAAAA,CAHuE,IAGvEA,CAAAA;AACA,aAJuE,MAIvE;AAxDyD,KAoD7DR;;AAOAA,IAAAA,+BAAAA,CAAAA,SAAAA,CAAAA,SAAAA,IAAuD,uBAAuB;AAC1E,UAAI7S,MAAAA,GAAS,KAD6D,yBAC1E;;AACA,UAAI,qBAAJ,GAA4B;AACxB,YAAIthB,KAAAA,GAAQiyB,YAAAA,CADY,IACZA,CAAZ;;AACA,YAAI,wBAAwB,uBAA5B,GAAsD;AAClD0C,UAAAA,8CAAAA,CADkD,IAClDA,CAAAA;AACAzL,UAAAA,mBAAAA,CAFkD,MAElDA,CAAAA;AAFJ,eAIK;AACD0L,UAAAA,+CAAAA,CADC,IACDA,CAAAA;AAPoB;;AASxB/R,QAAAA,WAAAA,CAAAA,WAAAA,CATwB,KASxBA;AATJ,aAWK;AACD4E,QAAAA,4BAAAA,CAAAA,MAAAA,EADC,WACDA,CAAAA;AACAmN,QAAAA,+CAAAA,CAFC,IAEDA,CAAAA;AAfsE;AA3DjB,KA2D7DT;;AAkBA,WA7E6D,+BA6E7D;AAt1FoB,GAywF6B,EAArD;;AA+EApuC,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwBouC,+BAAAA,CAAxBpuC,SAAAA,EAAmE;AAC/D4hC,IAAAA,KAAAA,EAAO;AAAEr/B,MAAAA,UAAAA,EADsD;AACxD,KADwD;AAE/Ds/B,IAAAA,OAAAA,EAAS;AAAEt/B,MAAAA,UAAAA,EAFoD;AAEtD,KAFsD;AAG/D61B,IAAAA,KAAAA,EAAO;AAAE71B,MAAAA,UAAAA,EAHsD;AAGxD,KAHwD;AAI/Dw/B,IAAAA,WAAAA,EAAa;AAAEx/B,MAAAA,UAAAA,EAJgD;AAIlD;AAJkD,GAAnEvC;;AAMA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBouC,+BAAAA,CAAtBpuC,SAAAA,EAAiEw5B,cAAAA,CAAjEx5B,WAAAA,EAA6F;AACzFsC,MAAAA,KAAAA,EADyF;AAEzFE,MAAAA,YAAAA,EAFyF;AAAA,KAA7FxC;AA/1FoB;;AAq2FxB,gDAA8C;AAC1C,QAAI,CAACm+B,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFsC;;AAI1C,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,2BAAKA,CAAL,EAA2E;AACvE,aADuE,KACvE;AALsC;;AAO1C,WAAOyoB,CAAAA,YAPmC,+BAO1C;AA52FoB;;AA82FxB,uEAAqE;AACjE,QAAIuZ,UAAAA,GAAa8M,6CAAAA,CADgD,UAChDA,CAAjB;;AACA,QAAI,CAAJ,YAAiB;AAAA;AAFgD;;AAKjE,QAAI5M,UAAAA,CAAJ,UAAyB;AACrBA,MAAAA,UAAAA,CAAAA,UAAAA,GADqB,IACrBA;AADqB;AALwC;;AASjEA,IAAAA,UAAAA,CAAAA,QAAAA,GATiE,IASjEA;;AACA,QAAIC,WAAAA,GAAcD,UAAAA,CAV+C,cAU/CA,EAAlB;;AACAjI,IAAAA,WAAAA,CAAAA,WAAAA,EAAyB,YAAY;AACjCiI,MAAAA,UAAAA,CAAAA,QAAAA,GADiC,KACjCA;;AACA,UAAIA,UAAAA,CAAJ,YAA2B;AACvBA,QAAAA,UAAAA,CAAAA,UAAAA,GADuB,KACvBA;AACA2M,QAAAA,+CAAAA,CAFuB,UAEvBA,CAAAA;AAJ6B;AAArC5U,KAAAA,EAMG,aAAa;AACZ0U,MAAAA,oCAAAA,CAAAA,UAAAA,EADY,CACZA,CAAAA;AAlB6D,KAWjE1U,CAAAA;AAz3FoB;;AAm4FxB,qEAAmE;AAC/D,QAAIsB,MAAAA,GAAS2G,UAAAA,CADkD,yBAC/D;;AACA,QAAI,CAACsM,gDAAAA,CAAL,UAAKA,CAAL,EAAmE;AAC/D,aAD+D,KAC/D;AAH2D;;AAK/D,QAAI,CAACtM,UAAAA,CAAL,UAA0B;AACtB,aADsB,KACtB;AAN2D;;AAQ/D,QAAI/E,sBAAAA,CAAAA,MAAAA,CAAAA,IAAkCkH,gCAAAA,CAAAA,MAAAA,CAAAA,GAAtC,GAAoF;AAChF,aADgF,IAChF;AAT2D;;AAW/D,QAAItC,WAAAA,GAAcwM,6CAAAA,CAX6C,UAW7CA,CAAlB;;AACA,QAAIxM,WAAAA,GAAJ,GAAqB;AACjB,aADiB,IACjB;AAb2D;;AAe/D,WAf+D,KAe/D;AAl5FoB;;AAo5FxB,sEAAoE;AAChEG,IAAAA,UAAAA,CAAAA,cAAAA,GADgE,SAChEA;AACAA,IAAAA,UAAAA,CAAAA,gBAAAA,GAFgE,SAEhEA;AACAA,IAAAA,UAAAA,CAAAA,sBAAAA,GAHgE,SAGhEA;AAv5FoB;;AA05FxB,4DAA0D;AACtD,QAAI,CAACsM,gDAAAA,CAAL,UAAKA,CAAL,EAAmE;AAAA;AADb;;AAItD,QAAIjT,MAAAA,GAAS2G,UAAAA,CAJyC,yBAItD;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GALsD,IAKtDA;;AACA,QAAIA,UAAAA,CAAAA,MAAAA,CAAAA,MAAAA,KAAJ,GAAoC;AAChC0M,MAAAA,8CAAAA,CADgC,UAChCA,CAAAA;AACAzL,MAAAA,mBAAAA,CAFgC,MAEhCA,CAAAA;AARkD;AA15FlC;;AAq6FxB,qEAAmE;AAC/D,QAAI,CAACqL,gDAAAA,CAAL,UAAKA,CAAL,EAAmE;AAAA;AADJ;;AAI/D,QAAIjT,MAAAA,GAAS2G,UAAAA,CAJkD,yBAI/D;;AACA,QAAI/E,sBAAAA,CAAAA,MAAAA,CAAAA,IAAkCkH,gCAAAA,CAAAA,MAAAA,CAAAA,GAAtC,GAAoF;AAChF9B,MAAAA,gCAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EADgF,KAChFA,CAAAA;AADJ,WAGK;AACD,UAAIoI,SAAAA,GAAY,KADf,CACD;;AACA,UAAI;AACAA,QAAAA,SAAAA,GAAYzI,UAAAA,CAAAA,sBAAAA,CADZ,KACYA,CAAZyI;AADJ,QAGA,mBAAmB;AACfgE,QAAAA,oCAAAA,CAAAA,UAAAA,EADe,UACfA,CAAAA;AACA,cAFe,UAEf;AAPH;;AASD,UAAI;AACA/C,QAAAA,oBAAAA,CAAAA,UAAAA,EAAAA,KAAAA,EADA,SACAA,CAAAA;AADJ,QAGA,iBAAiB;AACb+C,QAAAA,oCAAAA,CAAAA,UAAAA,EADa,QACbA,CAAAA;AACA,cAFa,QAEb;AAdH;AAR0D;;AAyB/DE,IAAAA,+CAAAA,CAzB+D,UAyB/DA,CAAAA;AA97FoB;;AAg8FxB,+DAA6D;AACzD,QAAItT,MAAAA,GAAS2G,UAAAA,CAD4C,yBACzD;;AACA,QAAI3G,MAAAA,CAAAA,MAAAA,KAAJ,YAAkC;AAAA;AAFuB;;AAKzDuF,IAAAA,UAAAA,CALyD,UAKzDA,CAAAA;AACA8N,IAAAA,8CAAAA,CANyD,UAMzDA,CAAAA;AACAnK,IAAAA,mBAAAA,CAAAA,MAAAA,EAPyD,CAOzDA,CAAAA;AAv8FoB;;AAy8FxB,qEAAmE;AAC/D,QAAIx/B,KAAAA,GAAQi9B,UAAAA,CAAAA,yBAAAA,CADmD,MAC/D;;AACA,QAAIj9B,KAAAA,KAAJ,WAAyB;AACrB,aADqB,IACrB;AAH2D;;AAK/D,QAAIA,KAAAA,KAAJ,UAAwB;AACpB,aADoB,CACpB;AAN2D;;AAQ/D,WAAOi9B,UAAAA,CAAAA,YAAAA,GAA0BA,UAAAA,CAR8B,eAQ/D;AAj9FoB;;AAo9FxB,sEAAoE;AAChE,QAAI4M,6CAAAA,CAAJ,UAAIA,CAAJ,EAA+D;AAC3D,aAD2D,KAC3D;AAF4D;;AAIhE,WAJgE,IAIhE;AAx9FoB;;AA09FxB,wEAAsE;AAClE,QAAI7pC,KAAAA,GAAQi9B,UAAAA,CAAAA,yBAAAA,CADsD,MAClE;;AACA,QAAI,CAACA,UAAAA,CAAD,mBAA+Bj9B,KAAAA,KAAnC,YAAyD;AACrD,aADqD,IACrD;AAH8D;;AAKlE,WALkE,KAKlE;AA/9FoB;;AAi+FxB,kJAAgJ;AAC5Ii9B,IAAAA,UAAAA,CAAAA,yBAAAA,GAD4I,MAC5IA;AACAA,IAAAA,UAAAA,CAAAA,MAAAA,GAF4I,SAE5IA;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GAH4I,SAG5IA;AACApB,IAAAA,UAAAA,CAJ4I,UAI5IA,CAAAA;AACAoB,IAAAA,UAAAA,CAAAA,QAAAA,GAL4I,KAK5IA;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GAN4I,KAM5IA;AACAA,IAAAA,UAAAA,CAAAA,UAAAA,GAP4I,KAO5IA;AACAA,IAAAA,UAAAA,CAAAA,QAAAA,GAR4I,KAQ5IA;AACAA,IAAAA,UAAAA,CAAAA,sBAAAA,GAT4I,aAS5IA;AACAA,IAAAA,UAAAA,CAAAA,YAAAA,GAV4I,aAU5IA;AACAA,IAAAA,UAAAA,CAAAA,cAAAA,GAX4I,aAW5IA;AACAA,IAAAA,UAAAA,CAAAA,gBAAAA,GAZ4I,eAY5IA;AACA3G,IAAAA,MAAAA,CAAAA,yBAAAA,GAb4I,UAa5IA;AACA,QAAIqJ,WAAAA,GAAcC,cAd0H,EAc5I;AACA5K,IAAAA,WAAAA,CAAYG,mBAAAA,CAAZH,WAAYG,CAAZH,EAA8C,YAAY;AACtDiI,MAAAA,UAAAA,CAAAA,QAAAA,GADsD,IACtDA;AACA2M,MAAAA,+CAAAA,CAFsD,UAEtDA,CAAAA;AAFJ5U,KAAAA,EAGG,aAAa;AACZ0U,MAAAA,oCAAAA,CAAAA,UAAAA,EADY,CACZA,CAAAA;AAnBwI,KAe5I1U,CAAAA;AAh/FoB;;AAu/FxB,4HAA0H;AACtH,QAAIiI,UAAAA,GAAaliC,MAAAA,CAAAA,MAAAA,CAAcouC,+BAAAA,CADuF,SACrGpuC,CAAjB;;AACA,QAAI6kC,cAAAA,GAAiB,0BAAY;AAAE,aAAF,SAAE;AAFmF,KAEtH;;AACA,QAAIC,aAAAA,GAAgB,yBAAY;AAAE,aAAO1K,mBAAAA,CAAT,SAASA,CAAP;AAHoF,KAGtH;;AACA,QAAI2K,eAAAA,GAAkB,2BAAY;AAAE,aAAO3K,mBAAAA,CAAT,SAASA,CAAP;AAJkF,KAItH;;AACA,QAAI2U,gBAAAA,CAAAA,KAAAA,KAAJ,WAA0C;AACtClK,MAAAA,cAAAA,GAAiB,0BAAY;AAAE,eAAOkK,gBAAAA,CAAAA,KAAAA,CAAT,UAASA,CAAP;AADO,OACtClK;AANkH;;AAQtH,QAAIkK,gBAAAA,CAAAA,IAAAA,KAAJ,WAAyC;AACrCjK,MAAAA,aAAAA,GAAgB,yBAAY;AAAE,eAAOiK,gBAAAA,CAAAA,IAAAA,CAAT,UAASA,CAAP;AADO,OACrCjK;AATkH;;AAWtH,QAAIiK,gBAAAA,CAAAA,MAAAA,KAAJ,WAA2C;AACvChK,MAAAA,eAAAA,GAAkB,iCAAkB;AAAE,eAAOgK,gBAAAA,CAAAA,MAAAA,CAAT,MAASA,CAAP;AADC,OACvChK;AAZkH;;AActHiK,IAAAA,oCAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,EAAAA,aAAAA,EAAAA,eAAAA,EAAAA,aAAAA,EAdsH,aActHA,CAAAA;AArgGoB;;AAwgGxB,wDAAsD;AAClD,WAAO,cAAc,sDAD6B,wDAC3C,CAAP;AAzgGoB;;AA4gGxB,sDAAoD;AAChD,QAAI3O,8BAAAA,CAA+B9E,MAAAA,CAAnC,yBAAI8E,CAAJ,EAAsE;AAClE,aAAO4O,qBAAAA,CAD2D,MAC3DA,CAAP;AAF4C;;AAIhD,WAAOC,wBAAAA,CAJyC,MAIzCA,CAAP;AAhhGoB;;AAkhGxB,6DAA2D;AACvD,QAAI5T,MAAAA,GAASyD,kCAAAA,CAD0C,MAC1CA,CAAb;AACA,QAAIoQ,OAAAA,GAFmD,KAEvD;AACA,QAAIC,SAAAA,GAHmD,KAGvD;AACA,QAAIC,SAAAA,GAJmD,KAIvD;AACA,QALuD,OAKvD;AACA,QANuD,OAMvD;AACA,QAPuD,OAOvD;AACA,QARuD,OAQvD;AACA,QATuD,oBASvD;AACA,QAAIC,aAAAA,GAAgB,WAAW,mBAAmB;AAC9CC,MAAAA,oBAAAA,GAD8C,OAC9CA;AAXmD,KAUnC,CAApB;;AAGA,6BAAyB;AACrB,mBAAa;AACT,eAAOnV,mBAAAA,CADE,SACFA,CAAP;AAFiB;;AAIrB+U,MAAAA,OAAAA,GAJqB,IAIrBA;AACA,UAAIrS,WAAAA,GAAc;AACdY,QAAAA,WAAAA,EAAa,4BAAiB;AAI1B/F,UAAAA,cAAAA,CAAe,YAAY;AACvBwX,YAAAA,OAAAA,GADuB,KACvBA;AACA,gBAAIK,MAAAA,GAFmB,KAEvB;AACA,gBAAIC,MAAAA,GAHmB,KAGvB;;AAMA,gBAAI,CAAJ,WAAgB;AACZf,cAAAA,sCAAAA,CAAuCgB,OAAAA,CAAvChB,yBAAAA,EADY,MACZA,CAAAA;AAVmB;;AAYvB,gBAAI,CAAJ,WAAgB;AACZA,cAAAA,sCAAAA,CAAuCiB,OAAAA,CAAvCjB,yBAAAA,EADY,MACZA,CAAAA;AAbmB;AAJD,WAI1B/W,CAAAA;AALU;AAsBdgG,QAAAA,WAAAA,EAAa,uBAAY;AACrBwR,UAAAA,OAAAA,GADqB,KACrBA;;AACA,cAAI,CAAJ,WAAgB;AACZV,YAAAA,oCAAAA,CAAqCiB,OAAAA,CADzB,yBACZjB,CAAAA;AAHiB;;AAKrB,cAAI,CAAJ,WAAgB;AACZA,YAAAA,oCAAAA,CAAqCkB,OAAAA,CADzB,yBACZlB,CAAAA;AANiB;;AAQrB,cAAI,cAAc,CAAlB,WAA8B;AAC1Bc,YAAAA,oBAAAA,CAD0B,SAC1BA,CAAAA;AATiB;AAtBX;AAkCd3R,QAAAA,WAAAA,EAAa,uBAAY;AACrBuR,UAAAA,OAAAA,GADqB,KACrBA;AAnCU;AAAA,OAAlB;AAsCAtR,MAAAA,+BAAAA,CAAAA,MAAAA,EA3CqB,WA2CrBA,CAAAA;AACA,aAAOzD,mBAAAA,CA5Cc,SA4CdA,CAAP;AAzDmD;;AA2DvD,sCAAkC;AAC9BgV,MAAAA,SAAAA,GAD8B,IAC9BA;AACAQ,MAAAA,OAAAA,GAF8B,MAE9BA;;AACA,qBAAe;AACX,YAAIC,eAAAA,GAAkB,oBAAoB,kBAApB,CAAtB;AACA,YAAIC,YAAAA,GAAenU,oBAAAA,CAAAA,MAAAA,EAFR,eAEQA,CAAnB;AACA4T,QAAAA,oBAAAA,CAHW,YAGXA,CAAAA;AAN0B;;AAQ9B,aAR8B,aAQ9B;AAnEmD;;AAqEvD,sCAAkC;AAC9BF,MAAAA,SAAAA,GAD8B,IAC9BA;AACAU,MAAAA,OAAAA,GAF8B,MAE9BA;;AACA,qBAAe;AACX,YAAIF,eAAAA,GAAkB,oBAAoB,kBAApB,CAAtB;AACA,YAAIC,YAAAA,GAAenU,oBAAAA,CAAAA,MAAAA,EAFR,eAEQA,CAAnB;AACA4T,QAAAA,oBAAAA,CAHW,YAGXA,CAAAA;AAN0B;;AAQ9B,aAR8B,aAQ9B;AA7EmD;;AA+EvD,8BAA0B,CA/E6B;;AAkFvDG,IAAAA,OAAAA,GAAUM,oBAAAA,CAAAA,cAAAA,EAAAA,aAAAA,EAlF6C,gBAkF7CA,CAAVN;AACAC,IAAAA,OAAAA,GAAUK,oBAAAA,CAAAA,cAAAA,EAAAA,aAAAA,EAnF6C,gBAmF7CA,CAAVL;AACA3B,IAAAA,aAAAA,CAAc1S,MAAAA,CAAd0S,cAAAA,EAAqC,aAAa;AAC9CW,MAAAA,oCAAAA,CAAqCe,OAAAA,CAArCf,yBAAAA,EAD8C,CAC9CA,CAAAA;AACAA,MAAAA,oCAAAA,CAAqCgB,OAAAA,CAArChB,yBAAAA,EAF8C,CAE9CA,CAAAA;;AACA,UAAI,cAAc,CAAlB,WAA8B;AAC1BY,QAAAA,oBAAAA,CAD0B,SAC1BA,CAAAA;AAJ0C;AApFK,KAoFvDvB,CAAAA;AAOA,WAAO,kBAAP;AA7mGoB;;AA+mGxB,yCAAuC;AACnC,QAAI1S,MAAAA,GAASyD,kCAAAA,CADsB,MACtBA,CAAb;AACA,QAAIoQ,OAAAA,GAF+B,KAEnC;AACA,QAAIC,SAAAA,GAH+B,KAGnC;AACA,QAAIC,SAAAA,GAJ+B,KAInC;AACA,QALmC,OAKnC;AACA,QANmC,OAMnC;AACA,QAPmC,OAOnC;AACA,QARmC,OAQnC;AACA,QATmC,oBASnC;AACA,QAAIC,aAAAA,GAAgB,WAAW,mBAAmB;AAC9CC,MAAAA,oBAAAA,GAD8C,OAC9CA;AAX+B,KAUf,CAApB;;AAGA,4CAAwC;AACpCvB,MAAAA,aAAAA,CAAciC,UAAAA,CAAdjC,cAAAA,EAAyC,aAAa;AAClD,YAAIiC,UAAAA,KAAJ,QAA2B;AAAA;AADuB;;AAIlDrP,QAAAA,iCAAAA,CAAkC8O,OAAAA,CAAlC9O,yBAAAA,EAJkD,CAIlDA,CAAAA;AACAA,QAAAA,iCAAAA,CAAkC+O,OAAAA,CAAlC/O,yBAAAA,EALkD,CAKlDA,CAAAA;;AACA,YAAI,cAAc,CAAlB,WAA8B;AAC1B2O,UAAAA,oBAAAA,CAD0B,SAC1BA,CAAAA;AAP8C;AADlB,OACpCvB,CAAAA;AAd+B;;AAyBnC,qCAAiC;AAC7B,UAAI9I,0BAAAA,CAAJ,MAAIA,CAAJ,EAAwC;AACpCpH,QAAAA,kCAAAA,CADoC,MACpCA,CAAAA;AACAxC,QAAAA,MAAAA,GAASyD,kCAAAA,CAF2B,MAE3BA,CAATzD;AACA4U,QAAAA,kBAAAA,CAHoC,MAGpCA,CAAAA;AAJyB;;AAM7B,UAAIpT,WAAAA,GAAc;AACdY,QAAAA,WAAAA,EAAa,4BAAiB;AAI1B/F,UAAAA,cAAAA,CAAe,YAAY;AACvBwX,YAAAA,OAAAA,GADuB,KACvBA;AACA,gBAAIK,MAAAA,GAFmB,KAEvB;AACA,gBAAIC,MAAAA,GAHmB,KAGvB;;AACA,gBAAI,cAAc,CAAlB,WAA8B;AAC1B,kBAAI;AACAA,gBAAAA,MAAAA,GAASU,iBAAAA,CADT,KACSA,CAATV;AADJ,gBAGA,eAAe;AACX7O,gBAAAA,iCAAAA,CAAkC8O,OAAAA,CAAlC9O,yBAAAA,EADW,MACXA,CAAAA;AACAA,gBAAAA,iCAAAA,CAAkC+O,OAAAA,CAAlC/O,yBAAAA,EAFW,MAEXA,CAAAA;AACA2O,gBAAAA,oBAAAA,CAAqB5T,oBAAAA,CAAAA,MAAAA,EAHV,MAGUA,CAArB4T,CAAAA;AAHW;AAJW;AAJP;;AAevB,gBAAI,CAAJ,WAAgB;AACZ7O,cAAAA,mCAAAA,CAAoCgP,OAAAA,CAApChP,yBAAAA,EADY,MACZA,CAAAA;AAhBmB;;AAkBvB,gBAAI,CAAJ,WAAgB;AACZA,cAAAA,mCAAAA,CAAoCiP,OAAAA,CAApCjP,yBAAAA,EADY,MACZA,CAAAA;AAnBmB;AAJD,WAI1B/I,CAAAA;AALU;AA4BdgG,QAAAA,WAAAA,EAAa,uBAAY;AACrBwR,UAAAA,OAAAA,GADqB,KACrBA;;AACA,cAAI,CAAJ,WAAgB;AACZ1O,YAAAA,iCAAAA,CAAkCiP,OAAAA,CADtB,yBACZjP,CAAAA;AAHiB;;AAKrB,cAAI,CAAJ,WAAgB;AACZA,YAAAA,iCAAAA,CAAkCkP,OAAAA,CADtB,yBACZlP,CAAAA;AANiB;;AAQrB,cAAIiP,OAAAA,CAAAA,yBAAAA,CAAAA,iBAAAA,CAAAA,MAAAA,GAAJ,GAAoE;AAChE5P,YAAAA,mCAAAA,CAAoC4P,OAAAA,CAApC5P,yBAAAA,EADgE,CAChEA,CAAAA;AATiB;;AAWrB,cAAI6P,OAAAA,CAAAA,yBAAAA,CAAAA,iBAAAA,CAAAA,MAAAA,GAAJ,GAAoE;AAChE7P,YAAAA,mCAAAA,CAAoC6P,OAAAA,CAApC7P,yBAAAA,EADgE,CAChEA,CAAAA;AAZiB;;AAcrB,cAAI,cAAc,CAAlB,WAA8B;AAC1ByP,YAAAA,oBAAAA,CAD0B,SAC1BA,CAAAA;AAfiB;AA5BX;AA8Cd3R,QAAAA,WAAAA,EAAa,uBAAY;AACrBuR,UAAAA,OAAAA,GADqB,KACrBA;AA/CU;AAAA,OAAlB;AAkDAtR,MAAAA,+BAAAA,CAAAA,MAAAA,EAxD6B,WAwD7BA,CAAAA;AAjF+B;;AAmFnC,kDAA8C;AAC1C,UAAId,6BAAAA,CAAJ,MAAIA,CAAJ,EAA2C;AACvCe,QAAAA,kCAAAA,CADuC,MACvCA,CAAAA;AACAxC,QAAAA,MAAAA,GAAS8U,+BAAAA,CAF8B,MAE9BA,CAAT9U;AACA4U,QAAAA,kBAAAA,CAHuC,MAGvCA,CAAAA;AAJsC;;AAM1C,UAAIG,UAAAA,GAAaC,UAAAA,GAAAA,OAAAA,GANyB,OAM1C;AACA,UAAIC,WAAAA,GAAcD,UAAAA,GAAAA,OAAAA,GAPwB,OAO1C;AACA,UAAI5M,eAAAA,GAAkB;AAClBhG,QAAAA,WAAAA,EAAa,4BAAiB;AAI1B/F,UAAAA,cAAAA,CAAe,YAAY;AACvBwX,YAAAA,OAAAA,GADuB,KACvBA;AACA,gBAAIqB,YAAAA,GAAeF,UAAAA,GAAAA,SAAAA,GAFI,SAEvB;AACA,gBAAIG,aAAAA,GAAgBH,UAAAA,GAAAA,SAAAA,GAHG,SAGvB;;AACA,gBAAI,CAAJ,eAAoB;AAChB,kBAAII,WAAAA,GAAc,KADF,CAChB;;AACA,kBAAI;AACAA,gBAAAA,WAAAA,GAAcP,iBAAAA,CADd,KACcA,CAAdO;AADJ,gBAGA,eAAe;AACX9P,gBAAAA,iCAAAA,CAAkCyP,UAAAA,CAAlCzP,yBAAAA,EADW,MACXA,CAAAA;AACAA,gBAAAA,iCAAAA,CAAkC2P,WAAAA,CAAlC3P,yBAAAA,EAFW,MAEXA,CAAAA;AACA2O,gBAAAA,oBAAAA,CAAqB5T,oBAAAA,CAAAA,MAAAA,EAHV,MAGUA,CAArB4T,CAAAA;AAHW;AALC;;AAWhB,kBAAI,CAAJ,cAAmB;AACftP,gBAAAA,8CAAAA,CAA+CoQ,UAAAA,CAA/CpQ,yBAAAA,EADe,KACfA,CAAAA;AAZY;;AAchBS,cAAAA,mCAAAA,CAAoC6P,WAAAA,CAApC7P,yBAAAA,EAdgB,WAchBA,CAAAA;AAdJ,mBAgBK,IAAI,CAAJ,cAAmB;AACpBT,cAAAA,8CAAAA,CAA+CoQ,UAAAA,CAA/CpQ,yBAAAA,EADoB,KACpBA,CAAAA;AArBmB;AAJD,WAI1BtI,CAAAA;AALc;AA8BlBgG,QAAAA,WAAAA,EAAa,4BAAiB;AAC1BwR,UAAAA,OAAAA,GAD0B,KAC1BA;AACA,cAAIqB,YAAAA,GAAeF,UAAAA,GAAAA,SAAAA,GAFO,SAE1B;AACA,cAAIG,aAAAA,GAAgBH,UAAAA,GAAAA,SAAAA,GAHM,SAG1B;;AACA,cAAI,CAAJ,cAAmB;AACf7P,YAAAA,iCAAAA,CAAkC4P,UAAAA,CADnB,yBACf5P,CAAAA;AALsB;;AAO1B,cAAI,CAAJ,eAAoB;AAChBA,YAAAA,iCAAAA,CAAkC8P,WAAAA,CADlB,yBAChB9P,CAAAA;AARsB;;AAU1B,cAAIxmB,KAAAA,KAAJ,WAAyB;AACrB,gBAAI,CAAJ,cAAmB;AACfgmB,cAAAA,8CAAAA,CAA+CoQ,UAAAA,CAA/CpQ,yBAAAA,EADe,KACfA,CAAAA;AAFiB;;AAIrB,gBAAI,kBAAkBsQ,WAAAA,CAAAA,yBAAAA,CAAAA,iBAAAA,CAAAA,MAAAA,GAAtB,GAA0F;AACtFzQ,cAAAA,mCAAAA,CAAoCyQ,WAAAA,CAApCzQ,yBAAAA,EADsF,CACtFA,CAAAA;AALiB;AAVC;;AAkB1B,cAAI,iBAAiB,CAArB,eAAqC;AACjCyP,YAAAA,oBAAAA,CADiC,SACjCA,CAAAA;AAnBsB;AA9BZ;AAoDlB3R,QAAAA,WAAAA,EAAa,uBAAY;AACrBuR,UAAAA,OAAAA,GADqB,KACrBA;AArDc;AAAA,OAAtB;AAwDA9J,MAAAA,4BAAAA,CAAAA,MAAAA,EAAAA,IAAAA,EAhE0C,eAgE1CA,CAAAA;AAnJ+B;;AAqJnC,8BAA0B;AACtB,mBAAa;AACT,eAAOjL,mBAAAA,CADE,SACFA,CAAP;AAFkB;;AAItB+U,MAAAA,OAAAA,GAJsB,IAItBA;AACA,UAAIrN,WAAAA,GAAcvB,0CAAAA,CAA2CmP,OAAAA,CALvC,yBAKJnP,CAAlB;;AACA,UAAIuB,WAAAA,KAAJ,MAA0B;AACtB6O,QAAAA,qBADsB;AAA1B,aAGK;AACDC,QAAAA,kBAAAA,CAAmB9O,WAAAA,CAAnB8O,KAAAA,EADC,KACDA,CAAAA;AAVkB;;AAYtB,aAAOxW,mBAAAA,CAZe,SAYfA,CAAP;AAjK+B;;AAmKnC,8BAA0B;AACtB,mBAAa;AACT,eAAOA,mBAAAA,CADE,SACFA,CAAP;AAFkB;;AAItB+U,MAAAA,OAAAA,GAJsB,IAItBA;AACA,UAAIrN,WAAAA,GAAcvB,0CAAAA,CAA2CoP,OAAAA,CALvC,yBAKJpP,CAAlB;;AACA,UAAIuB,WAAAA,KAAJ,MAA0B;AACtB6O,QAAAA,qBADsB;AAA1B,aAGK;AACDC,QAAAA,kBAAAA,CAAmB9O,WAAAA,CAAnB8O,KAAAA,EADC,IACDA,CAAAA;AAVkB;;AAYtB,aAAOxW,mBAAAA,CAZe,SAYfA,CAAP;AA/K+B;;AAiLnC,sCAAkC;AAC9BgV,MAAAA,SAAAA,GAD8B,IAC9BA;AACAQ,MAAAA,OAAAA,GAF8B,MAE9BA;;AACA,qBAAe;AACX,YAAIC,eAAAA,GAAkB,oBAAoB,kBAApB,CAAtB;AACA,YAAIC,YAAAA,GAAenU,oBAAAA,CAAAA,MAAAA,EAFR,eAEQA,CAAnB;AACA4T,QAAAA,oBAAAA,CAHW,YAGXA,CAAAA;AAN0B;;AAQ9B,aAR8B,aAQ9B;AAzL+B;;AA2LnC,sCAAkC;AAC9BF,MAAAA,SAAAA,GAD8B,IAC9BA;AACAU,MAAAA,OAAAA,GAF8B,MAE9BA;;AACA,qBAAe;AACX,YAAIF,eAAAA,GAAkB,oBAAoB,kBAApB,CAAtB;AACA,YAAIC,YAAAA,GAAenU,oBAAAA,CAAAA,MAAAA,EAFR,eAEQA,CAAnB;AACA4T,QAAAA,oBAAAA,CAHW,YAGXA,CAAAA;AAN0B;;AAQ9B,aAR8B,aAQ9B;AAnM+B;;AAqMnC,8BAA0B,CArMS;;AAwMnCG,IAAAA,OAAAA,GAAUmB,wBAAAA,CAAAA,cAAAA,EAAAA,cAAAA,EAxMyB,gBAwMzBA,CAAVnB;AACAC,IAAAA,OAAAA,GAAUkB,wBAAAA,CAAAA,cAAAA,EAAAA,cAAAA,EAzMyB,gBAyMzBA,CAAVlB;AACAO,IAAAA,kBAAAA,CA1MmC,MA0MnCA,CAAAA;AACA,WAAO,kBAAP;AA1zGoB;;AA6zGxB,iEAA+D;AAC3DzK,IAAAA,gBAAAA,CAAAA,MAAAA,EAD2D,OAC3DA,CAAAA;AACA,QAAIM,QAAAA,GAFuD,MAE3D;AACA,QAAI9E,qBAAAA,GAAwB8E,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CAHrB,qBAG3D;AACA,QAAIhI,MAAAA,GAASgI,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CAJN,MAI3D;AACA,QAAI+K,IAAAA,GAAO/K,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CALJ,IAK3D;AACA,QAAI1lC,KAAAA,GAAQ0lC,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CANL,KAM3D;AACA,QAAI5iC,IAAAA,GAAO4iC,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CAPJ,IAO3D;AACA,WAAO;AACH9E,MAAAA,qBAAAA,EAAuBA,qBAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEnBrB,uCAAAA,CAAAA,qBAAAA,EAA+D78B,OAAAA,GAHhE,0CAGC68B,CAHD;AAIH7B,MAAAA,MAAAA,EAAQA,MAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEJgT,qCAAAA,CAAAA,MAAAA,EAAAA,QAAAA,EAAwDhuC,OAAAA,GANzD,2BAMCguC,CAND;AAOHD,MAAAA,IAAAA,EAAMA,IAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEFE,mCAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAoDjuC,OAAAA,GATrD,yBASCiuC,CATD;AAUH3wC,MAAAA,KAAAA,EAAOA,KAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEH4wC,oCAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAsDluC,OAAAA,GAZvD,0BAYCkuC,CAZD;AAaH9tC,MAAAA,IAAAA,EAAMA,IAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAiC+tC,yBAAAA,CAAAA,IAAAA,EAAgCnuC,OAAAA,GAbpE,yBAaoCmuC;AAbpC,KAAP;AAr0GoB;;AAq1GxB,wEAAsE;AAClErL,IAAAA,cAAAA,CAAAA,EAAAA,EADkE,OAClEA,CAAAA;AACA,WAAO,kBAAkB;AAAE,aAAOQ,WAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAA0B,CAAnC,MAAmC,CAA1BA,CAAP;AAFuC,KAElE;AAv1GoB;;AAy1GxB,sEAAoE;AAChER,IAAAA,cAAAA,CAAAA,EAAAA,EADgE,OAChEA,CAAAA;AACA,WAAO,sBAAsB;AAAE,aAAOQ,WAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAA0B,CAAnC,UAAmC,CAA1BA,CAAP;AAFiC,KAEhE;AA31GoB;;AA61GxB,uEAAqE;AACjER,IAAAA,cAAAA,CAAAA,EAAAA,EADiE,OACjEA,CAAAA;AACA,WAAO,sBAAsB;AAAE,aAAOxL,WAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAA0B,CAAnC,UAAmC,CAA1BA,CAAP;AAFkC,KAEjE;AA/1GoB;;AAi2GxB,oDAAkD;AAC9Cl3B,IAAAA,IAAAA,GAAO,KADuC,IAC9CA;;AACA,QAAIA,IAAAA,KAAJ,SAAsB;AAClB,YAAM,cAAcJ,OAAAA,GAAAA,IAAAA,GAAAA,IAAAA,GADF,2DACZ,CAAN;AAH0C;;AAK9C,WAL8C,IAK9C;AAt2GoB;;AAy2GxB,kDAAgD;AAC5C0iC,IAAAA,gBAAAA,CAAAA,OAAAA,EAD4C,OAC5CA,CAAAA;AACA,QAAI9iB,IAAAA,GAAO1D,OAAAA,KAAAA,IAAAA,IAAoBA,OAAAA,KAAY,KAAhCA,CAAAA,GAAyC,KAAzCA,CAAAA,GAAkDA,OAAAA,CAFjB,IAE5C;AACA,WAAO;AACH0D,MAAAA,IAAAA,EAAMA,IAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAiCwuB,+BAAAA,CAAAA,IAAAA,EAAsCpuC,OAAAA,GAJrC,yBAIDouC;AADpC,KAAP;AA52GoB;;AAg3GxB,0DAAwD;AACpDxuB,IAAAA,IAAAA,GAAO,KAD6C,IACpDA;;AACA,QAAIA,IAAAA,KAAJ,QAAqB;AACjB,YAAM,cAAc5f,OAAAA,GAAAA,IAAAA,GAAAA,IAAAA,GADH,iEACX,CAAN;AAHgD;;AAKpD,WALoD,IAKpD;AAr3GoB;;AAw3GxB,oDAAkD;AAC9C0iC,IAAAA,gBAAAA,CAAAA,OAAAA,EAD8C,OAC9CA,CAAAA;AACA,QAAI2L,aAAAA,GAAgBnyB,OAAAA,KAAAA,IAAAA,IAAoBA,OAAAA,KAAY,KAAhCA,CAAAA,GAAyC,KAAzCA,CAAAA,GAAkDA,OAAAA,CAFxB,aAE9C;AACA,WAAO;AAAEmyB,MAAAA,aAAAA,EAAeC,OAAAA,CAHsB,aAGtBA;AAAjB,KAAP;AA33GoB;;AA83GxB,gDAA8C;AAC1C5L,IAAAA,gBAAAA,CAAAA,OAAAA,EAD0C,OAC1CA,CAAAA;AACA,QAAI6L,YAAAA,GAAeryB,OAAAA,KAAAA,IAAAA,IAAoBA,OAAAA,KAAY,KAAhCA,CAAAA,GAAyC,KAAzCA,CAAAA,GAAkDA,OAAAA,CAF3B,YAE1C;AACA,QAAImyB,aAAAA,GAAgBnyB,OAAAA,KAAAA,IAAAA,IAAoBA,OAAAA,KAAY,KAAhCA,CAAAA,GAAyC,KAAzCA,CAAAA,GAAkDA,OAAAA,CAH5B,aAG1C;AACA,QAAIsyB,YAAAA,GAAetyB,OAAAA,KAAAA,IAAAA,IAAoBA,OAAAA,KAAY,KAAhCA,CAAAA,GAAyC,KAAzCA,CAAAA,GAAkDA,OAAAA,CAJ3B,YAI1C;AACA,QAAI+tB,MAAAA,GAAS/tB,OAAAA,KAAAA,IAAAA,IAAoBA,OAAAA,KAAY,KAAhCA,CAAAA,GAAyC,KAAzCA,CAAAA,GAAkDA,OAAAA,CALrB,MAK1C;;AACA,QAAI+tB,MAAAA,KAAJ,WAA0B;AACtBwE,MAAAA,iBAAAA,CAAAA,MAAAA,EAA0BzuC,OAAAA,GADJ,2BACtByuC,CAAAA;AAPsC;;AAS1C,WAAO;AACHF,MAAAA,YAAAA,EAAcD,OAAAA,CADX,YACWA,CADX;AAEHD,MAAAA,aAAAA,EAAeC,OAAAA,CAFZ,aAEYA,CAFZ;AAGHE,MAAAA,YAAAA,EAAcF,OAAAA,CAHX,YAGWA,CAHX;AAIHrE,MAAAA,MAAAA,EAJG;AAAA,KAAP;AAv4GoB;;AA84GxB,8CAA4C;AACxC,QAAI,CAACyE,aAAAA,CAAL,MAAKA,CAAL,EAA4B;AACxB,YAAM,cAAc1uC,OAAAA,GADI,yBAClB,CAAN;AAFoC;AA94GpB;;AAo5GxB,sDAAoD;AAChD0iC,IAAAA,gBAAAA,CAAAA,IAAAA,EADgD,OAChDA,CAAAA;AACA,QAAIiM,QAAAA,GAAWrS,IAAAA,KAAAA,IAAAA,IAAiBA,IAAAA,KAAS,KAA1BA,CAAAA,GAAmC,KAAnCA,CAAAA,GAA4CA,IAAAA,CAFX,QAEhD;AACAsS,IAAAA,mBAAAA,CAAAA,QAAAA,EAAAA,UAAAA,EAHgD,sBAGhDA,CAAAA;AACAzU,IAAAA,oBAAAA,CAAAA,QAAAA,EAA+Bn6B,OAAAA,GAJiB,6BAIhDm6B,CAAAA;AACA,QAAIz6B,QAAAA,GAAW48B,IAAAA,KAAAA,IAAAA,IAAiBA,IAAAA,KAAS,KAA1BA,CAAAA,GAAmC,KAAnCA,CAAAA,GAA4CA,IAAAA,CALX,QAKhD;AACAsS,IAAAA,mBAAAA,CAAAA,QAAAA,EAAAA,UAAAA,EANgD,sBAMhDA,CAAAA;AACArI,IAAAA,oBAAAA,CAAAA,QAAAA,EAA+BvmC,OAAAA,GAPiB,6BAOhDumC,CAAAA;AACA,WAAO;AAAEoI,MAAAA,QAAAA,EAAF;AAAsBjvC,MAAAA,QAAAA,EAAtB;AAAA,KAAP;AA55GoB;;AAo6GxB,MAAImvC,cAAAA,GAAgC,YAAY;AAC5C,8DAA0D;AACtD,UAAIC,mBAAAA,KAAwB,KAA5B,GAAoC;AAAEA,QAAAA,mBAAAA,GAAF,EAAEA;AADgB;;AAEtD,UAAInL,WAAAA,KAAgB,KAApB,GAA4B;AAAEA,QAAAA,WAAAA,GAAF,EAAEA;AAFwB;;AAGtD,UAAImL,mBAAAA,KAAJ,WAAuC;AACnCA,QAAAA,mBAAAA,GADmC,IACnCA;AADJ,aAGK;AACDlL,QAAAA,YAAAA,CAAAA,mBAAAA,EADC,iBACDA,CAAAA;AAPkD;;AAStD,UAAInB,QAAAA,GAAWoB,sBAAAA,CAAAA,WAAAA,EATuC,kBASvCA,CAAf;AACA,UAAImI,gBAAAA,GAAmB+C,oCAAAA,CAAAA,mBAAAA,EAV+B,iBAU/BA,CAAvB;AACAC,MAAAA,wBAAAA,CAXsD,IAWtDA,CAAAA;;AACA,UAAIhD,gBAAAA,CAAAA,IAAAA,KAAJ,SAAuC;AACnC,YAAIvJ,QAAAA,CAAAA,IAAAA,KAAJ,WAAiC;AAC7B,gBAAM,eADuB,4DACvB,CAAN;AAF+B;;AAInC,YAAID,aAAAA,GAAgB2B,oBAAAA,CAAAA,QAAAA,EAJe,CAIfA,CAApB;AACA8K,QAAAA,qDAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,EALmC,aAKnCA,CAAAA;AALJ,aAOK;AACD,YAAIhL,aAAAA,GAAgBC,oBAAAA,CADnB,QACmBA,CAApB;AACA,YAAI1B,aAAAA,GAAgB2B,oBAAAA,CAAAA,QAAAA,EAFnB,CAEmBA,CAApB;AACA+K,QAAAA,wDAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,EAAAA,aAAAA,EAHC,aAGDA,CAAAA;AAtBkD;AADd;;AA0B5CjyC,IAAAA,MAAAA,CAAAA,cAAAA,CAAsB4xC,cAAAA,CAAtB5xC,SAAAA,EAAAA,QAAAA,EAA0D;AAItDyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACof,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,gBAAMqV,2BAAAA,CADmB,QACnBA,CAAN;AAFS;;AAIb,eAAO/U,sBAAAA,CAJM,IAINA,CAAP;AARkD;AAUtD56B,MAAAA,UAAAA,EAVsD;AAWtDC,MAAAA,YAAAA,EAXsD;AAAA,KAA1DxC;;AAmBA4xC,IAAAA,cAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAAkC,kBAAkB;AAChD,UAAIld,MAAAA,KAAW,KAAf,GAAuB;AAAEA,QAAAA,MAAAA,GAAF,SAAEA;AADuB;;AAEhD,UAAI,CAACmI,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,eAAOvC,mBAAAA,CAAoB4X,2BAAAA,CADF,QACEA,CAApB5X,CAAP;AAH4C;;AAKhD,UAAI6C,sBAAAA,CAAJ,IAAIA,CAAJ,EAAkC;AAC9B,eAAO7C,mBAAAA,CAAoB,cADG,kDACH,CAApBA,CAAP;AAN4C;;AAQhD,aAAOqB,oBAAAA,CAAAA,IAAAA,EARyC,MAQzCA,CAAP;AArDwC,KA6C5CiW;;AAUAA,IAAAA,cAAAA,CAAAA,SAAAA,CAAAA,SAAAA,GAAqC,sBAAsB;AACvD,UAAIO,UAAAA,KAAe,KAAnB,GAA2B;AAAEA,QAAAA,UAAAA,GAAF,SAAEA;AAD0B;;AAEvD,UAAI,CAACtV,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,cAAMqV,2BAAAA,CADmB,WACnBA,CAAN;AAHmD;;AAKvD,UAAIjzB,OAAAA,GAAUmzB,oBAAAA,CAAAA,UAAAA,EALyC,iBAKzCA,CAAd;;AACA,UAAInzB,OAAAA,CAAAA,IAAAA,KAAJ,WAAgC;AAC5B,eAAO8f,kCAAAA,CADqB,IACrBA,CAAP;AAPmD;;AASvD,aAAOqR,+BAAAA,CATgD,IAShDA,CAAP;AAhEwC,KAuD5CwB;;AAWAA,IAAAA,cAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAuC,oCAAoC;AACvE,UAAIO,UAAAA,KAAe,KAAnB,GAA2B;AAAEA,QAAAA,UAAAA,GAAF,EAAEA;AAD0C;;AAEvE,UAAI,CAACtV,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,cAAMqV,2BAAAA,CADmB,aACnBA,CAAN;AAHmE;;AAKvEjV,MAAAA,sBAAAA,CAAAA,YAAAA,EAAAA,CAAAA,EALuE,aAKvEA,CAAAA;AACA,UAAI1qB,SAAAA,GAAY8/B,2BAAAA,CAAAA,YAAAA,EANuD,iBAMvDA,CAAhB;AACA,UAAIpzB,OAAAA,GAAUqzB,kBAAAA,CAAAA,UAAAA,EAPyD,kBAOzDA,CAAd;;AACA,UAAInV,sBAAAA,CAAJ,IAAIA,CAAJ,EAAkC;AAC9B,cAAM,cADwB,gFACxB,CAAN;AATmE;;AAWvE,UAAIkK,sBAAAA,CAAuB90B,SAAAA,CAA3B,QAAI80B,CAAJ,EAAgD;AAC5C,cAAM,cADsC,gFACtC,CAAN;AAZmE;;AAcvE,UAAI5T,OAAAA,GAAU8e,oBAAAA,CAAAA,IAAAA,EAA2BhgC,SAAAA,CAA3BggC,QAAAA,EAA+CtzB,OAAAA,CAA/CszB,YAAAA,EAAqEtzB,OAAAA,CAArEszB,YAAAA,EAA2FtzB,OAAAA,CAA3FszB,aAAAA,EAAkHtzB,OAAAA,CAdzD,MAczDszB,CAAd;AACAxW,MAAAA,yBAAAA,CAfuE,OAevEA,CAAAA;AACA,aAAOxpB,SAAAA,CAhBgE,QAgBvE;AAlFwC,KAkE5Cq/B;;AAkBAA,IAAAA,cAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAAkC,mCAAmC;AACjE,UAAIO,UAAAA,KAAe,KAAnB,GAA2B;AAAEA,QAAAA,UAAAA,GAAF,EAAEA;AADoC;;AAEjE,UAAI,CAACtV,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,eAAOvC,mBAAAA,CAAoB4X,2BAAAA,CADF,QACEA,CAApB5X,CAAP;AAH6D;;AAKjE,UAAIkY,WAAAA,KAAJ,WAA+B;AAC3B,eAAOlY,mBAAAA,CADoB,sCACpBA,CAAP;AAN6D;;AAQjE,UAAI,CAACgM,gBAAAA,CAAL,WAAKA,CAAL,EAAoC;AAChC,eAAOhM,mBAAAA,CAAoB,cADK,2EACL,CAApBA,CAAP;AAT6D;;AAWjE,UAXiE,OAWjE;;AACA,UAAI;AACArb,QAAAA,OAAAA,GAAUqzB,kBAAAA,CAAAA,UAAAA,EADV,kBACUA,CAAVrzB;AADJ,QAGA,UAAU;AACN,eAAOqb,mBAAAA,CADD,CACCA,CAAP;AAhB6D;;AAkBjE,UAAI6C,sBAAAA,CAAJ,IAAIA,CAAJ,EAAkC;AAC9B,eAAO7C,mBAAAA,CAAoB,cADG,2EACH,CAApBA,CAAP;AAnB6D;;AAqBjE,UAAI+M,sBAAAA,CAAJ,WAAIA,CAAJ,EAAyC;AACrC,eAAO/M,mBAAAA,CAAoB,cADU,2EACV,CAApBA,CAAP;AAtB6D;;AAwBjE,aAAOiY,oBAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAAwCtzB,OAAAA,CAAxCszB,YAAAA,EAA8DtzB,OAAAA,CAA9DszB,YAAAA,EAAoFtzB,OAAAA,CAApFszB,aAAAA,EAA2GtzB,OAAAA,CAxBjD,MAwB1DszB,CAAP;AA5GwC,KAoF5CX;;AAqCAA,IAAAA,cAAAA,CAAAA,SAAAA,CAAAA,GAAAA,GAA+B,YAAY;AACvC,UAAI,CAAC/U,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,cAAMqV,2BAAAA,CADmB,KACnBA,CAAN;AAFmC;;AAIvC,UAAIO,QAAAA,GAAWC,iBAAAA,CAJwB,IAIxBA,CAAf;AACA,aAAOC,mBAAAA,CALgC,QAKhCA,CAAP;AA9HwC,KAyH5Cf;;AAOAA,IAAAA,cAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAAkC,sBAAsB;AACpD,UAAIO,UAAAA,KAAe,KAAnB,GAA2B;AAAEA,QAAAA,UAAAA,GAAF,SAAEA;AADuB;;AAEpD,UAAI,CAACtV,gBAAAA,CAAL,IAAKA,CAAL,EAA6B;AACzB,cAAMqV,2BAAAA,CADmB,QACnBA,CAAN;AAHgD;;AAKpD,UAAIjzB,OAAAA,GAAU2zB,sBAAAA,CAAAA,UAAAA,EALsC,iBAKtCA,CAAd;AACA,aAAOC,kCAAAA,CAAAA,IAAAA,EAAyC5zB,OAAAA,CANI,aAM7C4zB,CAAP;AAtIwC,KAgI5CjB;;AAQA,WAxI4C,cAwI5C;AA5iHoB,GAo6GY,EAApC;;AA0IA5xC,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwB4xC,cAAAA,CAAxB5xC,SAAAA,EAAkD;AAC9C+9B,IAAAA,MAAAA,EAAQ;AAAEx7B,MAAAA,UAAAA,EADoC;AACtC,KADsC;AAE9CuwC,IAAAA,SAAAA,EAAW;AAAEvwC,MAAAA,UAAAA,EAFiC;AAEnC,KAFmC;AAG9CwwC,IAAAA,WAAAA,EAAa;AAAExwC,MAAAA,UAAAA,EAH+B;AAGjC,KAHiC;AAI9CywC,IAAAA,MAAAA,EAAQ;AAAEzwC,MAAAA,UAAAA,EAJoC;AAItC,KAJsC;AAK9C0wC,IAAAA,GAAAA,EAAK;AAAE1wC,MAAAA,UAAAA,EALuC;AAKzC,KALyC;AAM9CuB,IAAAA,MAAAA,EAAQ;AAAEvB,MAAAA,UAAAA,EANoC;AAMtC,KANsC;AAO9ColC,IAAAA,MAAAA,EAAQ;AAAEplC,MAAAA,UAAAA,EAPoC;AAOtC;AAPsC,GAAlDvC;;AASA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsB4xC,cAAAA,CAAtB5xC,SAAAA,EAAgDw5B,cAAAA,CAAhDx5B,WAAAA,EAA4E;AACxEsC,MAAAA,KAAAA,EADwE;AAExEE,MAAAA,YAAAA,EAFwE;AAAA,KAA5ExC;AAxjHoB;;AA6jHxB,MAAI,QAAOw5B,cAAAA,CAAP,mBAAJ,UAAsD;AAClDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsB4xC,cAAAA,CAAtB5xC,SAAAA,EAAgDw5B,cAAAA,CAAhDx5B,aAAAA,EAA8E;AAC1EsC,MAAAA,KAAAA,EAAOsvC,cAAAA,CAAAA,SAAAA,CADmE;AAE1EnvC,MAAAA,QAAAA,EAF0E;AAG1ED,MAAAA,YAAAA,EAH0E;AAAA,KAA9ExC;AA9jHoB;;AAskHxB,8GAA4G;AACxG,QAAIulC,aAAAA,KAAkB,KAAtB,GAA8B;AAAEA,MAAAA,aAAAA,GAAF,CAAEA;AADwE;;AAExG,QAAIyB,aAAAA,KAAkB,KAAtB,GAA8B;AAAEA,MAAAA,aAAAA,GAAgB,yBAAY;AAAE,eAAF,CAAE;AAAhC,OAAEA;AAFwE;;AAGxG,QAAIzL,MAAAA,GAASv7B,MAAAA,CAAAA,MAAAA,CAAc4xC,cAAAA,CAH6E,SAG3F5xC,CAAb;AACA+xC,IAAAA,wBAAAA,CAJwG,MAIxGA,CAAAA;AACA,QAAI7P,UAAAA,GAAaliC,MAAAA,CAAAA,MAAAA,CAAcouC,+BAAAA,CALyE,SAKvFpuC,CAAjB;AACAgvC,IAAAA,oCAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,EAAAA,aAAAA,EAAAA,eAAAA,EAAAA,aAAAA,EANwG,aAMxGA,CAAAA;AACA,WAPwG,MAOxG;AA7kHoB;;AAglHxB,oFAAkF;AAC9E,QAAIzT,MAAAA,GAASv7B,MAAAA,CAAAA,MAAAA,CAAc4xC,cAAAA,CADmD,SACjE5xC,CAAb;AACA+xC,IAAAA,wBAAAA,CAF8E,MAE9EA,CAAAA;AACA,QAAI7P,UAAAA,GAAaliC,MAAAA,CAAAA,MAAAA,CAAcogC,4BAAAA,CAH+C,SAG7DpgC,CAAjB;AACAilC,IAAAA,iCAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,EAAAA,aAAAA,EAAAA,eAAAA,EAAAA,CAAAA,EAJ8E,SAI9EA,CAAAA;AACA,WAL8E,MAK9E;AArlHoB;;AAulHxB,4CAA0C;AACtC1J,IAAAA,MAAAA,CAAAA,MAAAA,GADsC,UACtCA;AACAA,IAAAA,MAAAA,CAAAA,OAAAA,GAFsC,SAEtCA;AACAA,IAAAA,MAAAA,CAAAA,YAAAA,GAHsC,SAGtCA;AACAA,IAAAA,MAAAA,CAAAA,UAAAA,GAJsC,KAItCA;AA3lHoB;;AA6lHxB,+BAA6B;AACzB,QAAI,CAAC4C,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFqB;;AAIzB,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,2BAAKA,CAAL,EAA2E;AACvE,aADuE,KACvE;AALqB;;AAOzB,WAAOyoB,CAAAA,YAPkB,cAOzB;AApmHoB;;AAsmHxB,0CAAwC;AACpC,QAAI8S,MAAAA,CAAAA,OAAAA,KAAJ,WAAkC;AAC9B,aAD8B,KAC9B;AAFgC;;AAIpC,WAJoC,IAIpC;AA1mHoB;;AA6mHxB,gDAA8C;AAC1CA,IAAAA,MAAAA,CAAAA,UAAAA,GAD0C,IAC1CA;;AACA,QAAIA,MAAAA,CAAAA,MAAAA,KAAJ,UAAgC;AAC5B,aAAOnB,mBAAAA,CADqB,SACrBA,CAAP;AAHsC;;AAK1C,QAAImB,MAAAA,CAAAA,MAAAA,KAAJ,WAAiC;AAC7B,aAAOjB,mBAAAA,CAAoBiB,MAAAA,CADE,YACtBjB,CAAP;AANsC;;AAQ1C6I,IAAAA,mBAAAA,CAR0C,MAQ1CA,CAAAA;AACA,QAAI7H,MAAAA,GAASC,MAAAA,CAT6B,OAS1C;;AACA,QAAID,MAAAA,KAAAA,SAAAA,IAAwB4J,0BAAAA,CAA5B,MAA4BA,CAA5B,EAAgE;AAC5D5J,MAAAA,MAAAA,CAAAA,iBAAAA,CAAAA,OAAAA,CAAiC,2BAA2B;AACxDoI,QAAAA,eAAAA,CAAAA,WAAAA,CADwD,SACxDA;AAFwD,OAC5DpI;;AAGAA,MAAAA,MAAAA,CAAAA,iBAAAA,GAA2B,IAJiC,WAIjC,EAA3BA;AAdsC;;AAgB1C,QAAI4X,mBAAAA,GAAsB3X,MAAAA,CAAAA,yBAAAA,CAAAA,WAAAA,EAhBgB,MAgBhBA,CAA1B;;AACA,WAAOkD,oBAAAA,CAAAA,mBAAAA,EAjBmC,IAiBnCA,CAAP;AA9nHoB;;AAgoHxB,uCAAqC;AACjClD,IAAAA,MAAAA,CAAAA,MAAAA,GADiC,QACjCA;AACA,QAAID,MAAAA,GAASC,MAAAA,CAFoB,OAEjC;;AACA,QAAID,MAAAA,KAAJ,WAA0B;AAAA;AAHO;;AAMjCQ,IAAAA,iCAAAA,CANiC,MAMjCA,CAAAA;;AACA,QAAIiB,6BAAAA,CAAJ,MAAIA,CAAJ,EAA2C;AACvCzB,MAAAA,MAAAA,CAAAA,aAAAA,CAAAA,OAAAA,CAA6B,uBAAuB;AAChDwB,QAAAA,WAAAA,CADgD,WAChDA;AAFmC,OACvCxB;;AAGAA,MAAAA,MAAAA,CAAAA,aAAAA,GAAuB,IAJgB,WAIhB,EAAvBA;AAX6B;AAhoHb;;AA8oHxB,0CAAwC;AACpCC,IAAAA,MAAAA,CAAAA,MAAAA,GADoC,SACpCA;AACAA,IAAAA,MAAAA,CAAAA,YAAAA,GAFoC,CAEpCA;AACA,QAAID,MAAAA,GAASC,MAAAA,CAHuB,OAGpC;;AACA,QAAID,MAAAA,KAAJ,WAA0B;AAAA;AAJU;;AAOpCM,IAAAA,gCAAAA,CAAAA,MAAAA,EAPoC,CAOpCA,CAAAA;;AACA,QAAImB,6BAAAA,CAAJ,MAAIA,CAAJ,EAA2C;AACvCzB,MAAAA,MAAAA,CAAAA,aAAAA,CAAAA,OAAAA,CAA6B,uBAAuB;AAChDwB,QAAAA,WAAAA,CAAAA,WAAAA,CADgD,CAChDA;AAFmC,OACvCxB;;AAGAA,MAAAA,MAAAA,CAAAA,aAAAA,GAAuB,IAJgB,WAIhB,EAAvBA;AAJJ,WAMK;AACDA,MAAAA,MAAAA,CAAAA,iBAAAA,CAAAA,OAAAA,CAAiC,2BAA2B;AACxDoI,QAAAA,eAAAA,CAAAA,WAAAA,CADwD,CACxDA;AAFH,OACDpI;;AAGAA,MAAAA,MAAAA,CAAAA,iBAAAA,GAA2B,IAJ1B,WAI0B,EAA3BA;AAlBgC;AA9oHhB;;AAoqHxB,6CAA2C;AACvC,WAAO,cAAc,qCADkB,uCAChC,CAAP;AArqHoB;;AAwqHxB,qDAAmD;AAC/CmK,IAAAA,gBAAAA,CAAAA,IAAAA,EAD+C,OAC/CA,CAAAA;AACA,QAAIF,aAAAA,GAAgBG,IAAAA,KAAAA,IAAAA,IAAiBA,IAAAA,KAAS,KAA1BA,CAAAA,GAAmC,KAAnCA,CAAAA,GAA4CA,IAAAA,CAFjB,aAE/C;AACAiM,IAAAA,mBAAAA,CAAAA,aAAAA,EAAAA,eAAAA,EAH+C,qBAG/CA,CAAAA;AACA,WAAO;AACHpM,MAAAA,aAAAA,EAAeI,yBAAAA,CAL4B,aAK5BA;AADZ,KAAP;AA5qHoB;;AAkrHxB,MAAIwN,sBAAAA,GAAyB,SAAzBA,sBAAyB,QAAiB;AAC1C,WAAOl5B,KAAAA,CADmC,UAC1C;AAnrHoB,GAkrHxB;;AAGAja,EAAAA,MAAAA,CAAAA,cAAAA,CAAAA,sBAAAA,EAAAA,MAAAA,EAAsD;AAClDsC,IAAAA,KAAAA,EADkD;AAElDE,IAAAA,YAAAA,EAFkD;AAAA,GAAtDxC;;AASA,MAAIozC,yBAAAA,GAA2C,YAAY;AACvD,gDAA4C;AACxCnW,MAAAA,sBAAAA,CAAAA,OAAAA,EAAAA,CAAAA,EADwC,2BACxCA,CAAAA;AACAhe,MAAAA,OAAAA,GAAUo0B,0BAAAA,CAAAA,OAAAA,EAF8B,iBAE9BA,CAAVp0B;AACA,qDAA+CA,OAAAA,CAHP,aAGxC;AAJmD;;AAMvDjf,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBozC,yBAAAA,CAAtBpzC,SAAAA,EAAAA,eAAAA,EAA4E;AAIxEyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAAC61B,2BAAAA,CAAL,IAAKA,CAAL,EAAwC;AACpC,gBAAMC,6BAAAA,CAD8B,eAC9BA,CAAN;AAFS;;AAIb,eAAO,KAJM,uCAIb;AARoE;AAUxEhxC,MAAAA,UAAAA,EAVwE;AAWxEC,MAAAA,YAAAA,EAXwE;AAAA,KAA5ExC;AAaAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBozC,yBAAAA,CAAtBpzC,SAAAA,EAAAA,MAAAA,EAAmE;AAI/Dyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAAC61B,2BAAAA,CAAL,IAAKA,CAAL,EAAwC;AACpC,gBAAMC,6BAAAA,CAD8B,MAC9BA,CAAN;AAFS;;AAIb,eAJa,sBAIb;AAR2D;AAU/DhxC,MAAAA,UAAAA,EAV+D;AAW/DC,MAAAA,YAAAA,EAX+D;AAAA,KAAnExC;AAaA,WAhCuD,yBAgCvD;AA9tHoB,GA8rHuB,EAA/C;;AAkCAA,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwBozC,yBAAAA,CAAxBpzC,SAAAA,EAA6D;AACzDulC,IAAAA,aAAAA,EAAe;AAAEhjC,MAAAA,UAAAA,EADwC;AAC1C,KAD0C;AAEzD82B,IAAAA,IAAAA,EAAM;AAAE92B,MAAAA,UAAAA,EAFiD;AAEnD;AAFmD,GAA7DvC;;AAIA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBozC,yBAAAA,CAAtBpzC,SAAAA,EAA2Dw5B,cAAAA,CAA3Dx5B,WAAAA,EAAuF;AACnFsC,MAAAA,KAAAA,EADmF;AAEnFE,MAAAA,YAAAA,EAFmF;AAAA,KAAvFxC;AAruHoB;;AA2uHxB,+CAA6C;AACzC,WAAO,cAAc,gDADoB,kDAClC,CAAP;AA5uHoB;;AA8uHxB,0CAAwC;AACpC,QAAI,CAACm+B,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFgC;;AAIpC,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,yCAAKA,CAAL,EAAyF;AACrF,aADqF,KACrF;AALgC;;AAOpC,WAAOyoB,CAAAA,YAP6B,yBAOpC;AArvHoB;;AAyvHxB,MAAI+qB,iBAAAA,GAAoB,SAApBA,iBAAoB,GAAY;AAChC,WADgC,CAChC;AA1vHoB,GAyvHxB;;AAGAxzC,EAAAA,MAAAA,CAAAA,cAAAA,CAAAA,iBAAAA,EAAAA,MAAAA,EAAiD;AAC7CsC,IAAAA,KAAAA,EAD6C;AAE7CE,IAAAA,YAAAA,EAF6C;AAAA,GAAjDxC;;AASA,MAAIyzC,oBAAAA,GAAsC,YAAY;AAClD,2CAAuC;AACnCxW,MAAAA,sBAAAA,CAAAA,OAAAA,EAAAA,CAAAA,EADmC,sBACnCA,CAAAA;AACAhe,MAAAA,OAAAA,GAAUo0B,0BAAAA,CAAAA,OAAAA,EAFyB,iBAEzBA,CAAVp0B;AACA,gDAA0CA,OAAAA,CAHP,aAGnC;AAJ8C;;AAMlDjf,IAAAA,MAAAA,CAAAA,cAAAA,CAAsByzC,oBAAAA,CAAtBzzC,SAAAA,EAAAA,eAAAA,EAAuE;AAInEyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACi2B,sBAAAA,CAAL,IAAKA,CAAL,EAAmC;AAC/B,gBAAMC,wBAAAA,CADyB,eACzBA,CAAN;AAFS;;AAIb,eAAO,KAJM,kCAIb;AAR+D;AAUnEpxC,MAAAA,UAAAA,EAVmE;AAWnEC,MAAAA,YAAAA,EAXmE;AAAA,KAAvExC;AAaAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAsByzC,oBAAAA,CAAtBzzC,SAAAA,EAAAA,MAAAA,EAA8D;AAK1Dyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACi2B,sBAAAA,CAAL,IAAKA,CAAL,EAAmC;AAC/B,gBAAMC,wBAAAA,CADyB,MACzBA,CAAN;AAFS;;AAIb,eAJa,iBAIb;AATsD;AAW1DpxC,MAAAA,UAAAA,EAX0D;AAY1DC,MAAAA,YAAAA,EAZ0D;AAAA,KAA9DxC;AAcA,WAjCkD,oBAiClD;AAtyHoB,GAqwHkB,EAA1C;;AAmCAA,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwByzC,oBAAAA,CAAxBzzC,SAAAA,EAAwD;AACpDulC,IAAAA,aAAAA,EAAe;AAAEhjC,MAAAA,UAAAA,EADmC;AACrC,KADqC;AAEpD82B,IAAAA,IAAAA,EAAM;AAAE92B,MAAAA,UAAAA,EAF4C;AAE9C;AAF8C,GAAxDvC;;AAIA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsByzC,oBAAAA,CAAtBzzC,SAAAA,EAAsDw5B,cAAAA,CAAtDx5B,WAAAA,EAAkF;AAC9EsC,MAAAA,KAAAA,EAD8E;AAE9EE,MAAAA,YAAAA,EAF8E;AAAA,KAAlFxC;AA7yHoB;;AAmzHxB,0CAAwC;AACpC,WAAO,cAAc,2CADe,6CAC7B,CAAP;AApzHoB;;AAszHxB,qCAAmC;AAC/B,QAAI,CAACm+B,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAF2B;;AAI/B,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,oCAAKA,CAAL,EAAoF;AAChF,aADgF,KAChF;AAL2B;;AAO/B,WAAOyoB,CAAAA,YAPwB,oBAO/B;AA7zHoB;;AAg0HxB,iDAA+C;AAC3Cgd,IAAAA,gBAAAA,CAAAA,QAAAA,EAD2C,OAC3CA,CAAAA;AACA,QAAI7N,KAAAA,GAAQmO,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CAFrB,KAE3C;AACA,QAAI6N,YAAAA,GAAe7N,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CAH5B,YAG3C;AACA,QAAI1lC,KAAAA,GAAQ0lC,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CAJrB,KAI3C;AACA,QAAIxzB,SAAAA,GAAYwzB,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CALzB,SAK3C;AACA,QAAI8N,YAAAA,GAAe9N,QAAAA,KAAAA,IAAAA,IAAqBA,QAAAA,KAAa,KAAlCA,CAAAA,GAA2C,KAA3CA,CAAAA,GAAoDA,QAAAA,CAN5B,YAM3C;AACA,WAAO;AACHnO,MAAAA,KAAAA,EAAOA,KAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEHkc,+BAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAiD/wC,OAAAA,GAHlD,0BAGC+wC,CAHD;AAIHF,MAAAA,YAAAA,EAJG;AAKHvzC,MAAAA,KAAAA,EAAOA,KAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEH0zC,+BAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAiDhxC,OAAAA,GAPlD,0BAOCgxC,CAPD;AAQHxhC,MAAAA,SAAAA,EAAWA,SAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAEPyhC,mCAAAA,CAAAA,SAAAA,EAAAA,QAAAA,EAAyDjxC,OAAAA,GAV1D,8BAUCixC,CAVD;AAWHH,MAAAA,YAAAA,EAXG;AAAA,KAAP;AAv0HoB;;AAq1HxB,kEAAgE;AAC5DhO,IAAAA,cAAAA,CAAAA,EAAAA,EAD4D,OAC5DA,CAAAA;AACA,WAAO,sBAAsB;AAAE,aAAOQ,WAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAA0B,CAAnC,UAAmC,CAA1BA,CAAP;AAF6B,KAE5D;AAv1HoB;;AAy1HxB,kEAAgE;AAC5DR,IAAAA,cAAAA,CAAAA,EAAAA,EAD4D,OAC5DA,CAAAA;AACA,WAAO,sBAAsB;AAAE,aAAOxL,WAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAA0B,CAAnC,UAAmC,CAA1BA,CAAP;AAF6B,KAE5D;AA31HoB;;AA61HxB,sEAAoE;AAChEwL,IAAAA,cAAAA,CAAAA,EAAAA,EADgE,OAChEA,CAAAA;AACA,WAAO,6BAA6B;AAAE,aAAO,0BAA0B,mBAA1B,CAAP;AAF0B,KAEhE;AA/1HoB;;AA22HxB,MAAIoO,eAAAA,GAAiC,YAAY;AAC7C,uFAAmF;AAC/E,UAAIC,cAAAA,KAAmB,KAAvB,GAA+B;AAAEA,QAAAA,cAAAA,GAAF,EAAEA;AAD8C;;AAE/E,UAAIC,mBAAAA,KAAwB,KAA5B,GAAoC;AAAEA,QAAAA,mBAAAA,GAAF,EAAEA;AAFyC;;AAG/E,UAAIC,mBAAAA,KAAwB,KAA5B,GAAoC;AAAEA,QAAAA,mBAAAA,GAAF,EAAEA;AAHyC;;AAI/E,UAAIF,cAAAA,KAAJ,WAAkC;AAC9BA,QAAAA,cAAAA,GAD8B,IAC9BA;AAL2E;;AAO/E,UAAIG,gBAAAA,GAAmBzN,sBAAAA,CAAAA,mBAAAA,EAPwD,kBAOxDA,CAAvB;AACA,UAAI0N,gBAAAA,GAAmB1N,sBAAAA,CAAAA,mBAAAA,EARwD,iBAQxDA,CAAvB;AACA,UAAI2N,WAAAA,GAAcC,kBAAAA,CAAAA,cAAAA,EAT6D,iBAS7DA,CAAlB;;AACA,UAAID,WAAAA,CAAAA,YAAAA,KAAJ,WAA4C;AACxC,cAAM,eADkC,gCAClC,CAAN;AAX2E;;AAa/E,UAAIA,WAAAA,CAAAA,YAAAA,KAAJ,WAA4C;AACxC,cAAM,eADkC,gCAClC,CAAN;AAd2E;;AAgB/E,UAAIE,qBAAAA,GAAwBvN,oBAAAA,CAAAA,gBAAAA,EAhBmD,CAgBnDA,CAA5B;AACA,UAAIwN,qBAAAA,GAAwBzN,oBAAAA,CAjBmD,gBAiBnDA,CAA5B;AACA,UAAI0N,qBAAAA,GAAwBzN,oBAAAA,CAAAA,gBAAAA,EAlBmD,CAkBnDA,CAA5B;AACA,UAAI0N,qBAAAA,GAAwB3N,oBAAAA,CAnBmD,gBAmBnDA,CAA5B;AACA,UApB+E,oBAoB/E;AACA,UAAIsE,YAAAA,GAAe,WAAW,mBAAmB;AAC7CsJ,QAAAA,oBAAAA,GAD6C,OAC7CA;AAtB2E,OAqB5D,CAAnB;AAGAC,MAAAA,yBAAAA,CAAAA,IAAAA,EAAAA,YAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAxB+E,qBAwB/EA,CAAAA;AACAC,MAAAA,oDAAAA,CAAAA,IAAAA,EAzB+E,WAyB/EA,CAAAA;;AACA,UAAIR,WAAAA,CAAAA,KAAAA,KAAJ,WAAqC;AACjCM,QAAAA,oBAAAA,CAAqBN,WAAAA,CAAAA,KAAAA,CAAkB,KADN,0BACZA,CAArBM,CAAAA;AADJ,aAGK;AACDA,QAAAA,oBAAAA,CADC,SACDA,CAAAA;AA9B2E;AADtC;;AAkC7C70C,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBi0C,eAAAA,CAAtBj0C,SAAAA,EAAAA,UAAAA,EAA6D;AAIzDyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACu3B,iBAAAA,CAAL,IAAKA,CAAL,EAA8B;AAC1B,gBAAMC,yBAAAA,CADoB,UACpBA,CAAN;AAFS;;AAIb,eAAO,KAJM,SAIb;AARqD;AAUzD1yC,MAAAA,UAAAA,EAVyD;AAWzDC,MAAAA,YAAAA,EAXyD;AAAA,KAA7DxC;AAaAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBi0C,eAAAA,CAAtBj0C,SAAAA,EAAAA,UAAAA,EAA6D;AAIzDyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACu3B,iBAAAA,CAAL,IAAKA,CAAL,EAA8B;AAC1B,gBAAMC,yBAAAA,CADoB,UACpBA,CAAN;AAFS;;AAIb,eAAO,KAJM,SAIb;AARqD;AAUzD1yC,MAAAA,UAAAA,EAVyD;AAWzDC,MAAAA,YAAAA,EAXyD;AAAA,KAA7DxC;AAaA,WA5D6C,eA4D7C;AAv6HoB,GA22Ha,EAArC;;AA8DAA,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwBi0C,eAAAA,CAAxBj0C,SAAAA,EAAmD;AAC/C0xC,IAAAA,QAAAA,EAAU;AAAEnvC,MAAAA,UAAAA,EADmC;AACrC,KADqC;AAE/CE,IAAAA,QAAAA,EAAU;AAAEF,MAAAA,UAAAA,EAFmC;AAErC;AAFqC,GAAnDvC;;AAIA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsBi0C,eAAAA,CAAtBj0C,SAAAA,EAAiDw5B,cAAAA,CAAjDx5B,WAAAA,EAA6E;AACzEsC,MAAAA,KAAAA,EADyE;AAEzEE,MAAAA,YAAAA,EAFyE;AAAA,KAA7ExC;AA96HoB;;AAm7HxB,uJAAqJ;AACjJ,8BAA0B;AACtB,aADsB,YACtB;AAF6I;;AAIjJ,mCAA+B;AAC3B,aAAOk1C,wCAAAA,CAAAA,MAAAA,EADoB,KACpBA,CAAP;AAL6I;;AAOjJ,oCAAgC;AAC5B,aAAOC,wCAAAA,CAAAA,MAAAA,EADqB,MACrBA,CAAP;AAR6I;;AAUjJ,8BAA0B;AACtB,aAAOC,wCAAAA,CADe,MACfA,CAAP;AAX6I;;AAajJ7Z,IAAAA,MAAAA,CAAAA,SAAAA,GAAmB8Z,oBAAAA,CAAAA,cAAAA,EAAAA,cAAAA,EAAAA,cAAAA,EAAAA,cAAAA,EAAAA,qBAAAA,EAb8H,qBAa9HA,CAAnB9Z;;AACA,6BAAyB;AACrB,aAAO+Z,yCAAAA,CADc,MACdA,CAAP;AAf6I;;AAiBjJ,qCAAiC;AAC7BC,MAAAA,2CAAAA,CAAAA,MAAAA,EAD6B,MAC7BA,CAAAA;AACA,aAAOnb,mBAAAA,CAFsB,SAEtBA,CAAP;AAnB6I;;AAqBjJmB,IAAAA,MAAAA,CAAAA,SAAAA,GAAmByU,oBAAAA,CAAAA,cAAAA,EAAAA,aAAAA,EAAAA,eAAAA,EAAAA,qBAAAA,EArB8H,qBAqB9HA,CAAnBzU;AAEAA,IAAAA,MAAAA,CAAAA,aAAAA,GAvBiJ,SAuBjJA;AACAA,IAAAA,MAAAA,CAAAA,0BAAAA,GAxBiJ,SAwBjJA;AACAA,IAAAA,MAAAA,CAAAA,kCAAAA,GAzBiJ,SAyBjJA;AACAia,IAAAA,8BAAAA,CAAAA,MAAAA,EA1BiJ,IA0BjJA,CAAAA;AACAja,IAAAA,MAAAA,CAAAA,0BAAAA,GA3BiJ,SA2BjJA;AA98HoB;;AAg9HxB,gCAA8B;AAC1B,QAAI,CAAC4C,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFsB;;AAI1B,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,4BAAKA,CAAL,EAA4E;AACxE,aADwE,KACxE;AALsB;;AAO1B,WAAOyoB,CAAAA,YAPmB,eAO1B;AAv9HoB;;AA09HxB,2CAAyC;AACrCkmB,IAAAA,oCAAAA,CAAqCpT,MAAAA,CAAAA,SAAAA,CAArCoT,yBAAAA,EADqC,CACrCA,CAAAA;AACA4G,IAAAA,2CAAAA,CAAAA,MAAAA,EAFqC,CAErCA,CAAAA;AA59HoB;;AA89HxB,kEAAgE;AAC5DE,IAAAA,+CAAAA,CAAgDla,MAAAA,CADY,0BAC5Dka,CAAAA;AACA5J,IAAAA,4CAAAA,CAA6CtQ,MAAAA,CAAAA,SAAAA,CAA7CsQ,yBAAAA,EAF4D,CAE5DA,CAAAA;;AACA,QAAItQ,MAAAA,CAAJ,eAA0B;AAItBia,MAAAA,8BAAAA,CAAAA,MAAAA,EAJsB,KAItBA,CAAAA;AAPwD;AA99HxC;;AAw+HxB,gEAA8D;AAE1D,QAAIja,MAAAA,CAAAA,0BAAAA,KAAJ,WAAqD;AACjDA,MAAAA,MAAAA,CADiD,kCACjDA;AAHsD;;AAK1DA,IAAAA,MAAAA,CAAAA,0BAAAA,GAAoC,WAAW,mBAAmB;AAC9DA,MAAAA,MAAAA,CAAAA,kCAAAA,GAD8D,OAC9DA;AANsD,KAKtB,CAApCA;AAGAA,IAAAA,MAAAA,CAAAA,aAAAA,GAR0D,YAQ1DA;AAh/HoB;;AAw/HxB,MAAIma,gCAAAA,GAAkD,YAAY;AAC9D,gDAA4C;AACxC,YAAM,cADkC,qBAClC,CAAN;AAF0D;;AAI9D11C,IAAAA,MAAAA,CAAAA,cAAAA,CAAsB01C,gCAAAA,CAAtB11C,SAAAA,EAAAA,aAAAA,EAAiF;AAI7Eyd,MAAAA,GAAAA,EAAK,eAAY;AACb,YAAI,CAACk4B,kCAAAA,CAAL,IAAKA,CAAL,EAA+C;AAC3C,gBAAMC,oCAAAA,CADqC,aACrCA,CAAN;AAFS;;AAIb,YAAIC,kBAAAA,GAAqB,0CAJZ,yBAIb;AACA,eAAOtH,6CAAAA,CALM,kBAKNA,CAAP;AATyE;AAW7EhsC,MAAAA,UAAAA,EAX6E;AAY7EC,MAAAA,YAAAA,EAZ6E;AAAA,KAAjFxC;;AAcA01C,IAAAA,gCAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAqD,iBAAiB;AAClE,UAAIz7B,KAAAA,KAAU,KAAd,GAAsB;AAAEA,QAAAA,KAAAA,GAAF,SAAEA;AAD0C;;AAElE,UAAI,CAAC07B,kCAAAA,CAAL,IAAKA,CAAL,EAA+C;AAC3C,cAAMC,oCAAAA,CADqC,SACrCA,CAAN;AAH8D;;AAKlEE,MAAAA,uCAAAA,CAAAA,IAAAA,EALkE,KAKlEA,CAAAA;AAvB0D,KAkB9DJ;;AAWAA,IAAAA,gCAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAmD,kBAAkB;AACjE,UAAIhhB,MAAAA,KAAW,KAAf,GAAuB;AAAEA,QAAAA,MAAAA,GAAF,SAAEA;AADwC;;AAEjE,UAAI,CAACihB,kCAAAA,CAAL,IAAKA,CAAL,EAA+C;AAC3C,cAAMC,oCAAAA,CADqC,OACrCA,CAAN;AAH6D;;AAKjEG,MAAAA,qCAAAA,CAAAA,IAAAA,EALiE,MAKjEA,CAAAA;AAlC0D,KA6B9DL;;AAWAA,IAAAA,gCAAAA,CAAAA,SAAAA,CAAAA,SAAAA,GAAuD,YAAY;AAC/D,UAAI,CAACC,kCAAAA,CAAL,IAAKA,CAAL,EAA+C;AAC3C,cAAMC,oCAAAA,CADqC,WACrCA,CAAN;AAF2D;;AAI/DI,MAAAA,yCAAAA,CAJ+D,IAI/DA,CAAAA;AA5C0D,KAwC9DN;;AAMA,WA9C8D,gCA8C9D;AAtiIoB,GAw/H8B,EAAtD;;AAgDA11C,EAAAA,MAAAA,CAAAA,gBAAAA,CAAwB01C,gCAAAA,CAAxB11C,SAAAA,EAAoE;AAChE6hC,IAAAA,OAAAA,EAAS;AAAEt/B,MAAAA,UAAAA,EADqD;AACvD,KADuD;AAEhE61B,IAAAA,KAAAA,EAAO;AAAE71B,MAAAA,UAAAA,EAFuD;AAEzD,KAFyD;AAGhE0zC,IAAAA,SAAAA,EAAW;AAAE1zC,MAAAA,UAAAA,EAHmD;AAGrD,KAHqD;AAIhEw/B,IAAAA,WAAAA,EAAa;AAAEx/B,MAAAA,UAAAA,EAJiD;AAInD;AAJmD,GAApEvC;;AAMA,MAAI,QAAOw5B,cAAAA,CAAP,iBAAJ,UAAoD;AAChDx5B,IAAAA,MAAAA,CAAAA,cAAAA,CAAsB01C,gCAAAA,CAAtB11C,SAAAA,EAAkEw5B,cAAAA,CAAlEx5B,WAAAA,EAA8F;AAC1FsC,MAAAA,KAAAA,EAD0F;AAE1FE,MAAAA,YAAAA,EAF0F;AAAA,KAA9FxC;AA/iIoB;;AAqjIxB,iDAA+C;AAC3C,QAAI,CAACm+B,YAAAA,CAAL,CAAKA,CAAL,EAAsB;AAClB,aADkB,KAClB;AAFuC;;AAI3C,QAAI,CAACn+B,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAL,4BAAKA,CAAL,EAA4E;AACxE,aADwE,KACxE;AALuC;;AAO3C,WAAOyoB,CAAAA,YAPoC,gCAO3C;AA5jIoB;;AA8jIxB,yGAAuG;AACnGyZ,IAAAA,UAAAA,CAAAA,0BAAAA,GADmG,MACnGA;AACA3G,IAAAA,MAAAA,CAAAA,0BAAAA,GAFmG,UAEnGA;AACA2G,IAAAA,UAAAA,CAAAA,mBAAAA,GAHmG,kBAGnGA;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GAJmG,cAInGA;AAlkIoB;;AAokIxB,qFAAmF;AAC/E,QAAIA,UAAAA,GAAaliC,MAAAA,CAAAA,MAAAA,CAAc01C,gCAAAA,CADgD,SAC9D11C,CAAjB;;AACA,QAAIk2C,kBAAAA,GAAqB,mCAAiB;AACtC,UAAI;AACAJ,QAAAA,uCAAAA,CAAAA,UAAAA,EADA,KACAA,CAAAA;AACA,eAAO1b,mBAAAA,CAFP,SAEOA,CAAP;AAFJ,QAIA,yBAAyB;AACrB,eAAOE,mBAAAA,CADc,gBACdA,CAAP;AANkC;AAFqC,KAE/E;;AASA,QAAI6b,cAAAA,GAAiB,0BAAY;AAAE,aAAO/b,mBAAAA,CAAT,SAASA,CAAP;AAX4C,KAW/E;;AACA,QAAIma,WAAAA,CAAAA,SAAAA,KAAJ,WAAyC;AACrC2B,MAAAA,kBAAAA,GAAqB,mCAAiB;AAAE,eAAO3B,WAAAA,CAAAA,SAAAA,CAAAA,KAAAA,EAAT,UAASA,CAAP;AADH,OACrC2B;AAb2E;;AAe/E,QAAI3B,WAAAA,CAAAA,KAAAA,KAAJ,WAAqC;AACjC4B,MAAAA,cAAAA,GAAiB,0BAAY;AAAE,eAAO5B,WAAAA,CAAAA,KAAAA,CAAT,UAASA,CAAP;AADE,OACjC4B;AAhB2E;;AAkB/EC,IAAAA,qCAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,kBAAAA,EAlB+E,cAkB/EA,CAAAA;AAtlIoB;;AAwlIxB,uEAAqE;AACjElU,IAAAA,UAAAA,CAAAA,mBAAAA,GADiE,SACjEA;AACAA,IAAAA,UAAAA,CAAAA,eAAAA,GAFiE,SAEjEA;AA1lIoB;;AA4lIxB,sEAAoE;AAChE,QAAI3G,MAAAA,GAAS2G,UAAAA,CADmD,0BAChE;AACA,QAAI2T,kBAAAA,GAAqBta,MAAAA,CAAAA,SAAAA,CAFuC,yBAEhE;;AACA,QAAI,CAACiT,gDAAAA,CAAL,kBAAKA,CAAL,EAA2E;AACvE,YAAM,cADiE,sDACjE,CAAN;AAJ4D;;AAQhE,QAAI;AACAE,MAAAA,sCAAAA,CAAAA,kBAAAA,EADA,KACAA,CAAAA;AADJ,MAGA,UAAU;AAEN6G,MAAAA,2CAAAA,CAAAA,MAAAA,EAFM,CAENA,CAAAA;AACA,YAAMha,MAAAA,CAAAA,SAAAA,CAHA,YAGN;AAd4D;;AAgBhE,QAAI4N,YAAAA,GAAekN,8CAAAA,CAhB6C,kBAgB7CA,CAAnB;;AACA,QAAIlN,YAAAA,KAAiB5N,MAAAA,CAArB,eAA2C;AACvCia,MAAAA,8BAAAA,CAAAA,MAAAA,EADuC,IACvCA,CAAAA;AAlB4D;AA5lI5C;;AAinIxB,gEAA8D;AAC1Dc,IAAAA,oBAAAA,CAAqBpU,UAAAA,CAArBoU,0BAAAA,EAD0D,CAC1DA,CAAAA;AAlnIoB;;AAonIxB,+EAA6E;AACzE,QAAIC,gBAAAA,GAAmBrU,UAAAA,CAAAA,mBAAAA,CADkD,KAClDA,CAAvB;;AACA,WAAO,kDAAkD,aAAa;AAClEoU,MAAAA,oBAAAA,CAAqBpU,UAAAA,CAArBoU,0BAAAA,EADkE,CAClEA,CAAAA;AACA,YAFkE,CAElE;AAJqE,KAElE,CAAP;AAtnIoB;;AA2nIxB,iEAA+D;AAC3D,QAAI/a,MAAAA,GAAS2G,UAAAA,CAD8C,0BAC3D;AACA,QAAI2T,kBAAAA,GAAqBta,MAAAA,CAAAA,SAAAA,CAFkC,yBAE3D;AACAkT,IAAAA,oCAAAA,CAH2D,kBAG3DA,CAAAA;AACA,QAAIrW,KAAAA,GAAQ,cAJ+C,4BAI/C,CAAZ;AACAmd,IAAAA,2CAAAA,CAAAA,MAAAA,EAL2D,KAK3DA,CAAAA;AAhoIoB;;AAmoIxB,mEAAiE;AAC7D,QAAIrT,UAAAA,GAAa3G,MAAAA,CAD4C,0BAC7D;;AACA,QAAIA,MAAAA,CAAJ,eAA0B;AACtB,UAAIib,yBAAAA,GAA4Bjb,MAAAA,CADV,0BACtB;AACA,aAAO,gDAAgD,YAAY;AAC/D,YAAI94B,QAAAA,GAAW84B,MAAAA,CADgD,SAC/D;AACA,YAAIt2B,KAAAA,GAAQxC,QAAAA,CAFmD,MAE/D;;AACA,YAAIwC,KAAAA,KAAJ,YAA0B;AACtB,gBAAMxC,QAAAA,CADgB,YACtB;AAJ2D;;AAM/D,eAAOg0C,gDAAAA,CAAAA,UAAAA,EANwD,KAMxDA,CAAP;AARkB,OAEf,CAAP;AAJyD;;AAa7D,WAAOA,gDAAAA,CAAAA,UAAAA,EAbsD,KAatDA,CAAP;AAhpIoB;;AAkpIxB,oEAAkE;AAG9DH,IAAAA,oBAAAA,CAAAA,MAAAA,EAH8D,MAG9DA,CAAAA;AACA,WAAOlc,mBAAAA,CAJuD,SAIvDA,CAAP;AAtpIoB;;AAwpIxB,4DAA0D;AAEtD,QAAIsX,QAAAA,GAAWnW,MAAAA,CAFuC,SAEtD;AACA,QAAI2G,UAAAA,GAAa3G,MAAAA,CAHqC,0BAGtD;;AACA,QAAImb,YAAAA,GAAexU,UAAAA,CAJmC,eAInCA,EAAnB;;AACAuT,IAAAA,+CAAAA,CALsD,UAKtDA,CAAAA;AAEA,WAAO,mCAAmC,YAAY;AAClD,UAAI/D,QAAAA,CAAAA,MAAAA,KAAJ,WAAmC;AAC/B,cAAMA,QAAAA,CADyB,YAC/B;AAF8C;;AAIlDjD,MAAAA,oCAAAA,CAAqCiD,QAAAA,CAJa,yBAIlDjD,CAAAA;AAJG,OAKJ,aAAa;AACZ6H,MAAAA,oBAAAA,CAAAA,MAAAA,EADY,CACZA,CAAAA;AACA,YAAM5E,QAAAA,CAFM,YAEZ;AAdkD,KAO/C,CAAP;AA/pIoB;;AA0qIxB,6DAA2D;AAEvD8D,IAAAA,8BAAAA,CAAAA,MAAAA,EAFuD,KAEvDA,CAAAA;AAEA,WAAOja,MAAAA,CAJgD,0BAIvD;AA9qIoB;;AAirIxB,sDAAoD;AAChD,WAAO,cAAc,uDAD2B,yDACzC,CAAP;AAlrIoB;;AAqrIxB,2CAAyC;AACrC,WAAO,cAAc,sCADgB,wCAC9B,CAAP;AAtrIoB;;AAyrIxBr4B,EAAAA,OAAAA,CAAAA,yBAAAA,GAzrIwB,yBAyrIxBA;AACAA,EAAAA,OAAAA,CAAAA,oBAAAA,GA1rIwB,oBA0rIxBA;AACAA,EAAAA,OAAAA,CAAAA,4BAAAA,GA3rIwB,4BA2rIxBA;AACAA,EAAAA,OAAAA,CAAAA,cAAAA,GA5rIwB,cA4rIxBA;AACAA,EAAAA,OAAAA,CAAAA,wBAAAA,GA7rIwB,wBA6rIxBA;AACAA,EAAAA,OAAAA,CAAAA,yBAAAA,GA9rIwB,yBA8rIxBA;AACAA,EAAAA,OAAAA,CAAAA,+BAAAA,GA/rIwB,+BA+rIxBA;AACAA,EAAAA,OAAAA,CAAAA,2BAAAA,GAhsIwB,2BAgsIxBA;AACAA,EAAAA,OAAAA,CAAAA,eAAAA,GAjsIwB,eAisIxBA;AACAA,EAAAA,OAAAA,CAAAA,gCAAAA,GAlsIwB,gCAksIxBA;AACAA,EAAAA,OAAAA,CAAAA,cAAAA,GAnsIwB,cAmsIxBA;AACAA,EAAAA,OAAAA,CAAAA,+BAAAA,GApsIwB,+BAosIxBA;AACAA,EAAAA,OAAAA,CAAAA,2BAAAA,GArsIwB,2BAqsIxBA;AAEAlD,EAAAA,MAAAA,CAAAA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA6C;AAAEsC,IAAAA,KAAAA,EAvsIvB;AAusIqB,GAA7CtC;AA3sIJ,CAAC,CAAD;;;;;;;;;;;;;;;ACYA;;;;;;;;;;;;;;IAEA;AACEvE,+BAAc;AAAA;;AACZ,QAAI,qBAAJ,mBAA4C;AAC1C0d,6BAD0C,sCAC1CA;AAFU;AADQ;;;;WAOtB2S,gBAAAA,KAAAA,EAAAA,MAAAA,EAAsB;AACpB,UAAIluB,KAAAA,IAAAA,CAAAA,IAAcC,MAAAA,IAAlB,GAA+B;AAC7B,cAAM,UADuB,qBACvB,CAAN;AAFkB;;AAIpB,UAAMhC,MAAAA,GAAS,0BAJK,MAIL,CAAf;;AACA,aAAO;AACLA,QAAAA,MADK,EACLA,MADK;AAELkH,QAAAA,OAAAA,EAASlH,MAAAA,CAAAA,UAAAA,CAFJ,IAEIA;AAFJ,OAAP;AAZoB;;;WAkBtBsK,eAAAA,gBAAAA,EAAAA,KAAAA,EAAAA,MAAAA,EAAuC;AACrC,UAAI,CAACwwC,gBAAAA,CAAL,QAA8B;AAC5B,cAAM,UADsB,yBACtB,CAAN;AAFmC;;AAIrC,UAAI/4C,KAAAA,IAAAA,CAAAA,IAAcC,MAAAA,IAAlB,GAA+B;AAC7B,cAAM,UADuB,qBACvB,CAAN;AALmC;;AAOrC84C,MAAAA,gBAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAPqC,KAOrCA;AACAA,MAAAA,gBAAAA,CAAAA,MAAAA,CAAAA,MAAAA,GARqC,MAQrCA;AA1BoB;;;WA6BtBC,iBAAAA,gBAAAA,EAA0B;AACxB,UAAI,CAACD,gBAAAA,CAAL,QAA8B;AAC5B,cAAM,UADsB,yBACtB,CAAN;AAFsB;;AAMxBA,MAAAA,gBAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GANwB,CAMxBA;AACAA,MAAAA,gBAAAA,CAAAA,MAAAA,CAAAA,MAAAA,GAPwB,CAOxBA;AACAA,MAAAA,gBAAAA,CAAAA,MAAAA,GARwB,IAQxBA;AACAA,MAAAA,gBAAAA,CAAAA,OAAAA,GATwB,IASxBA;AAtCoB;;;WA4CtB/6C,uBAAAA,KAAAA,EAAAA,MAAAA,EAA6B;AAC3Bud,6BAD2B,yCAC3BA;AA7CoB;;;;;;;;IAiDxB;AACE1d,uCAAsD;AAAA,4BAAxCiF,OAAwC;AAAA,QAAxCA,OAAwC,6BAA1C,IAA0C;AAAA,iCAAxBm2C,YAAwB;AAAA,QAAxBA,YAAwB,kCAAtDp7C,KAAsD;;AAAA;;AACpD,QAAI,qBAAJ,uBAAgD;AAC9C0d,6BAD8C,0CAC9CA;AAFkD;;AAIpD,mBAJoD,OAIpD;AACA,wBALoD,YAKpD;AANwB;;;;;gFAS1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBACO,KAAL,OADF;AAAA;AAAA;AAAA;;AAAA,sBAEU,UACJ,iEAFe,6DACX,CAFV;;AAAA;AAAA,oBAOE,IAPF;AAAA;AAAA;AAAA;;AAAA,sBAQU,UADG,8BACH,CARV;;AAAA;AAUQra,gBAAAA,GAVR,GAUc,uBAAuB,+BAVf,EAUR,CAVd;AAWQnC,gBAAAA,eAXR,GAW0B,oBACpB6U,0BADoB,SAEpBA,0BAbgB,IAAtB;AAAA,iDAeS,+CAA4CkjB,UAAAA,MAAAA,EAAU;AAC3D,wBAAM,mCACc,iCAAlB,EADI,sBADqD,GACrD,EAAN;AAhBkB,iBAeb,CAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAyBAj4B,oBAAAA,GAAAA,EAAAA,eAAAA,EAAiC;AAC/B0c,6BAD+B,sCAC/BA;AAnCwB;;;;;;;;IAuC5B;AACE1d,8CAAgC;AAAA,8BAAlBiF,OAAkB;AAAA,QAAlBA,OAAkB,8BAApB,IAAoB;;AAAA;;AAC9B,QAAI,qBAAJ,6BAAsD;AACpDyY,6BADoD,gDACpDA;AAF4B;;AAI9B,mBAJ8B,OAI9B;AAL8B;;;;;iFAQhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBACO,KAAL,OADF;AAAA;AAAA;AAAA;;AAAA,sBAEU,UACJ,0EAFe,sDACX,CAFV;;AAAA;AAAA,oBAOE,QAPF;AAAA;AAAA;AAAA;;AAAA,sBAQU,UADO,kCACP,CARV;;AAAA;AAUQra,gBAAAA,GAVR,aAUiB,KAAH,OAVd,SAA0B,QAA1B;AAAA,kDAYS,8BAA2B41B,UAAAA,MAAAA,EAAU;AAC1C,wBAAM,iDADoC,GACpC,EAAN;AAbsB,iBAYjB,CAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAoBAj4B,oBAAAA,GAAAA,EAAgB;AACd0c,6BADc,sCACdA;AA7B8B;;;;;;;;IAiClC;AACE1d,4BAAc;AAAA;;AACZ,QAAI,qBAAJ,gBAAyC;AACvC0d,6BADuC,mCACvCA;AAFU;AADK;;;;WAOnB2S,gBAAAA,KAAAA,EAAAA,MAAAA,EAAsB;AACpB,UAAIluB,KAAAA,IAAAA,CAAAA,IAAcC,MAAAA,IAAlB,GAA+B;AAC7B,cAAM,UADuB,wBACvB,CAAN;AAFkB;;AAIpB,UAAMi5C,GAAAA,GAAM,gBAJQ,SAIR,CAAZ;;AACAA,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,SAAAA,EALoB,KAKpBA;AACAA,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,OAAAA,YANoB,KAMpBA;AACAA,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,QAAAA,YAPoB,MAOpBA;AACAA,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,qBAAAA,EARoB,MAQpBA;AACAA,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,SAAAA,gBAA4B,KAA5BA,cAToB,MASpBA;AAEA,aAXoB,GAWpB;AAlBiB;;;WAqBnB5zB,uBAAAA,IAAAA,EAAoB;AAClB,UAAI,gBAAJ,UAA8B;AAC5B,cAAM,UADsB,0BACtB,CAAN;AAFgB;;AAIlB,aAAO,gBAJW,IAIX,CAAP;AAzBiB;;;WA+BnBrmB,oBAAAA,IAAAA,EAAiB;AACfsc,6BADe,sCACfA;AAhCiB;;;;;;;;;;;;;;;;;;;;;;;ACvHrB;;AAqBA;;AAWA;;AACA;;AApDA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,IAAM49B,wBAAAA,GAnEN,KAmEA;AACA,IAAMC,2BAAAA,GApEN,GAoEA;AAEA,IAAMC,oBAAAA,GACJ,oDAvEF,+BAsEA;;AAIA,IAAMC,wBAAAA,GACJ,wDA3EF,mCA0EA;;AAIA,IAAMC,8BAAAA,GACJ,8DA/EF,yCA8EA;;AAkBA,IAhGA,sBAgGA;;AAWA,6DAA6D;AAC3DC,EAAAA,sBAAAA,GAD2D,uBAC3DA;AA5GF;;AAuOA,0BAA0B;AACxB,MAAMtlB,IAAAA,GAAO,IADW,sBACX,EAAb;AAEA,MAHwB,MAGxB;;AACA,MAAI,2BAA2BkE,GAAAA,YAA/B,KAAmD;AACjD1W,IAAAA,MAAAA,GAAS;AAAExgB,MAAAA,GAAAA,EADsC;AACxC,KAATwgB;AADF,SAEO,IAAI+3B,yBAAJ,GAAIA,CAAJ,EAAwB;AAC7B/3B,IAAAA,MAAAA,GAAS;AAAEhjB,MAAAA,IAAAA,EADkB;AACpB,KAATgjB;AADK,SAEA,IAAI0W,GAAAA,YAAJ,uBAA0C;AAC/C1W,IAAAA,MAAAA,GAAS;AAAEg4B,MAAAA,KAAAA,EADoC;AACtC,KAATh4B;AADK,SAEA;AACL,QAAI,iBAAJ,UAA6B;AAC3B,YAAM,UACJ,uCAFyB,2DACrB,CAAN;AAFG;;AAOL,QAAI,CAAC0W,GAAAA,CAAD,OAAY,CAACA,GAAAA,CAAb,QAAyB,CAACA,GAAAA,CAA9B,OAAyC;AACvC,YAAM,UADiC,6DACjC,CAAN;AARG;;AAYL1W,IAAAA,MAAAA,GAZK,GAYLA;AAtBsB;;AAwBxB,MAAMi4B,MAAAA,GAASv3C,MAAAA,CAAAA,MAAAA,CAxBS,IAwBTA,CAAf;AACA,MAAIw3C,cAAAA,GAAJ;AAAA,MACEC,MAAAA,GA1BsB,IAyBxB;;AAGA,0BAA0B;AACxB,QAAMn1C,KAAAA,GAAQgd,MAAAA,CADU,GACVA,CAAd;;AAEA;AACE;AACE,YAAI,kBAAJ,aAAmC;AACjC,cAAI;AAEFi4B,YAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GAAc,eAAeG,MAAAA,CAAf,UAFZ,IAEFH;AAFE;AAAJ,YAIE,WAAW;AACX73C,iEADW,EACXA;AAN+B;AAAnC,eAQO,IAAI,6BAA6B4C,KAAAA,YAAjC,KAAuD;AAC5Di1C,UAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GAAcj1C,KAAAA,CAD8C,QAC9CA,EAAdi1C;AAD4D;AAThE;;AAaE,cAAM,UACJ,2BAfN,8DAcU,CAAN;;AAIF;AACEC,QAAAA,cAAAA,GADF,KACEA;AAnBJ;;AAqBE;AACEC,QAAAA,MAAAA,GADF,KACEA;AAtBJ;;AAwBE;AAEE,YACE,qBAGA,kBAHA,eAIAn1C,KAAAA,YALF,QAME;AACAi1C,UAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GAAc,eADd,KACc,CAAdA;AAPF,eAQO,IAAIj1C,KAAAA,YAAJ,YAAiC;AAAA;AAAjC,eAEA,IAAI,iBAAJ,UAA+B;AACpCi1C,UAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GAAcp7C,yBADsB,KACtBA,CAAdo7C;AADK,eAEA,IACL,+BACAj1C,KAAAA,KADA,QAEA,CAAC2D,KAAAA,CAAM3D,KAAAA,CAHF,MAGJ2D,CAHI,EAIL;AACAsxC,UAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GAAc,eADd,KACc,CAAdA;AALK,eAMA,IAAIF,yBAAJ,KAAIA,CAAJ,EAA0B;AAC/BE,UAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GAAc,eADiB,KACjB,CAAdA;AADK,eAEA;AACL,gBAAM,UACJ,kDAFG,gEACC,CAAN;AAvBJ;;AAxBF;AAAA;;AAsDAA,IAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GAzDwB,KAyDxBA;AArFsB;;AAwFxBA,EAAAA,MAAAA,CAAAA,cAAAA,GAAwBA,MAAAA,CAAAA,cAAAA,IAxFA,wBAwFxBA;AACAA,EAAAA,MAAAA,CAAAA,iBAAAA,GACEA,MAAAA,CAAAA,iBAAAA,IA1FsB,wBAyFxBA;AAEAA,EAAAA,MAAAA,CAAAA,uBAAAA,GACEA,MAAAA,CAAAA,uBAAAA,IA5FsB,8BA2FxBA;AAEAA,EAAAA,MAAAA,CAAAA,YAAAA,GAAsBA,MAAAA,CAAAA,YAAAA,KA7FE,IA6FxBA;AACAA,EAAAA,MAAAA,CAAAA,mBAAAA,GAA6BA,MAAAA,CAAAA,mBAAAA,KA9FL,IA8FxBA;AACAA,EAAAA,MAAAA,CAAAA,MAAAA,GAAgBA,MAAAA,CAAAA,MAAAA,KA/FQ,IA+FxBA;AACAA,EAAAA,MAAAA,CAAAA,SAAAA,GAAmBA,MAAAA,CAAAA,SAAAA,KAhGK,IAgGxBA;;AAEA,MACE,OAAOA,MAAAA,CAAP,2BACA93C,iCAAa83C,MAAAA,CAFf,UAEE93C,CAFF,EAGE;AAIA83C,IAAAA,MAAAA,CAAAA,UAAAA,GAJA,IAIAA;AAzGsB;;AA2GxB,MAAI,CAACr+B,MAAAA,CAAAA,SAAAA,CAAiBq+B,MAAAA,CAAtB,YAAKr+B,CAAL,EAA4C;AAC1Cq+B,IAAAA,MAAAA,CAAAA,YAAAA,GAAsB,CADoB,CAC1CA;AA5GsB;;AA8GxB,MAAI,OAAOA,MAAAA,CAAP,mBAAJ,WAAgD;AAC9CA,IAAAA,MAAAA,CAAAA,cAAAA,GACEA,MAAAA,CAAAA,iBAAAA,KAAAA,mCAAAA,IACAA,MAAAA,CAAAA,uBAAAA,KAH4C,yCAC9CA;AA/GsB;;AAmHxB,MAAI,OAAOA,MAAAA,CAAP,oBAAJ,WAAiD;AAC/CA,IAAAA,MAAAA,CAAAA,eAAAA,GAD+C,IAC/CA;AApHsB;;AAsHxB,MAAI,OAAOA,MAAAA,CAAP,oBAAJ,WAAiD;AAC/CA,IAAAA,MAAAA,CAAAA,eAAAA,GAD+C,iBAC/CA;AAvHsB;;AA0HxB,MAAI,OAAOA,MAAAA,CAAP,mBAAJ,WAAgD;AAC9CA,IAAAA,MAAAA,CAAAA,cAAAA,GACE,sBAGK,CAACA,MAAAA,CALsC,eAC9CA;AA3HsB;;AAiIxB,MAAI,OAAOA,MAAAA,CAAP,kBAAJ,aAAiD;AAC/CA,IAAAA,MAAAA,CAAAA,aAAAA,GAAuB57C,UAAAA,CADwB,QAC/C47C;AAlIsB;;AAqIxB,MAAI,OAAOA,MAAAA,CAAP,iBAAJ,WAA8C;AAC5CA,IAAAA,MAAAA,CAAAA,YAAAA,GAD4C,KAC5CA;AAtIsB;;AAwIxB,MAAI,OAAOA,MAAAA,CAAP,kBAAJ,WAA+C;AAC7CA,IAAAA,MAAAA,CAAAA,aAAAA,GAD6C,KAC7CA;AAzIsB;;AA2IxB,MAAI,OAAOA,MAAAA,CAAP,qBAAJ,WAAkD;AAChDA,IAAAA,MAAAA,CAAAA,gBAAAA,GADgD,KAChDA;AA5IsB;;AAgJxBI,+BAAkBJ,MAAAA,CAhJM,SAgJxBI;;AAEA,MAAI,CAAJ,QAAa;AACX,QAAMC,YAAAA,GAAe;AACnB3+B,MAAAA,SAAAA,EAAWs+B,MAAAA,CADQ;AAEnBngB,MAAAA,IAAAA,EAAMygB,oCAFa;AAAA,KAArB;AAMAJ,IAAAA,MAAAA,GAASG,YAAAA,CAAAA,IAAAA,GACLE,SAAAA,CAAAA,QAAAA,CADKF,YACLE,CADKF,GAEL,cATO,YASP,CAFJH;AAGA3lB,IAAAA,IAAAA,CAAAA,OAAAA,GAVW,MAUXA;AA5JsB;;AA8JxB,MAAMimB,KAAAA,GAAQjmB,IAAAA,CA9JU,KA8JxB;AACA2lB,EAAAA,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CACQ,YAAY;AAChB,QAAI3lB,IAAAA,CAAJ,WAAoB;AAClB,YAAM,UADY,iBACZ,CAAN;AAFc;;AAKhB,QAAMkmB,eAAAA,GAAkBC,cAAAA,CAAAA,MAAAA,EAAAA,MAAAA,EAAAA,cAAAA,EALR,KAKQA,CAAxB;;AAMA,QAAMC,oBAAAA,GAAuB,YAAY,mBAAmB;AAC1D,UAD0D,aAC1D;;AACA,0BAAoB;AAClBC,QAAAA,aAAAA,GAAgB,6CACd;AACEv+B,UAAAA,MAAAA,EAAQ29B,MAAAA,CADV;AAEEa,UAAAA,WAAAA,EAAab,MAAAA,CAFf;AAGEc,UAAAA,eAAAA,EAAiBd,MAAAA,CAHnB;AAIEe,UAAAA,0BAAAA,EAA4Bf,MAAAA,CAJ9B;AAKEgB,UAAAA,YAAAA,EAAchB,MAAAA,CALhB;AAMEiB,UAAAA,aAAAA,EAAejB,MAAAA,CANjB;AAAA,SADc,EADE,cACF,CAAhBY;AADF,aAYO,IAAI,CAACZ,MAAAA,CAAL,MAAkB;AACvBY,QAAAA,aAAAA,GAAgB,uBAAuB;AACrCr5C,UAAAA,GAAAA,EAAKy4C,MAAAA,CADgC;AAErC39B,UAAAA,MAAAA,EAAQ29B,MAAAA,CAF6B;AAGrCkB,UAAAA,WAAAA,EAAalB,MAAAA,CAHwB;AAIrCmB,UAAAA,eAAAA,EAAiBnB,MAAAA,CAJoB;AAKrCoB,UAAAA,cAAAA,EAAgBpB,MAAAA,CALqB;AAMrCgB,UAAAA,YAAAA,EAAchB,MAAAA,CANuB;AAOrCiB,UAAAA,aAAAA,EAAejB,MAAAA,CAPsB;AAAA,SAAvB,CAAhBY;AAfwD;;AAyB1D57C,MAAAA,OAAAA,CAzB0D,aAyB1DA,CAAAA;AApCc,KAWa,CAA7B;AA4BA,WAAO,YAAY,uCAAZ,OACL,gBAAqC;AAAA;AAAA,UAA3B,QAA2B;AAAA,UAArC,aAAqC;;AACnC,UAAIu1B,IAAAA,CAAJ,WAAoB;AAClB,cAAM,UADY,iBACZ,CAAN;AAFiC;;AAKnC,UAAM8mB,cAAAA,GAAiB,qDAGrBnB,MAAAA,CARiC,IAKZ,CAAvB;AAKAmB,MAAAA,cAAAA,CAAAA,oBAAAA,GAAsCnB,MAAAA,CAVH,oBAUnCmB;AACA,UAAMC,SAAAA,GAAY,yDAXiB,MAWjB,CAAlB;AAMA/mB,MAAAA,IAAAA,CAAAA,UAAAA,GAjBmC,SAiBnCA;AACA8mB,MAAAA,cAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAlBmC,IAkBnCA;AA1DY,KAuCT,CAAP;AAxCJnB,GAAAA,WA+DS3lB,IAAAA,CAAAA,WAAAA,CA9Ne,MA+JxB2lB;AAiEA,SAhOwB,IAgOxB;AAvcF;;SAqdA;;;;;iFAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACMA,MAAAA,CAAJ,SADF;AAAA;AAAA;AAAA;;AAAA,kBAEU,UADc,sBACd,CAFV;;AAAA;AAKE,uCAA2B;AACzBn4B,cAAAA,MAAAA,CAAAA,MAAAA,GAAgBw5B,qBAAAA,CADS,MACzBx5B;AACAA,cAAAA,MAAAA,CAAAA,WAAAA,GAAqBw5B,qBAAAA,CAFI,WAEzBx5B;AACAA,cAAAA,MAAAA,CAAAA,eAAAA,GAAyBw5B,qBAAAA,CAHA,eAGzBx5B;AACAA,cAAAA,MAAAA,CAAAA,0BAAAA,GACEw5B,qBAAAA,CALuB,0BAIzBx5B;AATwE;;AAA5E;AAAA,mBAYyB,uDAErB;AACEy4B,cAAAA,KADF,EACEA,KADF;AAEEiB,cAAAA,UAAAA,EAFF;AAOE15B,cAAAA,MAAAA,EAAQ;AACNhjB,gBAAAA,IAAAA,EAAMgjB,MAAAA,CADA;AAENxgB,gBAAAA,GAAAA,EAAKwgB,MAAAA,CAFC;AAGN25B,gBAAAA,QAAAA,EAAU35B,MAAAA,CAHJ;AAIN45B,gBAAAA,gBAAAA,EAAkB55B,MAAAA,CAJZ;AAKNq5B,gBAAAA,cAAAA,EAAgBr5B,MAAAA,CALV;AAMN1F,gBAAAA,MAAAA,EAAQ0F,MAAAA,CANF;AAAA,eAPV;AAeE65B,cAAAA,YAAAA,EAAc75B,MAAAA,CAfhB;AAgBE85B,cAAAA,eAAAA,EAAiB95B,MAAAA,CAhBnB;AAiBE+5B,cAAAA,oBAAAA,EAAsB5B,MAAAA,CAjBxB;AAkBE6B,cAAAA,UAAAA,EAAYh6B,MAAAA,CAlBd;AAmBEi6B,cAAAA,YAAAA,EAAcj6B,MAAAA,CAnBhB;AAoBExE,cAAAA,eAAAA,EAAiBwE,MAAAA,CApBnB;AAqBEk6B,cAAAA,mBAAAA,EAAqBl6B,MAAAA,CArBvB;AAsBEm6B,cAAAA,SAAAA,EAAWn6B,MAAAA,CAtBb;AAuBEo6B,cAAAA,cAAAA,EAAgBp6B,MAAAA,CAvBlB;AAwBEq6B,cAAAA,OAAAA,EAASr6B,MAAAA,CAAAA,cAAAA,GAAwBA,MAAAA,CAAxBA,OAAAA,GAxBX;AAyBEs6B,cAAAA,mBAAAA,EAAqBt6B,MAAAA,CAAAA,cAAAA,GACjBA,MAAAA,CADiBA,mBAAAA,GAzBvB;AAAA,aAFqB,CAZzB;;AAAA;AAYQy5B,YAAAA,QAZR;;AAAA,iBA6CMtB,MAAAA,CAAJ,SA7CF;AAAA;AAAA;AAAA;;AAAA,kBA8CU,UADc,sBACd,CA9CV;;AAAA;AAAA,8CAA4E,QAA5E;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;IA8DA;AAKEh8C,oCAAc;AAAA;;AACZ,uBADY,oCACZ;AACA,sBAFY,IAEZ;AACA,mBAHY,IAGZ;AAMA,4BAAiBq+C,sBAAAA,CAAAA,UAAAA,CATL,GASKA,EAAjB;AAMA,qBAfY,KAeZ;AAQA,sBAvBY,IAuBZ;AAQA,sBA/BY,IA+BZ;AAOA,gCAtCY,IAsCZ;AA3CyB;;;;SAkD3B,eAAc;AACZ,aAAO,iBADK,OACZ;AAnDyB;;;;kFA2D3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACE,iCADc,IACd;AADF;AAAA,2CAEQ,eAFR,qDAEQ,iBAFQ,OAER,EAFR;;AAAA;AAIE,kCAJc,IAId;;AACA,oBAAI,KAAJ,SAAkB;AAChB,+BADgB,OAChB;;AACA,iCAFgB,IAEhB;AAPY;;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;SA1DA,eAAwB;AACtB,aAAOn/B,kBAAAA,IAAAA,EAAAA,YAAAA,EAA2B;AAAEk/B,QAAAA,GAAAA,EADd;AACY,OAA3Bl/B,CAAP;AAFyB;;;;;;IA0E7B;AAOElf,iCAAAA,MAAAA,EAAAA,WAAAA,EAKE;AAAA,QAFA48C,eAEA,uEALF58C,KAKE;AAAA,QADA68C,0BACA,uEALF78C,IAKE;;AAAA;;AACA,kBADA,MACA;AACA,uBAFA,WAEA;AACA,2BAHA,eAGA;AACA,sCAJA,0BAIA;AAEA,2BANA,EAMA;AACA,8BAPA,EAOA;AACA,qCARA,EAQA;AACA,qCATA,EASA;AACA,4BAVA,oCAUA;AAtBwB;;;;WAyB1Bs+C,0BAAAA,QAAAA,EAA2B;AACzB,gCADyB,QACzB;AA1BwB;;;WA6B1BC,6BAAAA,QAAAA,EAA8B;AAC5B,mCAD4B,QAC5B;AA9BwB;;;WAiC1BC,oCAAAA,QAAAA,EAAqC;AACnC,0CADmC,QACnC;AAlCwB;;;WAqC1BC,oCAAAA,QAAAA,EAAqC;AACnC,0CADmC,QACnC;AAtCwB;;;WAyC1BC,qBAAAA,KAAAA,EAAAA,KAAAA,EAA0B;AAAA,iDACD,KAAvB,eADwB;AAAA;;AAAA;AACxB,4DAA6C;AAAA,cAA7C,QAA6C;AAC3CpjB,UAAAA,QAAAA,CAAAA,KAAAA,EAD2C,KAC3CA,CAAAA;AAFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAzCA;;;WA+C1BqjB,wBAAAA,MAAAA,EAAAA,KAAAA,EAA8B;AAAA;;AAC5B,yCAAmC,YAAM;AAAA,oDAChB,MAAvB,kBADuC;AAAA;;AAAA;AACvC,iEAAgD;AAAA,gBAAhD,QAAgD;AAC9CrjB,YAAAA,QAAAA,CAAAA,MAAAA,EAD8C,KAC9CA,CAAAA;AAFqC;AAAA;AAAA;AAAA;AAAA;AAAA;AADb,OAC5B;AAhDwB;;;WAuD1BsjB,+BAAAA,KAAAA,EAA6B;AAAA;;AAC3B,yCAAmC,YAAM;AAAA,oDAChB,OAAvB,yBADuC;AAAA;;AAAA;AACvC,iEAAuD;AAAA,gBAAvD,QAAuD;AACrDtjB,YAAAA,QAAAA,CADqD,KACrDA,CAAAA;AAFqC;AAAA;AAAA;AAAA;AAAA;AAAA;AADd,OAC3B;AAxDwB;;;WA+D1BujB,iCAAwB;AAAA;;AACtB,yCAAmC,YAAM;AAAA,oDAChB,OAAvB,yBADuC;AAAA;;AAAA;AACvC,iEAAuD;AAAA,gBAAvD,QAAuD;AACrDvjB,YAAAA,QADqD;AADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADnB,OACtB;AAhEwB;;;WAuE1BwjB,0BAAiB;AACf,4BADe,OACf;AAxEwB;;;WA2E1BC,0BAAAA,KAAAA,EAAAA,GAAAA,EAA6B;AAC3BrhC,6BAD2B,wDAC3BA;AA5EwB;;;WA+E1B2sB,iBAAQ,CA/EkB;;;;;;;;IAqF5B;AACErqC,4BAAAA,OAAAA,EAAAA,SAAAA,EAAgC;AAAA;;AAC9B,oBAD8B,OAC9B;AACA,sBAF8B,SAE9B;AAGEuE,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,aAAAA,EAA2C;AACzCyd,MAAAA,GADyC,iBACnC;AACJg9B,uCACE,qCAFE,qDACJA;AAIA,eAAO,kBALH,CAKG,CAAP;AANuC;AAAA,KAA3Cz6C;AANiB;;;;SAqBrB,eAAwB;AACtB,aAAO,gBADe,iBACtB;AAtBmB;;;SA4BrB,eAAe;AACb,aAAO,cADM,QACb;AA7BmB;;;SAsCrB,eAAmB;AACjB,aAAO,cADU,YACjB;AAvCmB;;;SA6CrB,eAAgB;AACd,aAAO,CAAC,CAAC,gBADK,WACd;AA9CmB;;;SAuDrB,eAAiB;AACf,aAAO,gBADQ,WACf;AAxDmB;;;WAgErB06C,iBAAAA,UAAAA,EAAoB;AAClB,aAAO,wBADW,UACX,CAAP;AAjEmB;;;WAyErBC,sBAAAA,GAAAA,EAAkB;AAChB,aAAO,6BADS,GACT,CAAP;AA1EmB;;;WAmFrBC,2BAAkB;AAChB,aAAO,gBADS,eACT,EAAP;AApFmB;;;WA6FrBC,wBAAAA,EAAAA,EAAmB;AACjB,aAAO,+BADU,EACV,CAAP;AA9FmB;;;WAsGrBC,yBAAgB;AACd,aAAO,gBADO,aACP,EAAP;AAvGmB;;;WA8GrBC,yBAAgB;AACd,aAAO,gBADO,aACP,EAAP;AA/GmB;;;WAsHrBC,uBAAc;AACZ,aAAO,gBADK,WACL,EAAP;AAvHmB;;;WA+HrBC,gCAAuB;AACrB,aAAO,gBADc,oBACd,EAAP;AAhImB;;;WAwIrBC,yBAAgB;AACd,aAAO,gBADO,aACP,EAAP;AAzImB;;;WAgJrBC,0BAAiB;AACf,aAAO,gBADQ,cACR,EAAP;AAjJmB;;;WAyJrBC,yBAAgB;AACd,aAAO,gBADO,aACP,EAAP;AA1JmB;;;WAoKrBC,wBAAe;AACb,aAAO,gBADM,eACN,EAAP;AArKmB;;;WA2LrBC,sBAAa;AACX,aAAO,gBADI,UACJ,EAAP;AA5LmB;;;WAoMrBC,oCAA2B;AACzB,aAAO,gBADkB,wBAClB,EAAP;AArMmB;;;WA6MrBC,0BAAiB;AACf,aAAO,gBADQ,cACR,EAAP;AA9MmB;;;WAwNrBC,uBAAc;AACZ,aAAO,gBADK,WACL,EAAP;AAzNmB;;;WAyOrBC,uBAAc;AACZ,aAAO,gBADK,WACL,EAAP;AA1OmB;;;WAiPrBC,mBAAU;AACR,aAAO,gBADC,OACD,EAAP;AAlPmB;;;WA0PrBC,2BAAkB;AAChB,aAAO,uCADS,OAChB;AA3PmB;;;WA6QrBC,oBAAW;AACT,aAAO,gBADE,QACF,EAAP;AA9QmB;;;WA6RrBC,mBAAiC;AAAA,UAAzBC,eAAyB,uEAAjCD,KAAiC;AAC/B,aAAO,6BAA6BC,eAAAA,IAAmB,KADxB,SACxB,CAAP;AA9RmB;;;WAoSrBnF,mBAAU;AACR,aAAO,iBADC,OACD,EAAP;AArSmB;;;SA4SrB,eAAoB;AAClB,aAAO,gBADW,aAClB;AA7SmB;;;SAmTrB,eAAkB;AAChB,aAAO,gBADS,WAChB;AApTmB;;;WA2TrBoF,wBAAe;AACb,UAEE,0CAFF,GAGE;AACAvB,uCACE,6DAFF,wCACAA;AALW;;AAUb,aAAO,gBAVM,YAUN,EAAP;AArUmB;;;WA6UrBwB,2BAAkB;AAChB,aAAO,gBADS,eACT,EAAP;AA9UmB;;;WAqVrBC,wBAAe;AACb,aAAO,gBADM,YACN,EAAP;AAtVmB;;;WA8VrBC,kCAAyB;AACvB,aAAO,gBADgB,sBAChB,EAAP;AA/VmB;;;;;;;;IA8gBvB;AACE1gD,wBAAAA,SAAAA,EAAAA,QAAAA,EAAAA,SAAAA,EAAAA,aAAAA,EAA2E;AAAA,QAAhB2gD,MAAgB,uEAA3E3gD,KAA2E;;AAAA;;AACzE,sBADyE,SACzE;AACA,qBAFyE,QAEzE;AACA,0BAHyE,aAGzE;AACA,sBAJyE,SAIzE;AACA,kBAAc2gD,MAAAA,GAAS,IAATA,wBAAS,EAATA,GAL2D,IAKzE;AACA,mBANyE,MAMzE;AACA,sBAAkBvD,SAAAA,CAPuD,UAOzE;AACA,gBAAY,IAR6D,UAQ7D,EAAZ;AAEA,8BAVyE,KAUzE;AACA,0BAXyE,KAWzE;AACA,yBAAqB,IAZoD,GAYpD,EAArB;AACA,+BAA2B,IAb8C,GAa9C,EAA3B;AACA,qBAdyE,KAczE;AAfe;;;;SAqBjB,eAAiB;AACf,aAAO,kBADQ,CACf;AAtBe;;;SA4BjB,eAAa;AACX,aAAO,eADI,MACX;AA7Be;;;SAmCjB,eAAU;AACR,aAAO,eADC,GACR;AApCe;;;SA0CjB,eAAe;AACb,aAAO,eADM,QACb;AA3Ce;;;SAkDjB,eAAW;AACT,aAAO,eADE,IACT;AAnDe;;;WA2DjBwD,uBAMQ;AAAA,sFANRA,EAMQ;AAAA,UANI,KAMJ,SANI,KAMJ;AAAA,iCAJNj/C,QAIM;AAAA,UAJNA,QAIM,+BAJK,KAFD,MAMJ;AAAA,gCAHNN,OAGM;AAAA,UAHNA,OAGM,8BANI,CAMJ;AAAA,gCAFNC,OAEM;AAAA,UAFNA,OAEM,8BANI,CAMJ;AAAA,iCADNC,QACM;AAAA,UADNA,QACM,+BANI,KAMJ;;AACN,aAAO,gCAAiB;AACtBE,QAAAA,OAAAA,EAAS,KADa;AAEtBa,QAAAA,KAFsB,EAEtBA,KAFsB;AAGtBX,QAAAA,QAHsB,EAGtBA,QAHsB;AAItBN,QAAAA,OAJsB,EAItBA,OAJsB;AAKtBC,QAAAA,OALsB,EAKtBA,OALsB;AAMtBC,QAAAA,QANsB,EAMtBA;AANsB,OAAjB,CAAP;AAlEe;;;WAiFjBs/C,0BAA4C;AAAA,sFAA5CA,EAA4C;AAAA,+BAA3BC,MAA2B;AAAA,UAA3BA,MAA2B,6BAA7B,SAA6B;;AAC1C,UAAMC,UAAAA,GAAa,mCADuB,MACvB,CAAnB;;AAEA,UAAI/oB,OAAAA,GAAU,6BAA6B+oB,UAAAA,CAHD,QAG5B,CAAd;;AACA,UAAI,CAAJ,SAAc;AACZ/oB,QAAAA,OAAAA,GAAU,+BACR,KADQ,YAER+oB,UAAAA,CAHU,eACF,CAAV/oB;;AAIA,qCAA6B+oB,UAAAA,CAA7B,UALY,OAKZ;AATwC;;AAW1C,aAX0C,OAW1C;AA5Fe;;;WAmGjBnB,wBAAe;AACb,aAAQ,sBAAR,KAAQ,sBAAR,GAAmC,iCACjC,KAFW,UACsB,CAAnC;AApGe;;;;iFA+GjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kDACS,8IAAsC,KAAtC,gBADM,IAAf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAWAoB,uBAUG;AAAA;AAAA;AAAA;AAAA;;AAAA,UAVI,aAUJ,SAVI,aAUJ;AAAA,UAVI,QAUJ,SAVI,QAUJ;AAAA,+BAPDF,MAOC;AAAA,UAPDA,MAOC,6BAVI,SAUJ;AAAA,uCANDG,cAMC;AAAA,UANDA,cAMC,qCANgBz0C,qBAJZ,MAUJ;AAAA,kCALDsK,SAKC;AAAA,UALDA,SAKC,gCAVI,IAUJ;AAAA,mCAJDoqC,UAIC;AAAA,UAJDA,UAIC,iCAVI,IAUJ;AAAA,sCAHDC,aAGC;AAAA,UAHDA,aAGC,oCAVI,IAUJ;AAAA,mCAFDC,UAEC;AAAA,UAFDA,UAEC,iCAVI,IAUJ;AAAA,wCADDC,4BACC;AAAA,UADDA,4BACC,sCAVHL,IAUG;;AAEC,UAAI/6B,gBAAAA,SAAAA,CAAAA,CAAAA,CAAAA,4DAAAA,sBAAAA,MAAJ,WAAwD;AACtD+4B,uCACE,mEAFoD,iDACtDA;;AAIA,YACE/4B,SAAAA,CAAAA,CAAAA,CAAAA,CAAAA,sBAAAA,KAAAA,IAAAA,IACAg7B,cAAAA,KAAmBz0C,qBAFrB,QAGE;AACAy0C,UAAAA,cAAAA,GAAiBz0C,qBADjB,YACAy0C;AAToD;AAFzD;;AAcC,UAAIh7B,iBAAAA,SAAAA,CAAAA,CAAAA,CAAAA,8DAAAA,wBAAAA,MAAJ,WAA0D;AACxD+4B,uCACE,qEAFsD,iDACxDA;;AAIA,YACE/4B,SAAAA,CAAAA,CAAAA,CAAAA,CAAAA,wBAAAA,KAAAA,IAAAA,IACAg7B,cAAAA,KAAmBz0C,qBAFrB,QAGE;AACAy0C,UAAAA,cAAAA,GAAiBz0C,qBADjB,cACAy0C;AATsD;AAd3D;;AA4BD,UAAI,KAAJ,QAAiB;AACf,yBADe,SACf;AA7BD;;AAgCD,UAAMF,UAAAA,GAAa,2CAhClB,cAgCkB,CAAnB;;AAMA,4BAtCC,KAsCD;;AAEA,UAAI,CAAJ,8BAAmC;AACjCM,QAAAA,4BAAAA,GAA+B,gBADE,wBACF,EAA/BA;AAzCD;;AA4CD,UAAIC,WAAAA,GAAc,uBAAuBP,UAAAA,CA5CxC,QA4CiB,CAAlB;;AACA,UAAI,CAAJ,aAAkB;AAChBO,QAAAA,WAAAA,GAAc/8C,MAAAA,CAAAA,MAAAA,CADE,IACFA,CAAd+8C;;AACA,+BAAuBP,UAAAA,CAAvB,UAFgB,WAEhB;AA/CD;;AAmDD,UAAIO,WAAAA,CAAJ,2BAA2C;AACzCC,QAAAA,YAAAA,CAAaD,WAAAA,CAD4B,yBACzCC,CAAAA;AACAD,QAAAA,WAAAA,CAAAA,yBAAAA,GAFyC,IAEzCA;AArDD;;AAwDD,UAAME,qBAAAA,GACJL,aAAAA,IACA,yBAAyB;AAAElhD,QAAAA,aAAAA,EAAe,KA1D3C;AA0D0B,OAAzB,CAFF;AAGA,UAAMwhD,WAAAA,GAAc,CAAC,EACnB,6BAA6Bz1C,0BA5D9B,KA2DoB,CAArB;;AAMA,UAAI,CAACs1C,WAAAA,CAAL,wBAAyC;AACvCA,QAAAA,WAAAA,CAAAA,sBAAAA,GADuC,oCACvCA;AACAA,QAAAA,WAAAA,CAAAA,YAAAA,GAA2B;AACzBI,UAAAA,OAAAA,EADyB;AAEzBC,UAAAA,SAAAA,EAFyB;AAGzBC,UAAAA,SAAAA,EAHyB;AAAA,SAA3BN;;AAMA,YAAI,KAAJ,QAAiB;AACf,2BADe,cACf;AATqC;;AAWvC,+BAXuC,UAWvC;AA5ED;;AA+ED,UAAMl2C,QAAAA,GAAWuxB,SAAXvxB,QAAWuxB,CAAAA,KAAAA,EAAS;AACxB2kB,QAAAA,WAAAA,CAAAA,WAAAA,WADwB,kBACxBA;;AAIA,YAAI,6BAAJ,aAA4C;AAC1C,kCAD0C,IAC1C;AANsB;;AAQxB,eARwB,WAQxB;;AAEA,mBAAW;AACTO,UAAAA,kBAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CADS,KACTA;;AAEA,oCAAwB;AACtBP,YAAAA,WADsB,EACtBA,WADsB;AAEtBroB,YAAAA,MAAAA,EAAQ0D,KAAAA,YAAAA,KAAAA,GAAAA,KAAAA,GAAiC,UAFnB,KAEmB;AAFnB,WAAxB;AAHF,eAOO;AACLklB,UAAAA,kBAAAA,CAAAA,UAAAA,CADK,OACLA;AAlBsB;;AAoBxB,YAAI,OAAJ,QAAiB;AACf,gCADe,WACf;;AACA,gCAFe,SAEf;AAtBsB;AA/EzB,OA+ED;;AA0BA,UAAMA,kBAAAA,GAAqB,uBAAuB;AAChDniB,QAAAA,QAAAA,EADgD;AAGhDoc,QAAAA,MAAAA,EAAQ;AACNgG,UAAAA,aADM,EACNA,aADM;AAENC,UAAAA,QAFM,EAENA,QAFM;AAGNjrC,UAAAA,SAHM,EAGNA,SAHM;AAINoqC,UAAAA,UAJM,EAINA,UAJM;AAKNE,UAAAA,UALM,EAKNA;AALM,SAHwC;AAUhDY,QAAAA,IAAAA,EAAM,KAV0C;AAWhDC,QAAAA,UAAAA,EAAY,KAXoC;AAYhDC,QAAAA,YAAAA,EAAcZ,WAAAA,CAZkC;AAahDa,QAAAA,SAAAA,EAAW,KAbqC;AAchDhB,QAAAA,aAAAA,EAdgD;AAehDiB,QAAAA,wBAAAA,EAA0B,CAfsB;AAgBhDzB,QAAAA,MAAAA,EAAQ,KAhBwC;AAAA,OAAvB,CAA3B;AAmBC,+EAA4B,IAA7B,GAA6B,EAA5B,GAAD,GAAC,CA5HA,kBA4HA;AACD,UAAM0B,UAAAA,GAAaR,kBAAAA,CA7HlB,IA6HD;AAEA9nB,MAAAA,OAAAA,CAAAA,GAAAA,CAAY,CACVunB,WAAAA,CAAAA,sBAAAA,CADU,sCAAZvnB,EAAAA,IAAAA,CAIQ,iBAA2C;AAAA;AAAA,YAA1C,YAA0C;AAAA,YAA3C,qBAA2C;;AAC/C,YAAI,OAAJ,gBAAyB;AACvB3uB,UAAAA,QADuB;AAAA;AADsB;;AAK/C,YAAI,OAAJ,QAAiB;AACf,6BADe,WACf;AAN6C;;AAQ/Cy2C,QAAAA,kBAAAA,CAAAA,kBAAAA,CAAsC;AACpCS,UAAAA,YADoC,EACpCA,YADoC;AAEpCC,UAAAA,qBAFoC,EAEpCA;AAFoC,SAAtCV;AAIAA,QAAAA,kBAAAA,CAZ+C,mBAY/CA;AAhBJ9nB,OAAAA,WA/HC,QA+HDA;AAoBA,aAnJC,UAmJD;AAvRe;;;WAgSjByoB,2BAGQ;AAAA,sFAHRA,EAGQ;AAAA,+BAFN1B,MAEM;AAAA,UAFNA,MAEM,6BAHQ,SAGR;AAAA,uCADNG,cACM;AAAA,UADNA,cACM,qCADWz0C,qBAFH,MAGR;;AACN,qCAA+B;AAC7B,YAAI80C,WAAAA,CAAAA,YAAAA,CAAJ,WAAwC;AACtCA,UAAAA,WAAAA,CAAAA,oBAAAA,CAAAA,OAAAA,CAAyCA,WAAAA,CADH,YACtCA;AAEAA,UAAAA,WAAAA,CAAAA,WAAAA,WAHsC,UAGtCA;AAJ2B;AADzB;;AASN,UAAMP,UAAAA,GAAa,2DATb,IASa,CAAnB;;AAKA,UAAIO,WAAAA,GAAc,uBAAuBP,UAAAA,CAdnC,QAcY,CAAlB;;AACA,UAAI,CAAJ,aAAkB;AAChBO,QAAAA,WAAAA,GAAc/8C,MAAAA,CAAAA,MAAAA,CADE,IACFA,CAAd+8C;;AACA,+BAAuBP,UAAAA,CAAvB,UAFgB,WAEhB;AAjBI;;AAmBN,UAnBM,UAmBN;;AAEA,UAAI,CAACO,WAAAA,CAAL,sBAAuC;AAAA;;AACrCmB,QAAAA,UAAAA,GAAal+C,MAAAA,CAAAA,MAAAA,CADwB,IACxBA,CAAbk+C;AACAA,QAAAA,UAAAA,CAAAA,mBAAAA,GAFqC,mBAErCA;AACAnB,QAAAA,WAAAA,CAAAA,oBAAAA,GAHqC,oCAGrCA;AACC,mFAA4B,IAA7B,GAA6B,EAA5B,GAAD,GAAC,CAJoC,UAIpC;AACDA,QAAAA,WAAAA,CAAAA,YAAAA,GAA2B;AACzBI,UAAAA,OAAAA,EADyB;AAEzBC,UAAAA,SAAAA,EAFyB;AAGzBC,UAAAA,SAAAA,EAHyB;AAAA,SAA3BN;;AAMA,YAAI,KAAJ,QAAiB;AACf,2BADe,cACf;AAZmC;;AAcrC,+BAdqC,UAcrC;AAnCI;;AAqCN,aAAOA,WAAAA,CAAAA,oBAAAA,CArCD,OAqCN;AAxUe;;;WA+UjBoB,6BAIQ;AAAA,sFAJRA,EAIQ;AAAA,wCAHNC,mBAGM;AAAA,UAHNA,mBAGM,sCAJU,KAIV;AAAA,wCAFNC,uBAEM;AAAA,UAFNA,uBAEM,sCAJU,KAIV;AAAA,wCADNC,oBACM;AAAA,UADNA,oBACM,sCAJU,KAIV;;AACN,UAAMC,uBAAAA,GADA,GACN;AAEA,aAAO,gEAEL;AACEX,QAAAA,SAAAA,EAAW,KADb;AAEEQ,QAAAA,mBAAAA,EAAqBA,mBAAAA,KAFvB;AAGEI,QAAAA,gBAAAA,EAAkBH,uBAAAA,KAHpB;AAIEC,QAAAA,oBAAAA,EAAsBA,oBAAAA,KAJxB;AAAA,OAFK,EAQL;AACE/Y,QAAAA,aAAAA,EADF;AAEElM,QAAAA,IAFF,gBAEEA,WAFF,EAEoB;AAChB,iBAAOolB,WAAAA,CAAAA,KAAAA,CADS,MAChB;AAHJ;AAAA,OARK,CAAP;AAtVe;;;WA4WjBC,0BAA4B;AAAA,UAAbnH,MAAa,uEAA5BmH,EAA4B;;AAC1B,UAAI,gBAAJ,aAAiC;AAG/B,eAAO,mBAAmBC,UAAAA,GAAAA,EAAO;AAC/B,iBAAOC,kBAAAA,WAAAA,CADwB,GACxBA,CAAP;AAJ6B,SAGxB,CAAP;AAJwB;;AAQ1B,UAAMC,cAAAA,GAAiB,uBARG,MAQH,CAAvB;AAEA,aAAO,YAAY,2BAA2B;AAC5C,wBAAgB;AACdvjB,UAAAA,MAAAA,CAAAA,IAAAA,GAAAA,IAAAA,CAAmB,kBAA2B;AAAA;;AAAA,gBAAjB,KAAiB,UAAjB,KAAiB;AAAA,gBAA3B,IAA2B,UAA3B,IAA2B;;AAC5C,sBAAU;AACR/+B,cAAAA,OAAAA,CADQ,WACRA,CAAAA;AADQ;AADkC;;AAK5CyD,YAAAA,MAAAA,CAAAA,MAAAA,CAAcy+C,WAAAA,CAAdz+C,MAAAA,EAAkCsC,KAAAA,CALU,MAK5CtC;;AACAy+C,kCAAAA,WAAAA,CAAAA,KAAAA,EAAAA,IAAAA,8CAA0Bn8C,KAAAA,CANkB,KAM5Cm8C;;AACAK,YAAAA,IAP4C;AAA9CxjB,WAAAA,EADc,MACdA;AAF0C;;AAa5C,YAAMA,MAAAA,GAASujB,cAAAA,CAb6B,SAa7BA,EAAf;AACA,YAAMJ,WAAAA,GAAc;AAClBM,UAAAA,KAAAA,EADkB;AAElBC,UAAAA,MAAAA,EAAQh/C,MAAAA,CAAAA,MAAAA,CAFU,IAEVA;AAFU,SAApB;AAIA8+C,QAAAA,IAlB4C;AAVpB,OAUnB,CAAP;AAtXe;;;WAiZjBG,yBAAgB;AACd,aAAQ,uBAAR,KAAQ,uBAAR,GAAoC,8BAClC,KAFY,UACsB,CAApC;AAlZe;;;WA2ZjBC,oBAAW;AACT,uBADS,IACT;AACA,gCAA0B,KAA1B,cAFS,IAET;AAEA,UAAMC,MAAAA,GAJG,EAIT;;AAJS,kDAKiB,mBAA1B,MAA0B,EALjB;AAAA;;AAAA;AAKT,+DAAuD;AAAA,cAAvD,WAAuD;;AACrD,kCAAwB;AACtBpC,YAAAA,WADsB,EACtBA,WADsB;AAEtBroB,YAAAA,MAAAA,EAAQ,UAFc,qBAEd,CAFc;AAGtB0qB,YAAAA,KAAAA,EAHsB;AAAA,WAAxB;;AAMA,cAAIrC,WAAAA,CAAJ,sBAAsC;AAAA;AAPe;;AAAA,sDAWpBA,WAAAA,CAAjC,WAXqD;AAAA;;AAAA;AAWrD,mEAA0D;AAAA,kBAA1D,kBAA0D;AACxDoC,cAAAA,MAAAA,CAAAA,IAAAA,CAAY7B,kBAAAA,CAD4C,SACxD6B;AACA7B,cAAAA,kBAAAA,CAFwD,MAExDA;AAbmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAL9C;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBT,gBArBS,KAqBT;;AACA,+BAtBS,KAsBT;;AACA,+BAvBS,IAuBT;AACA,gCAxBS,IAwBT;AACA,4BAzBS,KAyBT;AACA,aAAO9nB,OAAAA,CAAAA,GAAAA,CA1BE,MA0BFA,CAAP;AArbe;;;WA+bjBsmB,mBAA4B;AAAA,UAApBuD,UAAoB,uEAA5BvD,KAA4B;AAC1B,4BAD0B,IAC1B;AACA,aAAO,iBAFmB,UAEnB,CAAP;AAjce;;;WAwcjBwD,uBAAgC;AAAA,UAApBD,UAAoB,uEAAhCC,KAAgC;;AAC9B,UAAI,CAAC,KAAL,gBAA0B;AACxB,eADwB,KACxB;AAF4B;;AAAA,kDAIc,mBAA5C,MAA4C,EAJd;AAAA;;AAAA;AAI9B,+DAAyE;AAAA;AAAA,cAA9D,WAA8D,gBAA9D,WAA8D;AAAA,cAAzE,YAAyE,gBAAzE,YAAyE;;AACvE,cAAIC,WAAAA,CAAAA,IAAAA,GAAAA,CAAAA,IAAwB,CAAC5B,YAAAA,CAA7B,WAAqD;AACnD,mBADmD,KACnD;AAFqE;AAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;;AAU9B,yBAV8B,KAU9B;;AACA,gBAX8B,KAW9B;;AACA,+BAZ8B,KAY9B;;AACA,+BAb8B,IAa9B;AACA,gCAd8B,IAc9B;;AACA,UAAI0B,UAAAA,IAAc,KAAlB,QAA+B;AAC7B,sBAAc,IADe,wBACf,EAAd;AAhB4B;;AAkB9B,4BAlB8B,KAkB9B;AACA,aAnB8B,IAmB9B;AA3de;;;WAiejBG,0BAAAA,YAAAA,EAAAA,QAAAA,EAAyC;AACvC,UAAMzC,WAAAA,GAAc,uBADmB,QACnB,CAApB;;AACA,UAAI,CAAJ,aAAkB;AAAA;AAFqB;;AAKvC,UAAI,KAAJ,QAAiB;AACf,4BADe,cACf;AANqC;;AAUvC,UAAIA,WAAAA,CAAJ,wBAAwC;AACtCA,QAAAA,WAAAA,CAAAA,sBAAAA,CAAAA,OAAAA,CADsC,YACtCA;AAXqC;AAjexB;;;WAmfjB0C,0BAAAA,iBAAAA,EAAAA,WAAAA,EAAiD;AAE/C,WAAK,IAAIrgD,CAAAA,GAAJ,GAAWD,EAAAA,GAAKugD,iBAAAA,CAArB,QAA+CtgD,CAAAA,GAA/C,IAAuDA,CAAvD,IAA4D;AAC1D29C,QAAAA,WAAAA,CAAAA,YAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAsC2C,iBAAAA,CAAAA,OAAAA,CADoB,CACpBA,CAAtC3C;AACAA,QAAAA,WAAAA,CAAAA,YAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAwC2C,iBAAAA,CAAAA,SAAAA,CAFkB,CAElBA,CAAxC3C;AAJ6C;;AAM/CA,MAAAA,WAAAA,CAAAA,YAAAA,CAAAA,SAAAA,GAAqC2C,iBAAAA,CANU,SAM/C3C;;AAN+C,kDASdA,WAAAA,CAAjC,WAT+C;AAAA;;AAAA;AAS/C,+DAA0D;AAAA,cAA1D,kBAA0D;AACxDO,UAAAA,kBAAAA,CADwD,mBACxDA;AAV6C;AAAA;AAAA;AAAA;AAAA;AAAA;;AAa/C,UAAIoC,iBAAAA,CAAJ,WAAiC;AAC/B,aAD+B,WAC/B;AAd6C;AAnfhC;;;WAwgBjBC,mCAAiD;AAAA;;AAAA,UAA/B,eAA+B,UAA/B,eAA+B;AAAA,UAAjDA,QAAiD,UAAjDA,QAAiD;;AAW/C,UAAMd,cAAAA,GAAiB,iEAErB;AACEjB,QAAAA,SAAAA,EAAW,KADb;AAEErB,QAAAA,MAAAA,EAFF;AAGEqD,QAAAA,QAHF,EAGEA,QAHF;AAIEC,QAAAA,iBAAAA,EACEC,eAAAA,GAAkBr4C,0BAAlBq4C,mBAAAA,GACI,kCADJA,YAAAA,GALJ;AAAA,OAFqB,CAAvB;;AAYA,UAAMxkB,MAAAA,GAASujB,cAAAA,CAvBgC,SAuBhCA,EAAf;;AAEA,UAAM9B,WAAAA,GAAc,uBAzB2B,QAyB3B,CAApB;;AACAA,MAAAA,WAAAA,CAAAA,YAAAA,GA1B+C,MA0B/CA;;AAEA,UAAM+B,IAAAA,GAAO,SAAPA,IAAO,GAAM;AACjBxjB,QAAAA,MAAAA,CAAAA,IAAAA,GAAAA,IAAAA,CACE,kBAAqB;AAAA,cAApB,KAAoB,UAApB,KAAoB;AAAA,cAArB,IAAqB,UAArB,IAAqB;;AACnB,oBAAU;AACRyhB,YAAAA,WAAAA,CAAAA,YAAAA,GADQ,IACRA;AADQ;AADS;;AAKnB,cAAI,kBAAJ,WAA+B;AAAA;AALZ;;AAQnB,yCARmB,WAQnB;;AACA+B,UAAAA,IATmB;AADvBxjB,SAAAA,EAYE5G,UAAAA,MAAAA,EAAU;AACRqoB,UAAAA,WAAAA,CAAAA,YAAAA,GADQ,IACRA;;AAEA,cAAI,kBAAJ,WAA+B;AAAA;AAHvB;;AAMR,cAAIA,WAAAA,CAAJ,cAA8B;AAE5BA,YAAAA,WAAAA,CAAAA,YAAAA,CAAAA,SAAAA,GAF4B,IAE5BA;;AAF4B,wDAIKA,WAAAA,CAAjC,WAJ4B;AAAA;;AAAA;AAI5B,qEAA0D;AAAA,oBAA1D,kBAA0D;AACxDO,gBAAAA,kBAAAA,CADwD,mBACxDA;AAL0B;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO5B,mBAP4B,WAO5B;AAbM;;AAgBR,cAAIP,WAAAA,CAAJ,wBAAwC;AACtCA,YAAAA,WAAAA,CAAAA,sBAAAA,CAAAA,MAAAA,CADsC,MACtCA;AADF,iBAEO,IAAIA,WAAAA,CAAJ,sBAAsC;AAC3CA,YAAAA,WAAAA,CAAAA,oBAAAA,CAAAA,MAAAA,CAD2C,MAC3CA;AADK,iBAEA;AACL,kBADK,MACL;AArBM;AAbK,SACjBzhB;AA7B6C,OA4B/C;;AAuCAwjB,MAAAA,IAnE+C;AAxgBhC;;;WAilBjBiB,oCAA2D;AAAA;;AAAA,UAAxC,WAAwC,UAAxC,WAAwC;AAAA,UAAxC,MAAwC,UAAxC,MAAwC;AAAA,gCAAjBX,KAAiB;AAAA,UAAjBA,KAAiB,6BAA3DW,KAA2D;;AAWzD,UAAI,CAAChD,WAAAA,CAAL,cAA+B;AAAA;AAX0B;;AAczD,UAAI,CAAJ,OAAY;AAGV,YAAIA,WAAAA,CAAAA,WAAAA,CAAAA,IAAAA,GAAJ,GAAsC;AAAA;AAH5B;;AASV,YAAIroB,MAAAA,YAAJ,4CAAmD;AACjDqoB,UAAAA,WAAAA,CAAAA,yBAAAA,GAAwC,WAAW,YAAM;AACvD,sCAAwB;AAAEA,cAAAA,WAAF,EAAEA,WAAF;AAAeroB,cAAAA,MAAf,EAAeA,MAAf;AAAuB0qB,cAAAA,KAAAA,EAAvB;AAAA,aAAxB;;AACArC,YAAAA,WAAAA,CAAAA,yBAAAA,GAFuD,IAEvDA;AAFsC,aADS,2BACT,CAAxCA;AADiD;AATzC;AAd6C;;AA+BzDA,MAAAA,WAAAA,CAAAA,YAAAA,CAAAA,MAAAA,CACU,yBAAmBroB,MAAAA,CAD7BqoB,OACU,CADVA,WAES,YAAM,CAjC0C,CA+BzDA;AAKAA,MAAAA,WAAAA,CAAAA,YAAAA,GApCyD,IAoCzDA;;AAEA,UAAI,gBAAJ,WAA+B;AAAA;AAtC0B;;AAAA,mDA2Cb,KAA5C,aA3CyD;AAAA;;AAAA;AA2CzD,kEAAgE;AAAA;AAAA,cAArD,WAAqD;AAAA,cAAhE,cAAgE;;AAC9D,cAAIiD,cAAAA,KAAJ,aAAoC;AAClC,yCADkC,WAClC;;AADkC;AAD0B;AA3CP;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkDzD,WAlDyD,OAkDzD;AAnoBe;;;SAyoBjB,eAAY;AACV,aAAO,KADG,MACV;AA1oBe;;;;;;;;IA8oBnB;AACEvkD,0BAAc;AAAA;;AACZ,sBADY,EACZ;AACA,qBAAiB+5B,OAAAA,CAAAA,OAAAA,CAFL,SAEKA,CAAjB;AAHe;;;;WAMjByqB,qBAAAA,GAAAA,EAAAA,SAAAA,EAA4B;AAAA;;AAC1B,iCAA2B;AAGzB,YACE,+BACA,mBADA,YAEA39C,KAAAA,YAHF,KAIE;AACA,gBAAM,6DACwCA,KADxC,aACwCA,KADxC,uBACwCA,KAAAA,CAF9C,QAE8CA,EADxC,EAAN;AARuB;;AAazB,YAAI,+BAA6BA,KAAAA,KAAjC,MAAiD;AAC/C,iBAD+C,KAC/C;AAduB;;AAgBzB,YAAI49C,MAAAA,CAAAA,GAAAA,CAAJ,KAAIA,CAAJ,EAAuB;AAErB,iBAAOA,MAAAA,CAAAA,GAAAA,CAFc,KAEdA,CAAP;AAlBuB;;AAoBzB,oBApByB,MAoBzB;;AACA,YAAK,UAAS59C,KAAAA,CAAV,MAAC,KAA0B+0C,yBAA/B,MAA+BA,CAA/B,EAAsD;AAEpD,cAAI8I,SAAJ,aAAIA,SAAJ,eAAIA,SAAAA,CAAAA,QAAAA,CAAJ,MAAIA,CAAJ,EAAiC;AAC/B37C,YAAAA,MAAAA,GAAS,IAAIlC,KAAAA,CAAJ,oBAEPA,KAAAA,CAFO,YAGPA,KAAAA,CAJ6B,UACtB,CAATkC;AADF,iBAMO;AACLA,YAAAA,MAAAA,GAAS,IAAIlC,KAAAA,CAAJ,YADJ,KACI,CAATkC;AATkD;;AAWpD07C,UAAAA,MAAAA,CAAAA,GAAAA,CAAAA,KAAAA,EAXoD,MAWpDA;AACA,iBAZoD,MAYpD;AAjCuB;;AAmCzB,YAAI59C,KAAAA,YAAJ,KAA0B;AACxBkC,UAAAA,MAAAA,GAAS,IADe,GACf,EAATA;AACA07C,UAAAA,MAAAA,CAAAA,GAAAA,CAAAA,KAAAA,EAFwB,MAExBA;;AAFwB,uDAGxB,KAHwB;AAAA;;AAAA;AAGxB,sEAAgC;AAAA;AAAA,kBAArB,GAAqB;AAAA,kBAAhC,GAAgC;;AAC9B17C,cAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GAAAA,EAAgB47C,UAAAA,CADc,GACdA,CAAhB57C;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMxB,iBANwB,MAMxB;AAzCuB;;AA2CzB,YAAIlC,KAAAA,YAAJ,KAA0B;AACxBkC,UAAAA,MAAAA,GAAS,IADe,GACf,EAATA;AACA07C,UAAAA,MAAAA,CAAAA,GAAAA,CAAAA,KAAAA,EAFwB,MAExBA;;AAFwB,uDAGxB,KAHwB;AAAA;;AAAA;AAGxB,sEAAyB;AAAA,kBAAzB,IAAyB;AACvB17C,cAAAA,MAAAA,CAAAA,GAAAA,CAAW47C,UAAAA,CADY,IACZA,CAAX57C;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMxB,iBANwB,MAMxB;AAjDuB;;AAmDzBA,QAAAA,MAAAA,GAASwW,KAAAA,CAAAA,OAAAA,CAAAA,KAAAA,IAAAA,EAAAA,GAA4Bhb,MAAAA,CAAAA,MAAAA,CAnDZ,IAmDYA,CAArCwE;AACA07C,QAAAA,MAAAA,CAAAA,GAAAA,CAAAA,KAAAA,EApDyB,MAoDzBA;;AAGA,6BAAuB;AAAA;;AACrB,cAAIG,IAAJ;AAAA,cACEhlC,CAAAA,GAFmB,KACrB;;AAEA,iBAAO,EAAE,OAAOrb,MAAAA,CAAAA,wBAAAA,CAAAA,CAAAA,EAAhB,CAAgBA,CAAT,CAAP,EAAwD;AACtDqb,YAAAA,CAAAA,GAAIrb,MAAAA,CAAAA,cAAAA,CADkD,CAClDA,CAAJqb;AAJmB;;AAMrB,cAAI,OAAOglC,IAAAA,CAAP,UAAJ,aAAuC;AAAA;AANlB;;AASrB,cAAI,OAAOA,IAAAA,CAAP,wBAAoC,2BAAC/9C,KAAAA,CAAAA,cAAD,kDAACA,2BAAAA,KAAAA,EAAzC,CAAyCA,CAAD,CAAxC,EAAoE;AAAA;AAT/C;;AAYrBkC,UAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAAY47C,UAAAA,CAAWC,IAAAA,CAZF,KAYTD,CAAZ57C;AAnEuB;;AAqEzB,eArEyB,MAqEzB;AAtEwB;;AAyE1B,UAAM07C,MAAAA,GAAS,IAzEW,OAyEX,EAAf;AACA,UAAMzrB,KAAAA,GAAQ;AAAEn4B,QAAAA,IAAAA,EAAM8jD,UAAAA,CA1EI,GA0EJA;AAAR,OAAd;;AAEA,0BAAoB,YAAM;AAAA,qDACD,OAAvB,UADwB;AAAA;;AAAA;AACxB,oEAAwC;AAAA,gBAAxC,QAAwC;AACtCrpB,YAAAA,QAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EADsC,KACtCA;AAFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AA5EA,OA4E1B;AAlFe;;;WAyFjBupB,0BAAAA,IAAAA,EAAAA,QAAAA,EAAiC;AAC/B,2BAD+B,QAC/B;AA1Fe;;;WA6FjBC,6BAAAA,IAAAA,EAAAA,QAAAA,EAAoC;AAClC,UAAMnhD,CAAAA,GAAI,wBADwB,QACxB,CAAV;;AACA,gCAFkC,CAElC;AA/Fe;;;WAkGjB62C,qBAAY;AACV,+BADU,CACV;AAnGe;;;;;;;AA+GnB,IAAMuK,aAAAA,GAAgB;AACpBC,EAAAA,gBAAAA,EADoB;AAEpBC,EAAAA,iBAAAA,EAFoB;AAGpBC,EAAAA,YAAAA,EAHoB;AAAA,CAAtB;AAKiE;AAE/D,MAAIriC,qBAAY,mBAAhB,YAA+D;AAE7DkiC,IAAAA,aAAAA,CAAAA,gBAAAA,GAF6D,IAE7DA;AAEAA,IAAAA,aAAAA,CAAAA,iBAAAA,GAJ6D,iBAI7DA;AAJF,SAOO,IAAI,wEAAJ,UAAkC;AAAA;;AACvC,QAAMI,aAAAA,gBAAgB5kD,QAAhB4kD,uEAAgB5kD,UAAAA,aAAhB4kD,0DAAgB5kD,sBADiB,GACvC;;AACA,uBAAmB;AACjBwkD,MAAAA,aAAAA,CAAAA,iBAAAA,GAAkCI,aAAAA,CAAAA,OAAAA,CAAAA,2BAAAA,EADjB,aACiBA,CAAlCJ;AAHqC;AATsB;;AAmB/DA,EAAAA,aAAAA,CAAAA,gBAAAA,GAAiC,eAAe;AAI9C,QAAMzrB,OAAAA,6BAJwC,GAIxCA,SAAN;AACA,WAAOnX,GAAAA,CAAAA,eAAAA,CAAoB,SAAS,CALU,OAKV,CAAT,CAApBA,CAAP;AAxB6D,GAmB/D4iC;AAr9DF;;IAs+DA;AAKE/kD,uBAIQ;AAAA,qFAJRA,EAIQ;AAAA,6BAHNyE,IAGM;AAAA,QAHNA,IAGM,4BAJI,IAIJ;AAAA,6BAFNk3B,IAEM;AAAA,QAFNA,IAEM,4BAJI,IAIJ;AAAA,kCADNne,SACM;AAAA,QADNA,SACM,iCAJI,8BAIJ;;AAAA;;AACN,QAAIme,IAAAA,IAAQ0gB,SAAAA,CAAAA,YAAAA,CAAAA,GAAAA,CAAZ,IAAYA,CAAZ,EAA8C;AAC5C,YAAM,UADsC,8CACtC,CAAN;AAFI;;AAKN,gBALM,IAKN;AACA,qBANM,KAMN;AACA,gCAPM,IAON;AACA,qBARM,SAQN;AAEA,4BAVM,oCAUN;AACA,iBAXM,IAWN;AACA,sBAZM,IAYN;AACA,2BAbM,IAaN;;AAEA,cAAU;AACRA,MAAAA,SAAAA,CAAAA,YAAAA,CAAAA,GAAAA,CAAAA,IAAAA,EADQ,IACRA;;AACA,+BAFQ,IAER;;AAFQ;AAfJ;;AAoBN,SApBM,WAoBN;AA7BY;;;;SAoCd,eAAc;AACZ,aAAO,sBADK,OACZ;AArCY;;;SA4Cd,eAAW;AACT,aAAO,KADE,KACT;AA7CY;;;SAoDd,eAAqB;AACnB,aAAO,KADY,eACnB;AArDY;;;WAwDd+I,6BAAAA,IAAAA,EAA0B;AACxB,mBADwB,IACxB;AACA,6BAAuB,sDAFC,IAED,CAAvB;;AACA,uCAAiC,YAAY,CAHrB,CAGxB;;AAIA,4BAPwB,OAOxB;AA/DY;;;WAkEdC,uBAAc;AAAA;;AAMZ,UACE,iCACA,CAACN,aAAAA,CADD,oBAEA,CAAC1I,SAAAA,CAHH,iCAIE;AACA,YAAIiJ,SAAAA,GAAYjJ,SAAAA,CADhB,SACA;;AAEA,YAAI;AAGF,cAGE,CAACkJ,wBAAatJ,MAAAA,CAAAA,QAAAA,CAAbsJ,IAAAA,EAHH,SAGGA,CAHH,EAIE;AACAD,YAAAA,SAAAA,GAAYP,aAAAA,CAAAA,gBAAAA,CACV,mBAAmB9I,MAAAA,CAAnB,UAFF,IACY8I,CAAZO;AARA;;AAeF,cAAMtJ,MAAAA,GAAS,WAfb,SAea,CAAf;AACA,cAAMmB,cAAAA,GAAiB,sDAhBrB,MAgBqB,CAAvB;;AACA,cAAMqI,cAAAA,GAAiB,SAAjBA,cAAiB,GAAM;AAC3BxJ,YAAAA,MAAAA,CAAAA,mBAAAA,CAAAA,OAAAA,EAD2B,aAC3BA;AACAmB,YAAAA,cAAAA,CAF2B,OAE3BA;AACAnB,YAAAA,MAAAA,CAH2B,SAG3BA;;AACA,gBAAI,OAAJ,WAAoB;AAClB,6CAA6B,UADX,sBACW,CAA7B;AADF,mBAEO;AAGL,qBAHK,gBAGL;AATyB;AAjB3B,WAiBF;;AAaA,cAAMyJ,aAAAA,GAAgB,SAAhBA,aAAgB,GAAM;AAC1B,gBAAI,CAAC,OAAL,YAAsB;AAGpBD,cAAAA,cAHoB;AADI;AA9B1B,WA8BF;;AAOAxJ,UAAAA,MAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EArCE,aAqCFA;AAEAmB,UAAAA,cAAAA,CAAAA,EAAAA,CAAAA,MAAAA,EAA0Bt8C,UAAAA,IAAAA,EAAQ;AAChCm7C,YAAAA,MAAAA,CAAAA,mBAAAA,CAAAA,OAAAA,EADgC,aAChCA;;AACA,gBAAI,OAAJ,WAAoB;AAClBwJ,cAAAA,cADkB;AAAA;AAFY;;AAMhC,sBAAU;AAER,uCAFQ,cAER;AACA,6BAHQ,MAGR;AACA,kCAJQ,MAIR;;AACA,kBAAI,CAAC3kD,IAAAA,CAAL,kBAA4B;AAC1B,8CAD0B,KAC1B;AANM;;AAQR,sCARQ,OAQR;;AAEAs8C,cAAAA,cAAAA,CAAAA,IAAAA,CAAAA,WAAAA,EAAiC;AAC/B3/B,gBAAAA,SAAAA,EAAW,OAXL;AAUyB,eAAjC2/B;AAVF,mBAaO;AACL,qBADK,gBACL;;AACAA,cAAAA,cAAAA,CAFK,OAELA;AACAnB,cAAAA,MAAAA,CAHK,SAGLA;AAtB8B;AAvChC,WAuCFmB;AA0BAA,UAAAA,cAAAA,CAAAA,EAAAA,CAAAA,OAAAA,EAA2Bt8C,UAAAA,IAAAA,EAAQ;AACjCm7C,YAAAA,MAAAA,CAAAA,mBAAAA,CAAAA,OAAAA,EADiC,aACjCA;;AACA,gBAAI,OAAJ,WAAoB;AAClBwJ,cAAAA,cADkB;AAAA;AAFa;;AAMjC,gBAAI;AACFE,cAAAA,QADE;AAAJ,cAEE,UAAU;AAEV,qBAFU,gBAEV;AAV+B;AAjEjC,WAiEFvI;;AAcA,cAAMuI,QAAAA,GAAW,SAAXA,QAAW,GAAM;AACrB,gBAAMC,OAAAA,GAAU,eAAe,CAAC,oCADX,CACU,CAAf,CAAhB;;AAGA,gBAAI;AACFxI,cAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAAA,OAAAA,EAAqC,CAACwI,OAAAA,CADpC,MACmC,CAArCxI;AADF,cAEE,WAAW;AACXl5C,8BADW,mCACXA;AACA0hD,cAAAA,OAAAA,CAAAA,CAAAA,CAAAA,GAFW,CAEXA;AACAxI,cAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAHW,OAGXA;AATmB;AA/ErB,WA+EF;;AAgBAuI,UAAAA,QA/FE;AAAA;AAAJ,UAiGE,UAAU;AACV37C,0BADU,+BACVA;AArGF;AAVU;;AAoHZ,WApHY,gBAoHZ;AAtLY;;;WAyLd67C,4BAAmB;AAAA;;AACjB,UAAI,CAACb,aAAAA,CAAL,kBAAqC;AACnC9gD,wBADmC,yBACnCA;AACA8gD,QAAAA,aAAAA,CAAAA,gBAAAA,GAFmC,IAEnCA;AAHe;;AAMjB1I,MAAAA,SAAAA,CAAAA,sBAAAA,CAAAA,IAAAA,CACQwJ,UAAAA,oBAAAA,EAAwB;AAC5B,YAAI,OAAJ,WAAoB;AAClB,yCAA6B,UADX,sBACW,CAA7B;;AADkB;AADQ;;AAK5B,YAAMlqB,IAAAA,GAAO,IALe,YAKf,EAAb;AACA,uBAN4B,IAM5B;AAGA,YAAMpU,EAAAA,iBAAYw9B,aAAAA,CATU,YASVA,EAAZx9B,CAAN;AAIA,YAAMu+B,aAAAA,GAAgB,oCAAmBv+B,EAAAA,GAAnB,eAbM,IAaN,CAAtB;AACAs+B,QAAAA,oBAAAA,CAAAA,KAAAA,CAAAA,aAAAA,EAd4B,IAc5BA;AAEA,YAAM1I,cAAAA,GAAiB,wCAAuB51B,EAAAA,GAAvB,WAhBK,IAgBL,CAAvB;AACA,iCAjB4B,cAiB5B;;AACA,gCAlB4B,OAkB5B;;AAEA41B,QAAAA,cAAAA,CAAAA,IAAAA,CAAAA,WAAAA,EAAiC;AAC/B3/B,UAAAA,SAAAA,EAAW,OArBe;AAoBK,SAAjC2/B;AArBJd,OAAAA,WAyBSpjB,UAAAA,MAAAA,EAAU;AACf,uCACE,qDAA6CA,MAAAA,CAFhC,OAEb,SADF;AAhCa,OAMjBojB;AA/LY;;;WAkOdlB,mBAAU;AACR,uBADQ,IACR;;AACA,UAAI,KAAJ,YAAqB;AAEnB,wBAFmB,SAEnB;;AACA,0BAHmB,IAGnB;AALM;;AAORkB,MAAAA,SAAAA,CAAAA,YAAAA,WAA8B,KAPtB,KAORA;;AACA,mBARQ,IAQR;;AACA,UAAI,KAAJ,iBAA0B;AACxB,6BADwB,OACxB;;AACA,+BAFwB,IAExB;AAXM;AAlOI;;;SACd,eAA0B;AACxB,aAAOn9B,kBAAAA,IAAAA,EAAAA,cAAAA,EAA6B,IADZ,OACY,EAA7BA,CAAP;AAFY;;;WAoPd,0BAAwB;AACtB,UAAI,EAAC48B,MAAD,aAACA,MAAD,eAACA,MAAAA,CAAL,IAAI,CAAJ,EAAmB;AACjB,cAAM,UADW,gDACX,CAAN;AAFoB;;AAItB,UAAI,sBAAsBA,MAAAA,CAA1B,IAAI,CAAJ,EAAwC;AACtC,eAAO,sBAAsBA,MAAAA,CADS,IAC/B,CAAP;AALoB;;AAOtB,aAAO,cAPe,MAOf,CAAP;AA3PY;;;SAkQd,eAAuB;AACrB,UAAIM,oCAAJ,WAAmC;AACjC,eAAOA,oCAD0B,SACjC;AAFmB;;AAIrB,UAAI2I,aAAAA,CAAAA,iBAAAA,KAAJ,MAA8C;AAC5C,YAAI,CAAJ,mBAAe;AACb/F,yCADa,+CACbA;AAF0C;;AAI5C,eAAO+F,aAAAA,CAJqC,iBAI5C;AARmB;;AAUrB,YAAM,UAVe,+CAUf,CAAN;AA5QY;;;SA+Qd,eAA6C;AAC3C,UAAI;AAAA;;AACF,eAAO7kD,0BAAAA,UAAAA,CAAAA,WAAAA,gFAAAA,oBAAAA,KADL,IACF;AADF,QAEE,WAAW;AACX,eADW,IACX;AAJyC;AA/Q/B;;;SAwRd,eAAoC;AAAA;;AAClC,UAAM6lD,MAAAA;AAAAA,kFAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,kBAAAA,wBADO,GACoB,QADR,+BAAZ;;AAAA,uBAGb,wBAHa;AAAA;AAAA;AAAA;;AAAA,oDAGiB,wBAHjB;;AAAA;AAAA,wBAYX,qBAGA,mBAJF,UAXa;AAAA;AAAA;AAAA;;AA8BLhK,kBAAAA,MA9BK,GA8BIiK,IAAAA,CAAAA,SAAAA,CAAAA,CAAgB,QAd/B,SAceA,CA9BJ;AAAA,oDA+BJjK,MAAAA,CAfP,oBAhBW;;AAAA;AAAA;AAAA,yBAiCPkK,+BAAW,QAjCQ,SAiCnBA,CAjCO;;AAAA;AAAA,oDAkCNjK,MAAAA,CAAAA,WAAAA,CAlCkB,oBAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAT8J;;AAAAA,wBAAAA,MAAAA;AAAAA;AAAAA;AAAAA,SAAN;;AAqCA,aAAO7mC,kBAAAA,IAAAA,EAAAA,wBAAAA,EAAuC6mC,MAtCZ,EAsC3B7mC,CAAP;AA9TY;;;;;;;AAiUiD;AAC/Dm9B,EAAAA,SAAAA,CAAAA,YAAAA,GAAyB,YAAY;AACnC2C,mCADmC,uEACnCA;AAGA,WAAO,KAJ4B,SAInC;AAL6D,GAC/D3C;AAxyEF;;IAozEA;AACEr8C,2BAAAA,cAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,MAAAA,EAAgE;AAAA;;AAC9D,0BAD8D,cAC9D;AACA,uBAF8D,WAE9D;AACA,sBAAkB,IAH4C,UAG5C,EAAlB;AACA,sBAAkB,4BAAe;AAC/Bs8C,MAAAA,KAAAA,EAAO6J,WAAAA,CADwB;AAE/BC,MAAAA,oBAAAA,EAAsB,gCAFS,IAET,CAFS;AAG/BnmD,MAAAA,aAAAA,EAAe67C,MAAAA,CAHgB;AAI/BuK,MAAAA,YAAAA,EAAcvK,MAAAA,CAJiB;AAAA,KAAf,CAAlB;AAMA,mBAV8D,MAU9D;;AAEA,QAAI,CAACA,MAAAA,CAAL,gBAA4B;AAC1B,+BAAyB,IAAIA,MAAAA,CAAJ,kBAA6B;AACpD72C,QAAAA,OAAAA,EAAS62C,MAAAA,CAD2C;AAEpDV,QAAAA,YAAAA,EAAcU,MAAAA,CAFsC;AAAA,OAA7B,CAAzB;AAIA,qCAA+B,IAAIA,MAAAA,CAAJ,wBAAmC;AAChE72C,QAAAA,OAAAA,EAAS62C,MAAAA,CANe;AAKwC,OAAnC,CAA/B;AAjB4D;;AAsB9D,qBAtB8D,KAsB9D;AACA,6BAvB8D,IAuB9D;AACA,+BAxB8D,IAwB9D;AAEA,0BA1B8D,aA0B9D;AACA,uBA3B8D,IA2B9D;AACA,yBA5B8D,IA4B9D;AAEA,qBA9B8D,EA8B9D;AACA,wBA/B8D,EA+B9D;AACA,kCAhC8D,oCAgC9D;AAEA,SAlC8D,mBAkC9D;AAnCkB;;;;SAsCpB,eAAwB;AACtB,aAAO58B,kBAAAA,IAAAA,EAAAA,mBAAAA,EAAkC,IADnB,qCACmB,EAAlCA,CAAP;AAvCkB;;;WA0CpBonC,4BAAAA,MAAAA,EAIE;AAAA,UAFArF,cAEA,uEAFiBz0C,qBAFnB85C,MAIE;AAAA,UADAC,QACA,uEAJFD,KAIE;AACA,UAAIjC,eAAAA,GAAkBr4C,0BADtB,OACA;AACA,UAAIw6C,YAAAA,GAFJ,EAEA;;AAEA;AACE;AACEnC,UAAAA,eAAAA,GAAkBr4C,0BADpB,GACEq4C;AAFJ;;AAIE;AAJF;;AAME;AACEA,UAAAA,eAAAA,GAAkBr4C,0BADpB,KACEq4C;AAPJ;;AASE;AACEpgD,yEAVJ,MAUIA;AAVJ;;AAaA;AACE,aAAKuI,qBAAL;AACE63C,UAAAA,eAAAA,IAAmBr4C,0BADrB,mBACEq4C;AAFJ;;AAIE,aAAK73C,qBAAL;AAJF;;AAME,aAAKA,qBAAL;AACE63C,UAAAA,eAAAA,IAAmBr4C,0BADrB,iBACEq4C;AAPJ;;AASE,aAAK73C,qBAAL;AACE63C,UAAAA,eAAAA,IAAmBr4C,0BADrB,mBACEq4C;AAEAmC,UAAAA,YAAAA,GAAe,uBAHjB,YAGEA;AAZJ;;AAcE;AACEviD,iFAfJ,cAeIA;AAfJ;;AAkBA,oBAAc;AACZogD,QAAAA,eAAAA,IAAmBr4C,0BADP,MACZq4C;AApCF;;AAuCA,aAAO;AACLA,QAAAA,eADK,EACLA,eADK;AAELF,QAAAA,QAAAA,YAAU,eAAVA,cAFK,YAELA;AAFK,OAAP;AArFkB;;;WA2FpBhJ,mBAAU;AAAA;;AACR,UAAI,KAAJ,mBAA4B;AAC1B,eAAO,uBADmB,OAC1B;AAFM;;AAKR,uBALQ,IAKR;AACA,+BANQ,oCAMR;;AAEA,UAAI,KAAJ,qBAA8B;AAC5B,wCACE,UAF0B,iDAE1B,CADF;AATM;;AAcR,UAAMuI,MAAAA,GAdE,EAcR;;AAdQ,mDAiBW,KAAnB,SAjBQ;AAAA;;AAAA;AAiBR,kEAAmC;AAAA,cAAnC,IAAmC;;AACjC,oBAAU;AACRA,YAAAA,MAAAA,CAAAA,IAAAA,CAAY+C,IAAAA,CADJ,QACIA,EAAZ/C;AAF+B;AAjB3B;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBR,8BAtBQ,CAsBR;AACA,iCAvBQ,CAuBR;;AAEA,UAAI,oBAAJ,mBAAI,CAAJ,EAA8C;AAC5C,+BAD4C,aAC5C;AA1BM;;AA6BR,UAAMgD,UAAAA,GAAa,iDA7BX,IA6BW,CAAnB;AACAhD,MAAAA,MAAAA,CAAAA,IAAAA,CA9BQ,UA8BRA;AAEA3pB,MAAAA,OAAAA,CAAAA,GAAAA,CAAAA,MAAAA,EAAAA,IAAAA,CAAyB,YAAM;AAC7B,2BAD6B,KAC7B;;AACA,2BAF6B,KAE7B;;AACA,uCAH6B,IAG7B;;AAEA,YAAI,QAAJ,gBAAyB;AACvB,mDACE,yBAFqB,wBAErB,CADF;AAN2B;;AAW7B,YAAI,QAAJ,gBAAyB;AACvB,iCADuB,OACvB;;AACA,mCAFuB,IAEvB;AAb2B;;AAe7B,kCAf6B,OAe7B;AAfFA,OAAAA,EAgBG,uBAhDK,MAgCRA;AAiBA,aAAO,uBAjDC,OAiDR;AA5IkB;;;WA+IpB4sB,+BAAsB;AAAA;;AACpB,UAAM,cAAN,GADoB,IACpB,CAAM,cAAN;AAAA,UAAM,WAAN,GADoB,IACpB,CAAM,WAAN;AAEAxJ,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,WAAAA,EAA+B,sBAAgB;AAC7C/5C,0BACE,QADFA,cAAAA,EAD6C,iDAC7CA;AAIA,8BAAmB,uBAL0B,aAK1B,EAAnB;;AACA,yCAA8BwjD,UAAAA,GAAAA,EAAO;AACnC,kCAAqB;AACnBC,YAAAA,MAAAA,EAAQD,GAAAA,CADW;AAEnBE,YAAAA,KAAAA,EAAOF,GAAAA,CAFY;AAAA,WAArB;AAP2C,SAM7C;;AAMAG,QAAAA,IAAAA,CAAAA,MAAAA,GAAc,YAAM;AAClB,0CAEQ,kBAA2B;AAAA,gBAAjB,KAAiB,UAAjB,KAAiB;AAAA,gBAA3B,IAA2B,UAA3B,IAA2B;;AAC/B,sBAAU;AACRA,cAAAA,IAAAA,CADQ,KACRA;AADQ;AADqB;;AAK/B3jD,8BACEw4C,yBADFx4C,KACEw4C,CADFx4C,EAL+B,sCAK/BA;AAMA2jD,YAAAA,IAAAA,CAAAA,OAAAA,CAAa,eAAbA,KAAa,CAAbA,EAAAA,CAAAA,EAAuC,CAXR,KAWQ,CAAvCA;AAbJ,sBAeS9tB,UAAAA,MAAAA,EAAU;AACf8tB,YAAAA,IAAAA,CAAAA,KAAAA,CADe,MACfA;AAjBc,WAClB;AAb2C,SAY7CA;;AAqBAA,QAAAA,IAAAA,CAAAA,QAAAA,GAAgB9tB,UAAAA,MAAAA,EAAU;AACxB,qCADwB,MACxB;;AAEA8tB,UAAAA,IAAAA,CAAAA,KAAAA,UAAiBC,UAAAA,WAAAA,EAAe;AAC9B,gBAAI,QAAJ,WAAoB;AAAA;AADU;;AAI9B,kBAJ8B,WAI9B;AAPsB,WAGxBD;AApC2C,SAiC7CA;AApCkB,OAGpB5J;AA6CAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,oBAAAA,EAAwCt8C,UAAAA,IAAAA,EAAQ;AAC9C,YAAMomD,iBAAAA,GADwC,oCAC9C;AACA,YAAMC,UAAAA,GAAa,QAF2B,WAE9C;AACAA,QAAAA,UAAAA,CAAAA,YAAAA,CAAAA,IAAAA,CAA6B,YAAM;AAGjC,cAAI,CAACA,UAAAA,CAAD,wBAAoC,CAACA,UAAAA,CAAzC,kBAAsE;AACpE,gBAAI,yBAAsBf,WAAAA,CAA1B,YAAkD;AAChDA,cAAAA,WAAAA,CAAAA,UAAAA,CAAuB,QADyB,aAChDA;AAFkE;;AAIpEe,YAAAA,UAAAA,CAAAA,UAAAA,GAAwBN,UAAAA,GAAAA,EAAO;AAC7B,kBAAIT,WAAAA,CAAJ,YAA4B;AAC1BA,gBAAAA,WAAAA,CAAAA,UAAAA,CAAuB;AACrBU,kBAAAA,MAAAA,EAAQD,GAAAA,CADa;AAErBE,kBAAAA,KAAAA,EAAOF,GAAAA,CAFc;AAAA,iBAAvBT;AAF2B;AAJqC,aAIpEe;AAP+B;;AAiBjCD,UAAAA,iBAAAA,CAAAA,OAAAA,CAA0B;AACxBE,YAAAA,oBAAAA,EAAsBD,UAAAA,CADE;AAExBE,YAAAA,gBAAAA,EAAkBF,UAAAA,CAFM;AAGxBG,YAAAA,aAAAA,EAAeH,UAAAA,CAHS;AAAA,WAA1BD;AAjBFC,SAAAA,EAsBGD,iBAAAA,CAzB2C,MAG9CC;AAwBA,eAAOD,iBAAAA,CA3BuC,OA2B9C;AA3EkB,OAgDpB9J;AA8BAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,gBAAAA,EAAoC,sBAAgB;AAClD/5C,0BACE,QADFA,cAAAA,EADkD,sDAClDA;;AAIA,YAAMkkD,WAAAA,GAAc,sCAClBzmD,IAAAA,CADkB,OAElBA,IAAAA,CAPgD,GAK9B,CAApB;;AAeA,YAAI,CAAJ,aAAkB;AAChBkmD,UAAAA,IAAAA,CADgB,KAChBA;AADgB;AApBgC;;AAyBlDA,QAAAA,IAAAA,CAAAA,MAAAA,GAAc,YAAM;AAClBO,UAAAA,WAAAA,CAAAA,IAAAA,GAAAA,IAAAA,CAEQ,kBAA2B;AAAA,gBAAjB,KAAiB,UAAjB,KAAiB;AAAA,gBAA3B,IAA2B,UAA3B,IAA2B;;AAC/B,sBAAU;AACRP,cAAAA,IAAAA,CADQ,KACRA;AADQ;AADqB;;AAK/B3jD,8BACEw4C,yBADFx4C,KACEw4C,CADFx4C,EAL+B,2CAK/BA;AAIA2jD,YAAAA,IAAAA,CAAAA,OAAAA,CAAa,eAAbA,KAAa,CAAbA,EAAAA,CAAAA,EAAuC,CATR,KASQ,CAAvCA;AAXJO,WAAAA,WAaSruB,UAAAA,MAAAA,EAAU;AACf8tB,YAAAA,IAAAA,CAAAA,KAAAA,CADe,MACfA;AAfc,WAClBO;AA1BgD,SAyBlDP;;AAmBAA,QAAAA,IAAAA,CAAAA,QAAAA,GAAgB9tB,UAAAA,MAAAA,EAAU;AACxBquB,UAAAA,WAAAA,CAAAA,MAAAA,CADwB,MACxBA;AAEAP,UAAAA,IAAAA,CAAAA,KAAAA,UAAiBC,UAAAA,WAAAA,EAAe;AAC9B,gBAAI,QAAJ,WAAoB;AAAA;AADU;;AAI9B,kBAJ8B,WAI9B;AAPsB,WAGxBD;AA/CgD,SA4ClDA;AA1HkB,OA8EpB5J;AAwDAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,QAAAA,EAA4B,kBAAiB;AAAA,YAAjB,OAAiB,UAAjB,OAAiB;AAC3C,4BAAiBoK,OAAAA,CAD0B,QAC3C;AACA,8BAAmBA,OAAAA,CAFwB,UAE3C;AACA,eAAOA,OAAAA,CAHoC,UAG3C;;AACApB,QAAAA,WAAAA,CAAAA,WAAAA,CAAAA,OAAAA,CAAgC,8BAJW,OAIX,CAAhCA;AA1IkB,OAsIpBhJ;AAOAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,cAAAA,EAAkC,cAAc;AAC9C,YAD8C,MAC9C;;AACA,gBAAQqK,EAAAA,CAAR;AACE;AACEvuB,YAAAA,MAAAA,GAAS,4BAAsBuuB,EAAAA,CAAtB,SAAkCA,EAAAA,CAD7C,IACW,CAATvuB;AAFJ;;AAIE;AACEA,YAAAA,MAAAA,GAAS,8BAAwBuuB,EAAAA,CADnC,OACW,CAATvuB;AALJ;;AAOE;AACEA,YAAAA,MAAAA,GAAS,8BAAwBuuB,EAAAA,CADnC,OACW,CAATvuB;AARJ;;AAUE;AACEA,YAAAA,MAAAA,GAAS,sCAAgCuuB,EAAAA,CAAhC,SAA4CA,EAAAA,CADvD,MACW,CAATvuB;AAXJ;;AAaE;AACEA,YAAAA,MAAAA,GAAS,gCAA0BuuB,EAAAA,CAA1B,SAAsCA,EAAAA,CADjD,OACW,CAATvuB;AAdJ;;AAgBE;AACEvb,mCAjBJ,wCAiBIA;AAjBJ;;AAmBAyoC,QAAAA,WAAAA,CAAAA,WAAAA,CAAAA,MAAAA,CArB8C,MAqB9CA;AAlKkB,OA6IpBhJ;AAwBAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,iBAAAA,EAAqCsK,UAAAA,SAAAA,EAAa;AAChD,sCADgD,oCAChD;;AAEA,YAAItB,WAAAA,CAAJ,YAA4B;AAC1B,cAAMuB,cAAAA,GAAiBlK,SAAjBkK,cAAiBlK,CAAAA,QAAAA,EAAY;AACjC,gDAAiC;AAC/BA,cAAAA,QAF+B,EAE/BA;AAD+B,aAAjC;AAFwB,WAC1B;;AAKA,cAAI;AACF2I,YAAAA,WAAAA,CAAAA,UAAAA,CAAAA,cAAAA,EAAuCsB,SAAAA,CADrC,IACFtB;AADF,YAEE,WAAW;AACX,+CADW,EACX;AATwB;AAA5B,eAWO;AACL,6CACE,4BAAsBsB,SAAAA,CAAtB,SAAyCA,SAAAA,CAFtC,IAEH,CADF;AAf8C;;AAmBhD,eAAO,4BAnByC,OAmBhD;AAxLkB,OAqKpBtK;AAsBAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,YAAAA,EAAgCt8C,UAAAA,IAAAA,EAAQ;AAGtC,YAAIslD,WAAAA,CAAJ,YAA4B;AAC1BA,UAAAA,WAAAA,CAAAA,UAAAA,CAAuB;AACrBU,YAAAA,MAAAA,EAAQhmD,IAAAA,CADa;AAErBimD,YAAAA,KAAAA,EAAOjmD,IAAAA,CAFc;AAAA,WAAvBslD;AAJoC;;AAStC,+CATsC,IAStC;AApMkB,OA2LpBhJ;AAYAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,iBAAAA,EAAqCt8C,UAAAA,IAAAA,EAAQ;AAC3C,YAAI,QAAJ,WAAoB;AAAA;AADuB;;AAK3C,YAAM4lD,IAAAA,GAAO,kBAAe5lD,IAAAA,CALe,SAK9B,CAAb;;AACA4lD,QAAAA,IAAAA,CAAAA,gBAAAA,CAAsB5lD,IAAAA,CAAtB4lD,YAAAA,EAAyC5lD,IAAAA,CANE,QAM3C4lD;AA7MkB,OAuMpBtJ;AASAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,WAAAA,EAA+Bt8C,UAAAA,IAAAA,EAAQ;AAAA;;AACrC,YAAI,QAAJ,WAAoB;AAAA;AADiB;;AAKrC,mCALqC,IAKrC;AAAA,YAAM,EAAN;AAAA,YAAM,IAAN;AAAA,YAAM,YAAN;;AACA,YAAI,uBAAJ,EAAI,CAAJ,EAA6B;AAAA;AANQ;;AAUrC;AACE;AACE,gBAAMi7C,MAAAA,GAAS,QADjB,OACE;;AAEA,gBAAI,WAAJ,cAA6B;AAC3B,kBAAM6L,aAAAA,GAAgBC,YAAAA,CADK,KAC3B;AACA3jD,mEAF2B,aAE3BA;;AACA,6CAH2B,aAG3B;;AAH2B;AAH/B;;AAUE,gBAAI4jD,YAAAA,GAVN,IAUE;;AACA,gBAAI/L,MAAAA,CAAAA,MAAAA,6BAAiB57C,UAAAA,CAAAA,aAAjB47C,kDAAiB57C,sBAArB,SAAwD;AACtD2nD,cAAAA,YAAAA,GAAe;AACbC,gBAAAA,YADa,wBACbA,IADa,EACbA,GADa,EACW;AACtB5nD,kBAAAA,UAAAA,CAAAA,aAAAA,CAAAA,SAAAA,CAAAA,IAAAA,EADsB,GACtBA;AAFW;AAAA,eAAf2nD;AAZJ;;AAkBE,gBAAMxrC,IAAAA,GAAO,8CAAiC;AAC5CgD,cAAAA,eAAAA,EAAiBy8B,MAAAA,CAD2B;AAE5C6B,cAAAA,eAAAA,EAAiB7B,MAAAA,CAF2B;AAG5CgC,cAAAA,YAAAA,EAAchC,MAAAA,CAH8B;AAI5CsK,cAAAA,oBAAAA,EAAsB,mCAJsB,OAItB,CAJsB;AAK5CyB,cAAAA,YAL4C,EAK5CA;AAL4C,aAAjC,CAAb;;AAQA,mDAES5uB,UAAAA,MAAAA,EAAU;AACf,qBAAOkkB,cAAAA,CAAAA,eAAAA,CAAAA,cAAAA,EAA+C;AAAE51B,gBAAAA,EADzC,EACyCA;AAAF,eAA/C41B,CAAP;AAHJ,0BAKW,YAAM;AACb,kBAAI,CAACrB,MAAAA,CAAD,uBAA+Bz/B,IAAAA,CAAnC,MAA8C;AAM5CA,gBAAAA,IAAAA,CAAAA,IAAAA,GAN4C,IAM5CA;AAPW;;AASb,6CATa,IASb;AAxCN,aA0BE;;AA3BJ;;AA4CE,eA5CF,UA4CE;AACA;AACE,2CADF,YACE;;AA9CJ;;AAgDE;AACE,kBAAM,mDAjDV,IAiDU,EAAN;AAjDJ;AA1NkB,OAgNpB8gC;AA+DAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAyBt8C,UAAAA,IAAAA,EAAQ;AAAA;;AAC/B,YAAI,QAAJ,WAAoB;AAElB,iBAFkB,SAElB;AAH6B;;AAM/B,oCAN+B,IAM/B;AAAA,YAAM,EAAN;AAAA,YAAM,SAAN;AAAA,YAAM,IAAN;AAAA,YAAM,SAAN;;AACA,YAAMknD,SAAAA,GAAY,kBAPa,SAOb,CAAlB;;AACA,YAAIA,SAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAJ,EAAIA,CAAJ,EAA4B;AAC1B,iBAD0B,SAC1B;AAT6B;;AAY/B;AACE;AACEA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,OAAAA,CAAAA,EAAAA,EADF,SACEA;AAGA,gBAAMC,uBAAAA,GAJR,OAIE;;AACA,gBAAIC,CAAAA,SAAAA,SAAAA,IAAAA,SAAAA,WAAAA,+BAAAA,SAAAA,CAAAA,IAAAA,oEAAAA,MAAAA,IAAJ,yBAAuD;AACrDF,cAAAA,SAAAA,CAAAA,kBAAAA,GADqD,IACrDA;AANJ;;AADF;;AAUE;AACEA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,OAAAA,CAAAA,EAAAA,EADF,SACEA;AAXJ;;AAaE;AACE,kBAAM,4CAdV,IAcU,EAAN;AAdJ;;AAgBA,eA5B+B,SA4B/B;AA3SkB,OA+QpB5K;AA+BAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,aAAAA,EAAiCt8C,UAAAA,IAAAA,EAAQ;AACvC,YAAI,QAAJ,WAAoB;AAAA;AADmB;;AAKvC,YAAIslD,WAAAA,CAAJ,YAA4B;AAC1BA,UAAAA,WAAAA,CAAAA,UAAAA,CAAuB;AACrBU,YAAAA,MAAAA,EAAQhmD,IAAAA,CADa;AAErBimD,YAAAA,KAAAA,EAAOjmD,IAAAA,CAFc;AAAA,WAAvBslD;AANqC;AA9SrB,OA8SpBhJ;AAaAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,oBAAAA,EAEE,gCA7TkB,IA6TlB,CAFFA;AAKAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,kBAAAA,EAAsCt8C,UAAAA,IAAAA,EAAQ;AAC5C,YAAI,QAAJ,WAAoB;AAClB,iBAAOk5B,OAAAA,CAAAA,MAAAA,CAAe,UADJ,uBACI,CAAfA,CAAP;AAF0C;;AAI5C,YAAI,CAAC,QAAL,mBAA6B;AAC3B,iBAAOA,OAAAA,CAAAA,MAAAA,CACL,UAFyB,wEAEzB,CADKA,CAAP;AAL0C;;AAW5C,eAAO,gCAXqC,IAWrC,CAAP;AA3UkB,OAgUpBojB;AAcAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,uBAAAA,EAA2Ct8C,UAAAA,IAAAA,EAAQ;AACjD,YAAI,QAAJ,WAAoB;AAClB,iBAAOk5B,OAAAA,CAAAA,MAAAA,CAAe,UADJ,uBACI,CAAfA,CAAP;AAF+C;;AAIjD,YAAI,CAAC,QAAL,yBAAmC;AACjC,iBAAOA,OAAAA,CAAAA,MAAAA,CACL,UAF+B,8EAE/B,CADKA,CAAP;AAL+C;;AAWjD,eAAO,sCAX0C,IAW1C,CAAP;AAzVkB,OA8UpBojB;AA7dkB;;;WA4epB+K,uCAAqC;AAAA,UAArCA,SAAqC,UAArCA,SAAqC;;AACnC,UAAI,KAAJ,WAAoB;AAAA;AADe;;AAInC,UAAI,iBAAJ,sBAA2C;AACzC,8CADyC,SACzC;AALiC;AA5ejB;;;WAqfpBhI,mBAAU;AACR,aAAO,+CADC,IACD,CAAP;AAtfkB;;;WAyfpBjB,iBAAAA,UAAAA,EAAoB;AAAA;;AAClB,UACE,CAACxhC,MAAAA,CAAAA,SAAAA,CAAD,UAACA,CAAD,IACA0qC,UAAAA,IADA,KAEAA,UAAAA,GAAa,KAHf,WAIE;AACA,eAAOpuB,OAAAA,CAAAA,MAAAA,CAAe,UADtB,sBACsB,CAAfA,CAAP;AANgB;;AASlB,UAAMooB,SAAAA,GAAYgG,UAAAA,GATA,CASlB;;AACA,UAAIhG,SAAAA,IAAa,KAAjB,cAAoC;AAClC,eAAO,kBAD2B,SAC3B,CAAP;AAXgB;;AAalB,UAAMnqB,OAAAA,GAAU,+CACc;AAC1BmqB,QAAAA,SAFY,EAEZA;AAD0B,OADd,OAIRiG,UAAAA,QAAAA,EAAY;AAChB,YAAI,QAAJ,WAAoB;AAClB,gBAAM,UADY,qBACZ,CAAN;AAFc;;AAIhB,YAAM3B,IAAAA,GAAO,+CAIX,gBAJW,eAKX,gBATc,MAIH,CAAb;AAOA,uCAXgB,IAWhB;AACA,eAZgB,IAYhB;AA7Bc,OAaF,CAAhB;AAkBA,qCA/BkB,OA+BlB;AACA,aAhCkB,OAgClB;AAzhBkB;;;WA4hBpBvH,sBAAAA,GAAAA,EAAkB;AAChB,aAAO,oDAAoD;AACzDmJ,QAAAA,GAFc,EAEdA;AADyD,OAApD,CAAP;AA7hBkB;;;WAkiBpBxH,wBAAAA,SAAAA,EAAAA,MAAAA,EAAkC;AAChC,aAAO,sDAAsD;AAC3DsB,QAAAA,SAD2D,EAC3DA,SAD2D;AAE3DrB,QAAAA,MAF2D,EAE3DA;AAF2D,OAAtD,CAAP;AAniBkB;;;WAyiBpBP,wBAAe;AAAA;AAAA;AAAA;;AACb,aAAO,oDAC4B;AAC/B+H,QAAAA,SAAAA,EAAW,CAAC,CAAC,KADkB;AAE/BC,QAAAA,QAAAA,EAAU,KAFqB;AAG/BnE,QAAAA,iBAAAA,EAAmB,uBAHY;AAI/BoE,QAAAA,QAAAA,gDAAU,gBAAVA,sDAAU,0BAAVA,yEAJ+B;AAAA,OAD5B,aAOI,YAAM;AACb,kCADa,aACb;AATS,OACN,CAAP;AA1iBkB;;;WAsjBpBhI,2BAAkB;AAChB,aAAO,uDADS,IACT,CAAP;AAvjBkB;;;WA0jBpBC,wBAAe;AACb,aAAQ,yBAAR,KAAQ,yBAAR,GAAsC,oDADzB,IACyB,CAAtC;AA3jBkB;;;WAikBpBC,kCAAyB;AACvB,aAAO,8DADgB,IAChB,CAAP;AAlkBkB;;;WAqkBpBvB,2BAAkB;AAChB,aAAO,uDADS,IACT,CAAP;AAtkBkB;;;WAykBpBC,wBAAAA,EAAAA,EAAmB;AACjB,UAAI,cAAJ,UAA4B;AAC1B,eAAOrlB,OAAAA,CAAAA,MAAAA,CAAe,UADI,8BACJ,CAAfA,CAAP;AAFe;;AAIjB,aAAO,sDAAsD;AAC3DxS,QAAAA,EALe,EAKfA;AAD2D,OAAtD,CAAP;AA7kBkB;;;WAklBpB83B,yBAAgB;AACd,aAAO,qDADO,IACP,CAAP;AAnlBkB;;;WAslBpBC,yBAAgB;AACd,aAAO,qDADO,IACP,CAAP;AAvlBkB;;;WA0lBpBC,uBAAc;AACZ,aAAO,mDADK,IACL,CAAP;AA3lBkB;;;WA8lBpBC,gCAAuB;AACrB,aAAO,4DADc,IACd,CAAP;AA/lBkB;;;WAkmBpBC,yBAAgB;AACd,aAAO,qDADO,IACP,CAAP;AAnmBkB;;;WAsmBpBC,0BAAiB;AACf,aAAO,sDADQ,IACR,CAAP;AAvmBkB;;;WA0mBpBC,yBAAgB;AACd,aAAO,qDADO,IACP,CAAP;AA3mBkB;;;WA8mBpB8I,2BAAkB;AAChB,aAAO,uDADS,IACT,CAAP;AA/mBkB;;;WAknBpBC,0BAAAA,SAAAA,EAA4B;AAC1B,aAAO,wDAAwD;AAC7DvG,QAAAA,SAFwB,EAExBA;AAD6D,OAAxD,CAAP;AAnnBkB;;;WAwnBpBqB,uBAAAA,SAAAA,EAAyB;AACvB,aAAO,qDAAqD;AAC1DrB,QAAAA,SAFqB,EAErBA;AAD0D,OAArD,CAAP;AAznBkB;;;WA8nBpBtC,sBAAa;AACX,aAAO,kDADI,IACJ,CAAP;AA/nBkB;;;WAkoBpBC,oCAA2B;AACzB,aAAO,2EAEC6I,UAAAA,OAAAA,EAAW;AACf,eAAO,mDADQ,OACR,CAAP;AAJqB,OAClB,CAAP;AAnoBkB;;;WA0oBpB5I,0BAAiB;AACf,aAAO,sDADQ,IACR,CAAP;AA3oBkB;;;WA8oBpBC,uBAAc;AAAA;;AACZ,aAAO,8DAEC2I,UAAAA,OAAAA,EAAW;AAAA;;AACf,eAAO;AACL5+C,UAAAA,IAAAA,EAAM4+C,OAAAA,CADD,CACCA,CADD;AAELt/B,UAAAA,QAAAA,EAAUs/B,OAAAA,CAAAA,CAAAA,CAAAA,GAAa,uBAAaA,OAAAA,CAA1BA,CAA0BA,CAAb,CAAbA,GAFL;AAGL9L,UAAAA,0BAAAA,kDAA4B,mBAA5BA,wDAA4B,4BAA5BA,yEAHK;AAILwK,UAAAA,aAAAA,mDAAe,mBAAfA,yDAAe,kCAAfA,yEAJK;AAAA,SAAP;AAJQ,OACL,CAAP;AA/oBkB;;;WA2pBpBpH,uBAAc;AACZ,aAAO,mDADK,IACL,CAAP;AA5pBkB;;;WA+pBpBG,oBAAW;AACT,aAAO,gDADE,IACF,CAAP;AAhqBkB;;;;uFAmqBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmBE,gBAAAA,eAAnB;AAAA;AAAA,uBACQ,+CADoC,IACpC,CADR;;AAAA;AAAA,qBAGM,KAAJ,SAHF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAMW38C,gBAAAA,CANX,GAMO,CANP,EAMkBD,EANlB,GAMuB,eAArB,MANF;;AAAA;AAAA,sBAM8CC,CAAAA,GAA5C,EANF;AAAA;AAAA;AAAA;;AAOU8iD,gBAAAA,IAPV,GAOiB,eAD0C,CAC1C,CAPjB;;AAAA,oBAQI,IARJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAWUmC,gBAAAA,iBAXV,GAW8BnC,IAAAA,CAL6B,OAK7BA,EAX9B;;AAAA,oBAaI,iBAbJ;AAAA;AAAA;AAAA;;AAAA,sBAcY,uCAAgC9iD,CAAAA,GADhB,CAChB,8BAdZ;;AAAA;AAMsDA,gBAAAA,CAApD,EANF;AAAA;AAAA;;AAAA;AAiBE,gCAjB0C,KAiB1C;;AACA,oBAAI,CAAJ,iBAAsB;AACpB,kCADoB,KACpB;AAnBwC;;AAqB1C,4CArB0C,IAqB1C;;AArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;SAwBA,eAAoB;AAClB,UAAMm4C,MAAAA,GAAS,KADG,OAClB;AACA,aAAO58B,kBAAAA,IAAAA,EAAAA,eAAAA,EAA8B;AACnCu+B,QAAAA,gBAAAA,EAAkB3B,MAAAA,CAHF;AAEmB,OAA9B58B,CAAP;AA7rBkB;;;;;;IAysBtB;AACElf,wBAAc;AAAA;;AACZ,iBAAauE,MAAAA,CAAAA,MAAAA,CADD,IACCA,CAAb;AAFa;;;;WASfskD,oBAAAA,KAAAA,EAAkB;AAChB,UAAI,WAAJ,KAAI,CAAJ,EAAuB;AACrB,eAAO,WADc,KACd,CAAP;AAFc;;AAIhB,aAAQ,oBAAoB;AAC1B/mC,QAAAA,UAAAA,EAD0B;AAE1BjhB,QAAAA,IAAAA,EAF0B;AAG1BioD,QAAAA,QAAAA,EAH0B;AAAA,OAA5B;AAba;;;WA4Bf9mC,aAAAA,KAAAA,EAA4B;AAAA,UAAjB0d,QAAiB,uEAA5B1d,IAA4B;;AAG1B,oBAAc;AACZ,uDADY,QACZ;;AACA,eAFY,IAEZ;AALwB;;AAS1B,UAAM/a,GAAAA,GAAM,WATc,KASd,CAAZ;;AAGA,UAAI,QAAQ,CAACA,GAAAA,CAAb,UAA2B;AACzB,cAAM,8DADmB,KACnB,OAAN;AAbwB;;AAe1B,aAAOA,GAAAA,CAfmB,IAe1B;AA3Ca;;;WA8Cfud,aAAAA,KAAAA,EAAW;AACT,UAAMvd,GAAAA,GAAM,WADH,KACG,CAAZ;AACA,aAAOA,CAAAA,GAAAA,SAAAA,IAAAA,GAAAA,WAAAA,YAAAA,GAAAA,CAAAA,QAAAA,KAFE,KAET;AAhDa;;;WAsDfnG,iBAAAA,KAAAA,EAAAA,IAAAA,EAAqB;AACnB,UAAMmG,GAAAA,GAAM,gBADO,KACP,CAAZ;;AAEAA,MAAAA,GAAAA,CAAAA,QAAAA,GAHmB,IAGnBA;AACAA,MAAAA,GAAAA,CAAAA,IAAAA,GAJmB,IAInBA;AACAA,MAAAA,GAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CALmB,IAKnBA;AA3Da;;;WA8Df6zB,iBAAQ;AACN,mBAAav2B,MAAAA,CAAAA,MAAAA,CADP,IACOA,CAAb;AA/Da;;;;;;IAsEjB;AACEvE,sBAAAA,kBAAAA,EAAgC;AAAA;;AAC9B,+BAD8B,kBAC9B;AAQA,sBAT8B,IAS9B;AAVa;;;;SAiBf,eAAc;AACZ,aAAO,oCADK,OACZ;AAlBa;;;WA0BfsiC,kBAAS;AACP,+BADO,MACP;AA3Ba;;;;;;IAmCjB;AAKEtiC,sCAUG;AAAA,QAVS,QAUT,UAVS,QAUT;AAAA,QAVS,MAUT,UAVS,MAUT;AAAA,QAVS,IAUT,UAVS,IAUT;AAAA,QAVS,UAUT,UAVS,UAUT;AAAA,QAVS,YAUT,UAVS,YAUT;AAAA,QAVS,SAUT,UAVS,SAUT;AAAA,QAVS,aAUT,UAVS,aAUT;AAAA,uCAFDoiD,wBAEC;AAAA,QAFDA,wBAEC,sCAVS,KAUT;AAAA,+BADDzB,MACC;AAAA,QADDA,MACC,8BAVH3gD,KAUG;;AAAA;;AACD,oBADC,QACD;AACA,kBAFC,MAED;AACA,gBAHC,IAGD;AACA,sBAJC,UAID;AACA,2BALC,IAKD;AACA,wBANC,YAMD;AACA,sBAPC,SAOD;AACA,yBARC,aAQD;AACA,mBATC,MASD;AAEA,mBAXC,KAWD;AACA,iCAZC,IAYD;AACA,yBAbC,KAaD;AACA,qCACEoiD,wBAAAA,KAAAA,IAAAA,IAAqC,kBAftC,WAcD;AAEA,qBAhBC,KAgBD;AACA,sBAjBC,oCAiBD;AACA,gBAAY,eAlBX,IAkBW,CAAZ;AAEA,wBAAoB,iBApBnB,IAoBmB,CAApB;AACA,0BAAsB,oBArBrB,IAqBqB,CAAtB;AACA,8BAA0B,wBAtBzB,IAsByB,CAA1B;AACA,sBAAkB,gBAvBjB,IAuBiB,CAAlB;AACA,mBAAetG,MAAAA,CAAAA,aAAAA,CAxBd,MAwBD;AAvCqB;;;;SA0CvB,eAAgB;AACd,aAAO,iCAA8B,YAAY,CADnC,CACP,CAAP;AA3CqB;;;WAiDvBiN,oCAAoE;AAAA;;AAAA,uCAA/CzG,YAA+C;AAAA,UAA/CA,YAA+C,oCAAjD,KAAiD;AAAA,UAApEyG,qBAAoE,UAApEA,qBAAoE;;AAClE,UAAI,KAAJ,WAAoB;AAAA;AAD8C;;AAIlE,UAAI,KAAJ,SAAkB;AAChB,YAAIC,kBAAAA,CAAAA,WAAAA,CAAAA,GAAAA,CAAmC,KAAvC,OAAIA,CAAJ,EAAsD;AACpD,gBAAM,UACJ,kIAFkD,yBAC9C,CAAN;AAFc;;AAQhBA,QAAAA,kBAAAA,CAAAA,WAAAA,CAAAA,GAAAA,CAAmC,KARnB,OAQhBA;AAZgE;;AAelE,UAAI,yCAAgB9oD,UAAAA,CAAAA,cAAhB,kDAAgBA,sBAApB,SAAwD;AACtD,uBAAeA,UAAAA,CAAAA,cAAAA,CAAAA,MAAAA,CAAiC,KADM,UACvCA,CAAf;AACA,0BAAkB,KAFoC,YAEtD;AACA,sCAA8B,aAHwB,iBAGxB,EAA9B;AAlBgE;;AAoBlE,yBACE,KArBgE,MAoBlE;AAAA,UAAM,aAAN,gBAAM,aAAN;AAAA,UAAM,QAAN,gBAAM,QAAN;AAAA,UAAM,SAAN,gBAAM,SAAN;AAAA,UAAM,UAAN,gBAAM,UAAN;AAAA,UAAM,UAAN,gBAAM,UAAN;AAGA,iBAAW,0CAET,KAFS,YAGT,KAHS,MAIT,KAJS,2BAvBuD,qBAuBvD,CAAX;AAQA,4BAAsB;AACpB4W,QAAAA,SADoB,EACpBA,SADoB;AAEpBirC,QAAAA,QAFoB,EAEpBA,QAFoB;AAGpBO,QAAAA,YAHoB,EAGpBA,YAHoB;AAIpBlB,QAAAA,UAJoB,EAIpBA;AAJoB,OAAtB;AAMA,6BArCkE,CAqClE;AACA,2BAtCkE,IAsClE;;AACA,UAAI,KAAJ,uBAAgC;AAC9B,aAD8B,qBAC9B;AAxCgE;AAjD7C;;;WA6FvB9e,kBAAqB;AAAA,UAAd3F,KAAc,uEAArB2F,IAAqB;AACnB,qBADmB,KACnB;AACA,uBAFmB,IAEnB;;AACA,UAAI,KAAJ,KAAc;AACZ,iBADY,UACZ;AAJiB;;AAMnB,UAAI,KAAJ,SAAkB;AAChB0mB,QAAAA,kBAAAA,CAAAA,WAAAA,WAAsC,KADtB,OAChBA;AAPiB;;AASnB,oBACErsB,KAAAA,IACE,mFAC+B,kBAD/B,IAXe,QAWf,CAFJ;AAtGqB;;;WA+GvBssB,+BAAsB;AACpB,UAAI,CAAC,KAAL,eAAyB;AACvB,YAAI,CAAC,KAAL,uBAAiC;AAC/B,uCAA6B,KADE,cAC/B;AAFqB;;AAAA;AADL;;AAQpB,UAAI,KAAJ,SAAkB;AAChB,wCAAgC,KADhB,YAChB;AATkB;;AAYpB,UAAI,KAAJ,SAAkB;AAAA;AAZE;;AAepB,WAfoB,SAepB;AA9HqB;;;WAiIvBC,qBAAY;AACV,qBADU,IACV;;AACA,UAAI,KAAJ,WAAoB;AAAA;AAFV;;AAKV,UAAI,UAAJ,YAA0B;AACxB,6BAAqB,KADG,kBACxB;AADF,aAEO;AACL,aADK,aACL;AARQ;AAjIW;;;WA6IvBC,yBAAgB;AAAA;;AACd,UAAI,KAAJ,2BAAoC;AAClClN,QAAAA,MAAAA,CAAAA,qBAAAA,CAA6B,YAAM;AACjC,wCAAwB,QADS,YACjC;AAFgC,SAClCA;AADF,aAIO;AACLliB,QAAAA,OAAAA,CAAAA,OAAAA,GAAAA,IAAAA,CAAuB,KAAvBA,UAAAA,WAA8C,KADzC,YACLA;AANY;AA7IO;;;;gFAuJvB;AAAA;AAAA;AAAA;AAAA;AAAA,qBACM,KAAJ,SADF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIE,uCAAuB,6BACrB,KADqB,cAErB,KAFqB,iBAGrB,KAHqB,gBAIrB,KARU,OAIW,CAAvB;;AAMA,oBAAI,yBAAyB,4BAA7B,QAAiE;AAC/D,iCAD+D,KAC/D;;AACA,sBAAI,kBAAJ,WAAiC;AAC/B,6BAD+B,UAC/B;;AACA,wBAAI,KAAJ,SAAkB;AAChBivB,sBAAAA,kBAAAA,CAAAA,WAAAA,WAAsC,KADtB,OAChBA;AAH6B;;AAK/B,yBAL+B,QAK/B;AAP6D;AAVrD;;AAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;SAtJA,eAAyB;AACvB,aAAO9pC,kBAAAA,IAAAA,EAAAA,aAAAA,EAA4B,IADZ,OACY,EAA5BA,CAAP;AAFqB;;;;;;AA+KzB,IAAMwH,OAAAA,GArxGN,UAqxGA;;AAGA,IAAM0iC,KAAAA,GAxxGN,WAwxGA;;;;;;;;;;;;;;;;;;ACzwGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWA;AACEppD,gCAMG;AAAA,QANS,KAMT,QANS,KAMT;AAAA,QANS,oBAMT,QANS,oBAMT;AAAA,kCAHDC,aAGC;AAAA,QAHDA,aAGC,mCAHeC,UAAAA,CAHN,QAMT;AAAA,iCADDmmD,YACC;AAAA,QADDA,YACC,kCANHrmD,IAMG;;AAAA;;AACD,QAAI,qBAAJ,gBAAyC;AACvC0d,6BADuC,mCACvCA;AAFD;;AAID,iBAJC,KAID;AACA,iCALC,oBAKD;AACA,qBANC,aAMD;AAEA,2BARC,EAQD;AACA,wBATC,IASD;AAhBiB;;;;WAsBnB2rC,2BAAAA,cAAAA,EAAkC;AAChC,gCADgC,cAChC;;AACA,+BAFgC,cAEhC;AAxBiB;;;WA2BnBC,oBAAAA,IAAAA,EAAiB;AACf,UAAIjD,YAAAA,GAAe,KADJ,YACf;;AACA,UAAI,CAAJ,cAAmB;AACjBA,QAAAA,YAAAA,GAAe,oBAAoB,6BADlB,OACkB,CAAnCA;AACAA,QAAAA,YAAAA,CAAAA,EAAAA,kCAA0C,KAFzB,KAEjBA;;AACA,mFAHiB,YAGjB;AALa;;AASf,UAAMkD,UAAAA,GAAalD,YAAAA,CATJ,KASf;AACAkD,MAAAA,UAAAA,CAAAA,UAAAA,CAAAA,IAAAA,EAA4BA,UAAAA,CAAAA,QAAAA,CAVb,MAUfA;AArCiB;;;WAwCnBzuB,iBAAQ;AAAA,iDACuB,KAA7B,eADM;AAAA;;AAAA;AACN,4DAAmD;AAAA,cAAnD,cAAmD;;AACjD,yCADiD,cACjD;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIN,oCAJM,CAIN;;AAEA,UAAI,KAAJ,cAAuB;AAErB,0BAFqB,MAErB;AACA,4BAHqB,IAGrB;AATI;AAxCW;;;;+EAqDnB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEMze,IAAAA,CAAAA,QAAAA,IAAiBA,IAAAA,CAArB,WAFF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKEA,gBAAAA,IAAAA,CAAAA,QAAAA,GALe,IAKfA;;AALF,qBAOM,KAAJ,yBAPF;AAAA;AAAA;AAAA;;AAQUmtC,gBAAAA,cARV,GAQ2BntC,IAAAA,CADW,oBACXA,EAR3B;;AAAA,qBASI,cATJ;AAAA;AAAA;AAAA;;AAUM,uCADkB,cAClB;AAVN;AAAA;AAAA,uBAYcmtC,cAAAA,CADJ,MAXV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAcQ,2CAA2B;AACzBC,kBAAAA,SAAAA,EAAW3tC,2BAFF;AACgB,iBAA3B;;AAGA7X,+DAA6BulD,cAAAA,CAJlB,MAIXvlD;AAGAoY,gBAAAA,IAAAA,CAAAA,eAAAA,GAPW,IAOXA;AApBR;;AAAA;AAAA;;AAAA;AA4BQqtC,gBAAAA,IA5BR,GA4BertC,IAAAA,CA5BE,kBA4BFA,EA5Bf;;AAAA,qBA6BE,IA7BF;AAAA;AAAA;AAAA;;AA8BI,gCADQ,IACR;;AA9BJ,qBAgCQ,KAAJ,0BAhCJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAmCU,YAAYvb,UAAAA,OAAAA,EAAW;AAC3B,sBAAMH,OAAAA,GAAU,4BADW,OACX,CAAhB;;AACA,8CAA2B,CAA3B,IAA2B,CAA3B,EAAmC,CAAnC,IAAmC,CAAnC,EAF2B,OAE3B;AARM,iBAMF,CAnCV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WA2CAgpD,+BAAAA,QAAAA,EAAgC;AAC9BjsC,6BAD8B,0CAC9BA;AAjGiB;;;SAoGnB,eAAgC;AAAA;;AAC9B,UAAMksC,QAAAA,GAAW,CAAC,qBAAC,cAAD,4CAAC,gBADW,KACZ,CAAlB;AAWA,aAAO1qC,kBAAAA,IAAAA,EAAAA,2BAAAA,EAZuB,QAYvBA,CAAP;AAhHiB;;;SAoHnB,eAAiC;AAC/BxB,6BAD+B,+CAC/BA;AArHiB;;;SAyHnB,eAAoB;AAClBA,6BADkB,kCAClBA;AA1HiB;;;WA6HnBmsC,+BAAAA,KAAAA,EAAAA,WAAAA,EAAAA,OAAAA,EAAmD;AACjDnsC,6BADiD,0CACjDA;AA9HiB;;;;;;AAkIrB,IA5JA,UA4JA;;AAOO;AAGLosC,EAAAA,kBAAAA,GAAAA,UAAAA;AAAAA;;AAAAA;;AACE9pD,+BAAAA,MAAAA,EAAoB;AAAA;;AAAA;;AAClB,iCADkB,MAClB;AACA,8BAAsB;AACpB+pD,QAAAA,QAAAA,EADoB;AAEpBC,QAAAA,aAAAA,EAFoB;AAAA,OAAtB;AAIA,8BANkB,CAMlB;AANkB;AADsC;;AAA5DF;AAAAA;AAAAA,WAUE,eAAiC;AAC/B,YAAIG,SAAAA,GAD2B,KAC/B;;AAEE,YAAI,qBAAJ,aAAsC;AAEpCA,UAAAA,SAAAA,GAFoC,IAEpCA;AAFF,eAGO;AAGL,cAAMpqC,CAAAA,GAAI,wCACRqqC,SAAAA,CAJG,SAGK,CAAV;;AAGA,cAAIrqC,CAAAA,CAAAA,SAAAA,IAAAA,CAAAA,WAAAA,YAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAJ,IAAkB;AAChBoqC,YAAAA,SAAAA,GADgB,IAChBA;AAPG;AANsB;;AAkB/B,eAAO/qC,kBAAAA,IAAAA,EAAAA,4BAAAA,EAlBwB,SAkBxBA,CAAP;AA5BwD;AAA5D4qC;AAAAA;AAAAA,aA+BEH,+BAAAA,QAAAA,EAAgC;AAC9B,mCAA2B;AACzBvmD,4BAAO,CAACzC,OAAAA,CAARyC,IAAAA,EADyB,2CACzBA;AACAzC,UAAAA,OAAAA,CAAAA,IAAAA,GAFyB,IAEzBA;;AAGA,iBAAO2G,OAAAA,CAAAA,QAAAA,CAAAA,MAAAA,GAAAA,CAAAA,IAA+BA,OAAAA,CAAAA,QAAAA,CAAAA,CAAAA,EAAtC,MAAgE;AAC9D,gBAAM6iD,YAAAA,GAAe7iD,OAAAA,CAAAA,QAAAA,CADyC,KACzCA,EAArB;AACAs0B,YAAAA,UAAAA,CAAWuuB,YAAAA,CAAXvuB,QAAAA,EAF8D,CAE9DA,CAAAA;AAPuB;AADG;;AAY9B,YAAMt0B,OAAAA,GAAU,KAZc,cAY9B;AACA,YAAM3G,OAAAA,GAAU;AACd4mB,UAAAA,EAAAA,+BAA0BjgB,OAAAA,CADZ,aACYA,EAA1BigB,CADc;AAEdzd,UAAAA,IAAAA,EAFc;AAGdsB,UAAAA,QAAAA,EAHc;AAIds0B,UAAAA,QAJc,EAIdA;AAJc,SAAhB;AAMAp4B,QAAAA,OAAAA,CAAAA,QAAAA,CAAAA,IAAAA,CAnB8B,OAmB9BA;AACA,eApB8B,OAoB9B;AAnDwD;AAA5DwiD;AAAAA;AAAAA,WAsDE,eAAoB;AAClB,YAAMM,eAAAA,GAAkB,SAAlBA,eAAkB,GAAY;AAGlC,iBAAOC,IAAAA,CACL,6/CAJgC,sEAG3BA,CAAP;AAJgB,SAClB;;AA4BA,eAAOnrC,kBAAAA,IAAAA,EAAAA,eAAAA,EAA8BkrC,eA7BnB,EA6BXlrC,CAAP;AAnFwD;AAA5D4qC;AAAAA;AAAAA,aAsFED,+BAAAA,KAAAA,EAAAA,KAAAA,EAAAA,OAAAA,EAA6C;AAAA;;AAO3C,qCAA6B;AAC3B,iBACGhpD,IAAAA,CAAAA,UAAAA,CAAAA,MAAAA,KAAD,EAACA,GACAA,IAAAA,CAAAA,UAAAA,CAAgBypD,MAAAA,GAAhBzpD,CAAAA,KADD,EAACA,GAEAA,IAAAA,CAAAA,UAAAA,CAAgBypD,MAAAA,GAAhBzpD,CAAAA,KAFD,CAACA,GAGAA,IAAAA,CAAAA,UAAAA,CAAgBypD,MAAAA,GAAhBzpD,CAAAA,IALwB,IAC3B;AARyC;;AAe3C,yDAAiD;AAC/C,cAAMkzC,MAAAA,GAASwW,CAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EADgC,MAChCA,CAAf;AACA,cAAMvW,MAAAA,GAASuW,CAAAA,CAAAA,SAAAA,CAAYD,MAAAA,GAFoB,MAEhCC,CAAf;AACA,iBAAOxW,MAAAA,GAAAA,MAAAA,GAHwC,MAG/C;AAlByC;;AAoB3C,eApB2C,EAoB3C;;AAGA,YAAM3zC,MAAAA,GAAS,6BAvB4B,QAuB5B,CAAf;;AACAA,QAAAA,MAAAA,CAAAA,KAAAA,GAxB2C,CAwB3CA;AACAA,QAAAA,MAAAA,CAAAA,MAAAA,GAzB2C,CAyB3CA;AACA,YAAMoqD,GAAAA,GAAMpqD,MAAAA,CAAAA,UAAAA,CA1B+B,IA0B/BA,CAAZ;AAEA,YAAIs6B,MAAAA,GA5BuC,CA4B3C;;AACA,6CAAqC;AACnCA,UAAAA,MADmC;;AAGnC,cAAIA,MAAAA,GAAJ,IAAiB;AACfz2B,4BADe,8BACfA;AACAy7B,YAAAA,QAFe;AAAA;AAHkB;;AAQnC8qB,UAAAA,GAAAA,CAAAA,IAAAA,GAAW,UARwB,IAQnCA;AACAA,UAAAA,GAAAA,CAAAA,QAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EATmC,EASnCA;AACA,cAAMvC,SAAAA,GAAYuC,GAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAViB,CAUjBA,CAAlB;;AACA,cAAIvC,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAJ,GAA2B;AACzBvoB,YAAAA,QADyB;AAAA;AAXQ;;AAenC9D,UAAAA,UAAAA,CAAW6uB,WAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAfwB,QAexBA,CAAX7uB,CAAAA;AA5CyC;;AA+C3C,YAAM8uB,cAAAA,eAAsBhmD,IAAAA,CAAL,GAAKA,EAAtBgmD,SAAmC,KA/CE,cA+CF,EAAnCA,CAAN;AAMA,YAAI7pD,IAAAA,GAAO,KArDgC,aAqD3C;AACA,YAAM8pD,cAAAA,GAtDqC,GAsD3C;AACA9pD,QAAAA,IAAAA,GAAO+pD,YAAAA,CAAAA,IAAAA,EAAAA,cAAAA,EAGLF,cAAAA,CAHKE,MAAAA,EAvDoC,cAuDpCA,CAAP/pD;AAOA,YAAMgqD,mBAAAA,GA9DqC,EA8D3C;AACA,YAAMC,UAAAA,GA/DqC,UA+D3C;AACA,YAAIC,QAAAA,GAAWC,KAAAA,CAAAA,IAAAA,EAhE4B,mBAgE5BA,CAAf;;AACA,aAAKrnD,CAAAA,GAAAA,CAAAA,EAAOD,EAAAA,GAAKgnD,cAAAA,CAAAA,MAAAA,GAAjB,GAA4C/mD,CAAAA,GAA5C,IAAoDA,CAAAA,IAApD,GAA4D;AAC1DonD,UAAAA,QAAAA,GAAYA,QAAAA,GAAAA,UAAAA,GAAwBC,KAAAA,CAAAA,cAAAA,EAAzB,CAAyBA,CAAxBD,GAD8C,CAC1DA;AAlEyC;;AAoE3C,YAAIpnD,CAAAA,GAAI+mD,cAAAA,CAAR,QAA+B;AAE7BK,UAAAA,QAAAA,GACGA,QAAAA,GAAAA,UAAAA,GAAwBC,KAAAA,CAAMN,cAAAA,GAANM,KAAAA,EAAzB,CAAyBA,CAAxBD,GAH0B,CAE7BA;AAtEyC;;AAyE3ClqD,QAAAA,IAAAA,GAAO+pD,YAAAA,CAAAA,IAAAA,EAAAA,mBAAAA,EAAAA,CAAAA,EAA2CK,oBAzEP,QAyEOA,CAA3CL,CAAP/pD;AAEA,YAAMwC,GAAAA,2CAAuC6nD,IAAAA,CA3EF,IA2EEA,CAAvC7nD,OAAN;AACA,YAAMqmD,IAAAA,uCAAO,cAAPA,oBA5EqC,GA4ErCA,MAAN;AACA,wBA7E2C,IA6E3C;AAEA,YAAM1/B,KAAAA,GA/EqC,EA+E3C;;AA/E2C,oDAgF3C,KAhF2C;AAAA;;AAAA;AAgF3C,iEAA0B;AAAA,gBAA1B,IAA0B;AACxBA,YAAAA,KAAAA,CAAAA,IAAAA,CAAW3N,IAAAA,CADa,UACxB2N;AAjFyC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmF3CA,QAAAA,KAAAA,CAAAA,IAAAA,CAnF2C,cAmF3CA;;AAEA,YAAMmhC,GAAAA,GAAM,6BArF+B,KAqF/B,CAAZ;;AACAA,QAAAA,GAAAA,CAAAA,KAAAA,CAAAA,UAAAA,GAtF2C,QAsF3CA;AACAA,QAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,GAAkBA,GAAAA,CAAAA,KAAAA,CAAAA,MAAAA,GAvFyB,MAuF3CA;AACAA,QAAAA,GAAAA,CAAAA,KAAAA,CAAAA,QAAAA,GAxF2C,UAwF3CA;AACAA,QAAAA,GAAAA,CAAAA,KAAAA,CAAAA,GAAAA,GAAgBA,GAAAA,CAAAA,KAAAA,CAAAA,IAAAA,GAzF2B,KAyF3CA;;AAEA,mEAA0B;AAA1B,cAAW1mD,IAAX;;AACE,cAAM2mD,IAAAA,GAAO,6BADW,MACX,CAAb;;AACAA,UAAAA,IAAAA,CAAAA,WAAAA,GAFwB,IAExBA;AACAA,UAAAA,IAAAA,CAAAA,KAAAA,CAAAA,UAAAA,GAHwB,IAGxBA;AACAD,UAAAA,GAAAA,CAAAA,WAAAA,CAJwB,IAIxBA;AA/FyC;;AAiG3C,wCAjG2C,GAiG3C;;AAEAV,QAAAA,WAAAA,CAAAA,cAAAA,EAA4B,YAAM;AAChC,4CADgC,GAChC;;AACA9pD,UAAAA,OAAAA,CAFgC,QAEhCA;AArGyC,SAmG3C8pD,CAAAA;AAzLwD;AAA5DX;;AAAAA;AAAAA,IAAa,cAAbA,CAAAA;AAtKF;;IAwWA;AACE9pD,0BAAAA,cAAAA,SASE;AAAA,sCANEqf,eAMF;AAAA,QANEA,eAMF,sCAPA,IAOA;AAAA,sCALEs+B,eAKF;AAAA,QALEA,eAKF,sCAPA,KAOA;AAAA,mCAJEG,YAIF;AAAA,QAJEA,YAIF,mCAPA,KAOA;AAAA,QAPA,oBAOA,SAPA,oBAOA;AAAA,mCAFE+J,YAEF;AAAA,QAFEA,YAEF,mCATF7nD,IASE;;AAAA;;AACA,0BAAsBuE,MAAAA,CAAAA,MAAAA,CADtB,IACsBA,CAAtB;;AAEA,kCAAgC;AAC9B,gBAAU8mD,cAAAA,CADoB,CACpBA,CAAV;AAJF;;AAMA,2BAAuBhsC,eAAAA,KANvB,KAMA;AACA,2BAAuBs+B,eAAAA,KAPvB,IAOA;AACA,wBAAoBG,YAAAA,KARpB,IAQA;AACA,iCATA,oBASA;AACA,wBAVA,YAUA;AApBiB;;;;WAuBnBwN,gCAAuB;AACrB,UAAI,CAAC,KAAD,QAAc,KAAlB,iBAAwC;AACtC,eADsC,IACtC;AAFmB;;AAIrB,UAJqB,cAIrB;;AACA,UAAI,CAAC,KAAL,aAAuB;AACrB9B,QAAAA,cAAAA,GAAiB,aAAa,KAAb,YAA8B,KAA9B,MADI,EACJ,CAAjBA;AADF,aAEO;AACL,YAAM+B,GAAAA,GAAM;AACVC,UAAAA,MAAAA,EAAQ,iBAFL;AACO,SAAZ;;AAGA,YAAI,iBAAJ,aAAkC;AAChCD,UAAAA,GAAAA,CAAAA,KAAAA,qBAAuB,iBADS,WAChCA;AALG;;AAOL/B,QAAAA,cAAAA,GAAiB,aACf,iBADe,YAEf,KAFe,MAPZ,GAOY,CAAjBA;AAdmB;;AAqBrB,UAAI,KAAJ,cAAuB;AACrB,uCADqB,IACrB;AAtBmB;;AAwBrB,aAxBqB,cAwBrB;AA/CiB;;;WAkDnBiC,8BAAqB;AACnB,UAAI,CAAC,KAAD,QAAc,KAAlB,iBAAwC;AACtC,eADsC,IACtC;AAFiB;;AAInB,UAAM5qD,IAAAA,GAAO6qD,yBAAc,KAJR,IAINA,CAAb;AAEA,UAAMroD,GAAAA,sBAAkB,KAAZ,QAANA,qBAA0C6nD,IAAAA,CAN7B,IAM6BA,CAA1C7nD,OAAN;AACA,UAPmB,IAOnB;;AACA,UAAI,CAAC,KAAL,aAAuB;AACrBqmD,QAAAA,IAAAA,uCAAmC,KAA5B,UAAPA,oBADqB,GACrBA,MAAAA;AADF,aAEO;AACL,YAAI6B,GAAAA,0BAAsB,iBADrB,UACDA,MAAJ;;AACA,YAAI,iBAAJ,aAAkC;AAChCA,UAAAA,GAAAA,kCAA8B,iBADE,WAChCA,SAAAA;AAHG;;AAKL7B,QAAAA,IAAAA,uCAAmC,iBAA5B,UAAPA,gBAAO,GAAPA,iBALK,GAKLA,MAAAA;AAfiB;;AAkBnB,UAAI,KAAJ,cAAuB;AACrB,6CADqB,GACrB;AAnBiB;;AAqBnB,aArBmB,IAqBnB;AAvEiB;;;WA0EnBiC,0BAAAA,IAAAA,EAAAA,SAAAA,EAAkC;AAChC,UAAI,mCAAJ,WAAkD;AAChD,eAAO,oBADyC,SACzC,CAAP;AAF8B;;AAKhC,UALgC,IAKhC;;AACA,UAAI;AACFC,QAAAA,IAAAA,GAAO5J,IAAAA,CAAAA,GAAAA,CAAS,6BADd,SACKA,CAAP4J;AADF,QAEE,WAAW;AACX,YAAI,CAAC,KAAL,cAAwB;AACtB,gBADsB,EACtB;AAFS;;AAIX,mCAA2B;AACzBnC,UAAAA,SAAAA,EAAW3tC,2BALF;AAIgB,SAA3B;;AAGA7X,2EAPW,EAOXA;AAEA,eAAQ,iCAAiC,mBAAmB,CATjD,CASX;AAjB8B;;AAuBhC,UAAI,wBAAwBmb,4BAA5B,OAAyD;AACvD,YAAMysC,KAAAA,GADiD,EACvD;;AADuD,oDAEvD,IAFuD;AAAA;;AAAA;AAEvD,iEAA4B;AAAA,gBAA5B,OAA4B;AAC1B,gBAAMxgC,IAAAA,GAAOygC,OAAAA,CAAAA,IAAAA,KAAAA,SAAAA,GAA6BA,OAAAA,CAAAA,IAAAA,CAAAA,IAAAA,CAA7BA,GAA6BA,CAA7BA,GADa,EAC1B;AACAD,YAAAA,KAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAiBC,OAAAA,CAAjBD,GAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAF0B,MAE1BA;AAJqD;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOvD,eAAQ,iCAAiC,0BAGvCA,KAAAA,CAAAA,IAAAA,CAVqD,EAUrDA,CAHuC,CAAzC;AA9B8B;;AAsChC,aAAQ,iCAAiC,mBAAmB;AAAA,oDAC1D,IAD0D;AAAA;;AAAA;AAC1D,iEAA4B;AAAA,gBAA5B,QAA4B;;AAC1B,gBAAIC,QAAAA,CAAAA,GAAAA,KAAJ,SAA6B;AAC3BA,cAAAA,QAAAA,CAAAA,IAAAA,GAAe,OAAO,CAAP,KAAfA;AAFwB;;AAI1BprC,YAAAA,CAAAA,CAAEorC,QAAAA,CAAFprC,GAAAA,CAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAwBorC,QAAAA,CAJE,IAI1BprC;AALwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAtC5B,OAsChC;AAhHiB;;;;;;;;;;;;;;;;;;;;;ACxVrB;;AAhBA;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAIqrC,iBAAAA,GACF/rD,6BAAc;AAAA;;AACZ0d,yBADY,oCACZA;AAF0B,CAA9B;;;;AAMA,IAAIsuC,qBAAAA,GACFhsD,iCAAc;AAAA;;AACZ0d,yBADY,wCACZA;AAF8B,CAAlC;;;;AAMA,IAAIuuC,2BAAAA,GACFjsD,uCAAc;AAAA;;AACZ0d,yBADY,8CACZA;AAFoC,CAAxC;;;;AAMA,uBAA+E;AAC7E,MAAMvc,SAAAA,GAAY,SAAZA,SAAY,MAAe;AAC/B,WAAO,YAAY,2BAAqB;AACtC,UAAM+qD,EAAAA,GAAKC,OAAAA,CAD2B,IAC3BA,CAAX;;AACAD,MAAAA,EAAAA,CAAAA,QAAAA,CAAAA,GAAAA,EAAiB,uBAAiB;AAChC,YAAIvvB,KAAAA,IAAS,CAAb,MAAoB;AAClB57B,UAAAA,MAAAA,CAAO,UADW,KACX,CAAPA,CAAAA;AADkB;AADY;;AAKhCD,QAAAA,OAAAA,CAAQ,eALwB,IAKxB,CAARA,CAAAA;AAPoC,OAEtCorD;AAH6B,KACxB,CAAP;AAF2E,GAC7E;;AAaAH,EAAAA,yBAAAA,GAAAA,iBAAAA;AAAAA;;AAAAA;;AAAAA;AAAAA;;AAAAA;AAAAA;;AAAAA;AAAAA;AAAAA,aACE5rD,uBAAAA,KAAAA,EAAAA,MAAAA,EAA6B;AAC3B,YAAMisD,MAAAA,GAASD,OAAAA,CADY,QACZA,CAAf;;AACA,eAAOC,MAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAFoB,MAEpBA,CAAP;AAHgD;AAApDL;;AAAAA;AAAAA,IAAoB,+BAApBA,CAAAA;;AAOAC,EAAAA,6BAAAA,GAAAA,qBAAAA;AAAAA;;AAAAA;;AAAAA;AAAAA;;AAAAA;AAAAA;;AAAAA;AAAAA;AAAAA,aACEhrD,oBAAAA,GAAAA,EAAAA,eAAAA,EAAiC;AAC/B,eAAO,oBAAoBH,UAAAA,IAAAA,EAAQ;AACjC,iBAAO;AAAEI,YAAAA,QAAAA,EAAF;AAAkBC,YAAAA,eAAlB,EAAkBA;AAAlB,WAAP;AAF6B,SACxB,CAAP;AAFwD;AAA5D8qD;;AAAAA;AAAAA,IAAwB,mCAAxBA,CAAAA;;AAQAC,EAAAA,mCAAAA,GAAAA,2BAAAA;AAAAA;;AAAAA;;AAAAA;AAAAA;;AAAAA;AAAAA;;AAAAA;AAAAA;AAAAA,aACEjrD,oBAAAA,GAAAA,EAAgB;AACd,eAAOG,SAAAA,CADO,GACPA,CAAP;AAFoE;AAAxE8qD;;AAAAA;AAAAA,IAA8B,yCAA9BA,CAAAA;AAvEF;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;IAoBA;AACEjsD,+BAAc;AAAA;;AACZ,oBAAgB,IADJ,GACI,EAAhB;AACA,sBAAkB0E,IAAAA,CAFN,GAEMA,EAAlB;AACA,qBAHY,KAGZ;AAMA,yBATY,IASZ;AACA,2BAVY,IAUZ;AAXoB;;;;WAuBtB2nD,kBAAAA,GAAAA,EAAAA,YAAAA,EAA4B;AAAA;;AAC1B,mCAAO,sBAAP,mEAD0B,YAC1B;AAxBoB;;;WAmCtBC,kBAAAA,GAAAA,EAAAA,KAAAA,EAAqB;AACnB,UAAMrlD,GAAAA,GAAM,kBADO,GACP,CAAZ;;AACA,UAAIslD,QAAAA,GAFe,KAEnB;;AACA,UAAItlD,GAAAA,KAAJ,WAAuB;AACrB,2CAA2B1C,MAAAA,CAAAA,OAAAA,CAA3B,KAA2BA,CAA3B,qCAAkD;AAAlD;AAAA,cAAW,KAAX;AAAA;;AACE,cAAI0C,GAAAA,CAAAA,KAAAA,CAAAA,KAAJ,KAAwB;AACtBslD,YAAAA,QAAAA,GADsB,IACtBA;AACAtlD,YAAAA,GAAAA,CAAAA,KAAAA,CAAAA,GAFsB,GAEtBA;AAH8C;AAD7B;AAAvB,aAOO;AACLslD,QAAAA,QAAAA,GADK,IACLA;;AACA,+BAFK,KAEL;AAZiB;;AAcnB,oBAAc;AACZ,0BAAkB7nD,IAAAA,CADN,GACMA,EAAlB;;AACA,aAFY,YAEZ;AAhBiB;AAnCC;;;WAuDtB8nD,kBAAS;AACP,aAAO,yBAAyBC,yBAAc,KAAvC,QAAyBA,CAAzB,GADA,IACP;AAxDoB;;;SA2DtB,eAAW;AACT,aAAO,cADE,IACT;AA5DoB;;;WAkEtBC,wBAAe;AACb,UAAI,CAAC,KAAL,WAAqB;AACnB,yBADmB,IACnB;;AACA,YAAI,OAAO,KAAP,kBAAJ,YAA8C;AAC5C,eAD4C,aAC5C;AAHiB;AADR;AAlEO;;;WA2EtBC,yBAAgB;AACd,UAAI,KAAJ,WAAoB;AAClB,yBADkB,KAClB;;AACA,YAAI,OAAO,KAAP,oBAAJ,YAAgD;AAC9C,eAD8C,eAC9C;AAHgB;AADN;AA3EM;;;SAwFtB,eAAmB;AACjB,aAAO,yBAAyB,KAAzB,WADU,IACjB;AAzFoB;;;SAgGtB,eAAmB;AACjB,aAAO,gBADU,QACV,EAAP;AAjGoB;;;;;;;;;;;;;;;;;;;ACLxB;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMC,aAAAA,GAlCN,EAkCA;AAEA,IAAMC,aAAAA,GApCN,GAoCA;AACA,IAAMC,cAAAA,GArCN,IAqCA;AAIA,IAAMC,0BAAAA,GAzCN,CAyCA;AAIA,IAAMC,cAAAA,GA7CN,EA6CA;AAEA,IAAMC,eAAAA,GA/CN,EA+CA;AAEA,IAAMC,oBAAAA,GAjDN,IAiDA;AACA,IAAMC,mBAAAA,GAlDN,IAkDA;AAEA,IAAMC,iBAAAA,GApDN,EAoDA;AAOA,IAAMC,sBAAAA,GA3DN,QA2DA;;AAEA,yCAAyC;AAEvC,MAAI7C,GAAAA,CAAJ,qBAA6B;AAAA;AAFU;;AAKvCA,EAAAA,GAAAA,CAAAA,aAAAA,GAAoBA,GAAAA,CALmB,IAKvCA;AACAA,EAAAA,GAAAA,CAAAA,gBAAAA,GAAuBA,GAAAA,CANgB,OAMvCA;AACAA,EAAAA,GAAAA,CAAAA,eAAAA,GAAsBA,GAAAA,CAPiB,MAOvCA;AACAA,EAAAA,GAAAA,CAAAA,cAAAA,GAAqBA,GAAAA,CARkB,KAQvCA;AACAA,EAAAA,GAAAA,CAAAA,kBAAAA,GAAyBA,GAAAA,CATc,SASvCA;AACAA,EAAAA,GAAAA,CAAAA,kBAAAA,GAAyBA,GAAAA,CAVc,SAUvCA;AACAA,EAAAA,GAAAA,CAAAA,qBAAAA,GAA4BA,GAAAA,CAXW,YAWvCA;AACAA,EAAAA,GAAAA,CAAAA,uBAAAA,GAA8BA,GAAAA,CAZS,cAYvCA;AAEAA,EAAAA,GAAAA,CAAAA,gBAAAA,GAAuBA,GAAAA,CAAAA,gBAAAA,IAAwB,kBAA/CA;AACAA,EAAAA,GAAAA,CAAAA,eAAAA,GAfuC,EAevCA;;AAEA,MAAI;AAIF,QAAM5F,IAAAA,GAAOrgD,MAAAA,CAAAA,wBAAAA,CACXA,MAAAA,CAAAA,cAAAA,CADWA,GACXA,CADWA,EAJX,WAIWA,CAAb;AAKAimD,IAAAA,GAAAA,CAAAA,aAAAA,GAAoB5F,IAAAA,CATlB,GASF4F;AACAA,IAAAA,GAAAA,CAAAA,aAAAA,GAAoB5F,IAAAA,CAVlB,GAUF4F;AAEAjmD,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,GAAAA,EAAAA,WAAAA,EAAwC;AACtCykB,MAAAA,GAAAA,EAAK,6BAA6B;AAChC,2BAAmB7mB,KAAAA,GADa,sBAChC;AAFoC;AAItC6f,MAAAA,GAAAA,EAAK,wBAAwB;AAC3B,eAAO,KADoB,aACpB,EAAP;AALoC;AAAA,KAAxCzd;AAZF,IAoBE,UAAU,CArC2B;;AAuCvCA,EAAAA,MAAAA,CAAAA,cAAAA,CAAAA,GAAAA,EAAAA,qBAAAA,EAAkD;AAChDyd,IAAAA,GAAAA,EAAK,+BAA+B;AAClC,aAAO,KAD2B,gBAClC;AAF8C;AAAA,GAAlDzd;AAMAA,EAAAA,MAAAA,CAAAA,cAAAA,CAAAA,GAAAA,EAAAA,4BAAAA,EAAyD;AACvDyd,IAAAA,GAAAA,EAAK,sCAAsC;AAKzC,iDAA2B,KALc,gBAKzC;AAAA,UAAM,CAAN;AAAA,UAAM,CAAN;AAAA,UAAM,CAAN;AAAA,UAAM,CAAN;AAAA,UAAM,CAAN;AAAA,UAAM,CAAN;;AACA,UAAMsrC,KAAAA,GAAQ9sC,CAAAA,GAAAA,CAAAA,GAAQC,CAAAA,GANmB,CAMzC;AACA,UAAM8sC,KAAAA,GAAQ9sC,CAAAA,GAAAA,CAAAA,GAAQD,CAAAA,GAPmB,CAOzC;AAEA,aAAO,CACLT,CAAAA,GADK,OAELU,CAAAA,GAFK,OAGLC,CAAAA,GAHK,OAILF,CAAAA,GAJK,OAKJ,SAAQE,CAAAA,GAAT,CAAC,IALI,OAMJ,SAAQF,CAAAA,GAAT,CAAC,IANI,MAAP;AAVqD;AAAA,GAAzDjc;;AAqBAimD,EAAAA,GAAAA,CAAAA,IAAAA,GAAW,mBAAmB;AAC5B,QAAMgD,GAAAA,GAAM,KADgB,gBAC5B;;AACA,8BAF4B,GAE5B;;AACA,4BAAwBA,GAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAHI,CAGJA,CAAxB;;AAEA,SAL4B,aAK5B;AAvEqC,GAkEvChD;;AAQAA,EAAAA,GAAAA,CAAAA,OAAAA,GAAc,sBAAsB;AAClC,QAAMiD,IAAAA,GAAO,qBADqB,GACrB,EAAb;;AACA,cAAU;AACR,8BADQ,IACR;;AACA,WAFQ,gBAER;AAJgC;AA1EG,GA0EvCjD;;AAQAA,EAAAA,GAAAA,CAAAA,SAAAA,GAAgB,4BAA4B;AAC1C,QAAM3qC,CAAAA,GAAI,KADgC,gBAC1C;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAWA,CAAAA,CAAAA,CAAAA,CAAAA,GAAXA,CAAAA,GAAsBA,CAAAA,CAFa,CAEbA,CAA7BA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAWA,CAAAA,CAAAA,CAAAA,CAAAA,GAAXA,CAAAA,GAAsBA,CAAAA,CAHa,CAGbA,CAA7BA;;AAEA,+BAL0C,CAK1C;AAvFqC,GAkFvC2qC;;AAQAA,EAAAA,GAAAA,CAAAA,KAAAA,GAAY,wBAAwB;AAClC,QAAM3qC,CAAAA,GAAI,KADwB,gBAClC;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAFkC,CAElCA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAHkC,CAGlCA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAJkC,CAIlCA;AACAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IALkC,CAKlCA;;AAEA,2BAPkC,CAOlC;AAjGqC,GA0FvC2qC;;AAUAA,EAAAA,GAAAA,CAAAA,SAAAA,GAAgB,wCAAwC;AACtD,QAAM3qC,CAAAA,GAAI,KAD4C,gBACtD;AACA,4BAAwB,CACtBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAWA,CAAAA,CAAAA,CAAAA,CAAAA,GADW,GAEtBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAWA,CAAAA,CAAAA,CAAAA,CAAAA,GAFW,GAGtBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAWA,CAAAA,CAAAA,CAAAA,CAAAA,GAHW,GAItBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAWA,CAAAA,CAAAA,CAAAA,CAAAA,GAJW,GAKtBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAWA,CAAAA,CAAAA,CAAAA,CAAAA,GAAXA,CAAAA,GAAsBA,CAAAA,CALA,CAKAA,CALA,EAMtBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAWA,CAAAA,CAAAA,CAAAA,CAAAA,GAAXA,CAAAA,GAAsBA,CAAAA,CANA,CAMAA,CANA,CAAxB;;AASA2qC,IAAAA,GAAAA,CAAAA,kBAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAXsD,CAWtDA;AA/GqC,GAoGvCA;;AAcAA,EAAAA,GAAAA,CAAAA,YAAAA,GAAmB,2CAA2C;AAC5D,4BAAwB,kBAAxB;;AAEAA,IAAAA,GAAAA,CAAAA,qBAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAH4D,CAG5DA;AArHqC,GAkHvCA;;AAMAA,EAAAA,GAAAA,CAAAA,cAAAA,GAAqB,6BAA6B;AAChD,4BAAwB,kBAAxB;;AAEAA,IAAAA,GAAAA,CAHgD,uBAGhDA;AA3HqC,GAwHvCA;;AAMAA,EAAAA,GAAAA,CAAAA,MAAAA,GAAa,0BAA0B;AACrC,QAAMkD,QAAAA,GAAWzrD,IAAAA,CAAAA,GAAAA,CADoB,KACpBA,CAAjB;AACA,QAAM0rD,QAAAA,GAAW1rD,IAAAA,CAAAA,GAAAA,CAFoB,KAEpBA,CAAjB;AAEA,QAAM4d,CAAAA,GAAI,KAJ2B,gBAIrC;AACA,4BAAwB,CACtBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,QAAAA,GAAkBA,CAAAA,CAAAA,CAAAA,CAAAA,GADI,UAEtBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,QAAAA,GAAkBA,CAAAA,CAAAA,CAAAA,CAAAA,GAFI,UAGtBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAO,CAAPA,QAAAA,GAAmBA,CAAAA,CAAAA,CAAAA,CAAAA,GAHG,UAItBA,CAAAA,CAAAA,CAAAA,CAAAA,GAAO,CAAPA,QAAAA,GAAmBA,CAAAA,CAAAA,CAAAA,CAAAA,GAJG,UAKtBA,CAAAA,CALsB,CAKtBA,CALsB,EAMtBA,CAAAA,CANsB,CAMtBA,CANsB,CAAxB;;AASA,yBAdqC,KAcrC;AA5IqC,GA8HvC2qC;AA3LF;;IA6MA;AACExqD,0BAAAA,aAAAA,EAA2B;AAAA;;AACzB,yBADyB,aACzB;AACA,iBAAauE,MAAAA,CAAAA,MAAAA,CAFY,IAEZA,CAAb;AAHiB;;;;WAMnBqpD,mBAAAA,EAAAA,EAAAA,KAAAA,EAAAA,MAAAA,EAAAA,cAAAA,EAA6C;AAC3C,UAD2C,WAC3C;;AACA,UAAI,mBAAJ,WAAkC;AAChCC,QAAAA,WAAAA,GAAc,WADkB,EAClB,CAAdA;AACA,qDAFgC,MAEhC;AAEAA,QAAAA,WAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAJgC,CAIhCA;AAJF,aAKO;AACLA,QAAAA,WAAAA,GAAc,iCADT,MACS,CAAdA;AACA,yBAFK,WAEL;AATyC;;AAW3C,0BAAoB;AAClBC,QAAAA,0BAAAA,CAA2BD,WAAAA,CADT,OAClBC,CAAAA;AAZyC;;AAc3C,aAd2C,WAc3C;AApBiB;;;WAuBnBhzB,iBAAQ;AACN,qBAAiB,KAAjB,OAA6B;AAC3B,YAAM+yB,WAAAA,GAAc,WADO,EACP,CAApB;AACA,mCAF2B,WAE3B;AACA,eAAO,WAHoB,EAGpB,CAAP;AAJI;AAvBW;;;;;;IAoCrB;AACE7tD,sBAAyB;AAAA,QAAb+tD,OAAa,uEAAzB/tD,CAAyB;;AAAA;;AACvB,kBAAc,IADS,GACT,EAAd;AACA,oBAFuB,OAEvB;AAHW;;;;WAMbwkB,aAAAA,GAAAA,EAAS;AACP,aAAO,gBADA,GACA,CAAP;AAPW;;;WAUbxC,aAAAA,GAAAA,EAAS;AACP,UAAI,gBAAJ,GAAI,CAAJ,EAA0B;AAExB,YAAMnb,KAAAA,GAAQ,gBAFU,GAEV,CAAd;;AACA,8BAHwB,GAGxB;;AACA,6BAJwB,KAIxB;AALK;;AAOP,aAAO,gBAPA,GAOA,CAAP;AAjBW;;;WAoBbmiB,aAAAA,GAAAA,EAAAA,KAAAA,EAAgB;AACd,UAAI,iBAAJ,GAAwB;AAAA;AADV;;AAId,UAAI,uBAAuB,KAA3B,UAA0C;AAExC,8BAAmB,0BAFqB,KAExC;AANY;;AAQd,2BARc,KAQd;AA5BW;;;WA+Bb8R,iBAAQ;AACN,kBADM,KACN;AAhCW;;;;;;AAoCf,oCAAoC;AAClC,MAAMkzB,sBAAAA,GAD4B,IAClC;AACA,MAAMC,WAAAA,GAAc,eAAe,iDAAf,CAApB;AAIA,MAAM9rD,KAAAA,GAAQ+rD,OAAAA,CAAd;AAAA,MACE9rD,MAAAA,GAAS8rD,OAAAA,CADX;AAAA,MAEEC,MAAAA,GAAShsD,KAAAA,GARuB,CAMlC;AAGA,gBATkC,EASlC;AACA,MAAMisD,MAAAA,GAAS,eAAeD,MAAAA,IAAU,SAVN,CAUJA,CAAf,CAAf;AAGA,MAAME,QAAAA,GAAYlsD,KAAAA,GAAD,CAACA,GAAa,CAA/B;AAAA,MACEmsD,KAAAA,GAAQJ,OAAAA,CAdwB,IAalC;AAEA,MAAMrtD,IAAAA,GAAO,eAAewtD,QAAAA,GAfM,MAerB,CAAb;AACA,MAAIzvC,GAAAA,GAhB8B,CAgBlC;;AACA,OAAKjb,CAAAA,GAAAA,CAAAA,EAAOD,EAAAA,GAAK4qD,KAAAA,CAAjB,QAA+B3qD,CAAAA,GAA/B,IAAuCA,CAAvC,IAA4C;AAC1C,QAAM4qD,IAAAA,GAAOD,KAAAA,CAD6B,CAC7BA,CAAb;AACA,QAAIE,IAAAA,GAFsC,GAE1C;;AACA,WAAOA,IAAAA,GAAP,GAAiB;AACf3tD,MAAAA,IAAAA,CAAK+d,GAAL/d,EAAAA,CAAAA,GAAc0tD,IAAAA,GAAAA,IAAAA,GAAAA,CAAAA,GADC,GACf1tD;AACA2tD,MAAAA,IAAAA,KAFe,CAEfA;AALwC;AAjBV;;AAoClC,MAAIC,KAAAA,GApC8B,CAoClC;AACA7vC,EAAAA,GAAAA,GArCkC,CAqClCA;;AACA,MAAI/d,IAAAA,CAAAA,GAAAA,CAAAA,KAAJ,GAAqB;AACnButD,IAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GADmB,CACnBA;AACA,MAFmB,KAEnB;AAxCgC;;AA0ClC,OAAKM,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,OAAuBA,CAAvB,IAA4B;AAC1B,QAAI7tD,IAAAA,CAAAA,GAAAA,CAAAA,KAAcA,IAAAA,CAAK+d,GAAAA,GAAvB,CAAkB/d,CAAlB,EAAiC;AAC/ButD,MAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAAYvtD,IAAAA,CAAAA,GAAAA,CAAAA,GAAAA,CAAAA,GADmB,CAC/ButD;AACA,QAF+B,KAE/B;AAHwB;;AAK1BxvC,IAAAA,GAL0B;AA1CM;;AAiDlC,MAAI/d,IAAAA,CAAAA,GAAAA,CAAAA,KAAJ,GAAqB;AACnButD,IAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GADmB,CACnBA;AACA,MAFmB,KAEnB;AAnDgC;;AAqDlC,OAAKzqD,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,QAAwBA,CAAxB,IAA6B;AAC3Bib,IAAAA,GAAAA,GAAMjb,CAAAA,GADqB,QAC3Bib;AACA+vC,IAAAA,EAAAA,GAAKhrD,CAAAA,GAFsB,MAE3BgrD;;AACA,QAAI9tD,IAAAA,CAAK+d,GAAAA,GAAL/d,QAAAA,CAAAA,KAAyBA,IAAAA,CAA7B,GAA6BA,CAA7B,EAAwC;AACtCutD,MAAAA,MAAAA,CAAAA,EAAAA,CAAAA,GAAavtD,IAAAA,CAAAA,GAAAA,CAAAA,GAAAA,CAAAA,GADyB,CACtCutD;AACA,QAFsC,KAEtC;AALyB;;AAS3B,QAAIQ,GAAAA,GAAO,iBAAD,CAAC,KAAsB,KAAKhwC,GAAAA,GAAL,gBATN,CAShB,CAAX;;AACA,SAAK8vC,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,OAAuBA,CAAvB,IAA4B;AAC1BE,MAAAA,GAAAA,GACG,QAAD,CAAC,KACA,KAAKhwC,GAAAA,GAAL,SADD,CAAC,KAEA,KAAKA,GAAAA,GAAAA,QAAAA,GAAL,SAJuB,CAEvB,CADHgwC;;AAIA,UAAIX,WAAAA,CAAJ,GAAIA,CAAJ,EAAsB;AACpBG,QAAAA,MAAAA,CAAOO,EAAAA,GAAPP,CAAAA,CAAAA,GAAiBH,WAAAA,CADG,GACHA,CAAjBG;AACA,UAFoB,KAEpB;AAPwB;;AAS1BxvC,MAAAA,GAT0B;AAVD;;AAqB3B,QAAI/d,IAAAA,CAAK+d,GAAAA,GAAL/d,QAAAA,CAAAA,KAAyBA,IAAAA,CAA7B,GAA6BA,CAA7B,EAAwC;AACtCutD,MAAAA,MAAAA,CAAOO,EAAAA,GAAPP,CAAAA,CAAAA,GAAiBvtD,IAAAA,CAAAA,GAAAA,CAAAA,GAAAA,CAAAA,GADqB,CACtCutD;AACA,QAFsC,KAEtC;AAvByB;;AA0B3B,QAAIK,KAAAA,GAAJ,wBAAoC;AAClC,aADkC,IAClC;AA3ByB;AArDK;;AAoFlC7vC,EAAAA,GAAAA,GAAMyvC,QAAAA,IAAY,SApFgB,CAoF5BA,CAANzvC;AACA+vC,EAAAA,EAAAA,GAAKhrD,CAAAA,GArF6B,MAqFlCgrD;;AACA,MAAI9tD,IAAAA,CAAAA,GAAAA,CAAAA,KAAJ,GAAqB;AACnButD,IAAAA,MAAAA,CAAAA,EAAAA,CAAAA,GADmB,CACnBA;AACA,MAFmB,KAEnB;AAxFgC;;AA0FlC,OAAKM,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,OAAuBA,CAAvB,IAA4B;AAC1B,QAAI7tD,IAAAA,CAAAA,GAAAA,CAAAA,KAAcA,IAAAA,CAAK+d,GAAAA,GAAvB,CAAkB/d,CAAlB,EAAiC;AAC/ButD,MAAAA,MAAAA,CAAOO,EAAAA,GAAPP,CAAAA,CAAAA,GAAiBvtD,IAAAA,CAAAA,GAAAA,CAAAA,GAAAA,CAAAA,GADc,CAC/ButD;AACA,QAF+B,KAE/B;AAHwB;;AAK1BxvC,IAAAA,GAL0B;AA1FM;;AAiGlC,MAAI/d,IAAAA,CAAAA,GAAAA,CAAAA,KAAJ,GAAqB;AACnButD,IAAAA,MAAAA,CAAOO,EAAAA,GAAPP,CAAAA,CAAAA,GADmB,CACnBA;AACA,MAFmB,KAEnB;AAnGgC;;AAqGlC,MAAIK,KAAAA,GAAJ,wBAAoC;AAClC,WADkC,IAClC;AAtGgC;;AA0GlC,MAAMI,KAAAA,GAAQ,eAAe,YAAY,CAAZ,MAAmB,CAAnB,mBAAf,CAAd;AACA,MAAMC,QAAAA,GA3G4B,EA2GlC;;AACA,OAAKnrD,CAAAA,GAAL,GAAY8qD,KAAAA,IAAS9qD,CAAAA,IAArB,QAAkCA,CAAlC,IAAuC;AACrC,QAAIic,CAAAA,GAAIjc,CAAAA,GAD6B,MACrC;AACA,QAAMG,GAAAA,GAAM8b,CAAAA,GAFyB,KAErC;;AACA,WAAOA,CAAAA,GAAAA,GAAAA,IAAW,CAACwuC,MAAAA,CAAnB,CAAmBA,CAAnB,EAA8B;AAC5BxuC,MAAAA,CAD4B;AAHO;;AAMrC,QAAIA,CAAAA,KAAJ,KAAe;AAAA;AANsB;;AASrC,QAAMmvC,MAAAA,GAAS,CAACnvC,CAAAA,GAAD,UAAf;AAEA,QAAMovC,EAAAA,GAX+B,CAWrC;AACA,QAAItnD,IAAAA,GAAO0mD,MAAAA,CAZ0B,CAY1BA,CAAX;;AACA,OAAG;AACD,UAAMl5B,IAAAA,GAAO25B,KAAAA,CADZ,IACYA,CAAb;;AACA,SAAG;AACDjvC,QAAAA,CAAAA,IADC,IACDA;AADF,eAES,CAACwuC,MAAAA,CAJT,CAISA,CAFV;;AAIA,UAAMa,EAAAA,GAAKb,MAAAA,CANV,CAMUA,CAAX;;AACA,UAAIa,EAAAA,KAAAA,CAAAA,IAAYA,EAAAA,KAAhB,IAA2B;AAEzBvnD,QAAAA,IAAAA,GAFyB,EAEzBA;AAEA0mD,QAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAJyB,CAIzBA;AAJF,aAKO;AAGL1mD,QAAAA,IAAAA,GAAOunD,EAAAA,GAAO,OAAD,IAAC,IAHT,CAGLvnD;AAEA0mD,QAAAA,MAAAA,CAAAA,CAAAA,CAAAA,IAAc1mD,IAAAA,IAAD,CAACA,GAAcA,IAAAA,IALvB,CAKL0mD;AAjBD;;AAoBDW,MAAAA,MAAAA,CAAAA,IAAAA,CAAYnvC,CAAAA,GAAZmvC,MAAAA,EAAyBnvC,CAAAA,GAAD,MAACA,GApBxB,CAoBDmvC;;AAEA,UAAI,CAACX,MAAAA,CAAL,CAAKA,CAAL,EAAgB;AACd,UADc,KACd;AAvBD;AAAH,aAyBSY,EAAAA,KAtC4B,CAarC;;AA0BAF,IAAAA,QAAAA,CAAAA,IAAAA,CAvCqC,MAuCrCA;AACA,MAxCqC,CAwCrC;AApJgC;;AAuJlC,MAAMI,WAAAA,GAAc,SAAdA,WAAc,IAAa;AAC/BxuC,IAAAA,CAAAA,CAD+B,IAC/BA;AAEAA,IAAAA,CAAAA,CAAAA,KAAAA,CAAQ,IAARA,KAAAA,EAAmB,KAHY,MAG/BA;AACAA,IAAAA,CAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAe,CAJgB,MAI/BA;AACAA,IAAAA,CAAAA,CAL+B,SAK/BA;;AACA,SAAK,IAAIyuC,CAAAA,GAAJ,GAAWC,EAAAA,GAAKN,QAAAA,CAArB,QAAsCK,CAAAA,GAAtC,IAA8CA,CAA9C,IAAmD;AACjD,UAAME,CAAAA,GAAIP,QAAAA,CADuC,CACvCA,CAAV;AACApuC,MAAAA,CAAAA,CAAAA,MAAAA,CAAS2uC,CAAAA,CAAT3uC,CAAS2uC,CAAT3uC,EAAe2uC,CAAAA,CAFkC,CAElCA,CAAf3uC;;AACA,WAAK,IAAI4uC,CAAAA,GAAJ,GAAWC,EAAAA,GAAKF,CAAAA,CAArB,QAA+BC,CAAAA,GAA/B,IAAuCA,CAAAA,IAAvC,GAA+C;AAC7C5uC,QAAAA,CAAAA,CAAAA,MAAAA,CAAS2uC,CAAAA,CAAT3uC,CAAS2uC,CAAT3uC,EAAe2uC,CAAAA,CAAEC,CAAAA,GAD4B,CAC9BD,CAAf3uC;AAJ+C;AANpB;;AAa/BA,IAAAA,CAAAA,CAb+B,IAa/BA;AACAA,IAAAA,CAAAA,CAd+B,SAc/BA;AACAA,IAAAA,CAAAA,CAf+B,OAe/BA;AAtKgC,GAuJlC;;AAkBA,SAzKkC,WAyKlC;AA9bF;;IAicA;AACE1gB,8BAAc;AAAA;;AAEZ,wBAFY,KAEZ;AACA,oBAHY,CAGZ;AACA,yBAJY,CAIZ;AACA,sBALY,qBAKZ;AACA,2BANY,CAMZ;AACA,sBAPY,0BAOZ;AACA,mBARY,CAQZ;AAEA,aAVY,CAUZ;AACA,aAXY,CAWZ;AAEA,iBAbY,CAaZ;AACA,iBAdY,CAcZ;AAEA,uBAhBY,CAgBZ;AACA,uBAjBY,CAiBZ;AACA,sBAlBY,CAkBZ;AACA,6BAAyBqN,wBAnBb,IAmBZ;AACA,oBApBY,CAoBZ;AAEA,qBAtBY,SAsBZ;AACA,uBAvBY,SAuBZ;AACA,uBAxBY,KAwBZ;AAEA,qBA1BY,CA0BZ;AACA,uBA3BY,CA2BZ;AACA,qBA5BY,CA4BZ;AACA,uBA7BY,IA6BZ;AACA,0BA9BY,IA8BZ;AACA,wBA/BY,IA+BZ;AAhCmB;;;;WAmCrBhL,iBAAQ;AACN,aAAOkC,MAAAA,CAAAA,MAAAA,CADD,IACCA,CAAP;AApCmB;;;WAuCrBirD,yBAAAA,CAAAA,EAAAA,CAAAA,EAAsB;AACpB,eADoB,CACpB;AACA,eAFoB,CAEpB;AAzCmB;;;;;;AA6CvB,0CAA+D;AAAA,MAArBC,YAAqB,uEAA/D,IAA+D;;AAC7D,MAAI,oCAAoCvB,OAAAA,YAAxC,WAAsE;AACpE1D,IAAAA,GAAAA,CAAAA,YAAAA,CAAAA,OAAAA,EAAAA,CAAAA,EADoE,CACpEA;AADoE;AADT;;AAiB7D,MAAMpoD,MAAAA,GAAS8rD,OAAAA,CAAf;AAAA,MACE/rD,KAAAA,GAAQ+rD,OAAAA,CAlBmD,KAiB7D;AAEA,MAAMwB,kBAAAA,GAAqBttD,MAAAA,GAnBkC,iBAmB7D;AACA,MAAMutD,UAAAA,GAAc,UAAD,kBAAC,IApByC,iBAoB7D;AACA,MAAMC,WAAAA,GAAcF,kBAAAA,KAAAA,CAAAA,GAAAA,UAAAA,GAAwCC,UAAAA,GArBC,CAqB7D;AAEA,MAAME,YAAAA,GAAerF,GAAAA,CAAAA,eAAAA,CAAAA,KAAAA,EAvBwC,iBAuBxCA,CAArB;AACA,MAAIsF,MAAAA,GAAJ;AAAA,MAxB6D,OAwB7D;AAEA,MAAMv1B,GAAAA,GAAM2zB,OAAAA,CA1BiD,IA0B7D;AACA,MAAMzc,IAAAA,GAAOoe,YAAAA,CA3BgD,IA2B7D;AACA,6BA5B6D,gBA4B7D;AAEA,yDA9B6D,eA8B7D;;AACA,oBAAkB;AAChB,YAAQJ,YAAAA,CAAR;AACE;AACEM,QAAAA,cAAAA,GAAiBN,YAAAA,CADnB,CACmBA,CAAjBM;AACAC,QAAAA,gBAAAA,GAAmBP,YAAAA,CAFrB,CAEqBA,CAAnBO;AACAC,QAAAA,eAAAA,GAAkBR,YAAAA,CAHpB,CAGoBA,CAAlBQ;AACAC,QAAAA,eAAAA,GAAkBT,YAAAA,CAJpB,CAIoBA,CAAlBS;AALJ;;AAOE;AACEH,QAAAA,cAAAA,GAAiBN,YAAAA,CADnB,CACmBA,CAAjBM;AACAC,QAAAA,gBAAAA,GAAmBP,YAAAA,CAFrB,CAEqBA,CAAnBO;AACAC,QAAAA,eAAAA,GAAkBR,YAAAA,CAHpB,CAGoBA,CAAlBQ;AACAC,QAAAA,eAAAA,GAAkBT,YAAAA,CAJpB,CAIoBA,CAAlBS;AAXJ;AAAA;AAhC2D;;AAkD7D,MAAIhC,OAAAA,CAAAA,IAAAA,KAAiBlgD,gBAArB,gBAA+C;AAE7C,QAAMmiD,SAAAA,GAAY51B,GAAAA,CAF2B,UAE7C;AACA,QAAM61B,MAAAA,GAAS,gBAAgB3e,IAAAA,CAAhB,WAAgCA,IAAAA,CAAAA,UAAAA,IAHF,CAG9B,CAAf;AACA,QAAM4e,gBAAAA,GAAmBD,MAAAA,CAJoB,MAI7C;AACA,QAAME,WAAAA,GAAenuD,KAAAA,GAAD,CAACA,IALwB,CAK7C;AACA,QAAIouD,KAAAA,GANyC,UAM7C;AACA,QAAIC,KAAAA,GAAQvxC,2BAAAA,KAAAA,GAAAA,UAAAA,GAPiC,UAO7C;;AAEA,yBAAqB;AACnB,UAAIixC,eAAAA,CAAAA,CAAAA,CAAAA,KAAAA,IAAAA,IAA+BA,eAAAA,CAAAA,IAAAA,CAAAA,KAAnC,GAAgE;AAAA,mBAC7C,cAD6C;AAC9D,aAD8D;AAC9D,aAD8D;AAD7C;AATwB;;AAe7C,SAAKvsD,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,aAA6BA,CAA7B,IAAkC;AAChC8sD,MAAAA,eAAAA,GAAkB9sD,CAAAA,GAAAA,UAAAA,GAAAA,iBAAAA,GADc,kBAChC8sD;AACAC,MAAAA,OAAAA,GAFgC,CAEhCA;;AACA,WAAKhC,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,iBAAiCA,CAAjC,IAAsC;AACpC,YAAMiC,OAAAA,GAAUR,SAAAA,GADoB,MACpC;AACA,YAAIhB,CAAAA,GAFgC,CAEpC;AACA,YAAMyB,IAAAA,GAAOD,OAAAA,GAAAA,WAAAA,GAAAA,KAAAA,GAAgCA,OAAAA,GAAAA,CAAAA,GAHT,CAGpC;AACA,YAAME,YAAAA,GAAeD,IAAAA,GAAO,CAJQ,CAIpC;AACA,YAAIpC,IAAAA,GALgC,CAKpC;AACA,YAAIsC,OAAAA,GANgC,CAMpC;;AACA,eAAO3B,CAAAA,GAAP,cAAyBA,CAAAA,IAAzB,GAAiC;AAC/B2B,UAAAA,OAAAA,GAAUv2B,GAAAA,CAAIu1B,MADiB,EACrBv1B,CAAVu2B;AACAV,UAAAA,MAAAA,CAAOM,OAAPN,EAAAA,CAAAA,GAAoBU,OAAAA,GAAAA,GAAAA,GAAAA,KAAAA,GAFW,KAE/BV;AACAA,UAAAA,MAAAA,CAAOM,OAAPN,EAAAA,CAAAA,GAAoBU,OAAAA,GAAAA,EAAAA,GAAAA,KAAAA,GAHW,KAG/BV;AACAA,UAAAA,MAAAA,CAAOM,OAAPN,EAAAA,CAAAA,GAAoBU,OAAAA,GAAAA,EAAAA,GAAAA,KAAAA,GAJW,KAI/BV;AACAA,UAAAA,MAAAA,CAAOM,OAAPN,EAAAA,CAAAA,GAAoBU,OAAAA,GAAAA,EAAAA,GAAAA,KAAAA,GALW,KAK/BV;AACAA,UAAAA,MAAAA,CAAOM,OAAPN,EAAAA,CAAAA,GAAoBU,OAAAA,GAAAA,CAAAA,GAAAA,KAAAA,GANW,KAM/BV;AACAA,UAAAA,MAAAA,CAAOM,OAAPN,EAAAA,CAAAA,GAAoBU,OAAAA,GAAAA,CAAAA,GAAAA,KAAAA,GAPW,KAO/BV;AACAA,UAAAA,MAAAA,CAAOM,OAAPN,EAAAA,CAAAA,GAAoBU,OAAAA,GAAAA,CAAAA,GAAAA,KAAAA,GARW,KAQ/BV;AACAA,UAAAA,MAAAA,CAAOM,OAAPN,EAAAA,CAAAA,GAAoBU,OAAAA,GAAAA,CAAAA,GAAAA,KAAAA,GATW,KAS/BV;AAhBkC;;AAkBpC,eAAOjB,CAAAA,GAAP,MAAiBA,CAAjB,IAAsB;AACpB,cAAIX,IAAAA,KAAJ,GAAgB;AACdsC,YAAAA,OAAAA,GAAUv2B,GAAAA,CAAIu1B,MADA,EACJv1B,CAAVu2B;AACAtC,YAAAA,IAAAA,GAFc,GAEdA;AAHkB;;AAMpB4B,UAAAA,MAAAA,CAAOM,OAAPN,EAAAA,CAAAA,GAAoBU,OAAAA,GAAAA,IAAAA,GAAAA,KAAAA,GANA,KAMpBV;AACA5B,UAAAA,IAAAA,KAPoB,CAOpBA;AAzBkC;AAHN;;AAgChC,aAAOkC,OAAAA,GAAP,kBAAmC;AACjCN,QAAAA,MAAAA,CAAOM,OAAPN,EAAAA,CAAAA,GADiC,CACjCA;AAjC8B;;AAoChC5F,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,YAAAA,EAAAA,CAAAA,EAAkC7mD,CAAAA,GApCF,iBAoChC6mD;AAnD2C;AAA/C,SAqDO,IAAI0D,OAAAA,CAAAA,IAAAA,KAAiBlgD,gBAArB,YAA2C;AAEhD,QAAM+iD,eAAAA,GAAkB,CAAC,EACvB,sCAH8C,eAEvB,CAAzB;AAMArC,IAAAA,CAAAA,GARgD,CAQhDA;AACAsC,IAAAA,gBAAAA,GAAmB7uD,KAAAA,GAAAA,iBAAAA,GAT6B,CAShD6uD;;AACA,SAAKrtD,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,YAA4BA,CAA5B,IAAiC;AAC/B8tC,MAAAA,IAAAA,CAAAA,GAAAA,CAASlX,GAAAA,CAAAA,QAAAA,CAAAA,MAAAA,EAAqBu1B,MAAAA,GADC,gBACtBv1B,CAATkX;AACAqe,MAAAA,MAAAA,IAF+B,gBAE/BA;;AAEA,2BAAqB;AACnB,aAAK,IAAIX,EAAAA,GAAT,GAAgBA,EAAAA,GAAhB,kBAAsCA,EAAAA,IAAtC,GAA8C;AAC5C,8BAAoB;AAClB1d,YAAAA,IAAAA,CAAK0d,EAAAA,GAAL1d,CAAAA,CAAAA,GAAcse,cAAAA,CAAete,IAAAA,CAAK0d,EAAAA,GADhB,CACW1d,CAAfse,CAAdte;AAF0C;;AAI5C,gCAAsB;AACpBA,YAAAA,IAAAA,CAAK0d,EAAAA,GAAL1d,CAAAA,CAAAA,GAAcue,gBAAAA,CAAiBve,IAAAA,CAAK0d,EAAAA,GADhB,CACW1d,CAAjBue,CAAdve;AAL0C;;AAO5C,+BAAqB;AACnBA,YAAAA,IAAAA,CAAK0d,EAAAA,GAAL1d,CAAAA,CAAAA,GAAcwe,eAAAA,CAAgBxe,IAAAA,CAAK0d,EAAAA,GADhB,CACW1d,CAAhBwe,CAAdxe;AAR0C;AAD3B;AAJU;;AAkB/B+Y,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,YAAAA,EAAAA,CAAAA,EAlB+B,CAkB/BA;AACAkE,MAAAA,CAAAA,IAnB+B,iBAmB/BA;AA7B8C;;AA+BhD,QAAI/qD,CAAAA,GAAJ,aAAqB;AACnBqtD,MAAAA,gBAAAA,GAAmB7uD,KAAAA,GAAAA,kBAAAA,GADA,CACnB6uD;AACAvf,MAAAA,IAAAA,CAAAA,GAAAA,CAASlX,GAAAA,CAAAA,QAAAA,CAAAA,MAAAA,EAAqBu1B,MAAAA,GAFX,gBAEVv1B,CAATkX;;AAEA,2BAAqB;AACnB,aAAK,IAAI0d,GAAAA,GAAT,GAAgBA,GAAAA,GAAhB,kBAAsCA,GAAAA,IAAtC,GAA8C;AAC5C,8BAAoB;AAClB1d,YAAAA,IAAAA,CAAK0d,GAAAA,GAAL1d,CAAAA,CAAAA,GAAcse,cAAAA,CAAete,IAAAA,CAAK0d,GAAAA,GADhB,CACW1d,CAAfse,CAAdte;AAF0C;;AAI5C,gCAAsB;AACpBA,YAAAA,IAAAA,CAAK0d,GAAAA,GAAL1d,CAAAA,CAAAA,GAAcue,gBAAAA,CAAiBve,IAAAA,CAAK0d,GAAAA,GADhB,CACW1d,CAAjBue,CAAdve;AAL0C;;AAO5C,+BAAqB;AACnBA,YAAAA,IAAAA,CAAK0d,GAAAA,GAAL1d,CAAAA,CAAAA,GAAcwe,eAAAA,CAAgBxe,IAAAA,CAAK0d,GAAAA,GADhB,CACW1d,CAAhBwe,CAAdxe;AAR0C;AAD3B;AAJF;;AAkBnB+Y,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,YAAAA,EAAAA,CAAAA,EAlBmB,CAkBnBA;AAjD8C;AAA3C,SAmDA,IAAI0D,OAAAA,CAAAA,IAAAA,KAAiBlgD,gBAArB,WAA0C;AAE/C,QAAM+iD,gBAAAA,GAAkB,CAAC,EACvB,sCAH6C,eAEtB,CAAzB;;AAMAN,IAAAA,eAAAA,GAR+C,iBAQ/CA;AACAO,IAAAA,gBAAAA,GAAmB7uD,KAAAA,GAT4B,eAS/C6uD;;AACA,SAAKrtD,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,aAA6BA,CAA7B,IAAkC;AAChC,UAAIA,CAAAA,IAAJ,YAAqB;AACnB8sD,QAAAA,eAAAA,GADmB,kBACnBA;AACAO,QAAAA,gBAAAA,GAAmB7uD,KAAAA,GAFA,eAEnB6uD;AAH8B;;AAMhCN,MAAAA,OAAAA,GANgC,CAMhCA;;AACA,WAAKhC,CAAAA,GAAL,kBAA2BA,CAA3B,KAAkC;AAChCjd,QAAAA,IAAAA,CAAKif,OAALjf,EAAAA,CAAAA,GAAkBlX,GAAAA,CAAIu1B,MADU,EACdv1B,CAAlBkX;AACAA,QAAAA,IAAAA,CAAKif,OAALjf,EAAAA,CAAAA,GAAkBlX,GAAAA,CAAIu1B,MAFU,EAEdv1B,CAAlBkX;AACAA,QAAAA,IAAAA,CAAKif,OAALjf,EAAAA,CAAAA,GAAkBlX,GAAAA,CAAIu1B,MAHU,EAGdv1B,CAAlBkX;AACAA,QAAAA,IAAAA,CAAKif,OAALjf,EAAAA,CAAAA,GAJgC,GAIhCA;AAX8B;;AAchC,4BAAqB;AACnB,aAAK,IAAI0d,GAAAA,GAAT,GAAgBA,GAAAA,GAAhB,SAA6BA,GAAAA,IAA7B,GAAqC;AACnC,8BAAoB;AAClB1d,YAAAA,IAAAA,CAAK0d,GAAAA,GAAL1d,CAAAA,CAAAA,GAAcse,cAAAA,CAAete,IAAAA,CAAK0d,GAAAA,GADhB,CACW1d,CAAfse,CAAdte;AAFiC;;AAInC,gCAAsB;AACpBA,YAAAA,IAAAA,CAAK0d,GAAAA,GAAL1d,CAAAA,CAAAA,GAAcue,gBAAAA,CAAiBve,IAAAA,CAAK0d,GAAAA,GADhB,CACW1d,CAAjBue,CAAdve;AALiC;;AAOnC,+BAAqB;AACnBA,YAAAA,IAAAA,CAAK0d,GAAAA,GAAL1d,CAAAA,CAAAA,GAAcwe,eAAAA,CAAgBxe,IAAAA,CAAK0d,GAAAA,GADhB,CACW1d,CAAhBwe,CAAdxe;AARiC;AADlB;AAdW;;AA4BhC+Y,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,YAAAA,EAAAA,CAAAA,EAAkC7mD,CAAAA,GA5BF,iBA4BhC6mD;AAtC6C;AAA1C,SAwCA;AACL,UAAM,oCAA6B0D,OAAAA,CAD9B,IACC,EAAN;AAnM2D;AA9e/D;;AAqrBA,0CAA0C;AACxC,MAAM9rD,MAAAA,GAAS8rD,OAAAA,CAAf;AAAA,MACE/rD,KAAAA,GAAQ+rD,OAAAA,CAF8B,KACxC;AAEA,MAAMwB,kBAAAA,GAAqBttD,MAAAA,GAHa,iBAGxC;AACA,MAAMutD,UAAAA,GAAc,UAAD,kBAAC,IAJoB,iBAIxC;AACA,MAAMC,WAAAA,GAAcF,kBAAAA,KAAAA,CAAAA,GAAAA,UAAAA,GAAwCC,UAAAA,GALpB,CAKxC;AAEA,MAAME,YAAAA,GAAerF,GAAAA,CAAAA,eAAAA,CAAAA,KAAAA,EAPmB,iBAOnBA,CAArB;AACA,MAAIsF,MAAAA,GARoC,CAQxC;AACA,MAAMv1B,GAAAA,GAAM2zB,OAAAA,CAT4B,IASxC;AACA,MAAMzc,IAAAA,GAAOoe,YAAAA,CAV2B,IAUxC;;AAEA,OAAK,IAAIlsD,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,aAAiCA,CAAjC,IAAsC;AACpC,QAAM8sD,eAAAA,GACJ9sD,CAAAA,GAAAA,UAAAA,GAAAA,iBAAAA,GAFkC,kBACpC;AAKA,QAAI+sD,OAAAA,GANgC,CAMpC;;AACA,SAAK,IAAIhC,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,iBAAqCA,CAArC,IAA0C;AACxC,UAAIH,IAAJ;AAAA,UACEC,IAAAA,GAFsC,CACxC;;AAEA,WAAK,IAAIW,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,OAA2BA,CAA3B,IAAgC;AAC9B,YAAI,CAAJ,MAAW;AACTZ,UAAAA,IAAAA,GAAOh0B,GAAAA,CAAIu1B,MADF,EACFv1B,CAAPg0B;AACAC,UAAAA,IAAAA,GAFS,GAETA;AAH4B;;AAK9B/c,QAAAA,IAAAA,CAAAA,OAAAA,CAAAA,GAAgB8c,IAAAA,GAAAA,IAAAA,GAAAA,CAAAA,GALc,GAK9B9c;AACAif,QAAAA,OAAAA,IAN8B,CAM9BA;AACAlC,QAAAA,IAAAA,KAP8B,CAO9BA;AAVsC;AAPN;;AAoBpChE,IAAAA,GAAAA,CAAAA,YAAAA,CAAAA,YAAAA,EAAAA,CAAAA,EAAkC7mD,CAAAA,GApBE,iBAoBpC6mD;AAhCsC;AArrB1C;;AAytBA,0CAA0C;AACxC,MAAMyG,UAAAA,GAAa,6IAAnB;;AAYA,OAAK,IAAIttD,CAAAA,GAAJ,GAAWD,EAAAA,GAAKutD,UAAAA,CAArB,QAAwCttD,CAAAA,GAAxC,IAAgDA,CAAhD,IAAqD;AACnD,QAAMutD,QAAAA,GAAWD,UAAAA,CADkC,CAClCA,CAAjB;;AACA,QAAIE,SAAAA,CAAAA,QAAAA,CAAAA,KAAJ,WAAuC;AACrCC,MAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAoBD,SAAAA,CADiB,QACjBA,CAApBC;AAHiD;AAbb;;AAmBxC,MAAID,SAAAA,CAAAA,WAAAA,KAAJ,WAAyC;AACvCC,IAAAA,OAAAA,CAAAA,WAAAA,CAAoBD,SAAAA,CADmB,WACnBA,EAApBC;AACAA,IAAAA,OAAAA,CAAAA,cAAAA,GAAyBD,SAAAA,CAFc,cAEvCC;AArBsC;AAztB1C;;AAkvBA,gCAAgC;AAC9B5G,EAAAA,GAAAA,CAAAA,WAAAA,GAD8B,SAC9BA;AACAA,EAAAA,GAAAA,CAAAA,SAAAA,GAF8B,SAE9BA;AACAA,EAAAA,GAAAA,CAAAA,QAAAA,GAH8B,SAG9BA;AACAA,EAAAA,GAAAA,CAAAA,WAAAA,GAJ8B,CAI9BA;AACAA,EAAAA,GAAAA,CAAAA,SAAAA,GAL8B,CAK9BA;AACAA,EAAAA,GAAAA,CAAAA,OAAAA,GAN8B,MAM9BA;AACAA,EAAAA,GAAAA,CAAAA,QAAAA,GAP8B,OAO9BA;AACAA,EAAAA,GAAAA,CAAAA,UAAAA,GAR8B,EAQ9BA;AACAA,EAAAA,GAAAA,CAAAA,wBAAAA,GAT8B,aAS9BA;AACAA,EAAAA,GAAAA,CAAAA,IAAAA,GAV8B,iBAU9BA;;AACA,MAAIA,GAAAA,CAAAA,WAAAA,KAAJ,WAAmC;AACjCA,IAAAA,GAAAA,CAAAA,WAAAA,CADiC,EACjCA;AACAA,IAAAA,GAAAA,CAAAA,cAAAA,GAFiC,CAEjCA;AAb4B;AAlvBhC;;AAmwBA,iDAAiD;AAC/C,MAAMrsC,MAAAA,GAASD,KAAAA,CADgC,MAC/C;;AACA,OAAK,IAAIva,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,QAA4BA,CAAAA,IAA5B,GAAoC;AAClC,QAAM0tD,KAAAA,GAAQnzC,KAAAA,CADoB,CACpBA,CAAd;;AACA,QAAImzC,KAAAA,KAAJ,GAAiB;AACfnzC,MAAAA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GADe,EACfA;AACAA,MAAAA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAFe,EAEfA;AACAA,MAAAA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAHe,EAGfA;AAHF,WAIO,IAAImzC,KAAAA,GAAJ,KAAiB;AACtB,UAAMC,MAAAA,GAAS,MADO,KACtB;AACApzC,MAAAA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAAgBA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAAAA,KAAAA,GAAuBqzC,EAAAA,GAAxB,MAACrzC,IAFM,CAEtBA;AACAA,MAAAA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAAgBA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAAAA,KAAAA,GAAuBszC,EAAAA,GAAxB,MAACtzC,IAHM,CAGtBA;AACAA,MAAAA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAAgBA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAAAA,KAAAA,GAAuBuzC,EAAAA,GAAxB,MAACvzC,IAJM,CAItBA;AAVgC;AAFW;AAnwBjD;;AAoxBA,6DAA6D;AAC3D,MAAMC,MAAAA,GAASuzC,QAAAA,CAD4C,MAC3D;AACA,MAAMpvD,KAAAA,GAAQ,IAF6C,GAE3D;;AACA,OAAK,IAAIqB,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,QAA4BA,CAAAA,IAA5B,GAAoC;AAClC,QAAM0tD,KAAAA,GAAQM,WAAAA,GAAcA,WAAAA,CAAYD,QAAAA,CAA1BC,CAA0BD,CAAZC,CAAdA,GAAyCD,QAAAA,CADrB,CACqBA,CAAvD;AACAE,IAAAA,SAAAA,CAAAA,CAAAA,CAAAA,GAAgBA,SAAAA,CAAAA,CAAAA,CAAAA,GAAAA,KAAAA,GAAD,KAACA,GAFkB,CAElCA;AALyD;AApxB7D;;AA6xBA,kEAAkE;AAChE,MAAMzzC,MAAAA,GAASuzC,QAAAA,CADiD,MAChE;;AACA,OAAK,IAAI/tD,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,QAA4BA,CAAAA,IAA5B,GAAoC;AAClC,QAAMspB,CAAAA,GACJykC,QAAAA,CAAS/tD,CAAAA,GAAT+tD,CAAAA,CAAAA,GAAAA,EAAAA,GACAA,QAAAA,CAAS/tD,CAAAA,GAAT+tD,CAAAA,CAAAA,GADAA,GAAAA,GAEAA,QAAAA,CAAS/tD,CAAAA,GAAT+tD,CAAAA,CAAAA,GAJgC,EAClC;AAIAE,IAAAA,SAAAA,CAAAA,CAAAA,CAAAA,GAAeD,WAAAA,GACVC,SAAAA,CAAAA,CAAAA,CAAAA,GAAeD,WAAAA,CAAY1kC,CAAAA,IAA5B,CAAgB0kC,CAAfC,IADUD,CAAAA,GAEVC,SAAAA,CAAAA,CAAAA,CAAAA,GAAD,CAACA,IAP6B,EAKlCA;AAP8D;AA7xBlE;;AA0yBA,+FAQE;AACA,MAAMC,WAAAA,GAAc,CAAC,CADrB,QACA;AACA,MAAMN,EAAAA,GAAKM,WAAAA,GAAcC,QAAAA,CAAdD,CAAcC,CAAdD,GAFX,CAEA;AACA,MAAML,EAAAA,GAAKK,WAAAA,GAAcC,QAAAA,CAAdD,CAAcC,CAAdD,GAHX,CAGA;AACA,MAAMJ,EAAAA,GAAKI,WAAAA,GAAcC,QAAAA,CAAdD,CAAcC,CAAdD,GAJX,CAIA;AAEA,MANA,SAMA;;AACA,MAAIE,OAAAA,KAAJ,cAA8B;AAC5BC,IAAAA,SAAAA,GAD4B,sBAC5BA;AADF,SAEO;AACLA,IAAAA,SAAAA,GADK,iBACLA;AAVF;;AAcA,MAAMC,iBAAAA,GAdN,OAcA;AACA,MAAM/iB,SAAAA,GAAYjtC,IAAAA,CAAAA,GAAAA,CAAAA,MAAAA,EAAiBA,IAAAA,CAAAA,IAAAA,CAAUgwD,iBAAAA,GAf7C,KAemChwD,CAAjBA,CAAlB;;AACA,OAAK,IAAIiwD,GAAAA,GAAT,GAAkBA,GAAAA,GAAlB,QAAgCA,GAAAA,IAAhC,WAAkD;AAChD,QAAMC,WAAAA,GAAclwD,IAAAA,CAAAA,GAAAA,CAAAA,SAAAA,EAAoBG,MAAAA,GADQ,GAC5BH,CAApB;AACA,QAAMyvD,QAAAA,GAAWU,OAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,GAAAA,EAAAA,KAAAA,EAF+B,WAE/BA,CAAjB;AACA,QAAMR,SAAAA,GAAYS,QAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,GAAAA,EAAAA,KAAAA,EAH8B,WAG9BA,CAAlB;;AAEA,qBAAiB;AACfC,MAAAA,oBAAAA,CAAqBZ,QAAAA,CAArBY,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EADe,EACfA,CAAAA;AAN8C;;AAQhDN,IAAAA,SAAAA,CAAUN,QAAAA,CAAVM,IAAAA,EAAyBJ,SAAAA,CAAzBI,IAAAA,EARgD,WAQhDA,CAAAA;AAEAI,IAAAA,OAAAA,CAAAA,YAAAA,CAAAA,SAAAA,EAAAA,CAAAA,EAVgD,GAUhDA;AA1BF;AAlzBF;;AAg1BA,4CAA4C;AAC1C,MAAM5D,IAAAA,GAAOryC,KAAAA,CAD6B,MAC1C;AACA,MAAMi2C,OAAAA,GAAUj2C,KAAAA,CAF0B,OAE1C;AAEAquC,EAAAA,GAAAA,CAAAA,YAAAA,CACEruC,KAAAA,CADFquC,MAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAIEruC,KAAAA,CAJFquC,MAAAA,EAKEruC,KAAAA,CALFquC,OAAAA,EAMEruC,KAAAA,CAVwC,OAI1CquC;AASA+H,EAAAA,mBAAAA,CAAAA,OAAAA,EAAAA,QAAAA,EAGE/D,IAAAA,CAHF+D,KAAAA,EAIE/D,IAAAA,CAJF+D,MAAAA,EAKEp2C,KAAAA,CALFo2C,OAAAA,EAMEp2C,KAAAA,CANFo2C,QAAAA,EAOEp2C,KAAAA,CApBwC,WAa1Co2C,CAAAA;AASA/H,EAAAA,GAAAA,CAAAA,SAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EAtB0C,CAsB1CA;AAt2BF;;AAy2BA,IAAMgI,eAAAA,GAAkB,2BAAxB;AACA,IAAMC,gBAAAA,GAAmB,2BAAzB;AACA,IAAMC,WAAAA,GA32BN,EA22BA;AACA,IAAMC,OAAAA,GA52BN,EA42BA;;IAEA;AACE3yD,0BAAAA,SAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAAAA,aAAAA,EAAAA,UAAAA,EAAAA,qBAAAA,EAOE;AAAA;;AACA,eADA,SACA;AACA,mBAAe,IAFf,gBAEe,EAAf;AACA,sBAHA,EAGA;AACA,uBAJA,IAIA;AACA,yBALA,KAKA;AACA,eANA,IAMA;AACA,iBAPA,IAOA;AACA,sBARA,UAQA;AACA,gBATA,IASA;AACA,yBAVA,aAUA;AACA,sBAXA,UAWA;AACA,sBAZA,EAYA;AACA,2BAbA,IAaA;AAGA,yBAhBA,IAgBA;AACA,8BAjBA,EAiBA;AACA,sBAlBA,CAkBA;AACA,sBAnBA,EAmBA;AACA,wBApBA,CAoBA;AACA,qBArBA,IAqBA;AACA,0BAtBA,IAsBA;AACA,8BAvBA,EAuBA;AACA,iCAxBA,qBAwBA;AACA,0BAAsB,mBAAmB,KAzBzC,aAyBsB,CAAtB;AACA,gCAA4B,aA1B5B,0BA0B4B,CAA5B;AACA,0BAAsB,IA3BtB,GA2BsB,EAAtB;;AACA,mBAAe;AAGb8tD,MAAAA,0BAAAA,CAHa,SAGbA,CAAAA;AA/BF;;AAiCA,sCAjCA,IAiCA;AAzCiB;;;;WA4CnB8E,6BAKG;AAAA,UALU,SAKV,SALU,SAKV;AAAA,UALU,QAKV,SALU,QAKV;AAAA,qCAFDtQ,YAEC;AAAA,UAFDA,YAEC,mCALU,KAKV;AAAA,mCADDlB,UACC;AAAA,UADDA,UACC,iCALHwR,IAKG;AAMD,UAAMzwD,KAAAA,GAAQ,gBANb,KAMD;AACA,UAAMC,MAAAA,GAAS,gBAPd,MAOD;AAEA,eATC,IASD;AACA,2BAAqBg/C,UAAAA,IAVpB,oBAUD;AACA,qCAXC,MAWD;AACA,eAZC,OAYD;;AAEA,wBAAkB;AAChB,YAAMyR,iBAAAA,GAAoB,4DADV,IACU,CAA1B;AAMA,4BAAoB,KAPJ,GAOhB;AACA,iCAAyBA,iBAAAA,CART,MAQhB;AACA,mBAAWA,iBAAAA,CATK,OAShB;AACA,iBAVgB,IAUhB;AAGA,iCAAyB,KAAzB,KAAmC,kBAbnB,mBAahB;AA3BD;;AA8BD,eA9BC,IA8BD;AACAC,MAAAA,iBAAAA,CAAkB,KA/BjB,GA+BDA,CAAAA;;AACA,qBAAe;AACb,iCAAyB,KAAzB,KADa,SACb;AAjCD;;AAmCD,+BAAyB,KAAzB,KAAmC/Q,QAAAA,CAnClC,SAmCD;AAEA,2BAAqB,6BArCpB,KAqCoB,EAArB;AACA,kCAA4B9/C,IAAAA,CAAAA,KAAAA,CAC1B,mBAD0BA,CAC1B,CAD0BA,EAE1B,mBAxCD,CAwCC,CAF0BA,CAA5B;;AAKA,UAAI,KAAJ,YAAqB;AACnB,wBADmB,WACnB;AA5CD;AAjDgB;;;WAiGnB8wD,6BAAAA,YAAAA,EAAAA,iBAAAA,EAAAA,gBAAAA,EAAAA,OAAAA,EAKE;AACA,UAAMpR,SAAAA,GAAYO,YAAAA,CADlB,SACA;AACA,UAAMR,OAAAA,GAAUQ,YAAAA,CAFhB,OAEA;AACA,UAAIv+C,CAAAA,GAAIqvD,iBAAAA,IAHR,CAGA;AACA,UAAMC,YAAAA,GAAetR,SAAAA,CAJrB,MAIA;;AAGA,UAAIsR,YAAAA,KAAJ,GAAwB;AACtB,eADsB,CACtB;AARF;;AAWA,UAAMC,eAAAA,GACJD,YAAAA,GAAAA,CAAAA,GAAAA,eAAAA,IACA,4BAbF,UAWA;AAGA,UAAME,OAAAA,GAAUD,eAAAA,GAAkBxuD,IAAAA,CAAAA,GAAAA,KAAlBwuD,cAAAA,GAdhB,CAcA;AACA,UAAIrE,KAAAA,GAfJ,CAeA;AAEA,UAAM5M,UAAAA,GAAa,KAjBnB,UAiBA;AACA,UAAMD,IAAAA,GAAO,KAlBb,IAkBA;AACA,UAnBA,IAmBA;;AAEA,mBAAa;AACX,YAAIoR,OAAAA,KAAAA,SAAAA,IAAyBzvD,CAAAA,KAAMyvD,OAAAA,CAAnC,gBAA2D;AACzDA,UAAAA,OAAAA,CAAAA,OAAAA,CAAAA,CAAAA,EADyD,gBACzDA;AACA,iBAFyD,CAEzD;AAHS;;AAMXC,QAAAA,IAAAA,GAAO3R,OAAAA,CANI,CAMJA,CAAP2R;;AAEA,YAAIA,IAAAA,KAASn9C,UAAb,YAA6B;AAC3B,iCAAuByrC,SAAAA,CADI,CACJA,CAAvB;AADF,eAEO;AAAA,qDACkBA,SAAAA,CAAvB,CAAuBA,CADlB;AAAA;;AAAA;AACL,gEAAqC;AAAA,kBAArC,QAAqC;AACnC,kBAAM2R,QAAAA,GAAWC,QAAAA,CAAAA,UAAAA,CAAAA,IAAAA,IAAAA,UAAAA,GADkB,IACnC;;AAIA,kBAAI,CAACD,QAAAA,CAAAA,GAAAA,CAAL,QAAKA,CAAL,EAA6B;AAC3BA,gBAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAD2B,gBAC3BA;AACA,uBAF2B,CAE3B;AAPiC;AADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAVI;;AAuBX3vD,QAAAA,CAvBW;;AA0BX,YAAIA,CAAAA,KAAJ,cAAwB;AACtB,iBADsB,CACtB;AA3BS;;AAgCX,YAAIuvD,eAAAA,IAAmB,UAAvB,iBAAkD;AAChD,cAAIxuD,IAAAA,CAAAA,GAAAA,KAAJ,SAA0B;AACxB8uD,YAAAA,gBADwB;AAExB,mBAFwB,CAExB;AAH8C;;AAKhD3E,UAAAA,KAAAA,GALgD,CAKhDA;AArCS;AArBb;AAtGiB;;;WAwKnB4E,sBAAa;AAEX,aAAO,0BAA0B,6BAAjC,MAAoE;AAClE,aADkE,OAClE;AAHS;;AAMX,eANW,OAMX;;AAEA,UAAI,KAAJ,mBAA4B;AAC1B,mBAAW,KADe,YAC1B;AACA,iBAF0B,IAE1B;AACA,6CAH0B,CAG1B;AACA,2BAAmB,KAAnB,sBAJ0B,CAI1B;AACA,iBAL0B,OAK1B;AACA,iCAN0B,IAM1B;AAdS;;AAiBX,0BAjBW,KAiBX;AACA,gCAlBW,KAkBX;AACA,0BAnBW,KAmBX;;AAEA,UAAI,KAAJ,YAAqB;AACnB,wBADmB,SACnB;AAtBS;AAxKM;;;WAkMnBC,qBAAAA,GAAAA,EAAAA,gBAAAA,EAAmC;AAIjC,UAAMvxD,KAAAA,GAAQwxD,GAAAA,CAJmB,KAIjC;AACA,UAAMvxD,MAAAA,GAASuxD,GAAAA,CALkB,MAKjC;AACA,UAAIC,UAAAA,GAAa3xD,IAAAA,CAAAA,GAAAA,CACfA,IAAAA,CAAAA,KAAAA,CAAW4xD,gBAAAA,CAAX5xD,CAAW4xD,CAAX5xD,EAAgC4xD,gBAAAA,CADjB5xD,CACiB4xD,CAAhC5xD,CADeA,EANgB,CAMhBA,CAAjB;AAIA,UAAI6xD,WAAAA,GAAc7xD,IAAAA,CAAAA,GAAAA,CAChBA,IAAAA,CAAAA,KAAAA,CAAW4xD,gBAAAA,CAAX5xD,CAAW4xD,CAAX5xD,EAAgC4xD,gBAAAA,CADhB5xD,CACgB4xD,CAAhC5xD,CADgBA,EAVe,CAUfA,CAAlB;AAKA,UAAI8xD,UAAAA,GAAJ;AAAA,UACEC,WAAAA,GAhB+B,MAejC;AAEA,UAAIC,WAAAA,GAjB6B,WAiBjC;AACA,qBAlBiC,MAkBjC;;AACA,aACGL,UAAAA,GAAAA,CAAAA,IAAkBG,UAAAA,GAAnB,CAACH,IACAE,WAAAA,GAAAA,CAAAA,IAAmBE,WAAAA,GAFtB,GAGE;AACA,YAAIE,QAAAA,GAAJ;AAAA,YACEC,SAAAA,GAFF,WACA;;AAEA,YAAIP,UAAAA,GAAAA,CAAAA,IAAkBG,UAAAA,GAAtB,GAAsC;AACpCG,UAAAA,QAAAA,GAAWjyD,IAAAA,CAAAA,IAAAA,CAAU8xD,UAAAA,GADe,CACzB9xD,CAAXiyD;AACAN,UAAAA,UAAAA,IAAcG,UAAAA,GAFsB,QAEpCH;AALF;;AAOA,YAAIE,WAAAA,GAAAA,CAAAA,IAAmBE,WAAAA,GAAvB,GAAwC;AACtCG,UAAAA,SAAAA,GAAYlyD,IAAAA,CAAAA,IAAAA,CAAU+xD,WAAAA,GADgB,CAC1B/xD,CAAZkyD;AACAL,UAAAA,WAAAA,IAAeE,WAAAA,GAFuB,SAEtCF;AATF;;AAWAM,QAAAA,SAAAA,GAAY,qDAXZ,SAWY,CAAZA;AAKAC,QAAAA,MAAAA,GAASD,SAAAA,CAhBT,OAgBAC;AACAA,QAAAA,MAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,QAAAA,EAjBA,SAiBAA;AACAA,QAAAA,MAAAA,CAAAA,SAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,UAAAA,EAAAA,WAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,QAAAA,EAlBA,SAkBAA;AAWAV,QAAAA,GAAAA,GAAMS,SAAAA,CA7BN,MA6BAT;AACAI,QAAAA,UAAAA,GA9BA,QA8BAA;AACAC,QAAAA,WAAAA,GA/BA,SA+BAA;AACAC,QAAAA,WAAAA,GAAcA,WAAAA,KAAAA,WAAAA,GAAAA,WAAAA,GAhCd,WAgCAA;AAtD+B;;AAwDjC,aAAO;AACLN,QAAAA,GADK,EACLA,GADK;AAELI,QAAAA,UAFK,EAELA,UAFK;AAGLC,QAAAA,WAHK,EAGLA;AAHK,OAAP;AA1PiB;;;WAiQnBM,2BAAAA,GAAAA,EAAuB;AACrB,UAAM9J,GAAAA,GAAM,KADS,GACrB;AACA,UAAMroD,KAAAA,GAAQwxD,GAAAA,CAAd;AAAA,UACEvxD,MAAAA,GAASuxD,GAAAA,CAHU,MAErB;AAEA,UAAMY,SAAAA,GAAY,aAJG,SAIrB;AACA,UAAMC,aAAAA,GAAgB,aALD,WAKrB;AACA,UAAMC,UAAAA,GAAa,mDANE,MAMF,CAAnB;AAKA,UAAMrC,OAAAA,GAAUqC,UAAAA,CAXK,OAWrB;AACAC,MAAAA,kBAAAA,CAAAA,OAAAA,EAZqB,GAYrBA,CAAAA;AAMA,UAAMC,WAAAA,GAAcnK,GAAAA,CAlBC,mBAkBrB;;AACA,UAAIoK,YAAAA,GAAe,kCAA4B,CAC7C,IAD6C,aAI7C,KAJ6C,aAA5B,CAAnB;;AAQAA,MAAAA,YAAAA,GAAe,mCAA6B,gBAAgB,CAAhB,OAA7B,CAAfA;;AACA,UAAMC,KAAAA,GAAQ,0BAAoB,MAApB,EA5BO,YA4BP,CAAd;;AACA,UAAMC,KAAAA,GAAQ,0BAAoB,eAApB,EA7BO,YA6BP,CAAd;;AACA,UAAMpyD,IAAAA,GAAO,yBAAmB,CAACmyD,KAAAA,CAAD,CAACA,CAAD,EAAWA,KAAAA,CAAX,CAAWA,CAAX,EAAqBC,KAAAA,CAArB,CAAqBA,CAArB,EAA+BA,KAAAA,CAA/B,CAA+BA,CAA/B,CAAnB,CAAb;;AACA,UAAMC,UAAAA,GAAa9yD,IAAAA,CAAAA,IAAAA,CAAUS,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CA/BlB,CA+BkBA,CAApBT,CAAnB;AACA,UAAM+yD,WAAAA,GAAc/yD,IAAAA,CAAAA,IAAAA,CAAUS,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CAhCnB,CAgCmBA,CAApBT,CAApB;AACA,UAAMgzD,UAAAA,GAAa,qEAjCE,IAiCF,CAAnB;AAMA,UAAMC,OAAAA,GAAUD,UAAAA,CAvCK,OAuCrB;AAEA,UAAM5zD,OAAAA,GAAUY,IAAAA,CAAAA,GAAAA,CAAS4yD,KAAAA,CAAT5yD,CAAS4yD,CAAT5yD,EAAmB6yD,KAAAA,CAzCd,CAyCcA,CAAnB7yD,CAAhB;AACA,UAAMX,OAAAA,GAAUW,IAAAA,CAAAA,GAAAA,CAAS4yD,KAAAA,CAAT5yD,CAAS4yD,CAAT5yD,EAAmB6yD,KAAAA,CA1Cd,CA0CcA,CAAnB7yD,CAAhB;AACAizD,MAAAA,OAAAA,CAAAA,SAAAA,CAAkB,CAAlBA,OAAAA,EAA4B,CA3CP,OA2CrBA;AACAA,MAAAA,OAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,OAAAA,EA5CqB,YA4CrBA;;AAEA,UAAMC,MAAAA,GAAS,iBACbV,UAAAA,CADa,QAEbS,OAAAA,CAhDmB,0BA8CN,CAAf;;AAIAA,MAAAA,OAAAA,CAAAA,SAAAA,CACEC,MAAAA,CADFD,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAIEC,MAAAA,CAAAA,GAAAA,CAJFD,KAAAA,EAKEC,MAAAA,CAAAA,GAAAA,CALFD,MAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAlDqB,MAkDrBA;AAWAA,MAAAA,OAAAA,CAAAA,wBAAAA,GA7DqB,WA6DrBA;;AAEA,UAAME,OAAAA,GAAU,qBAAeF,OAAAA,CAAf,4BAAmD,aAKjE,CALiE,SAMjE,CANiE,QAAnD,CAAhB;;AAQAA,MAAAA,OAAAA,CAAAA,SAAAA,GAAoBV,aAAAA,GAChBD,SAAAA,CAAAA,UAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAAAA,OAAAA,EADgBC,KAChBD,CADgBC,GAvEC,SAuErBU;AAIAA,MAAAA,OAAAA,CAAAA,QAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EA3EqB,MA2ErBA;AAGA,aAAO;AACL90D,QAAAA,MAAAA,EAAQ60D,UAAAA,CADH;AAEL5zD,QAAAA,OAAAA,EAASY,IAAAA,CAAAA,KAAAA,CAFJ,OAEIA,CAFJ;AAGLX,QAAAA,OAAAA,EAASW,IAAAA,CAAAA,KAAAA,CAHJ,OAGIA;AAHJ,OAAP;AA/UiB;;;WAuVnBmU,sBAAAA,KAAAA,EAAoB;AAClB,+BADkB,KAClB;AACA,2BAFkB,KAElB;AAzViB;;;WA4VnBC,oBAAAA,KAAAA,EAAkB;AAChB,yBAAmBm8C,eAAAA,CADH,KACGA,CAAnB;AA7ViB;;;WAgWnBl8C,qBAAAA,KAAAA,EAAmB;AACjB,0BAAoBm8C,gBAAAA,CADH,KACGA,CAApB;AAjWiB;;;WAoWnBl8C,uBAAAA,KAAAA,EAAqB;AACnB,4BADmB,KACnB;AArWiB;;;WAwWnBC,iBAAAA,SAAAA,EAAAA,SAAAA,EAA8B;AAC5B,UAAMg0C,GAAAA,GAAM,KADgB,GAC5B;;AACA,UAAIA,GAAAA,CAAAA,WAAAA,KAAJ,WAAmC;AACjCA,QAAAA,GAAAA,CAAAA,WAAAA,CADiC,SACjCA;AACAA,QAAAA,GAAAA,CAAAA,cAAAA,GAFiC,SAEjCA;AAJ0B;AAxWX;;;WAgXnB/zC,4BAAAA,MAAAA,EAA2B,CAhXR;;;WAoXnBC,qBAAAA,QAAAA,EAAsB,CApXH;;;WAwXnBC,mBAAAA,MAAAA,EAAkB;AAChB,WAAK,IAAIhT,CAAAA,GAAJ,GAAWD,EAAAA,GAAK2xD,MAAAA,CAArB,QAAoC1xD,CAAAA,GAApC,IAA4CA,CAA5C,IAAiD;AAC/C,YAAM6F,KAAAA,GAAQ6rD,MAAAA,CADiC,CACjCA,CAAd;AACA,YAAMjrD,GAAAA,GAAMZ,KAAAA,CAFmC,CAEnCA,CAAZ;AACA,YAAM3C,KAAAA,GAAQ2C,KAAAA,CAHiC,CAGjCA,CAAd;;AAEA;AACE;AACE,8BADF,KACE;AAFJ;;AAIE;AACE,4BADF,KACE;AALJ;;AAOE;AACE,6BADF,KACE;AARJ;;AAUE;AACE,+BADF,KACE;AAXJ;;AAaE;AACE,yBAAa3C,KAAAA,CAAb,CAAaA,CAAb,EAAuBA,KAAAA,CADzB,CACyBA,CAAvB;AAdJ;;AAgBE;AACE,oCADF,KACE;AAjBJ;;AAmBE;AACE,6BADF,KACE;AApBJ;;AAsBE;AACE,yBAAaA,KAAAA,CAAb,CAAaA,CAAb,EAAuBA,KAAAA,CADzB,CACyBA,CAAvB;AAvBJ;;AAyBE;AACE,uCAA2B2C,KAAAA,CAD7B,CAC6BA,CAA3B;AA1BJ;;AA4BE;AACE,qCAAyBA,KAAAA,CAD3B,CAC2BA,CAAzB;AACA,mCAAuBA,KAAAA,CAFzB,CAEyBA,CAAvB;AA9BJ;;AAgCE;AACE,gDADF,KACE;AAjCJ;;AAmCE;AACE,gBAAI,aAAJ,aAA8B;AAI5B,kBACE,8BACA,gBAAgB,yBAAhB,mBACE,aAHJ,aAIE;AACA,qBADA,iBACA;AALF,qBAMO;AACL,qBADK,aACL;AAX0B;AADhC;;AAeE,uCAA2B3C,KAAAA,GAAQ,KAARA,SAAAA,GAf7B,IAeE;;AACA,gBAAI,aAAJ,aAA8B;AAC5B,mBAD4B,eAC5B;AAjBJ;;AAmBE,6BAnBF,IAmBE;AAtDJ;;AAwDE;AACE,wCAzDJ,KAyDI;AAzDJ;AANc;AAxXC;;;WA4bnByuD,2BAAkB;AAChB,UAAMC,WAAAA,GAAc,aADJ,WAChB;AACA,UAAMR,UAAAA,GAAaQ,WAAAA,CAAAA,MAAAA,CAFH,KAEhB;AACA,UAAMP,WAAAA,GAAcO,WAAAA,CAAAA,MAAAA,CAHJ,MAGhB;AACA,UAAMC,OAAAA,GAAU,iBAAiB,KAJjB,UAIhB;AACA,UAAMC,aAAAA,GAAgB,gEALN,IAKM,CAAtB;AAOA,UAAMC,UAAAA,GAAa,KAZH,GAYhB;AACA,UAAMC,gBAAAA,GAAmBD,UAAAA,CAbT,mBAahB;AACA,eAdgB,IAchB;AAEA,UAAME,QAAAA,GAAWH,aAAAA,CAhBD,OAgBhB;AACAG,MAAAA,QAAAA,CAAAA,KAAAA,CAAe,IAAIL,WAAAA,CAAnBK,MAAAA,EAAuC,IAAIL,WAAAA,CAjB3B,MAiBhBK;AACAA,MAAAA,QAAAA,CAAAA,SAAAA,CAAmB,CAACL,WAAAA,CAApBK,OAAAA,EAAyC,CAACL,WAAAA,CAlB1B,OAkBhBK;AACAA,MAAAA,QAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,QAAAA,EAnBgB,gBAmBhBA;AAEAL,MAAAA,WAAAA,CAAAA,qBAAAA,GAAoCK,QAAAA,CArBpB,0BAqBhBL;AAEAM,MAAAA,YAAAA,CAAAA,UAAAA,EAvBgB,QAuBhBA,CAAAA;AACA,iBAxBgB,QAwBhB;AACA,qBAAe,CACb,qBADa,EAEb,SAFa,EAGb,SAHa,CAAf;AAKA,2BA9BgB,UA8BhB;AACA,WA/BgB,UA+BhB;AA3diB;;;WA8dnBC,6BAAoB;AAGlB,UAAMF,QAAAA,GAAW,KAHC,GAGlB;AACA,WAJkB,UAIlB;AACA,iBAAW,gBALO,GAKP,EAAX;AAEAG,MAAAA,YAAAA,CAAa,KAAbA,GAAAA,EAAuB,aAAvBA,WAAAA,EAPkB,QAOlBA,CAAAA;AACA,eARkB,OAQlB;AACA,eATkB,IASlB;AACAF,MAAAA,YAAAA,CAAAA,QAAAA,EAAuB,KAVL,GAUlBA,CAAAA;AAGA,oCAbkB,QAalB;;AAGA,UAAMG,cAAAA,GAAiB/1C,WAAAA,SAAAA,CACrB,yBADqBA,qBAAAA,EAErB21C,QAAAA,CAlBgB,mBAgBK31C,CAAvB;;AAIA,+BAAyB,KAAzB,KApBkB,cAoBlB;AAGA21C,MAAAA,QAAAA,CAvBkB,IAuBlBA;AACAA,MAAAA,QAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAxBkB,CAwBlBA;AACAA,MAAAA,QAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAyBA,QAAAA,CAAAA,MAAAA,CAAzBA,KAAAA,EAAgDA,QAAAA,CAAAA,MAAAA,CAzB9B,MAyBlBA;AACAA,MAAAA,QAAAA,CA1BkB,OA0BlBA;AAxfiB;;;WA2fnBK,4BAAmB;AAIjB,UAAML,QAAAA,GAAW,aAJA,cAIjB;AACA,UAAMF,UAAAA,GAAa,KALF,GAKjB;AACA,iBANiB,QAMjB;AACA,2BAPiB,UAOjB;AACA,WARiB,UAQjB;AAngBiB;;;WAsgBnBQ,yBAAgB;AACd,UAAMN,QAAAA,GAAW,KADH,GACd;AACA,WAFc,UAEd;AACA,iBAAW,gBAHG,GAGH,EAAX;AAEAG,MAAAA,YAAAA,CAAa,KAAbA,GAAAA,EAAuB,aAAvBA,WAAAA,EALc,QAKdA,CAAAA;AACA,eANc,OAMd;AACAF,MAAAA,YAAAA,CAAAA,QAAAA,EAAuB,KAPT,GAOdA,CAAAA;;AAGA,UAAMG,cAAAA,GAAiB/1C,WAAAA,SAAAA,CACrB,yBADqBA,qBAAAA,EAErB21C,QAAAA,CAZY,mBAUS31C,CAAvB;;AAIA,+BAAyB,KAAzB,KAdc,cAcd;AAphBiB;;;WAuhBnBrJ,gBAAO;AACL,eADK,IACL;AACA,UAAM42C,GAAAA,GAAM,KAFP,OAEL;AACA,2BAHK,GAGL;AACA,qBAAeA,GAAAA,CAJV,KAIUA,EAAf;AACA,oCALK,IAKL;AA5hBiB;;;WA+hBnB32C,mBAAU;AAER,UAAI,aAAJ,gBAAiC;AAC/B,aAD+B,gBAC/B;AAHM;;AAOR,UACE,sCACC,gCACC,gBAAgB,yBAAhB,mBACE,aAJN,WACE,CADF,EAKE;AACA,aADA,aACA;AAbM;;AAgBR,UAAI,2BAAJ,GAAkC;AAChC,uBAAe,gBADiB,GACjB,EAAf;AACA,iBAFgC,OAEhC;AAGA,2BALgC,IAKhC;AAEA,0CAPgC,IAOhC;AAPF,aAQO;AAEL,mCAFK,IAEL;AA1BM;AA/hBS;;;WA6jBnBC,mBAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAA4B;AAC1B,wCAD0B,CAC1B;AAEA,wCAH0B,IAG1B;AAhkBiB;;;WAokBnB+E,uBAAAA,GAAAA,EAAAA,IAAAA,EAAyB;AACvB,UAAM2uC,GAAAA,GAAM,KADW,GACvB;AACA,UAAMsB,OAAAA,GAAU,KAFO,OAEvB;AACA,UAAI9+B,CAAAA,GAAI8+B,OAAAA,CAAR;AAAA,UACE7+B,CAAAA,GAAI6+B,OAAAA,CAJiB,CAGvB;;AAEA,WAAK,IAAInoD,CAAAA,GAAJ,GAAW+qD,CAAAA,GAAX,GAAkBhrD,EAAAA,GAAKyyD,GAAAA,CAA5B,QAAwCxyD,CAAAA,GAAxC,IAAgDA,CAAhD,IAAqD;AACnD,gBAAQwyD,GAAAA,CAAAA,CAAAA,CAAAA,GAAR;AACE,eAAKjgD,UAAL;AACE8W,YAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CADX,EACMrjC,CAAJ2B;AACAC,YAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAFX,EAEMrjC,CAAJ4B;AACA,gBAAM9qB,KAAAA,GAAQkpB,IAAAA,CAAKqjC,CAHrB,EAGgBrjC,CAAd;AACA,gBAAMjpB,MAAAA,GAASipB,IAAAA,CAAKqjC,CAJtB,EAIiBrjC,CAAf;AAEA,gBAAM+qC,EAAAA,GAAKppC,CAAAA,GANb,KAME;AACA,gBAAMqpC,EAAAA,GAAKppC,CAAAA,GAPb,MAOE;AACAu9B,YAAAA,GAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EARF,CAQEA;;AACA,gBAAIroD,KAAAA,KAAAA,CAAAA,IAAeC,MAAAA,KAAnB,GAAiC;AAC/BooD,cAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAD+B,EAC/BA;AADF,mBAEO;AACLA,cAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EADK,CACLA;AACAA,cAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAFK,EAELA;AACAA,cAAAA,GAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAHK,EAGLA;AAdJ;;AAiBEA,YAAAA,GAAAA,CAjBF,SAiBEA;AAlBJ;;AAoBE,eAAKt0C,UAAL;AACE8W,YAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CADX,EACMrjC,CAAJ2B;AACAC,YAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAFX,EAEMrjC,CAAJ4B;AACAu9B,YAAAA,GAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAHF,CAGEA;AAvBJ;;AAyBE,eAAKt0C,UAAL;AACE8W,YAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CADX,EACMrjC,CAAJ2B;AACAC,YAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAFX,EAEMrjC,CAAJ4B;AACAu9B,YAAAA,GAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAHF,CAGEA;AA5BJ;;AA8BE,eAAKt0C,UAAL;AACE8W,YAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CAAAA,GADX,CACMrjC,CAAJ2B;AACAC,YAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAAAA,GAFX,CAEMrjC,CAAJ4B;AACAu9B,YAAAA,GAAAA,CAAAA,aAAAA,CACEn/B,IAAAA,CADFm/B,CACEn/B,CADFm/B,EAEEn/B,IAAAA,CAAKqjC,CAAAA,GAFPlE,CAEEn/B,CAFFm/B,EAGEn/B,IAAAA,CAAKqjC,CAAAA,GAHPlE,CAGEn/B,CAHFm/B,EAIEn/B,IAAAA,CAAKqjC,CAAAA,GAJPlE,CAIEn/B,CAJFm/B,EAAAA,CAAAA,EAHF,CAGEA;AAQAkE,YAAAA,CAAAA,IAXF,CAWEA;AAzCJ;;AA2CE,eAAKx4C,UAAL;AACEs0C,YAAAA,GAAAA,CAAAA,aAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAGEn/B,IAAAA,CAHFm/B,CAGEn/B,CAHFm/B,EAIEn/B,IAAAA,CAAKqjC,CAAAA,GAJPlE,CAIEn/B,CAJFm/B,EAKEn/B,IAAAA,CAAKqjC,CAAAA,GALPlE,CAKEn/B,CALFm/B,EAMEn/B,IAAAA,CAAKqjC,CAAAA,GAPT,CAOIrjC,CANFm/B;AAQAx9B,YAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CAAAA,GATX,CASMrjC,CAAJ2B;AACAC,YAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAAAA,GAVX,CAUMrjC,CAAJ4B;AACAyhC,YAAAA,CAAAA,IAXF,CAWEA;AAtDJ;;AAwDE,eAAKx4C,UAAL;AACE8W,YAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CAAAA,GADX,CACMrjC,CAAJ2B;AACAC,YAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAAAA,GAFX,CAEMrjC,CAAJ4B;AACAu9B,YAAAA,GAAAA,CAAAA,aAAAA,CAAkBn/B,IAAAA,CAAlBm/B,CAAkBn/B,CAAlBm/B,EAA2Bn/B,IAAAA,CAAKqjC,CAAAA,GAAhClE,CAA2Bn/B,CAA3Bm/B,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAHF,CAGEA;AACAkE,YAAAA,CAAAA,IAJF,CAIEA;AA5DJ;;AA8DE,eAAKx4C,UAAL;AACEs0C,YAAAA,GAAAA,CADF,SACEA;AA/DJ;AAAA;AANqB;;AAyEvBsB,MAAAA,OAAAA,CAAAA,eAAAA,CAAAA,CAAAA,EAzEuB,CAyEvBA;AA7oBiB;;;WAgpBnB10C,qBAAY;AACV,eADU,SACV;AAjpBiB;;;WAopBnBE,gBAAAA,WAAAA,EAAoB;AAClBg/C,MAAAA,WAAAA,GAAc,mDADI,IAClBA;AACA,UAAM9L,GAAAA,GAAM,KAFM,GAElB;AACA,UAAM+L,WAAAA,GAAc,aAHF,WAGlB;AAGA/L,MAAAA,GAAAA,CAAAA,WAAAA,GAAkB,aANA,WAMlBA;;AACA,UAAI,KAAJ,gBAAyB;AACvB,YAAI,qCAAmC+L,WAAnC,aAAmCA,WAAnC,eAAmCA,WAAAA,CAAvC,YAAgE;AAC9D,cAAMC,SAAAA,GAAY,KAD4C,mBAC5C,EAAlB;AACAhM,UAAAA,GAAAA,CAF8D,IAE9DA;AACAA,UAAAA,GAAAA,CAAAA,WAAAA,GAAkB+L,WAAAA,CAAAA,UAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAGhB/L,GAAAA,CAN4D,0BAG5C+L,CAAlB/L;AAMAA,UAAAA,GAAAA,CAAAA,SAAAA,GAAgBvoD,IAAAA,CAAAA,GAAAA,CAAAA,SAAAA,EAAoB,aAT0B,SAS9CA,CAAhBuoD;AACAA,UAAAA,GAAAA,CAV8D,MAU9DA;AACAA,UAAAA,GAAAA,CAX8D,OAW9DA;AAXF,eAYO;AACL,cAAMgM,UAAAA,GAAY,KADb,mBACa,EAAlB;;AACA,cAAIA,UAAAA,GAAAA,CAAAA,IAAiB,eAAc,aAAnC,WAA2D;AAGzDhM,YAAAA,GAAAA,CAHyD,IAGzDA;AACAA,YAAAA,GAAAA,CAJyD,cAIzDA;AACAA,YAAAA,GAAAA,CAAAA,SAAAA,GAAgBvoD,IAAAA,CAAAA,KAAAA,CAAW,KAL8B,oBAKzCA,CAAhBuoD;AACAA,YAAAA,GAAAA,CANyD,MAMzDA;AACAA,YAAAA,GAAAA,CAPyD,OAOzDA;AAPF,iBAQO;AAELA,YAAAA,GAAAA,CAAAA,SAAAA,GAAgBvoD,IAAAA,CAAAA,GAAAA,CAAAA,UAAAA,EAAoB,aAF/B,SAEWA,CAAhBuoD;AACAA,YAAAA,GAAAA,CAHK,MAGLA;AAbG;AAbgB;AAPP;;AAqClB,uBAAiB;AACf,aADe,WACf;AAtCgB;;AAyClBA,MAAAA,GAAAA,CAAAA,WAAAA,GAAkB,aAzCA,SAyClBA;AA7rBiB;;;WAgsBnBjzC,uBAAc;AACZ,WADY,SACZ;AACA,WAFY,MAEZ;AAlsBiB;;;WAqsBnBC,cAAAA,WAAAA,EAAkB;AAChB8+C,MAAAA,WAAAA,GAAc,mDADE,IAChBA;AACA,UAAM9L,GAAAA,GAAM,KAFI,GAEhB;AACA,UAAM+J,SAAAA,GAAY,aAHF,SAGhB;AACA,UAAMC,aAAAA,GAAgB,aAJN,WAIhB;AACA,UAAIiC,WAAAA,GALY,KAKhB;;AAEA,yBAAmB;AACjBjM,QAAAA,GAAAA,CADiB,IACjBA;AACAA,QAAAA,GAAAA,CAAAA,SAAAA,GAAgB+J,SAAAA,CAAAA,UAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAGd/J,GAAAA,CALe,0BAED+J,CAAhB/J;AAKAiM,QAAAA,WAAAA,GAPiB,IAOjBA;AAdc;;AAiBhB,UAAI,KAAJ,gBAAyB;AACvB,YAAI,KAAJ,eAAwB;AACtBjM,UAAAA,GAAAA,CAAAA,IAAAA,CADsB,SACtBA;AACA,+BAFsB,KAEtB;AAFF,eAGO;AACLA,UAAAA,GAAAA,CADK,IACLA;AALqB;AAjBT;;AA0BhB,uBAAiB;AACfA,QAAAA,GAAAA,CADe,OACfA;AA3Bc;;AA6BhB,uBAAiB;AACf,aADe,WACf;AA9Bc;AArsBC;;;WAuuBnB/yC,kBAAS;AACP,2BADO,IACP;AACA,WAFO,IAEP;AAzuBiB;;;WA4uBnBC,sBAAa;AACX,gBADW,KACX;AACA,kBAFW,KAEX;AAEA,WAJW,WAIX;AAhvBiB;;;WAmvBnBC,wBAAe;AACb,2BADa,IACb;AACA,WAFa,UAEb;AArvBiB;;;WAwvBnBC,2BAAkB;AAChB,WADgB,SAChB;AACA,WAFgB,UAEhB;AA1vBiB;;;WA6vBnBC,6BAAoB;AAClB,2BADkB,IAClB;AACA,WAFkB,SAElB;AACA,WAHkB,UAGlB;AAhwBiB;;;WAmwBnBC,mBAAU;AACR,WADQ,WACR;AApwBiB;;;WAwwBnBC,gBAAO;AACL,yBADK,WACL;AAzwBiB;;;WA4wBnBC,kBAAS;AACP,yBADO,OACP;AA7wBiB;;;WAixBnBC,qBAAY;AACV,gCADU,qBACV;AACA,qCAFU,CAEV;AACA,uBAAiB,qBAHP,CAGV;AACA,uBAAiB,qBAJP,CAIV;AArxBiB;;;WAwxBnBC,mBAAU;AACR,UAAMw+C,KAAAA,GAAQ,KADN,gBACR;AACA,UAAMlM,GAAAA,GAAM,KAFJ,GAER;;AACA,UAAIkM,KAAAA,KAAJ,WAAyB;AACvBlM,QAAAA,GAAAA,CADuB,SACvBA;AADuB;AAHjB;;AAQRA,MAAAA,GAAAA,CARQ,IAQRA;AACAA,MAAAA,GAAAA,CATQ,SASRA;;AACA,WAAK,IAAI7mD,CAAAA,GAAT,GAAgBA,CAAAA,GAAI+yD,KAAAA,CAApB,QAAkC/yD,CAAlC,IAAuC;AACrC,YAAMmsB,IAAAA,GAAO4mC,KAAAA,CADwB,CACxBA,CAAb;AACAlM,QAAAA,GAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAA4B16B,IAAAA,CAFS,SAErC06B;AACAA,QAAAA,GAAAA,CAAAA,SAAAA,CAAc16B,IAAAA,CAAd06B,CAAAA,EAAsB16B,IAAAA,CAHe,CAGrC06B;AACA16B,QAAAA,IAAAA,CAAAA,SAAAA,CAAAA,GAAAA,EAAoBA,IAAAA,CAJiB,QAIrCA;AAdM;;AAgBR06B,MAAAA,GAAAA,CAhBQ,OAgBRA;AACAA,MAAAA,GAAAA,CAjBQ,IAiBRA;AACAA,MAAAA,GAAAA,CAlBQ,SAkBRA;AACA,aAAO,KAnBC,gBAmBR;AA3yBiB;;;WA8yBnBryC,wBAAAA,OAAAA,EAAwB;AACtB,iCADsB,OACtB;AA/yBiB;;;WAkzBnBC,wBAAAA,OAAAA,EAAwB;AACtB,iCADsB,OACtB;AAnzBiB;;;WAszBnBC,mBAAAA,KAAAA,EAAiB;AACf,gCAA0B/V,KAAAA,GADX,GACf;AAvzBiB;;;WA0zBnBgW,oBAAAA,OAAAA,EAAoB;AAClB,6BAAuB,CADL,OAClB;AA3zBiB;;;WA8zBnBC,iBAAAA,WAAAA,EAAAA,IAAAA,EAA2B;AACzB,UAAMo+C,OAAAA,GAAU,oBADS,WACT,CAAhB;AACA,UAAM7K,OAAAA,GAAU,KAFS,OAEzB;;AAEA,UAAI,CAAJ,SAAc;AACZ,cAAM,wCADM,WACN,EAAN;AALuB;;AAOzBA,MAAAA,OAAAA,CAAAA,UAAAA,GAAqB6K,OAAAA,CAAAA,UAAAA,IAPI,0BAOzB7K;;AAIA,UAAIA,OAAAA,CAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,IAA+BA,OAAAA,CAAAA,UAAAA,CAAAA,CAAAA,MAAnC,GAAgE;AAC9D7nD,wBAAK,kCADyD,WAC9DA;AAZuB;;AAiBzB,UAAI25B,IAAAA,GAAJ,GAAc;AACZA,QAAAA,IAAAA,GAAO,CADK,IACZA;AACAkuB,QAAAA,OAAAA,CAAAA,aAAAA,GAAwB,CAFZ,CAEZA;AAFF,aAGO;AACLA,QAAAA,OAAAA,CAAAA,aAAAA,GADK,CACLA;AArBuB;;AAwBzB,0BAxByB,OAwBzB;AACA,8BAzByB,IAyBzB;;AAEA,UAAI6K,OAAAA,CAAJ,aAAyB;AAAA;AA3BA;;AA+BzB,UAAMlyD,IAAAA,GAAOkyD,OAAAA,CAAAA,UAAAA,IA/BY,YA+BzB;AAEA,UAAIC,IAAAA,GAjCqB,QAiCzB;;AACA,UAAID,OAAAA,CAAJ,OAAmB;AACjBC,QAAAA,IAAAA,GADiB,KACjBA;AADF,aAEO,IAAID,OAAAA,CAAJ,MAAkB;AACvBC,QAAAA,IAAAA,GADuB,MACvBA;AArCuB;;AAuCzB,UAAMC,MAAAA,GAASF,OAAAA,CAAAA,MAAAA,GAAAA,QAAAA,GAvCU,QAuCzB;AACA,UAAMG,QAAAA,eAAW,IAAXA,iBAAyBH,OAAAA,CAxCN,YAwCnBG,CAAN;AAMA,UAAIC,eAAAA,GA9CqB,IA8CzB;;AACA,UAAIn5B,IAAAA,GAAJ,eAA0B;AACxBm5B,QAAAA,eAAAA,GADwB,aACxBA;AADF,aAEO,IAAIn5B,IAAAA,GAAJ,eAA0B;AAC/Bm5B,QAAAA,eAAAA,GAD+B,aAC/BA;AAlDuB;;AAoDzB,mCAA6Bn5B,IAAAA,GApDJ,eAoDzB;AAEA,gCAAgB,MAAhB,cAAgB,IAAhB,cAAgB,eAAhB,gBAtDyB,QAsDzB;AAp3BiB;;;WAu3BnBplB,8BAAAA,IAAAA,EAA2B;AACzB,uCADyB,IACzB;AAx3BiB;;;WA23BnBC,qBAAAA,IAAAA,EAAkB;AAChB,8BADgB,IAChB;AA53BiB;;;WA+3BnBC,kBAAAA,CAAAA,EAAAA,CAAAA,EAAe;AACb,uBAAiB,sBADJ,CACb;AACA,uBAAiB,sBAFJ,CAEb;AAj4BiB;;;WAo4BnBC,4BAAAA,CAAAA,EAAAA,CAAAA,EAAyB;AACvB,sBAAgB,CADO,CACvB;AACA,uBAFuB,CAEvB;AAt4BiB;;;WAy4BnBC,uBAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAgC;AAC9B,gCAA0B,kBAA1B;AACA,qCAA+B3W,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAFD,CAECA,CAA/B;AAEA,uBAAiB,qBAJa,CAI9B;AACA,uBAAiB,qBALa,CAK9B;AA94BiB;;;WAi5BnB4W,oBAAW;AACT,uBAAiB,aADR,OACT;AAl5BiB;;;WAq5BnBm+C,mBAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,gBAAAA,EAAAA,mBAAAA,EAAkE;AAChE,UAAMxM,GAAAA,GAAM,KADoD,GAChE;AACA,UAAMsB,OAAAA,GAAU,KAFgD,OAEhE;AACA,UAAMzvC,IAAAA,GAAOyvC,OAAAA,CAHmD,IAGhE;AACA,UAAMmL,iBAAAA,GAAoBnL,OAAAA,CAJsC,iBAIhE;AACA,UAAMoL,QAAAA,GAAWpL,OAAAA,CAAAA,QAAAA,GAAmBA,OAAAA,CAL4B,aAKhE;AACA,UAAMqL,cAAAA,GACJF,iBAAAA,GAAoB5pD,wBAP0C,gBAMhE;AAEA,UAAM+pD,cAAAA,GAAiB,CAAC,EACtB,oBAAoB/pD,wBAT0C,gBAQxC,CAAxB;AAGA,UAAMgqD,WAAAA,GAAcvL,OAAAA,CAAAA,WAAAA,IAAuB,CAACzvC,IAAAA,CAXoB,WAWhE;AAEA,UAbgE,SAahE;;AACA,UAAIA,IAAAA,CAAAA,eAAAA,IAAAA,cAAAA,IAAJ,aAA2D;AACzDi7C,QAAAA,SAAAA,GAAYj7C,IAAAA,CAAAA,gBAAAA,CAAsB,KAAtBA,UAAAA,EAD6C,SAC7CA,CAAZi7C;AAf8D;;AAkBhE,UAAIj7C,IAAAA,CAAAA,eAAAA,IAAJ,aAAyC;AACvCmuC,QAAAA,GAAAA,CADuC,IACvCA;AACAA,QAAAA,GAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAFuC,CAEvCA;AACAA,QAAAA,GAAAA,CAHuC,SAGvCA;AACA8M,QAAAA,SAAAA,CAAAA,GAAAA,EAJuC,QAIvCA,CAAAA;;AACA,8BAAsB;AACpB9M,UAAAA,GAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EADoB,gBACpBA;AANqC;;AAQvC,YACE2M,cAAAA,KAAmB9pD,wBAAnB8pD,IAAAA,IACAA,cAAAA,KAAmB9pD,wBAFrB,aAGE;AACAm9C,UAAAA,GAAAA,CADA,IACAA;AAZqC;;AAcvC,YACE2M,cAAAA,KAAmB9pD,wBAAnB8pD,MAAAA,IACAA,cAAAA,KAAmB9pD,wBAFrB,aAGE;AACA,mCAAyB;AACvBm9C,YAAAA,GAAAA,CADuB,cACvBA;AACAA,YAAAA,GAAAA,CAAAA,SAAAA,GAAgBvoD,IAAAA,CAAAA,KAAAA,CAAW,KAFJ,oBAEPA,CAAhBuoD;AAHF;;AAKAA,UAAAA,GAAAA,CALA,MAKAA;AAtBqC;;AAwBvCA,QAAAA,GAAAA,CAxBuC,OAwBvCA;AAxBF,aAyBO;AACL,YACE2M,cAAAA,KAAmB9pD,wBAAnB8pD,IAAAA,IACAA,cAAAA,KAAmB9pD,wBAFrB,aAGE;AACAm9C,UAAAA,GAAAA,CAAAA,QAAAA,CAAAA,SAAAA,EAAAA,CAAAA,EADA,CACAA;AALG;;AAOL,YACE2M,cAAAA,KAAmB9pD,wBAAnB8pD,MAAAA,IACAA,cAAAA,KAAmB9pD,wBAFrB,aAGE;AACA,mCAAyB;AACvBm9C,YAAAA,GAAAA,CADuB,IACvBA;AACAA,YAAAA,GAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAFuB,CAEvBA;AACAA,YAAAA,GAAAA,CAHuB,cAGvBA;AACAA,YAAAA,GAAAA,CAAAA,SAAAA,GAAgBvoD,IAAAA,CAAAA,KAAAA,CAAW,KAJJ,oBAIPA,CAAhBuoD;AACAA,YAAAA,GAAAA,CAAAA,UAAAA,CAAAA,SAAAA,EAAAA,CAAAA,EALuB,CAKvBA;AACAA,YAAAA,GAAAA,CANuB,OAMvBA;AANF,iBAOO;AACLA,YAAAA,GAAAA,CAAAA,UAAAA,CAAAA,SAAAA,EAAAA,CAAAA,EADK,CACLA;AATF;AAVG;AA3CyD;;AAmEhE,0BAAoB;AAClB,YAAMkM,KAAAA,GAAQ,0BAA0B,wBADtB,EACJ,CAAd;AACAA,QAAAA,KAAAA,CAAAA,IAAAA,CAAW;AACT5/C,UAAAA,SAAAA,EAAW0zC,GAAAA,CADF;AAETx9B,UAAAA,CAFS,EAETA,CAFS;AAGTC,UAAAA,CAHS,EAGTA,CAHS;AAITiqC,UAAAA,QAJS,EAITA,QAJS;AAKTI,UAAAA,SALS,EAKTA;AALS,SAAXZ;AArE8D;AAr5B/C;;;SAo+BnB,eAA8B;AAG5B,kCAAyB,6DAHG,EAGH,CAAzB;AAAA,UAAM,GAAN,yBAAQpvD,OAAR;;AAKAkjD,MAAAA,GAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAR4B,CAQ5BA;AACAA,MAAAA,GAAAA,CAAAA,QAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAT4B,EAS5BA;AACA,UAAM3pD,IAAAA,GAAO2pD,GAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAVe,IAU5B;AACA,UAAIrnD,OAAAA,GAXwB,KAW5B;;AACA,WAAK,IAAIQ,CAAAA,GAAT,GAAgBA,CAAAA,GAAI9C,IAAAA,CAApB,QAAiC8C,CAAAA,IAAjC,GAAyC;AACvC,YAAI9C,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,IAAeA,IAAAA,CAAAA,CAAAA,CAAAA,GAAnB,KAAkC;AAChCsC,UAAAA,OAAAA,GADgC,IAChCA;AADgC;AADK;AAZb;;AAkB5B,aAAO+b,kBAAAA,IAAAA,EAAAA,yBAAAA,EAlBqB,OAkBrBA,CAAP;AAt/BiB;;;WAy/BnBpG,kBAAAA,MAAAA,EAAiB;AACf,UAAMgzC,OAAAA,GAAU,KADD,OACf;AACA,UAAMzvC,IAAAA,GAAOyvC,OAAAA,CAFE,IAEf;;AACA,UAAIzvC,IAAAA,CAAJ,aAAsB;AACpB,eAAO,mBADa,MACb,CAAP;AAJa;;AAOf,UAAM66C,QAAAA,GAAWpL,OAAAA,CAPF,QAOf;;AACA,UAAIoL,QAAAA,KAAJ,GAAoB;AAClB,eADkB,SAClB;AATa;;AAYf,UAAM1M,GAAAA,GAAM,KAZG,GAYf;AACA,UAAM+M,aAAAA,GAAgBzL,OAAAA,CAbP,aAaf;AACA,UAAM0L,WAAAA,GAAc1L,OAAAA,CAdL,WAcf;AACA,UAAM2L,WAAAA,GAAc3L,OAAAA,CAfL,WAef;AACA,UAAM4L,aAAAA,GAAgB5L,OAAAA,CAhBP,aAgBf;AACA,UAAM6L,UAAAA,GAAa7L,OAAAA,CAAAA,UAAAA,GAjBJ,aAiBf;AACA,UAAM8L,YAAAA,GAAeC,MAAAA,CAlBN,MAkBf;AACA,UAAMC,QAAAA,GAAWz7C,IAAAA,CAnBF,QAmBf;AACA,UAAM07C,UAAAA,GAAaD,QAAAA,GAAAA,CAAAA,GAAe,CApBnB,CAoBf;AACA,UAAME,eAAAA,GAAkB37C,IAAAA,CArBT,eAqBf;AACA,UAAM47C,iBAAAA,GAAoBf,QAAAA,GAAWpL,OAAAA,CAAAA,UAAAA,CAtBtB,CAsBsBA,CAArC;AAEA,UAAMoM,cAAAA,GACJpM,OAAAA,CAAAA,iBAAAA,KAA8Bz+C,wBAA9By+C,IAAAA,IACA,CAACzvC,IAAAA,CADDyvC,eAAAA,IAEA,CAACA,OAAAA,CA3BY,WAwBf;AAKAtB,MAAAA,GAAAA,CA7Be,IA6BfA;AACA,UA9Be,gBA8Bf;;AACA,UAAIsB,OAAAA,CAAJ,aAAyB;AAGvBtB,QAAAA,GAAAA,CAHuB,IAGvBA;AACA,YAAM2N,OAAAA,GAAUrM,OAAAA,CAAAA,SAAAA,CAAAA,UAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAGdtB,GAAAA,CAPqB,0BAIPsB,CAAhB;AAKAsM,QAAAA,gBAAAA,GAAmB5N,GAAAA,CATI,mBASvB4N;AACA5N,QAAAA,GAAAA,CAVuB,OAUvBA;AACAA,QAAAA,GAAAA,CAAAA,SAAAA,GAXuB,OAWvBA;AA1Ca;;AA4CfA,MAAAA,GAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAyBsB,OAAAA,CA5CV,UA4CftB;AACAA,MAAAA,GAAAA,CAAAA,SAAAA,CAAcsB,OAAAA,CAAdtB,CAAAA,EAAyBsB,OAAAA,CAAAA,CAAAA,GAAYA,OAAAA,CA7CtB,QA6CftB;;AAEA,UAAIkN,aAAAA,GAAJ,GAAuB;AACrBlN,QAAAA,GAAAA,CAAAA,KAAAA,CAAAA,UAAAA,EAAsB,CADD,CACrBA;AADF,aAEO;AACLA,QAAAA,GAAAA,CAAAA,KAAAA,CAAAA,UAAAA,EADK,CACLA;AAlDa;;AAqDf,UAAIgM,SAAAA,GAAY1K,OAAAA,CArDD,SAqDf;AACA,UAAIuM,mBAAAA,GAtDW,KAsDf;AACA,UAAM/1D,KAAAA,GAAQwpD,OAAAA,CAvDC,eAuDf;;AACA,UAAIxpD,KAAAA,KAAAA,CAAAA,IAAek0D,SAAAA,KAAnB,GAAoC;AAClC,YAAMW,cAAAA,GACJrL,OAAAA,CAAAA,iBAAAA,GAA4Bz+C,wBAFI,gBAClC;;AAEA,YACE8pD,cAAAA,KAAmB9pD,wBAAnB8pD,MAAAA,IACAA,cAAAA,KAAmB9pD,wBAFrB,aAGE;AACA,4CADA,IACA;AACAmpD,UAAAA,SAAAA,GAAY,KAFZ,mBAEY,EAAZA;AACA6B,UAAAA,mBAAAA,GAAsB7B,SAAAA,GAHtB,CAGA6B;AATgC;AAApC,aAWO;AACL7B,QAAAA,SAAAA,IADK,KACLA;AApEa;;AAuEf,UAAIe,aAAAA,KAAJ,KAA2B;AACzB/M,QAAAA,GAAAA,CAAAA,KAAAA,CAAAA,aAAAA,EADyB,aACzBA;AACAgM,QAAAA,SAAAA,IAFyB,aAEzBA;AAzEa;;AA4EfhM,MAAAA,GAAAA,CAAAA,SAAAA,GA5Ee,SA4EfA;AAEA,UAAIx9B,CAAAA,GAAJ;AAAA,UA9Ee,CA8Ef;;AAEA,WAAKrpB,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,cAA8B,EAA9B,GAAmC;AACjC,YAAM20D,KAAAA,GAAQT,MAAAA,CADmB,CACnBA,CAAd;;AACA,YAAIU,iBAAJ,KAAIA,CAAJ,EAAkB;AAChBvrC,UAAAA,CAAAA,IAAM+qC,UAAAA,GAAAA,KAAAA,GAAD,QAACA,GADU,IAChB/qC;AADgB;AAFe;;AAOjC,YAAIwrC,aAAAA,GAP6B,KAOjC;AACA,YAAMC,OAAAA,GAAW,+BAAD,CAAC,IARgB,WAQjC;AACA,YAAMC,SAAAA,GAAYJ,KAAAA,CATe,QASjC;AACA,YAAMK,MAAAA,GAASL,KAAAA,CAVkB,MAUjC;AACA,YAAIM,OAAJ;AAAA,YAAaC,OAXoB,SAWjC;AACA,YAAI12D,KAAAA,GAAQm2D,KAAAA,CAZqB,KAYjC;;AACA,sBAAc;AACZ,cAAMQ,OAAAA,GAAUR,KAAAA,CAAAA,OAAAA,IADJ,eACZ;AACA,cAAMS,EAAAA,GACJ,EAAE,gBAAgBD,OAAAA,CAAhB,CAAgBA,CAAhB,GAA6B32D,KAAAA,GAA/B,OAHU,iBAEZ;AAEA,cAAM62D,EAAAA,GAAKF,OAAAA,CAAAA,CAAAA,CAAAA,GAJC,iBAIZ;AAEA32D,UAAAA,KAAAA,GAAQ22D,OAAAA,GAAU,CAACA,OAAAA,CAAXA,CAAWA,CAAXA,GANI,KAMZ32D;AACAy2D,UAAAA,OAAAA,GAAUG,EAAAA,GAPE,aAOZH;AACAC,UAAAA,OAAAA,GAAW,KAAD,EAAC,IARC,aAQZA;AARF,eASO;AACLD,UAAAA,OAAAA,GAAU5rC,CAAAA,GADL,aACL4rC;AACAC,UAAAA,OAAAA,GAFK,CAELA;AAxB+B;;AA2BjC,YAAIx8C,IAAAA,CAAAA,SAAAA,IAAkBla,KAAAA,GAAtB,GAAiC;AAI/B,cAAM82D,aAAAA,GACFzO,GAAAA,CAAAA,WAAAA,CAAAA,SAAAA,EAAAA,KAAAA,GAAD,IAACA,GAAF,QAAEA,GAL2B,aAI/B;;AAGA,cAAIroD,KAAAA,GAAAA,aAAAA,IAAyB,KAA7B,yBAA2D;AACzD,gBAAM+2D,eAAAA,GAAkB/2D,KAAAA,GADiC,aACzD;AACAq2D,YAAAA,aAAAA,GAFyD,IAEzDA;AACAhO,YAAAA,GAAAA,CAHyD,IAGzDA;AACAA,YAAAA,GAAAA,CAAAA,KAAAA,CAAAA,eAAAA,EAJyD,CAIzDA;AACAoO,YAAAA,OAAAA,IALyD,eAKzDA;AALF,iBAMO,IAAIz2D,KAAAA,KAAJ,eAA6B;AAClCy2D,YAAAA,OAAAA,IACK,SAAD,aAAC,IAAF,IAAE,GAAH,QAAG,GAF6B,aAClCA;AAd6B;AA3BA;;AAgDjC,YAAI,wBAAwB,kBAAkBv8C,IAAAA,CAA9C,WAAI,CAAJ,EAAiE;AAC/D,cAAI67C,cAAAA,IAAkB,CAAtB,QAA+B;AAE7B1N,YAAAA,GAAAA,CAAAA,QAAAA,CAAAA,SAAAA,EAAAA,OAAAA,EAF6B,OAE7BA;AAFF,iBAGO;AACL,0EADK,mBACL;;AAOA,wBAAY;AACV,kBAAM2O,aAAAA,GACJP,OAAAA,GAAW1B,QAAAA,GAAWyB,MAAAA,CAAAA,MAAAA,CAAZ,CAACzB,GAFH,aACV;AAEA,kBAAMkC,aAAAA,GACJP,OAAAA,GAAW3B,QAAAA,GAAWyB,MAAAA,CAAAA,MAAAA,CAAZ,CAACzB,GAJH,aAGV;AAEA,6BACEyB,MAAAA,CADF,0DALU,mBAKV;AAbG;AAJwD;AAhDhC;;AA4EjC,YAAIU,SA5E6B,SA4EjC;;AACA,sBAAc;AACZA,UAAAA,SAAAA,GAAYl3D,KAAAA,GAAAA,iBAAAA,GAA4Bs2D,OAAAA,GAD5B,aACZY;AADF,eAEO;AACLA,UAAAA,SAAAA,GAAYl3D,KAAAA,GAAAA,iBAAAA,GAA4Bs2D,OAAAA,GADnC,aACLY;AAhF+B;;AAkFjCrsC,QAAAA,CAAAA,IAlFiC,SAkFjCA;;AAEA,2BAAmB;AACjBw9B,UAAAA,GAAAA,CADiB,OACjBA;AArF+B;AAhFpB;;AAwKf,oBAAc;AACZsB,QAAAA,OAAAA,CAAAA,CAAAA,IADY,CACZA;AADF,aAEO;AACLA,QAAAA,OAAAA,CAAAA,CAAAA,IAAa9+B,CAAAA,GADR,UACL8+B;AA3Ka;;AA6KftB,MAAAA,GAAAA,CA7Ke,OA6KfA;AACA,aA9Ke,SA8Kf;AAvqCiB;;;WA0qCnB8O,uBAAAA,MAAAA,EAAsB;AAEpB,UAAM9O,GAAAA,GAAM,KAFQ,GAEpB;AACA,UAAMsB,OAAAA,GAAU,KAHI,OAGpB;AACA,UAAMzvC,IAAAA,GAAOyvC,OAAAA,CAJO,IAIpB;AACA,UAAMoL,QAAAA,GAAWpL,OAAAA,CALG,QAKpB;AACA,UAAM4L,aAAAA,GAAgB5L,OAAAA,CANF,aAMpB;AACA,UAAMiM,UAAAA,GAAa17C,IAAAA,CAAAA,QAAAA,GAAAA,CAAAA,GAAoB,CAPnB,CAOpB;AACA,UAAMm7C,WAAAA,GAAc1L,OAAAA,CARA,WAQpB;AACA,UAAM2L,WAAAA,GAAc3L,OAAAA,CATA,WASpB;AACA,UAAM6L,UAAAA,GAAa7L,OAAAA,CAAAA,UAAAA,GAVC,aAUpB;AACA,UAAMyN,UAAAA,GAAazN,OAAAA,CAAAA,UAAAA,IAXC,0BAWpB;AACA,UAAM8L,YAAAA,GAAeC,MAAAA,CAZD,MAYpB;AACA,UAAM2B,eAAAA,GACJ1N,OAAAA,CAAAA,iBAAAA,KAA8Bz+C,wBAdZ,SAapB;AAEA,2BAfoB,aAepB;;AAEA,UAAImsD,eAAAA,IAAmBtC,QAAAA,KAAvB,GAAuC;AAAA;AAjBnB;;AAoBpB,wCApBoB,IAoBpB;AAEA1M,MAAAA,GAAAA,CAtBoB,IAsBpBA;AACAA,MAAAA,GAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAyBsB,OAAAA,CAvBL,UAuBpBtB;AACAA,MAAAA,GAAAA,CAAAA,SAAAA,CAAcsB,OAAAA,CAAdtB,CAAAA,EAAyBsB,OAAAA,CAxBL,CAwBpBtB;AAEAA,MAAAA,GAAAA,CAAAA,KAAAA,CAAAA,UAAAA,EA1BoB,aA0BpBA;;AAEA,WAAK7mD,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,cAA8B,EAA9B,GAAmC;AACjC20D,QAAAA,KAAAA,GAAQT,MAAAA,CADyB,CACzBA,CAARS;;AACA,YAAIC,iBAAJ,KAAIA,CAAJ,EAAkB;AAChBkB,UAAAA,aAAAA,GAAiB1B,UAAAA,GAAAA,KAAAA,GAAD,QAACA,GADD,IAChB0B;AACA,4CAFgB,CAEhB;AACA3N,UAAAA,OAAAA,CAAAA,CAAAA,IAAa2N,aAAAA,GAHG,UAGhB3N;AAHgB;AAFe;;AASjC,YAAM2M,OAAAA,GAAW,+BAAD,CAAC,IATgB,WASjC;AACA,YAAMvW,YAAAA,GAAe7lC,IAAAA,CAAAA,oBAAAA,CAA0Bi8C,KAAAA,CAVd,cAUZj8C,CAArB;;AACA,YAAI,CAAJ,cAAmB;AACjBpY,sDAAyBq0D,KAAAA,CADR,cACjBr0D;AADiB;AAXc;;AAejC,YAAI,KAAJ,gBAAyB;AACvB,iCADuB,KACvB;AACA,eAFuB,IAEvB;AACAumD,UAAAA,GAAAA,CAAAA,KAAAA,CAAAA,QAAAA,EAHuB,QAGvBA;AACAA,UAAAA,GAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAJuB,UAIvBA;AACA,mCALuB,YAKvB;AACA,eANuB,OAMvB;AArB+B;;AAwBjC,YAAMkP,WAAAA,GAAc,0BAAoB,CAACpB,KAAAA,CAAD,SAApB,EAxBa,UAwBb,CAApB;;AACAn2D,QAAAA,KAAAA,GAAQu3D,WAAAA,CAAAA,CAAAA,CAAAA,GAAAA,QAAAA,GAzByB,OAyBjCv3D;AAEAqoD,QAAAA,GAAAA,CAAAA,SAAAA,CAAAA,KAAAA,EA3BiC,CA2BjCA;AACAsB,QAAAA,OAAAA,CAAAA,CAAAA,IAAa3pD,KAAAA,GA5BoB,UA4BjC2pD;AAxDkB;;AA0DpBtB,MAAAA,GAAAA,CA1DoB,OA0DpBA;AACA,6BA3DoB,IA2DpB;AAruCiB;;;WAyuCnBtxC,sBAAAA,MAAAA,EAAAA,MAAAA,EAA6B,CAzuCV;;;WA8uCnBC,+BAAAA,MAAAA,EAAAA,MAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAA0D;AAGxD,8BAAwBwgD,GAAAA,GAAxB,KAAmCC,GAAAA,GAHqB,GAGxD;AACA,WAJwD,IAIxD;AACA,WALwD,OAKxD;AAnvCiB;;;WAuvCnBC,2BAAAA,EAAAA,EAAsB;AAAA;;AACpB,UADoB,OACpB;;AACA,UAAIC,EAAAA,CAAAA,CAAAA,CAAAA,KAAJ,iBAA+B;AAC7B,YAAMC,KAAAA,GAAQD,EAAAA,CADe,CACfA,CAAd;AACA,YAAME,aAAAA,GACJ,sBAAsB,6BAHK,KAGL,EADxB;AAEA,YAAMC,qBAAAA,GAAwB;AAC5BC,UAAAA,oBAAAA,EAAsB1P,8BAAAA,GAAAA,EAAO;AAC3B,mBAAO,wBAEL,MAFK,YAGL,MAHK,MAIL,MALyB,aACpB,CAAP;AAF0B;AAAA,SAA9B;AAUA2N,QAAAA,OAAAA,GAAU,6CAGR,KAHQ,4BAdmB,aAcnB,CAAVA;AAdF,aAqBO;AACLA,QAAAA,OAAAA,GAAU,iBAAiB2B,EAAAA,CAAjB,CAAiBA,CAAjB,EAAwBA,EAAAA,CAD7B,CAC6BA,CAAxB,CAAV3B;AAxBkB;;AA0BpB,aA1BoB,OA0BpB;AAjxCiB;;;WAoxCnB5+C,2BAAkB;AAChB,iCAA2B,uBADX,SACW,CAA3B;AArxCiB;;;WAwxCnBE,yBAAgB;AACd,+BAAyB,uBADX,SACW,CAAzB;AACA,iCAFc,IAEd;AA1xCiB;;;WA6xCnBG,2BAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAA2B;AACzB,UAAMmgD,KAAAA,GAAQ95C,WAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EADW,CACXA,CAAd;;AACA,6BAFyB,KAEzB;AACA,iCAHyB,KAGzB;AAhyCiB;;;WAmyCnBpG,yBAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAyB;AACvB,UAAMkgD,KAAAA,GAAQ95C,WAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EADS,CACTA,CAAd;;AACA,2BAFuB,KAEvB;AACA,+BAHuB,KAGvB;AACA,iCAJuB,KAIvB;AAvyCiB;;;WA0yCnBk6C,qBAAAA,KAAAA,EAAkC;AAAA,UAAfC,MAAe,uEAAlCD,IAAkC;AAChC,UADgC,OAChC;;AACA,UAAI,wBAAJ,KAAI,CAAJ,EAAoC;AAClChC,QAAAA,OAAAA,GAAU,wBADwB,KACxB,CAAVA;AADF,aAEO;AACLA,QAAAA,OAAAA,GAAUkC,uCACR,cADQA,KACR,CADQA,EAER,KAHG,oBACKA,CAAVlC;AAIA,uCALK,OAKL;AAT8B;;AAWhC,kBAAY;AACVA,QAAAA,OAAAA,CAAAA,MAAAA,GADU,MACVA;AAZ8B;;AAchC,aAdgC,OAchC;AAxzCiB;;;WA2zCnBn+C,qBAAAA,KAAAA,EAAmB;AACjB,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADT;;AAIjB,UAAMwwC,GAAAA,GAAM,KAJK,GAIjB;AAEA,WANiB,IAMjB;;AACA,UAAM2N,OAAAA,GAAU,iBAPC,KAOD,CAAhB;;AACA3N,MAAAA,GAAAA,CAAAA,SAAAA,GAAgB2N,OAAAA,CAAAA,UAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAGd3N,GAAAA,CAHc2N,0BAAAA,EARC,IAQDA,CAAhB3N;AAOA,UAAM8P,GAAAA,GAAM9P,GAAAA,CAfK,0BAejB;;AACA,eAAS;AACP,YAAMpqD,MAAAA,GAASoqD,GAAAA,CADR,MACP;AACA,YAAMroD,KAAAA,GAAQ/B,MAAAA,CAFP,KAEP;AACA,YAAMgC,MAAAA,GAAShC,MAAAA,CAHR,MAGP;;AAEA,YAAMm6D,EAAAA,GAAK,0BAAoB,MAApB,EALJ,GAKI,CAAX;;AACA,YAAMC,EAAAA,GAAK,0BAAoB,WAApB,EANJ,GAMI,CAAX;;AACA,YAAMC,EAAAA,GAAK,0BAAoB,UAApB,EAPJ,GAOI,CAAX;;AACA,YAAMC,EAAAA,GAAK,0BAAoB,eAApB,EARJ,GAQI,CAAX;;AAEA,YAAMC,EAAAA,GAAK14D,IAAAA,CAAAA,GAAAA,CAASs4D,EAAAA,CAATt4D,CAASs4D,CAATt4D,EAAgBu4D,EAAAA,CAAhBv4D,CAAgBu4D,CAAhBv4D,EAAuBw4D,EAAAA,CAAvBx4D,CAAuBw4D,CAAvBx4D,EAA8By4D,EAAAA,CAVlC,CAUkCA,CAA9Bz4D,CAAX;AACA,YAAM24D,EAAAA,GAAK34D,IAAAA,CAAAA,GAAAA,CAASs4D,EAAAA,CAATt4D,CAASs4D,CAATt4D,EAAgBu4D,EAAAA,CAAhBv4D,CAAgBu4D,CAAhBv4D,EAAuBw4D,EAAAA,CAAvBx4D,CAAuBw4D,CAAvBx4D,EAA8By4D,EAAAA,CAXlC,CAWkCA,CAA9Bz4D,CAAX;AACA,YAAM44D,EAAAA,GAAK54D,IAAAA,CAAAA,GAAAA,CAASs4D,EAAAA,CAATt4D,CAASs4D,CAATt4D,EAAgBu4D,EAAAA,CAAhBv4D,CAAgBu4D,CAAhBv4D,EAAuBw4D,EAAAA,CAAvBx4D,CAAuBw4D,CAAvBx4D,EAA8By4D,EAAAA,CAZlC,CAYkCA,CAA9Bz4D,CAAX;AACA,YAAM64D,EAAAA,GAAK74D,IAAAA,CAAAA,GAAAA,CAASs4D,EAAAA,CAATt4D,CAASs4D,CAATt4D,EAAgBu4D,EAAAA,CAAhBv4D,CAAgBu4D,CAAhBv4D,EAAuBw4D,EAAAA,CAAvBx4D,CAAuBw4D,CAAvBx4D,EAA8By4D,EAAAA,CAblC,CAakCA,CAA9Bz4D,CAAX;AAEA,kCAA0B44D,EAAAA,GAA1B,IAAmCC,EAAAA,GAf5B,EAeP;AAfF,aAgBO;AAOL,0BAAkB,CAAlB,MAAyB,CAAzB,YAPK,IAOL;AAvCe;;AA0CjB,WA1CiB,OA0CjB;AAr2CiB;;;WAy2CnB7gD,4BAAmB;AACjByD,6BADiB,kCACjBA;AA12CiB;;;WA62CnBxD,0BAAiB;AACfwD,6BADe,gCACfA;AA92CiB;;;WAi3CnB9C,+BAAAA,MAAAA,EAAAA,IAAAA,EAAoC;AAClC,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADQ;;AAIlC,WAJkC,IAIlC;AACA,mCAA6B,KALK,aAKlC;;AAEA,UAAI2E,KAAAA,CAAAA,OAAAA,CAAAA,MAAAA,KAAyB66C,MAAAA,CAAAA,MAAAA,KAA7B,GAAkD;AAChD,mCADgD,MAChD;AARgC;;AAWlC,2BAAqB,SAXa,mBAWlC;;AAEA,gBAAU;AACR,YAAMj4D,KAAAA,GAAQ44D,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CADhB,CACgBA,CAAxB;AACA,YAAM34D,MAAAA,GAAS24D,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CAFjB,CAEiBA,CAAzB;AACA,sBAAcA,IAAAA,CAAd,CAAcA,CAAd,EAAuBA,IAAAA,CAAvB,CAAuBA,CAAvB,SAHQ,MAGR;AACA,aAJQ,IAIR;AACA,aALQ,OAKR;AAlBgC;AAj3CjB;;;WAu4CnBlgD,+BAAsB;AACpB,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADN;;AAIpB,WAJoB,OAIpB;AACA,2BAAqB,wBALD,GAKC,EAArB;AA54CiB;;;WA+4CnBC,oBAAAA,KAAAA,EAAkB;AAChB,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADV;;AAKhB,WALgB,IAKhB;AACA,UAAM46C,UAAAA,GAAa,KANH,GAMhB;;AAcA,UAAI,CAACsF,KAAAA,CAAL,UAAqB;AACnBjxD,wBADmB,oCACnBA;AArBc;;AA0BhB,UAAIixD,KAAAA,CAAJ,UAAoB;AAClB/2D,wBADkB,gCAClBA;AA3Bc;;AA8BhB,UAAM0xD,gBAAAA,GAAmBD,UAAAA,CA9BT,mBA8BhB;;AACA,UAAIsF,KAAAA,CAAJ,QAAkB;AAChBtF,QAAAA,UAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,UAAAA,EAAuCsF,KAAAA,CADvB,MAChBtF;AAhCc;;AAkChB,UAAI,CAACsF,KAAAA,CAAL,MAAiB;AACf,cAAM,UADS,2BACT,CAAN;AAnCc;;AAwChB,UAAIC,MAAAA,GAASh7C,WAAAA,0BAAAA,CACX+6C,KAAAA,CADW/6C,IAAAA,EAEXy1C,UAAAA,CA1Cc,mBAwCHz1C,CAAb;;AAKA,UAAMi7C,YAAAA,GAAe,OAGnBxF,UAAAA,CAAAA,MAAAA,CAHmB,OAInBA,UAAAA,CAAAA,MAAAA,CAJmB,OAArB;AAMAuF,MAAAA,MAAAA,GAASh7C,WAAAA,SAAAA,CAAAA,MAAAA,EAAAA,YAAAA,KAAwC,YAAjDg7C;AAGA,UAAM55D,OAAAA,GAAUY,IAAAA,CAAAA,KAAAA,CAAWg5D,MAAAA,CAtDX,CAsDWA,CAAXh5D,CAAhB;AACA,UAAMX,OAAAA,GAAUW,IAAAA,CAAAA,KAAAA,CAAWg5D,MAAAA,CAvDX,CAuDWA,CAAXh5D,CAAhB;AACA,UAAI8yD,UAAAA,GAAa9yD,IAAAA,CAAAA,GAAAA,CAASA,IAAAA,CAAAA,IAAAA,CAAUg5D,MAAAA,CAAVh5D,CAAUg5D,CAAVh5D,IAATA,OAAAA,EAxDD,CAwDCA,CAAjB;AACA,UAAI+yD,WAAAA,GAAc/yD,IAAAA,CAAAA,GAAAA,CAASA,IAAAA,CAAAA,IAAAA,CAAUg5D,MAAAA,CAAVh5D,CAAUg5D,CAAVh5D,IAATA,OAAAA,EAzDF,CAyDEA,CAAlB;AACA,UAAIk5D,MAAAA,GAAJ;AAAA,UACEC,MAAAA,GA3Dc,CA0DhB;;AAEA,UAAIrG,UAAAA,GAAJ,gBAAiC;AAC/BoG,QAAAA,MAAAA,GAASpG,UAAAA,GADsB,cAC/BoG;AACApG,QAAAA,UAAAA,GAF+B,cAE/BA;AA9Dc;;AAgEhB,UAAIC,WAAAA,GAAJ,gBAAkC;AAChCoG,QAAAA,MAAAA,GAASpG,WAAAA,GADuB,cAChCoG;AACApG,QAAAA,WAAAA,GAFgC,cAEhCA;AAlEc;;AAqEhB,UAAIQ,OAAAA,GAAU,YAAY,KArEV,UAqEhB;;AACA,UAAIwF,KAAAA,CAAJ,OAAiB;AAEfxF,QAAAA,OAAAA,IAAW,YAAa,sBAFT,CAEfA;AAxEc;;AA0EhB,UAAMC,aAAAA,GAAgB,gEA1EN,IA0EM,CAAtB;AAMA,UAAMG,QAAAA,GAAWH,aAAAA,CAhFD,OAgFhB;AAIAG,MAAAA,QAAAA,CAAAA,KAAAA,CAAe,IAAfA,MAAAA,EAA2B,IApFX,MAoFhBA;AACAA,MAAAA,QAAAA,CAAAA,SAAAA,CAAmB,CAAnBA,OAAAA,EAA6B,CArFb,OAqFhBA;AACAA,MAAAA,QAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,QAAAA,EAtFgB,gBAsFhBA;;AAEA,UAAIoF,KAAAA,CAAJ,OAAiB;AAEf,6BAAqB;AACnB56D,UAAAA,MAAAA,EAAQq1D,aAAAA,CADW;AAEnBnuD,UAAAA,OAAAA,EAFmB;AAGnBjG,UAAAA,OAHmB,EAGnBA,OAHmB;AAInBC,UAAAA,OAJmB,EAInBA,OAJmB;AAKnB65D,UAAAA,MALmB,EAKnBA,MALmB;AAMnBC,UAAAA,MANmB,EAMnBA,MANmB;AAOnBrJ,UAAAA,OAAAA,EAASiJ,KAAAA,CAAAA,KAAAA,CAPU;AAQnBlJ,UAAAA,QAAAA,EAAUkJ,KAAAA,CAAAA,KAAAA,CARS;AASnBrJ,UAAAA,WAAAA,EAAaqJ,KAAAA,CAAAA,KAAAA,CAAAA,WAAAA,IATM;AAUnBK,UAAAA,qBAAAA,EAVmB;AAAA,SAArB;AAFF,aAcO;AAGL3F,QAAAA,UAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAHK,CAGLA;AACAA,QAAAA,UAAAA,CAAAA,SAAAA,CAAAA,OAAAA,EAJK,OAILA;AACAA,QAAAA,UAAAA,CAAAA,KAAAA,CAAAA,MAAAA,EALK,MAKLA;AA3Gc;;AA+GhBG,MAAAA,YAAAA,CAAAA,UAAAA,EA/GgB,QA+GhBA,CAAAA;AACA,iBAhHgB,QAgHhB;AACA,qBAAe,CACb,qBADa,EAEb,SAFa,EAGb,SAHa,CAAf;AAKA,2BAtHgB,UAsHhB;AACA,WAvHgB,UAuHhB;AAGA,iCA1HgB,IA0HhB;AAzgDiB;;;WA4gDnB96C,kBAAAA,KAAAA,EAAgB;AACd,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADZ;;AAId,WAJc,UAId;AACA,UAAM66C,QAAAA,GAAW,KALH,GAKd;AACA,iBAAW,gBANG,GAMH,EAAX;;AAGA,UAAI,mCAAJ,WAAkD;AAChD,yCADgD,KAChD;AADF,aAEO;AACL,4CADK,KACL;AAZY;;AAcd,UAAIoF,KAAAA,CAAJ,OAAiB;AACf,yBAAiB,gBADF,GACE,EAAjB;AADF,aAEO;AACL,2BAAmBpF,QAAAA,CAAnB,WADK,CACL;AAjBY;;AAmBd,WAnBc,OAmBd;AA/hDiB;;;WAkiDnB56C,4BAAmB;AACjB,WADiB,IACjB;;AACA,UAAI,KAAJ,eAAwB;AACtB,oCAA4B,KAA5B,KAAsC,KADhB,aACtB;AAHe;AAliDA;;;WAyiDnBC,0BAAiB;AACf,WADe,OACf;AA1iDiB;;;WA6iDnBC,yBAAAA,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,EAAAA,MAAAA,EAA6C;AAC3C,WAD2C,IAC3C;AACA43C,MAAAA,iBAAAA,CAAkB,KAFyB,GAE3CA,CAAAA;AACA,qBAAe,IAH4B,gBAG5B,EAAf;;AAEA,UAAIvzC,KAAAA,CAAAA,OAAAA,CAAAA,IAAAA,KAAuB7c,IAAAA,CAAAA,MAAAA,KAA3B,GAA8C;AAC5C,YAAMP,KAAAA,GAAQO,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CADoB,CACpBA,CAAxB;AACA,YAAMN,MAAAA,GAASM,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CAFmB,CAEnBA,CAAzB;AACA,sBAAcA,IAAAA,CAAd,CAAcA,CAAd,EAAuBA,IAAAA,CAAvB,CAAuBA,CAAvB,SAH4C,MAG5C;AACA,aAJ4C,IAI5C;AACA,aAL4C,OAK5C;AAVyC;;AAa3C,iCAb2C,SAa3C;AACA,iCAd2C,MAc3C;AA3jDiB;;;WA8jDnByY,yBAAgB;AACd,WADc,OACd;AA/jDiB;;;WAkkDnBE,+BAAAA,GAAAA,EAA2B;AACzB,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADD;;AAIzB,UAAMmvC,GAAAA,GAAM,KAJa,GAIzB;AACA,UAAMroD,KAAAA,GAAQwxD,GAAAA,CAAd;AAAA,UACEvxD,MAAAA,GAASuxD,GAAAA,CANc,MAKzB;AAGA,UAAM2E,KAAAA,GAAQ,KARW,eAQzB;;AAEA,UAAIpL,oBAAAA,IAAAA,KAAAA,IAAiCoL,KAAAA,CAAAA,QAAAA,KAArC,WAAmE;AACjE,YAAIn2D,KAAAA,IAAAA,mBAAAA,IAAgCC,MAAAA,IAApC,qBAAmE;AACjEk2D,UAAAA,KAAAA,CAAAA,QAAAA,GAAiB,kBAAkB;AAAEz3D,YAAAA,IAAAA,EAAM8yD,GAAAA,CAAR;AAAkBxxD,YAAAA,KAAlB,EAAkBA,KAAlB;AAAyBC,YAAAA,MAAzB,EAAyBA;AAAzB,WAAlB,CAAjBk2D;AADF,eAEO;AACLA,UAAAA,KAAAA,CAAAA,QAAAA,GADK,IACLA;AAJ+D;AAV1C;;AAkBzB,UAAIA,KAAJ,aAAIA,KAAJ,eAAIA,KAAAA,CAAJ,UAAqB;AACnBA,QAAAA,KAAAA,CAAAA,QAAAA,CADmB,GACnBA;AADmB;AAlBI;;AAsBzB,UAAM9J,IAAAA,GAAO,uBAtBY,GAsBZ,CAAb;;AACA,UAAMiG,UAAAA,GAAajG,IAAAA,CAvBM,MAuBzB;AAEAhE,MAAAA,GAAAA,CAzByB,IAyBzBA;AAGAA,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EA5ByB,CA4BzBA;AACAA,MAAAA,GAAAA,CAAAA,SAAAA,CAAAA,UAAAA,EAA0BgE,IAAAA,CAA1BhE,OAAAA,EAAwCgE,IAAAA,CA7Bf,OA6BzBhE;AACAA,MAAAA,GAAAA,CA9ByB,OA8BzBA;AAhmDiB;;;WAmmDnB7uC,qCAAAA,OAAAA,EAAAA,MAAAA,EAOE;AAAA,UAJA2/C,KAIA,uEAPF3/C,CAOE;AAAA,UAHA4/C,KAGA,uEAPF5/C,CAOE;AAAA,UAPFA,MAOE;AAAA,UAPFA,SAOE;;AACA,UAAI,CAAC,KAAL,gBAA0B;AAAA;AAD1B;;AAIA,UAAM6uC,GAAAA,GAAM,KAJZ,GAIA;AACAA,MAAAA,GAAAA,CALA,IAKAA;AACA,UAAMmL,gBAAAA,GAAmBnL,GAAAA,CANzB,mBAMA;AACAA,MAAAA,GAAAA,CAAAA,SAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,KAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EAPA,CAOAA;;AACA,UAAMgE,IAAAA,GAAO,uBARb,OAQa,CAAb;;AAEAhE,MAAAA,GAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAVA,CAUAA;;AACA,WAAK,IAAI7mD,CAAAA,GAAJ,GAAWD,EAAAA,GAAK83D,SAAAA,CAArB,QAAuC73D,CAAAA,GAAvC,IAA+CA,CAAAA,IAA/C,GAAuD;AACrD,YAAM83D,KAAAA,GAAQ,uCAAiC,+BAK7CD,SAAAA,CAL6C,CAK7CA,CAL6C,EAM7CA,SAAAA,CAAU73D,CAAAA,GANmC,CAM7C63D,CAN6C,CAAjC,CAAd;;AASA,mCAAe,0BAAoB,MAApB,EAVsC,KAUtC,CAAf;AAAA;AAAA,YAAM,CAAN;AAAA,YAAM,CAAN;;AACAhR,QAAAA,GAAAA,CAAAA,SAAAA,CAAcgE,IAAAA,CAAdhE,MAAAA,EAAAA,CAAAA,EAXqD,CAWrDA;AAtBF;;AAwBAA,MAAAA,GAAAA,CAxBA,OAwBAA;AAloDiB;;;WAqoDnBlvC,oCAAAA,MAAAA,EAAmC;AACjC,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADO;;AAIjC,UAAMkvC,GAAAA,GAAM,KAJqB,GAIjC;AAEA,UAAM+J,SAAAA,GAAY,aANe,SAMjC;AACA,UAAMC,aAAAA,GAAgB,aAPW,WAOjC;;AACA,WAAK,IAAI7wD,CAAAA,GAAJ,GAAWD,EAAAA,GAAKg4D,MAAAA,CAArB,QAAoC/3D,CAAAA,GAApC,IAA4CA,CAA5C,IAAiD;AAC/C,YAAMg4D,KAAAA,GAAQD,MAAAA,CADiC,CACjCA,CAAd;AACA,YAAMv5D,KAAAA,GAAQw5D,KAAAA,CAAd;AAAA,YACEv5D,MAAAA,GAASu5D,KAAAA,CAHoC,MAE/C;AAGA,YAAMlH,UAAAA,GAAa,mDAL4B,MAK5B,CAAnB;AAKA,YAAMrC,OAAAA,GAAUqC,UAAAA,CAV+B,OAU/C;AACArC,QAAAA,OAAAA,CAX+C,IAW/CA;AAEAsC,QAAAA,kBAAAA,CAAAA,OAAAA,EAb+C,KAa/CA,CAAAA;AAEAtC,QAAAA,OAAAA,CAAAA,wBAAAA,GAf+C,WAe/CA;AAEAA,QAAAA,OAAAA,CAAAA,SAAAA,GAAoBoC,aAAAA,GAChBD,SAAAA,CAAAA,UAAAA,CAAAA,OAAAA,EAAAA,IAAAA,EAGE/J,GAAAA,CAHF+J,0BAAAA,EADgBC,KAChBD,CADgBC,GAjB2B,SAiB/CpC;AAQAA,QAAAA,OAAAA,CAAAA,QAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAzB+C,MAyB/CA;AAEAA,QAAAA,OAAAA,CA3B+C,OA2B/CA;AAEA5H,QAAAA,GAAAA,CA7B+C,IA6B/CA;AACAA,QAAAA,GAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAyBmR,KAAAA,CA9BsB,SA8B/CnR;AACAA,QAAAA,GAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAa,CA/BkC,CA+B/CA;AACAA,QAAAA,GAAAA,CAAAA,SAAAA,CAAciK,UAAAA,CAAdjK,MAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,MAAAA,EAAAA,CAAAA,EAAyD,CAAzDA,CAAAA,EAAAA,CAAAA,EAhC+C,CAgC/CA;AACAA,QAAAA,GAAAA,CAjC+C,OAiC/CA;AAzC+B;AAroDhB;;;WAkrDnBjvC,2BAAAA,KAAAA,EAAyB;AACvB,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADH;;AAIvB,UAAM2yC,OAAAA,GAAU0N,KAAAA,CAAAA,UAAAA,CAAAA,IAAAA,IACZ,oBADYA,KACZ,CADYA,GAEZ,cANmB,KAMnB,CAFJ;;AAGA,UAAI,CAAJ,SAAc;AACZ33D,wBADY,iCACZA;AADY;AAPS;;AAYvB,mCAZuB,OAYvB;AA9rDiB;;;WAisDnByX,iCAAAA,KAAAA,EAAAA,MAAAA,EAAAA,MAAAA,EAAAA,SAAAA,EAA0D;AACxD,UAAI,CAAC,KAAL,gBAA0B;AAAA;AAD8B;;AAIxD,UAAMwyC,OAAAA,GAAU0N,KAAAA,CAAAA,UAAAA,CAAAA,IAAAA,IACZ,oBADYA,KACZ,CADYA,GAEZ,cANoD,KAMpD,CAFJ;;AAGA,UAAI,CAAJ,SAAc;AACZ33D,wBADY,iCACZA;AADY;AAP0C;;AAYxD,UAAM9B,KAAAA,GAAQ+rD,OAAAA,CAZ0C,KAYxD;AACA,UAAM9rD,MAAAA,GAAS8rD,OAAAA,CAbyC,MAaxD;AACA,UAAM2N,GAAAA,GAdkD,EAcxD;;AACA,WAAK,IAAIl4D,CAAAA,GAAJ,GAAWD,EAAAA,GAAK83D,SAAAA,CAArB,QAAuC73D,CAAAA,GAAvC,IAA+CA,CAAAA,IAA/C,GAAuD;AACrDk4D,QAAAA,GAAAA,CAAAA,IAAAA,CAAS;AACP/kD,UAAAA,SAAAA,EAAW,uBAAuB0kD,SAAAA,CAAvB,CAAuBA,CAAvB,EAAqCA,SAAAA,CAAU73D,CAAAA,GAA/C,CAAqC63D,CAArC,CADJ;AAEPxuC,UAAAA,CAAAA,EAFO;AAGPC,UAAAA,CAAAA,EAHO;AAIP4C,UAAAA,CAAAA,EAJO;AAKPisC,UAAAA,CAAAA,EALO;AAAA,SAATD;AAhBsD;;AAwBxD,iDAxBwD,GAwBxD;AAztDiB;;;WA4tDnBrgD,iCAAAA,OAAAA,EAAiC;AAC/B,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADK;;AAI/B,UAAMrZ,KAAAA,GAAQ+rD,OAAAA,CAJiB,KAI/B;AACA,UAAM9rD,MAAAA,GAAS8rD,OAAAA,CALgB,MAK/B;AACA,UAAM1D,GAAAA,GAAM,KANmB,GAM/B;AAEA,WAR+B,IAQ/B;AAEAA,MAAAA,GAAAA,CAAAA,KAAAA,CAAU,IAAVA,KAAAA,EAAqB,KAVU,MAU/BA;AAEA,UAZ+B,UAY/B;;AAEA,UACG,qCAAqC0D,OAAAA,YAAtC,WAAC,IACD,CAACA,OAAAA,CAFH,MAGE;AACA6N,QAAAA,UAAAA,GADA,OACAA;AAJF,aAKO;AACL,YAAM3H,SAAAA,GAAY,oDADb,MACa,CAAlB;AAKA,YAAMC,MAAAA,GAASD,SAAAA,CANV,OAML;AACA4H,QAAAA,kBAAAA,CAAAA,MAAAA,EAAAA,OAAAA,EAAoC,aAP/B,YAOLA,CAAAA;AACAD,QAAAA,UAAAA,GAAa3H,SAAAA,CARR,MAQL2H;AA3B6B;;AA8B/B,UAAM5G,MAAAA,GAAS,6BAA6B3K,GAAAA,CA9Bb,0BA8BhB,CAAf;;AACAA,MAAAA,GAAAA,CAAAA,SAAAA,CACE2K,MAAAA,CADF3K,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAIE2K,MAAAA,CAJF3K,UAAAA,EAKE2K,MAAAA,CALF3K,WAAAA,EAAAA,CAAAA,EAOE,CAPFA,MAAAA,EAAAA,KAAAA,EA/B+B,MA+B/BA;;AAYA,UAAI,KAAJ,YAAqB;AACnB,YAAM7sB,QAAAA,GAAW,0BAA0B,CADxB,MACF,CAAjB;AACA,oCAA4B;AAC1BuwB,UAAAA,OAD0B,EAC1BA,OAD0B;AAE1B+N,UAAAA,IAAAA,EAAMt+B,QAAAA,CAFoB,CAEpBA,CAFoB;AAG1Bu+B,UAAAA,GAAAA,EAAKv+B,QAAAA,CAHqB,CAGrBA,CAHqB;AAI1Bx7B,UAAAA,KAAAA,EAAOA,KAAAA,GAAQqoD,GAAAA,CAAAA,0BAAAA,CAJW,CAIXA,CAJW;AAK1BpoD,UAAAA,MAAAA,EAAQA,MAAAA,GAASooD,GAAAA,CAAAA,0BAAAA,CALS,CAKTA;AALS,SAA5B;AA7C6B;;AAqD/B,WArD+B,OAqD/B;AAjxDiB;;;WAoxDnB/uC,sCAAAA,OAAAA,EAAAA,GAAAA,EAA2C;AACzC,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADe;;AAIzC,UAAM+uC,GAAAA,GAAM,KAJ6B,GAIzC;AACA,UAAM36B,CAAAA,GAAIq+B,OAAAA,CAL+B,KAKzC;AACA,UAAM4N,CAAAA,GAAI5N,OAAAA,CAN+B,MAMzC;AAEA,UAAMkG,SAAAA,GAAY,gDARuB,CAQvB,CAAlB;AACA,UAAMC,MAAAA,GAASD,SAAAA,CAT0B,OASzC;AACA4H,MAAAA,kBAAAA,CAAAA,MAAAA,EAAAA,OAAAA,EAAoC,aAVK,YAUzCA,CAAAA;;AAEA,WAAK,IAAIr4D,CAAAA,GAAJ,GAAWD,EAAAA,GAAKm4D,GAAAA,CAArB,QAAiCl4D,CAAAA,GAAjC,IAAyCA,CAAzC,IAA8C;AAC5C,YAAMqG,KAAAA,GAAQ6xD,GAAAA,CAD8B,CAC9BA,CAAd;AACArR,QAAAA,GAAAA,CAF4C,IAE5CA;AACAA,QAAAA,GAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAyBxgD,KAAAA,CAHmB,SAG5CwgD;AACAA,QAAAA,GAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAa,CAJ+B,CAI5CA;AACAA,QAAAA,GAAAA,CAAAA,SAAAA,CACE4J,SAAAA,CADF5J,MAAAA,EAEExgD,KAAAA,CAFFwgD,CAAAA,EAGExgD,KAAAA,CAHFwgD,CAAAA,EAIExgD,KAAAA,CAJFwgD,CAAAA,EAKExgD,KAAAA,CALFwgD,CAAAA,EAAAA,CAAAA,EAOE,CAPFA,CAAAA,EAAAA,CAAAA,EAL4C,CAK5CA;;AAWA,YAAI,KAAJ,YAAqB;AACnB,cAAM7sB,QAAAA,GAAW,uBAAuB3zB,KAAAA,CAAvB,GAAgCA,KAAAA,CAD9B,CACF,CAAjB;AACA,sCAA4B;AAC1BkkD,YAAAA,OAD0B,EAC1BA,OAD0B;AAE1B+N,YAAAA,IAAAA,EAAMt+B,QAAAA,CAFoB,CAEpBA,CAFoB;AAG1Bu+B,YAAAA,GAAAA,EAAKv+B,QAAAA,CAHqB,CAGrBA,CAHqB;AAI1Bx7B,YAAAA,KAAAA,EAJ0B;AAK1BC,YAAAA,MAAAA,EAL0B;AAAA,WAA5B;AAlB0C;;AA0B5CooD,QAAAA,GAAAA,CA1B4C,OA0B5CA;AAtCuC;AApxDxB;;;WA8zDnB5uC,oCAA2B;AACzB,UAAI,CAAC,KAAL,gBAA0B;AAAA;AADD;;AAIzB,iCAJyB,CAIzB;AAl0DiB;;;WAu0DnBvB,mBAAAA,GAAAA,EAAe,CAv0DI;;;WA20DnBC,wBAAAA,GAAAA,EAAAA,UAAAA,EAAgC,CA30Db;;;WA+0DnBC,4BAAAA,GAAAA,EAAwB;AACtB,mCAA6B;AAC3B4hD,QAAAA,OAAAA,EAFoB;AACO,OAA7B;AAh1DiB;;;WAq1DnB3hD,iCAAAA,GAAAA,EAAAA,UAAAA,EAAyC;AACvC,UAAI4hD,GAAAA,KAAJ,MAAkB;AAChB,qCAA6B;AAC3BD,UAAAA,OAAAA,EAAS,qCAFK,UAEL;AADkB,SAA7B;AADF,aAIO;AACL,qCAA6B;AAC3BA,UAAAA,OAAAA,EAFG;AACwB,SAA7B;AANqC;;AAUvC,4BAAsB,KAViB,gBAUjB,EAAtB;AA/1DiB;;;WAk2DnB1hD,4BAAmB;AACjB,8BADiB,GACjB;AACA,4BAAsB,KAFL,gBAEK,EAAtB;AAp2DiB;;;WAy2DnBC,uBAAc,CAz2DK;;;WA62DnBC,qBAAY,CA72DO;;;WAm3DnB27C,uBAAc;AACZ,UAAM9L,GAAAA,GAAM,KADA,GACZ;;AACA,UAAI,KAAJ,aAAsB;AACpB,YAAI,qBAAJ,SAAkC;AAChCA,UAAAA,GAAAA,CAAAA,IAAAA,CADgC,SAChCA;AADF,eAEO;AACLA,UAAAA,GAAAA,CADK,IACLA;AAJkB;;AAMpB,2BANoB,IAMpB;AARU;;AAUZA,MAAAA,GAAAA,CAVY,SAUZA;AA73DiB;;;WAg4DnB6R,+BAAsB;AACpB,UAAI,oCAAJ,MAA8C;AAY5C,YAAMx8C,CAAAA,GAAI,SAZkC,mBAY5C;AAEA,YAAMy8C,MAAAA,GAASr6D,IAAAA,CAAAA,GAAAA,CAAS4d,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAAPA,CAAOA,CAAPA,GAAcA,CAAAA,CAAAA,CAAAA,CAAAA,GAAOA,CAAAA,CAdD,CAcCA,CAA9B5d,CAAf;AACA,YAAMs6D,OAAAA,GAAU18C,SAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,aAAYA,CAAAA,CAAAA,CAAAA,CAAZA,EAf4B,CAe5BA,CAAhB;AACA,YAAM28C,OAAAA,GAAU38C,SAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,aAAYA,CAAAA,CAAAA,CAAAA,CAAZA,EAhB4B,CAgB5BA,CAAhB;AACA,YAAM48C,WAAAA,GAAcx6D,IAAAA,CAAAA,IAAAA,CAAUA,IAAAA,CAAAA,GAAAA,CAAAA,OAAAA,EAAVA,OAAUA,CAAVA,IAjBwB,MAiB5C;;AACA,YAAIs6D,OAAAA,KAAAA,OAAAA,IAAuB,0CAA3B,GAAwE;AAUtE,4CAAkC,EAChC,4BAXoE,WAUpC,CAAlC;AAVF,eAaO,IAAID,MAAAA,GAAS7+C,MAAAA,CAAb,SAA6B;AAClC,4CADkC,WAClC;AADK,eAEA;AAEL,4CAFK,CAEL;AAnC0C;AAD1B;;AAwCpB,aAAO,KAxCa,0BAwCpB;AAx6DiB;;;WA26DnBi/C,2BAAAA,CAAAA,EAAAA,CAAAA,EAAwB;AACtB,UAAM5lD,SAAAA,GAAY,SADI,mBACtB;AACA,aAAO,CACLA,SAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAmBA,SAAAA,CAAAA,CAAAA,CAAAA,GAAnBA,CAAAA,GAAsCA,SAAAA,CADjC,CACiCA,CADjC,EAELA,SAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAmBA,SAAAA,CAAAA,CAAAA,CAAAA,GAAnBA,CAAAA,GAAsCA,SAAAA,CAFjC,CAEiCA,CAFjC,CAAP;AA76DiB;;;WAm7DnB6lD,4BAAmB;AACjB,WAAK,IAAIh5D,CAAAA,GAAI,iCAAb,GAAiDA,CAAAA,IAAjD,GAAyDA,CAAzD,IAA8D;AAC5D,YAAI,CAAC,2BAAL,SAAyC;AACvC,iBADuC,KACvC;AAF0D;AAD7C;;AAMjB,aANiB,IAMjB;AAz7DiB;;;;;;;;AA67DrB,0BAAsB;AACpB,MAAIi5D,cAAAA,CAAAA,SAAAA,CAAAA,EAAAA,MAAJ,WAAgD;AAC9CA,IAAAA,cAAAA,CAAAA,SAAAA,CAAyB1mD,UAAzB0mD,EAAyB1mD,CAAzB0mD,IAAoCA,cAAAA,CAAAA,SAAAA,CADU,EACVA,CAApCA;AAFkB;AA3yFtB;;;;;;;;;;;;;;;;ACeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,qCAAqC;AACnC,MAAI,SAAS,kBAAb,aAA4C;AAAA;AADT;;AAInC,MAAMz6D,KAAAA,GAAQ44D,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CAJW,CAIXA,CAAxB;AACA,MAAM34D,MAAAA,GAAS24D,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CALU,CAKVA,CAAzB;AACA,MAAM8B,MAAAA,GAAS,IANoB,MAMpB,EAAf;AACAA,EAAAA,MAAAA,CAAAA,IAAAA,CAAY9B,IAAAA,CAAZ8B,CAAY9B,CAAZ8B,EAAqB9B,IAAAA,CAArB8B,CAAqB9B,CAArB8B,EAAAA,KAAAA,EAPmC,MAOnCA;AACArS,EAAAA,GAAAA,CAAAA,IAAAA,CARmC,MAQnCA;AAhCF;;IAmCA;AACExqD,gCAAc;AAAA;;AACZ,QAAI,qBAAJ,oBAA6C;AAC3C0d,6BAD2C,uCAC3CA;AAFU;AADS;;;;WAOvBo/C,sBAAa;AACXp/C,6BADW,sCACXA;AARqB;;;;;;IAYzB;;;;;AACE1d,qCAAAA,EAAAA,EAAAA,oBAAAA,EAAsC;AAAA;;AAAA;;AAAA;AAEpC,kBAAa85D,EAAAA,CAFuB,CAEvBA,CAAb;AACA,kBAAaA,EAAAA,CAHuB,CAGvBA,CAAb;AACA,wBAAmBA,EAAAA,CAJiB,CAIjBA,CAAnB;AACA,gBAAWA,EAAAA,CALyB,CAKzBA,CAAX;AACA,gBAAWA,EAAAA,CANyB,CAMzBA,CAAX;AACA,gBAAWA,EAAAA,CAPyB,CAOzBA,CAAX;AACA,gBAAWA,EAAAA,CARyB,CAQzBA,CAAX;AACA,mBAToC,IASpC;AACA,iCAVoC,oBAUpC;AAVoC;AADmB;;;;WAczDiD,yBAAAA,GAAAA,EAAqB;AACnB,UADmB,IACnB;;AACA,UAAI,eAAJ,SAA4B;AAC1BC,QAAAA,IAAAA,GAAOxS,GAAAA,CAAAA,oBAAAA,CACL,SADKA,CACL,CADKA,EAEL,SAFKA,CAEL,CAFKA,EAGL,SAHKA,CAGL,CAHKA,EAIL,SALwB,CAKxB,CAJKA,CAAPwS;AADF,aAOO,IAAI,eAAJ,UAA6B;AAClCA,QAAAA,IAAAA,GAAOxS,GAAAA,CAAAA,oBAAAA,CACL,SADKA,CACL,CADKA,EAEL,SAFKA,CAEL,CAFKA,EAGL,KAHKA,GAAAA,EAIL,SAJKA,CAIL,CAJKA,EAKL,SALKA,CAKL,CALKA,EAML,KAPgC,GAC3BA,CAAPwS;AAViB;;AAAA,iDAoBK,KAAxB,WApBmB;AAAA;;AAAA;AAoBnB,4DAA0C;AAAA,cAA1C,SAA0C;AACxCA,UAAAA,IAAAA,CAAAA,YAAAA,CAAkBC,SAAAA,CAAlBD,CAAkBC,CAAlBD,EAAgCC,SAAAA,CADQ,CACRA,CAAhCD;AArBiB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBnB,aAvBmB,IAuBnB;AArCuD;;;WAwCzDF,oBAAAA,GAAAA,EAAAA,KAAAA,EAAAA,OAAAA,EAAqD;AAAA,UAArB9iD,WAAqB,uEAArD8iD,KAAqD;AACnD,UADmD,OACnD;;AACA,UAAI,CAAJ,aAAkB;AAChB,YAAI,8BAAJ,IAAI,CAAJ,EAAyC;AACvC3E,UAAAA,OAAAA,GAAU,8BAD6B,IAC7B,CAAVA;AADF,eAEO;AACL,cAAM/D,SAAAA,GAAY8I,KAAAA,CAAAA,cAAAA,CAAAA,SAAAA,CAAAA,SAAAA,EAEhBA,KAAAA,CAAAA,GAAAA,CAAAA,MAAAA,CAFgBA,KAAAA,EAGhBA,KAAAA,CAAAA,GAAAA,CAAAA,MAAAA,CAHgBA,MAAAA,EADb,IACaA,CAAlB;AAOA,cAAM7I,MAAAA,GAASD,SAAAA,CARV,OAQL;AACAC,UAAAA,MAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAuBA,MAAAA,CAAAA,MAAAA,CAAvBA,KAAAA,EAA4CA,MAAAA,CAAAA,MAAAA,CATvC,MASLA;AACAA,UAAAA,MAAAA,CAVK,SAULA;AACAA,UAAAA,MAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAkBA,MAAAA,CAAAA,MAAAA,CAAlBA,KAAAA,EAAuCA,MAAAA,CAAAA,MAAAA,CAXlC,MAWLA;AAEAA,UAAAA,MAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,MAAAA,EAAkC6I,KAAAA,CAb7B,aAaL7I;;AACA,cAAI,KAAJ,QAAiB;AACfA,YAAAA,MAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,MAAAA,EAA+B,KADhB,MACfA;AAfG;;AAiBL8I,UAAAA,gBAAAA,CAAAA,MAAAA,EAAyB,KAjBpB,KAiBLA,CAAAA;AAEA9I,UAAAA,MAAAA,CAAAA,SAAAA,GAAmB,qBAnBd,MAmBc,CAAnBA;AACAA,UAAAA,MAAAA,CApBK,IAoBLA;AAEA8D,UAAAA,OAAAA,GAAU3N,GAAAA,CAAAA,aAAAA,CAAkB4J,SAAAA,CAAlB5J,MAAAA,EAtBL,QAsBKA,CAAV2N;AACA,8CAvBK,OAuBL;AA1Bc;AAAlB,aA4BO;AAELgF,QAAAA,gBAAAA,CAAAA,GAAAA,EAAsB,KAFjB,KAELA,CAAAA;AACAhF,QAAAA,OAAAA,GAAU,qBAHL,GAGK,CAAVA;AAjCiD;;AAmCnD,UAAI,CAAJ,aAAkB;AAChB,YAAMiF,SAAAA,GAAY,cADF,OACE,CAAlB;;AACA,YAAI;AACFjF,UAAAA,OAAAA,CAAAA,YAAAA,CADE,SACFA;AADF,UAEE,WAAW;AAGXl0D,4EAA+CujD,EAA/CvjD,aAA+CujD,EAA/CvjD,uBAA+CujD,EAAAA,CAHpC,OAGXvjD;AAPc;AAnCiC;;AA6CnD,aA7CmD,OA6CnD;AArFuD;;;;EAA3D;;AAyFA,6DAA6D;AAE3D,MAAM8qD,MAAAA,GAASznD,OAAAA,CAAf;AAAA,MACE+1D,MAAAA,GAAS/1D,OAAAA,CAHgD,MAE3D;AAEA,MAAM4W,KAAAA,GAAQrd,IAAAA,CAAd;AAAA,MACEy8D,OAAAA,GAAUz8D,IAAAA,CAAAA,KAAAA,GAL+C,CAI3D;AAEA,MAN2D,GAM3D;;AACA,MAAIkuD,MAAAA,CAAO/uC,EAAAA,GAAP+uC,CAAAA,CAAAA,GAAiBA,MAAAA,CAAO7uC,EAAAA,GAA5B,CAAqB6uC,CAArB,EAAqC;AACnCwO,IAAAA,GAAAA,GADmC,EACnCA;AACAv9C,IAAAA,EAAAA,GAFmC,EAEnCA;AACAE,IAAAA,EAAAA,GAHmC,GAGnCA;AACAq9C,IAAAA,GAAAA,GAJmC,EAInCA;AACAC,IAAAA,EAAAA,GALmC,EAKnCA;AACAC,IAAAA,EAAAA,GANmC,GAMnCA;AAbyD;;AAe3D,MAAI1O,MAAAA,CAAO7uC,EAAAA,GAAP6uC,CAAAA,CAAAA,GAAiBA,MAAAA,CAAO3uC,EAAAA,GAA5B,CAAqB2uC,CAArB,EAAqC;AACnCwO,IAAAA,GAAAA,GADmC,EACnCA;AACAr9C,IAAAA,EAAAA,GAFmC,EAEnCA;AACAE,IAAAA,EAAAA,GAHmC,GAGnCA;AACAm9C,IAAAA,GAAAA,GAJmC,EAInCA;AACAE,IAAAA,EAAAA,GALmC,EAKnCA;AACAC,IAAAA,EAAAA,GANmC,GAMnCA;AArByD;;AAuB3D,MAAI3O,MAAAA,CAAO/uC,EAAAA,GAAP+uC,CAAAA,CAAAA,GAAiBA,MAAAA,CAAO7uC,EAAAA,GAA5B,CAAqB6uC,CAArB,EAAqC;AACnCwO,IAAAA,GAAAA,GADmC,EACnCA;AACAv9C,IAAAA,EAAAA,GAFmC,EAEnCA;AACAE,IAAAA,EAAAA,GAHmC,GAGnCA;AACAq9C,IAAAA,GAAAA,GAJmC,EAInCA;AACAC,IAAAA,EAAAA,GALmC,EAKnCA;AACAC,IAAAA,EAAAA,GANmC,GAMnCA;AA7ByD;;AA+B3D,MAAM5C,EAAAA,GAAM,cAAavzD,OAAAA,CAAd,OAAC,IAAgCA,OAAAA,CA/Be,MA+B3D;AACA,MAAMwzD,EAAAA,GAAM,QAAO96C,EAAAA,GAAP,KAAiB1Y,OAAAA,CAAlB,OAAC,IAAoCA,OAAAA,CAhCW,MAgC3D;AACA,MAAM+lB,EAAAA,GAAM,cAAa/lB,OAAAA,CAAd,OAAC,IAAgCA,OAAAA,CAjCe,MAiC3D;AACA,MAAMgmB,EAAAA,GAAM,QAAOpN,EAAAA,GAAP,KAAiB5Y,OAAAA,CAAlB,OAAC,IAAoCA,OAAAA,CAlCW,MAkC3D;AACA,MAAMq2D,EAAAA,GAAM,cAAar2D,OAAAA,CAAd,OAAC,IAAgCA,OAAAA,CAnCe,MAmC3D;AACA,MAAMs2D,EAAAA,GAAM,QAAOx9C,EAAAA,GAAP,KAAiB9Y,OAAAA,CAAlB,OAAC,IAAoCA,OAAAA,CApCW,MAoC3D;;AACA,MAAIwzD,EAAAA,IAAJ,IAAc;AAAA;AArC6C;;AAwC3D,MAAM+C,GAAAA,GAAMR,MAAAA,CAAZ,EAAYA,CAAZ;AAAA,MACES,GAAAA,GAAMT,MAAAA,CAAOG,EAAAA,GADf,CACQH,CADR;AAAA,MAEEU,GAAAA,GAAMV,MAAAA,CAAOG,EAAAA,GA1C4C,CA0CnDH,CAFR;AAGA,MAAMW,GAAAA,GAAMX,MAAAA,CAAZ,EAAYA,CAAZ;AAAA,MACEY,GAAAA,GAAMZ,MAAAA,CAAOI,EAAAA,GADf,CACQJ,CADR;AAAA,MAEEa,GAAAA,GAAMb,MAAAA,CAAOI,EAAAA,GA7C4C,CA6CnDJ,CAFR;AAGA,MAAMc,GAAAA,GAAMd,MAAAA,CAAZ,EAAYA,CAAZ;AAAA,MACEe,GAAAA,GAAMf,MAAAA,CAAOK,EAAAA,GADf,CACQL,CADR;AAAA,MAEEgB,GAAAA,GAAMhB,MAAAA,CAAOK,EAAAA,GAhD4C,CAgDnDL,CAFR;AAIA,MAAMiB,IAAAA,GAAOr8D,IAAAA,CAAAA,KAAAA,CAAb,EAAaA,CAAb;AAAA,MACEs8D,IAAAA,GAAOt8D,IAAAA,CAAAA,KAAAA,CAnDkD,EAmDlDA,CADT;AAEA,oBApD2D,GAoD3D;AACA,oBArD2D,GAqD3D;;AACA,OAAK,IAAIgrB,CAAAA,GAAT,MAAmBA,CAAAA,IAAnB,MAA8BA,CAA9B,IAAmC;AACjC,QAAIA,CAAAA,GAAJ,IAAY;AACV,UAAIkiC,EADM,SACV;;AACA,UAAIliC,CAAAA,GAAJ,IAAY;AACVkiC,QAAAA,EAAAA,GADU,CACVA;AADF,aAEO;AACLA,QAAAA,EAAAA,GAAK,MAAD,CAAC,KAAW,KADX,EACA,CAALA;AALQ;;AAOVqP,MAAAA,EAAAA,GAAK3D,EAAAA,GAAM,MAAD,EAAC,IAPD,EAOV2D;AACAC,MAAAA,GAAAA,GAAMZ,GAAAA,GAAO,OAAD,GAAC,IARH,EAQVY;AACAC,MAAAA,GAAAA,GAAMZ,GAAAA,GAAO,OAAD,GAAC,IATH,EASVY;AACAC,MAAAA,GAAAA,GAAMZ,GAAAA,GAAO,OAAD,GAAC,IAVH,EAUVY;AAVF,WAWO;AACL,UAAIxP,GADC,SACL;;AACA,UAAIliC,CAAAA,GAAJ,IAAY;AACVkiC,QAAAA,GAAAA,GADU,CACVA;AADF,aAEO,IAAI7hC,EAAAA,KAAJ,IAAe;AACpB6hC,QAAAA,GAAAA,GADoB,CACpBA;AADK,aAEA;AACLA,QAAAA,GAAAA,GAAK,MAAD,CAAC,KAAW,KADX,EACA,CAALA;AAPG;;AASLqP,MAAAA,EAAAA,GAAKnxC,EAAAA,GAAM,MAAD,EAAC,IATN,GASLmxC;AACAC,MAAAA,GAAAA,GAAMT,GAAAA,GAAO,OAAD,GAAC,IAVR,GAULS;AACAC,MAAAA,GAAAA,GAAMT,GAAAA,GAAO,OAAD,GAAC,IAXR,GAWLS;AACAC,MAAAA,GAAAA,GAAMT,GAAAA,GAAO,OAAD,GAAC,IAZR,GAYLS;AAxB+B;;AA2BjC,QAAIxP,CA3B6B,SA2BjC;;AACA,QAAIliC,CAAAA,GAAJ,IAAY;AACVkiC,MAAAA,CAAAA,GADU,CACVA;AADF,WAEO,IAAIliC,CAAAA,GAAJ,IAAY;AACjBkiC,MAAAA,CAAAA,GADiB,CACjBA;AADK,WAEA;AACLA,MAAAA,CAAAA,GAAK,MAAD,CAAC,KAAW,KADX,EACA,CAALA;AAjC+B;;AAmCjCyP,IAAAA,EAAAA,GAAK/D,EAAAA,GAAM,MAAD,EAAC,IAnCsB,CAmCjC+D;AACAC,IAAAA,GAAAA,GAAMhB,GAAAA,GAAO,OAAD,GAAC,IApCoB,CAoCjCgB;AACAC,IAAAA,GAAAA,GAAMhB,GAAAA,GAAO,OAAD,GAAC,IArCoB,CAqCjCgB;AACAC,IAAAA,GAAAA,GAAMhB,GAAAA,GAAO,OAAD,GAAC,IAtCoB,CAsCjCgB;AACA,QAAMC,GAAAA,GAAM/8D,IAAAA,CAAAA,KAAAA,CAAWA,IAAAA,CAAAA,GAAAA,CAAAA,EAAAA,EAvCU,EAuCVA,CAAXA,CAAZ;AACA,QAAMg9D,GAAAA,GAAMh9D,IAAAA,CAAAA,KAAAA,CAAWA,IAAAA,CAAAA,GAAAA,CAAAA,EAAAA,EAxCU,EAwCVA,CAAXA,CAAZ;AACA,QAAIysD,CAAAA,GAAI4O,OAAAA,GAAAA,CAAAA,GAAc0B,GAAAA,GAzCW,CAyCjC;;AACA,SAAK,IAAIhyC,CAAAA,GAAT,KAAkBA,CAAAA,IAAlB,KAA4BA,CAA5B,IAAiC;AAC/BmiC,MAAAA,CAAAA,GAAK,MAAD,CAAC,KAAW,KADe,EAC1B,CAALA;;AACA,UAAIA,CAAAA,GAAJ,GAAW;AACTA,QAAAA,CAAAA,GADS,CACTA;AADF,aAEO,IAAIA,CAAAA,GAAJ,GAAW;AAChBA,QAAAA,CAAAA,GADgB,CAChBA;AAL6B;;AAO/BjxC,MAAAA,KAAAA,CAAMwwC,CAANxwC,EAAAA,CAAAA,GAAcugD,GAAAA,GAAO,OAAD,GAAC,IAAR,CAACA,GAPiB,CAO/BvgD;AACAA,MAAAA,KAAAA,CAAMwwC,CAANxwC,EAAAA,CAAAA,GAAcwgD,GAAAA,GAAO,OAAD,GAAC,IAAR,CAACA,GARiB,CAQ/BxgD;AACAA,MAAAA,KAAAA,CAAMwwC,CAANxwC,EAAAA,CAAAA,GAAcygD,GAAAA,GAAO,OAAD,GAAC,IAAR,CAACA,GATiB,CAS/BzgD;AACAA,MAAAA,KAAAA,CAAMwwC,CAANxwC,EAAAA,CAAAA,GAV+B,GAU/BA;AApD+B;AAtDwB;AAxI7D;;AAuPA,2CAA2C;AACzC,MAAMghD,EAAAA,GAAKC,MAAAA,CAD8B,MACzC;AACA,MAAMC,EAAAA,GAAKD,MAAAA,CAF8B,MAEzC;AACA,SAHyC,EAGzC;;AACA,UAAQA,MAAAA,CAAR;AACE;AACE,UAAME,cAAAA,GAAiBF,MAAAA,CADzB,cACE;AACA,UAAMG,IAAAA,GAAOr9D,IAAAA,CAAAA,KAAAA,CAAWi9D,EAAAA,CAAAA,MAAAA,GAAXj9D,cAAAA,IAFf,CAEE;AACA,UAAMs9D,IAAAA,GAAOF,cAAAA,GAHf,CAGE;;AACA,WAAK17D,CAAAA,GAAL,GAAYA,CAAAA,GAAZ,MAAsBA,CAAtB,IAA2B;AACzB,YAAI67D,CAAAA,GAAI77D,CAAAA,GADiB,cACzB;;AACA,aAAK,IAAI+qD,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,MAA0BA,CAAAA,IAAK8Q,CAA/B,IAAoC;AAClCC,UAAAA,YAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAGEP,EAAAA,CAHFO,CAGEP,CAHFO,EAIEP,EAAAA,CAAGM,CAAAA,GAJLC,CAIEP,CAJFO,EAKEP,EAAAA,CAAGM,CAAAA,GALLC,cAKEP,CALFO,EAMEL,EAAAA,CANFK,CAMEL,CANFK,EAOEL,EAAAA,CAAGI,CAAAA,GAPLC,CAOEL,CAPFK,EAQEL,EAAAA,CAAGI,CAAAA,GAT6B,cAShCJ,CARFK,CAAAA;AAUAA,UAAAA,YAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAGEP,EAAAA,CAAGM,CAAAA,GAAAA,cAAAA,GAHLC,CAGEP,CAHFO,EAIEP,EAAAA,CAAGM,CAAAA,GAJLC,CAIEP,CAJFO,EAKEP,EAAAA,CAAGM,CAAAA,GALLC,cAKEP,CALFO,EAMEL,EAAAA,CAAGI,CAAAA,GAAAA,cAAAA,GANLC,CAMEL,CANFK,EAOEL,EAAAA,CAAGI,CAAAA,GAPLC,CAOEL,CAPFK,EAQEL,EAAAA,CAAGI,CAAAA,GAnB6B,cAmBhCJ,CARFK,CAAAA;AAbuB;AAJ7B;;AADF;;AA+BE;AACE,WAAK97D,CAAAA,GAAAA,CAAAA,EAAOD,EAAAA,GAAKw7D,EAAAA,CAAjB,QAA4Bv7D,CAAAA,GAA5B,IAAoCA,CAAAA,IAApC,GAA4C;AAC1C87D,QAAAA,YAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAGEP,EAAAA,CAHFO,CAGEP,CAHFO,EAIEP,EAAAA,CAAGv7D,CAAAA,GAJL87D,CAIEP,CAJFO,EAKEP,EAAAA,CAAGv7D,CAAAA,GALL87D,CAKEP,CALFO,EAMEL,EAAAA,CANFK,CAMEL,CANFK,EAOEL,EAAAA,CAAGz7D,CAAAA,GAPL87D,CAOEL,CAPFK,EAQEL,EAAAA,CAAGz7D,CAAAA,GATqC,CASxCy7D,CARFK,CAAAA;AAFJ;;AA/BF;;AA6CE;AACE,YAAM,UA9CV,gBA8CU,CAAN;AA9CJ;AA3PF;;IA6SA;;;;;AACEz/D,8BAAAA,EAAAA,EAAgB;AAAA;;AAAA;;AAAA;AAEd,qBAAe85D,EAAAA,CAFD,CAECA,CAAf;AACA,qBAAeA,EAAAA,CAHD,CAGCA,CAAf;AACA,sBAAgBA,EAAAA,CAJF,CAIEA,CAAhB;AACA,qBAAeA,EAAAA,CALD,CAKCA,CAAf;AACA,mBAAaA,EAAAA,CANC,CAMDA,CAAb;AACA,yBAAmBA,EAAAA,CAPL,CAOKA,CAAnB;AACA,oBARc,IAQd;AARc;AADkC;;;;WAYlD4F,2BAAAA,aAAAA,EAAAA,eAAAA,EAAAA,cAAAA,EAAkE;AAGhE,UAAMC,cAAAA,GAH0D,GAGhE;AAEA,UAAMC,gBAAAA,GAL0D,IAKhE;AAGA,UAAMC,WAAAA,GAR0D,CAQhE;AAEA,UAAMx+D,OAAAA,GAAUY,IAAAA,CAAAA,KAAAA,CAAW,aAVqC,CAUrC,CAAXA,CAAhB;AACA,UAAMX,OAAAA,GAAUW,IAAAA,CAAAA,KAAAA,CAAW,aAXqC,CAWrC,CAAXA,CAAhB;AACA,UAAM69D,WAAAA,GAAc79D,IAAAA,CAAAA,IAAAA,CAAU,aAAVA,CAAU,CAAVA,IAZ4C,OAYhE;AACA,UAAM89D,YAAAA,GAAe99D,IAAAA,CAAAA,IAAAA,CAAU,aAAVA,CAAU,CAAVA,IAb2C,OAahE;AAEA,UAAME,KAAAA,GAAQF,IAAAA,CAAAA,GAAAA,CACZA,IAAAA,CAAAA,IAAAA,CAAUA,IAAAA,CAAAA,GAAAA,CAAS69D,WAAAA,GAAcE,aAAAA,CAAdF,CAAcE,CAAdF,GADP79D,cACFA,CAAVA,CADYA,EAfkD,gBAelDA,CAAd;AAIA,UAAMG,MAAAA,GAASH,IAAAA,CAAAA,GAAAA,CACbA,IAAAA,CAAAA,IAAAA,CAAUA,IAAAA,CAAAA,GAAAA,CAAS89D,YAAAA,GAAeC,aAAAA,CAAfD,CAAeC,CAAfD,GADN99D,cACHA,CAAVA,CADaA,EAnBiD,gBAmBjDA,CAAf;AAIA,UAAMk5D,MAAAA,GAAS2E,WAAAA,GAvBiD,KAuBhE;AACA,UAAM1E,MAAAA,GAAS2E,YAAAA,GAxBiD,MAwBhE;AAEA,UAAMz4D,OAAAA,GAAU;AACdynD,QAAAA,MAAAA,EAAQ,KADM;AAEdsO,QAAAA,MAAAA,EAAQ,KAFM;AAGdh8D,QAAAA,OAAAA,EAAS,CAHK;AAIdC,QAAAA,OAAAA,EAAS,CAJK;AAKd65D,QAAAA,MAAAA,EAAQ,IALM;AAMdC,QAAAA,MAAAA,EAAQ,IANM;AAAA,OAAhB;AASA,UAAM6E,WAAAA,GAAc99D,KAAAA,GAAQ09D,WAAAA,GAnCoC,CAmChE;AACA,UAAMK,YAAAA,GAAe99D,MAAAA,GAASy9D,WAAAA,GApCkC,CAoChE;AAEA,UAAMzL,SAAAA,GAAY+L,cAAAA,CAAAA,SAAAA,CAAAA,MAAAA,EAAAA,WAAAA,EAAAA,YAAAA,EAtC8C,KAsC9CA,CAAlB;AAMA,UAAM9L,MAAAA,GAASD,SAAAA,CA5CiD,OA4ChE;AAEA,UAAMvzD,IAAAA,GAAOwzD,MAAAA,CAAAA,eAAAA,CAAAA,KAAAA,EA9CmD,MA8CnDA,CAAb;;AACA,2BAAqB;AACnB,YAAMn2C,KAAAA,GAAQrd,IAAAA,CADK,IACnB;;AACA,aAAK,IAAI8C,CAAAA,GAAJ,GAAWD,EAAAA,GAAKwa,KAAAA,CAArB,QAAmCva,CAAAA,GAAnC,IAA2CA,CAAAA,IAA3C,GAAmD;AACjDua,UAAAA,KAAAA,CAAAA,CAAAA,CAAAA,GAAWkiD,eAAAA,CADsC,CACtCA,CAAXliD;AACAA,UAAAA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAAekiD,eAAAA,CAFkC,CAElCA,CAAfliD;AACAA,UAAAA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAAekiD,eAAAA,CAHkC,CAGlCA,CAAfliD;AACAA,UAAAA,KAAAA,CAAMva,CAAAA,GAANua,CAAAA,CAAAA,GAJiD,GAIjDA;AANiB;AA/C2C;;AAAA,kDAwD3C,KAArB,QAxDgE;AAAA;;AAAA;AAwDhE,+DAAoC;AAAA,cAApC,MAAoC;AAClCmiD,UAAAA,UAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EADkC,OAClCA,CAAAA;AAzD8D;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2DhEhM,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EA3DgE,WA2DhEA;AACA,UAAMj0D,MAAAA,GAASg0D,SAAAA,CA5DiD,MA4DhE;AAEA,aAAO;AACLh0D,QAAAA,MADK,EACLA,MADK;AAELiB,QAAAA,OAAAA,EAASA,OAAAA,GAAUw+D,WAAAA,GAFd;AAGLv+D,QAAAA,OAAAA,EAASA,OAAAA,GAAUu+D,WAAAA,GAHd;AAIL1E,QAAAA,MAJK,EAILA,MAJK;AAKLC,QAAAA,MALK,EAKLA;AALK,OAAP;AA1EgD;;;WAmFlD0B,oBAAAA,GAAAA,EAAAA,KAAAA,EAAAA,OAAAA,EAAqD;AAAA,UAArB9iD,WAAqB,uEAArD8iD,KAAqD;AACnDK,MAAAA,gBAAAA,CAAAA,GAAAA,EAAsB,KAD6B,KACnDA,CAAAA;AACA,UAFmD,KAEnD;;AACA,uBAAiB;AACf76D,QAAAA,KAAAA,GAAQ2d,WAAAA,6BAAAA,CAAmCuqC,GAAAA,CAD5B,mBACPvqC,CAAR3d;AADF,aAEO;AAELA,QAAAA,KAAAA,GAAQ2d,WAAAA,6BAAAA,CAAmCi9C,KAAAA,CAFtC,aAEGj9C,CAAR3d;;AACA,YAAI,KAAJ,QAAiB;AACf,cAAMg+D,WAAAA,GAAcrgD,WAAAA,6BAAAA,CAAmC,KADxC,MACKA,CAApB;;AACA3d,UAAAA,KAAAA,GAAQ,CAACA,KAAAA,CAAAA,CAAAA,CAAAA,GAAWg+D,WAAAA,CAAZ,CAAYA,CAAZ,EAA4Bh+D,KAAAA,CAAAA,CAAAA,CAAAA,GAAWg+D,WAAAA,CAAvC,CAAuCA,CAAvC,CAARh+D;AALG;AAL4C;;AAgBnD,UAAMi+D,sBAAAA,GAAyB,8BAE7BvmD,WAAAA,GAAAA,IAAAA,GAAqB,KAFQ,aAG7BkjD,KAAAA,CAnBiD,cAgBpB,CAA/B;;AAMA,UAAI,CAAJ,aAAkB;AAChB1S,QAAAA,GAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAA4B0S,KAAAA,CADZ,aAChB1S;;AACA,YAAI,KAAJ,QAAiB;AACfA,UAAAA,GAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAyB,KADV,MACfA;AAHc;AAtBiC;;AA6BnDA,MAAAA,GAAAA,CAAAA,SAAAA,CACE+V,sBAAAA,CADF/V,OAAAA,EAEE+V,sBAAAA,CA/BiD,OA6BnD/V;AAIAA,MAAAA,GAAAA,CAAAA,KAAAA,CAAU+V,sBAAAA,CAAV/V,MAAAA,EAAyC+V,sBAAAA,CAjCU,MAiCnD/V;AAEA,aAAOA,GAAAA,CAAAA,aAAAA,CAAkB+V,sBAAAA,CAAlB/V,MAAAA,EAnC4C,WAmC5CA,CAAP;AAtHgD;;;;EAApD;;IA0HA;;;;;;;;;;;;;WACEsS,sBAAa;AACX,aADW,SACX;AAFiD;;;;EAArD;;AAMA,qDAAqD;AACnD,UAAQhD,EAAAA,CAAR,CAAQA,CAAR;AACE;AACE,aAAO,kCAFX,oBAEW,CAAP;;AACF;AACE,aAAO,uBAJX,EAIW,CAAP;;AACF;AACE,aAAO,IANX,mBAMW,EAAP;AANJ;;AAQA,QAAM,qCAA8BA,EAAAA,CATe,CASfA,CAA9B,EAAN;AAtbF;;AAybA,IAAM0G,SAAAA,GAAY;AAChBC,EAAAA,OAAAA,EADgB;AAEhBC,EAAAA,SAAAA,EAFgB;AAAA,CAAlB;;IAKA;AAME1gE,yBAAAA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAAA,qBAAAA,EAAAA,aAAAA,EAAkE;AAAA;;AAChE,wBAAoB85D,EAAAA,CAD4C,CAC5CA,CAApB;AACA,kBAAcA,EAAAA,CAAAA,CAAAA,CAAAA,IAAS,kBAAvB;AACA,gBAAYA,EAAAA,CAHoD,CAGpDA,CAAZ;AACA,iBAAaA,EAAAA,CAJmD,CAInDA,CAAb;AACA,iBAAaA,EAAAA,CALmD,CAKnDA,CAAb;AACA,qBAAiBA,EAAAA,CAN+C,CAM/CA,CAAjB;AACA,sBAAkBA,EAAAA,CAP8C,CAO9CA,CAAlB;AACA,iBARgE,KAQhE;AACA,eATgE,GAShE;AACA,iCAVgE,qBAUhE;AACA,yBAXgE,aAWhE;AAjBgB;;;;WAoBlB6G,6BAAAA,KAAAA,EAA2B;AACzB,UAAMze,YAAAA,GAAe,KADI,YACzB;AACA,UAAM6Y,IAAAA,GAAO,KAFY,IAEzB;AACA,UAAM6F,KAAAA,GAAQ,KAHW,KAGzB;AACA,UAAMC,KAAAA,GAAQ,KAJW,KAIzB;AACA,UAAMC,SAAAA,GAAY,KALO,SAKzB;AACA,UAAMC,UAAAA,GAAa,KANM,UAMzB;AACA,UAAMhH,KAAAA,GAAQ,KAPW,KAOzB;AACA,UAAME,qBAAAA,GAAwB,KARL,qBAQzB;AAEAlwD,sBAAK,iBAVoB,UAUzBA;AAsBA,UAAM4wD,EAAAA,GAAKI,IAAAA,CAAX,CAAWA,CAAX;AAAA,UACEH,EAAAA,GAAKG,IAAAA,CADP,CACOA,CADP;AAAA,UAEEF,EAAAA,GAAKE,IAAAA,CAFP,CAEOA,CAFP;AAAA,UAGED,EAAAA,GAAKC,IAAAA,CAnCkB,CAmClBA,CAHP;;AAMA,UAAMuF,WAAAA,GAAcrgD,WAAAA,6BAAAA,CAAmC,KAtC9B,MAsCLA,CAApB;;AACA,UAAM+gD,cAAAA,GAAiB/gD,WAAAA,6BAAAA,CACrB,KAxCuB,aAuCFA,CAAvB;;AAGA,UAAM+/C,aAAAA,GAAgB,CACpBM,WAAAA,CAAAA,CAAAA,CAAAA,GAAiBU,cAAAA,CADG,CACHA,CADG,EAEpBV,WAAAA,CAAAA,CAAAA,CAAAA,GAAiBU,cAAAA,CAFG,CAEHA,CAFG,CAAtB;AAQA,UAAMC,IAAAA,GAAO,4BAEX,gBAFW,OAGXjB,aAAAA,CArDuB,CAqDvBA,CAHW,CAAb;AAKA,UAAMkB,IAAAA,GAAO,4BAEX,gBAFW,QAGXlB,aAAAA,CA1DuB,CA0DvBA,CAHW,CAAb;AAMA,UAAM5L,SAAAA,GAAY8I,KAAAA,CAAAA,cAAAA,CAAAA,SAAAA,CAAAA,SAAAA,EAEhB+D,IAAAA,CAFgB/D,IAAAA,EAGhBgE,IAAAA,CAHgBhE,IAAAA,EA7DO,IA6DPA,CAAlB;AAMA,UAAM7I,MAAAA,GAASD,SAAAA,CAnEU,OAmEzB;AACA,UAAM+M,QAAAA,GAAWlH,qBAAAA,CAAAA,oBAAAA,CApEQ,MAoERA,CAAjB;AACAkH,MAAAA,QAAAA,CAAAA,UAAAA,GAAsBjE,KAAAA,CArEG,UAqEzBiE;AAEA,+DAvEyB,KAuEzB;AAEA,UAAIC,UAAAA,GAzEqB,EAyEzB;AACA,UAAIC,UAAAA,GA1EqB,EA0EzB;AACA,UAAIC,UAAAA,GA3EqB,EA2EzB;AACA,UAAIC,UAAAA,GA5EqB,EA4EzB;;AAIA,UAAI5G,EAAAA,GAAJ,GAAY;AACVyG,QAAAA,UAAAA,GADU,CACVA;AACAE,QAAAA,UAAAA,IAAcr/D,IAAAA,CAAAA,GAAAA,CAFJ,EAEIA,CAAdq/D;AAlFuB;;AAoFzB,UAAI1G,EAAAA,GAAJ,GAAY;AACVyG,QAAAA,UAAAA,GADU,CACVA;AACAE,QAAAA,UAAAA,IAAct/D,IAAAA,CAAAA,GAAAA,CAFJ,EAEIA,CAAds/D;AAtFuB;;AAwFzBlN,MAAAA,MAAAA,CAAAA,SAAAA,CAAiB,EAAE,aAAnBA,UAAiB,CAAjBA,EAA6C,EAAE,aAxFtB,UAwFoB,CAA7CA;AACA8M,MAAAA,QAAAA,CAAAA,SAAAA,CAAmBF,IAAAA,CAAnBE,KAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAqCD,IAAAA,CAArCC,KAAAA,EAAAA,CAAAA,EAzFyB,CAyFzBA;AAEA,kEA3FyB,UA2FzB;AAEAA,MAAAA,QAAAA,CAAAA,aAAAA,GAAyBA,QAAAA,CAAAA,GAAAA,CAAAA,mBAAAA,CA7FA,KA6FAA,EAAzBA;AAEAA,MAAAA,QAAAA,CAAAA,mBAAAA,CA/FyB,YA+FzBA;AAEAA,MAAAA,QAAAA,CAjGyB,UAiGzBA;AAEA,aAAO;AACL/gE,QAAAA,MAAAA,EAAQg0D,SAAAA,CADH;AAEL+G,QAAAA,MAAAA,EAAQ8F,IAAAA,CAFH;AAGL7F,QAAAA,MAAAA,EAAQ8F,IAAAA,CAHH;AAIL7/D,QAAAA,OAAAA,EAJK;AAKLC,QAAAA,OAAAA,EALK;AAAA,OAAP;AAvHgB;;;WAgIlBkgE,yBAAAA,IAAAA,EAAAA,cAAAA,EAAAA,KAAAA,EAA6C;AAE3CtsC,MAAAA,IAAAA,GAAOjzB,IAAAA,CAAAA,GAAAA,CAFoC,IAEpCA,CAAPizB;AAKA,UAAM64B,OAAAA,GAAU9rD,IAAAA,CAAAA,GAAAA,CAASw/D,aAAAA,CAATx/D,gBAAAA,EAP2B,cAO3BA,CAAhB;AACA,UAAI27B,IAAAA,GAAO37B,IAAAA,CAAAA,IAAAA,CAAUizB,IAAAA,GARsB,KAQhCjzB,CAAX;;AACA,UAAI27B,IAAAA,IAAJ,SAAqB;AACnBA,QAAAA,IAAAA,GADmB,OACnBA;AADF,aAEO;AACLt7B,QAAAA,KAAAA,GAAQs7B,IAAAA,GADH,IACLt7B;AAZyC;;AAc3C,aAAO;AAAEA,QAAAA,KAAF,EAAEA,KAAF;AAASs7B,QAAAA,IAAT,EAASA;AAAT,OAAP;AA9IgB;;;WAiJlB8jC,kBAAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAmC;AACjC,UAAMC,SAAAA,GAAY9G,EAAAA,GADe,EACjC;AACA,UAAM+G,UAAAA,GAAa9G,EAAAA,GAFc,EAEjC;AACAqG,MAAAA,QAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAHiC,UAGjCA;AACAA,MAAAA,QAAAA,CAJiC,IAIjCA;AACAA,MAAAA,QAAAA,CALiC,OAKjCA;AAtJgB;;;WAyJlBU,wCAAAA,QAAAA,EAAAA,SAAAA,EAAAA,KAAAA,EAA2D;AACzD,UAAMv6D,OAAAA,GAAU65D,QAAAA,CAAhB;AAAA,UACErV,OAAAA,GAAUqV,QAAAA,CAF6C,OACzD;;AAEA;AACE,aAAKX,SAAAA,CAAL;AACE,cAAMhW,GAAAA,GAAM,KADd,GACE;AACAljD,UAAAA,OAAAA,CAAAA,SAAAA,GAAoBkjD,GAAAA,CAFtB,SAEEljD;AACAA,UAAAA,OAAAA,CAAAA,WAAAA,GAAsBkjD,GAAAA,CAHxB,WAGEljD;AACAwkD,UAAAA,OAAAA,CAAAA,SAAAA,GAAoBtB,GAAAA,CAJtB,SAIEsB;AACAA,UAAAA,OAAAA,CAAAA,WAAAA,GAAsBtB,GAAAA,CALxB,WAKEsB;AANJ;;AAQE,aAAK0U,SAAAA,CAAL;AACE,cAAMsB,QAAAA,GAAW7hD,WAAAA,YAAAA,CAAkB85C,KAAAA,CAAlB95C,CAAkB85C,CAAlB95C,EAA4B85C,KAAAA,CAA5B95C,CAA4B85C,CAA5B95C,EAAsC85C,KAAAA,CADzD,CACyDA,CAAtC95C,CAAjB;;AACA3Y,UAAAA,OAAAA,CAAAA,SAAAA,GAFF,QAEEA;AACAA,UAAAA,OAAAA,CAAAA,WAAAA,GAHF,QAGEA;AAEAwkD,UAAAA,OAAAA,CAAAA,SAAAA,GALF,QAKEA;AACAA,UAAAA,OAAAA,CAAAA,WAAAA,GANF,QAMEA;AAdJ;;AAgBE;AACE,gBAAM,wDAjBV,SAiBU,EAAN;AAjBJ;AA5JgB;;;WAiLlBgR,oBAAAA,GAAAA,EAAAA,KAAAA,EAAAA,OAAAA,EAAqD;AAAA,UAArB9iD,WAAqB,uEAArD8iD,KAAqD;AAEnD,UAAI1C,MAAAA,GAF+C,OAEnD;;AACA,UAAI,CAAJ,aAAkB;AAChBA,QAAAA,MAAAA,GAASn6C,WAAAA,SAAAA,CAAAA,MAAAA,EAAuBi9C,KAAAA,CADhB,aACPj9C,CAATm6C;;AACA,YAAI,KAAJ,QAAiB;AACfA,UAAAA,MAAAA,GAASn6C,WAAAA,SAAAA,CAAAA,MAAAA,EAAuB,KADjB,MACNA,CAATm6C;AAHc;AAHiC;;AAUnD,UAAMmG,sBAAAA,GAAyB,yBAVoB,KAUpB,CAA/B;AAEA,UAAInD,SAAAA,GAAY,cAZmC,MAYnC,CAAhB;AAGAA,MAAAA,SAAAA,GAAYA,SAAAA,CAAAA,SAAAA,CACVmD,sBAAAA,CADUnD,OAAAA,EAEVmD,sBAAAA,CAjBiD,OAevCnD,CAAZA;AAIAA,MAAAA,SAAAA,GAAYA,SAAAA,CAAAA,KAAAA,CACV,IAAImD,sBAAAA,CADMnD,MAAAA,EAEV,IAAImD,sBAAAA,CArB6C,MAmBvCnD,CAAZA;AAKA,UAAMjF,OAAAA,GAAU3N,GAAAA,CAAAA,aAAAA,CAAkB+V,sBAAAA,CAAlB/V,MAAAA,EAxBmC,QAwBnCA,CAAhB;;AACA,UAAI;AACF2N,QAAAA,OAAAA,CAAAA,YAAAA,CADE,SACFA;AADF,QAEE,WAAW;AAGXl0D,8DAAmCujD,EAAnCvjD,aAAmCujD,EAAnCvjD,uBAAmCujD,EAAAA,CAHxB,OAGXvjD;AA9BiD;;AAgCnD,aAhCmD,OAgCnD;AAjNgB;;;SAElB,eAA8B;AAC5B,aAAOib,kBAAAA,IAAAA,EAAAA,kBAAAA,EADqB,IACrBA,CAAP;AAHgB;;;;;;;;;;;;;;;;;;ACnapB,IAAMk9B,mBAAAA,GAAsB73C,MAAAA,CAAAA,MAAAA,CA3B5B,IA2B4BA,CAA5B;;AAEA63C,mBAAAA,CAAAA,UAAAA,GACEA,mBAAAA,CAAAA,UAAAA,KAAAA,SAAAA,GAAAA,IAAAA,GAEIA,mBAAAA,CAhCN,UA6BAA;AAKAA,mBAAAA,CAAAA,SAAAA,GACEA,mBAAAA,CAAAA,SAAAA,KAAAA,SAAAA,GAAAA,EAAAA,GAEIA,mBAAAA,CArCN,SAkCAA;;;;;;;;;;;;;;;ACnBA;;;;;;;;;;;;;;;;AAWA,IAAM2lB,YAAAA,GAAe;AACnB1tD,EAAAA,OAAAA,EADmB;AAEnB2tD,EAAAA,IAAAA,EAFmB;AAGnBC,EAAAA,KAAAA,EAHmB;AAAA,CAArB;AAMA,IAAMC,UAAAA,GAAa;AACjB7tD,EAAAA,OAAAA,EADiB;AAEjB8tD,EAAAA,MAAAA,EAFiB;AAGjBC,EAAAA,eAAAA,EAHiB;AAIjBC,EAAAA,KAAAA,EAJiB;AAKjBC,EAAAA,OAAAA,EALiB;AAMjBL,EAAAA,KAAAA,EANiB;AAOjBM,EAAAA,IAAAA,EAPiB;AAQjBC,EAAAA,aAAAA,EARiB;AASjBC,EAAAA,cAAAA,EATiB;AAAA,CAAnB;;AAYA,4BAA4B;AAC1B,MACE,EACE,2BACC,gCAA8BxpC,MAAAA,KAHnC,IACE,CADF,EAKE;AASAh1B,oBATA,gEASAA;AACA,WAVA,MAUA;AAhBwB;;AAkB1B,UAAQg1B,MAAAA,CAAR;AACE;AACE,aAAO,yBAAmBA,MAAAA,CAF9B,OAEW,CAAP;;AACF;AACE,aAAO,8BAAwBA,MAAAA,CAJnC,OAIW,CAAP;;AACF;AACE,aAAO,4BAAsBA,MAAAA,CAAtB,SAAsCA,MAAAA,CANjD,IAMW,CAAP;;AACF;AACE,aAAO,sCAAgCA,MAAAA,CAAhC,SAAgDA,MAAAA,CAR3D,MAQW,CAAP;;AACF;AACE,aAAO,gCAA0BA,MAAAA,CAA1B,SAA0CA,MAAAA,CAVrD,OAUW,CAAP;;AACF;AACE,aAAO,gCAA0BA,MAAAA,CAA1B,SAA0CA,MAAAA,CAZrD,QAYqDA,EAA1C,CAAP;AAZJ;AA9DF;;IA8EA;AACEj5B,0BAAAA,UAAAA,EAAAA,UAAAA,EAAAA,MAAAA,EAA4C;AAAA;;AAAA;;AAC1C,sBAD0C,UAC1C;AACA,sBAF0C,UAE1C;AACA,kBAH0C,MAG1C;AACA,sBAJ0C,CAI1C;AACA,oBAL0C,CAK1C;AACA,gCAN0C,IAM1C;AACA,uBAAmBuE,MAAAA,CAAAA,MAAAA,CAPuB,IAOvBA,CAAnB;AACA,6BAAyBA,MAAAA,CAAAA,MAAAA,CARiB,IAQjBA,CAAzB;AACA,gCAA4BA,MAAAA,CAAAA,MAAAA,CATc,IASdA,CAA5B;AACA,yBAAqBA,MAAAA,CAAAA,MAAAA,CAVqB,IAUrBA,CAArB;;AAEA,8BAA0By0B,UAAAA,KAAAA,EAAS;AACjC,UAAMn4B,IAAAA,GAAOm4B,KAAAA,CADoB,IACjC;;AACA,UAAIn4B,IAAAA,CAAAA,UAAAA,KAAoB,MAAxB,YAAyC;AAAA;AAFR;;AAKjC,UAAIA,IAAAA,CAAJ,QAAiB;AACf,oCADe,IACf;;AADe;AALgB;;AASjC,UAAIA,IAAAA,CAAJ,UAAmB;AACjB,YAAM6hE,UAAAA,GAAa7hE,IAAAA,CADF,UACjB;AACA,YAAMihB,UAAAA,GAAa,2BAFF,UAEE,CAAnB;;AACA,YAAI,CAAJ,YAAiB;AACf,gBAAM,4CADS,UACT,EAAN;AAJe;;AAMjB,eAAO,2BANU,UAMV,CAAP;;AAEA,YAAIjhB,IAAAA,CAAAA,QAAAA,KAAkBkhE,YAAAA,CAAtB,MAAyC;AACvCjgD,UAAAA,UAAAA,CAAAA,OAAAA,CAAmBjhB,IAAAA,CADoB,IACvCihB;AADF,eAEO,IAAIjhB,IAAAA,CAAAA,QAAAA,KAAkBkhE,YAAAA,CAAtB,OAA0C;AAC/CjgD,UAAAA,UAAAA,CAAAA,MAAAA,CAAkB6gD,UAAAA,CAAW9hE,IAAAA,CADkB,MAC7B8hE,CAAlB7gD;AADK,eAEA;AACL,gBAAM,UADD,0BACC,CAAN;AAbe;;AAAA;AATc;;AA0BjC,UAAM6vB,MAAAA,GAAS,oBAAmB9wC,IAAAA,CA1BD,MA0BlB,CAAf;;AACA,UAAI,CAAJ,QAAa;AACX,cAAM,gDAAyCA,IAAAA,CADpC,MACL,EAAN;AA5B+B;;AA8BjC,UAAIA,IAAAA,CAAJ,YAAqB;AACnB,YAAM+hE,YAAAA,GAAe,MADF,UACnB;AACA,YAAMC,YAAAA,GAAehiE,IAAAA,CAFF,UAEnB;AACA,oBAAY,mBAAmB;AAC7BC,UAAAA,OAAAA,CAAQ6wC,MAAAA,CAAO9wC,IAAAA,CADc,IACrB8wC,CAAR7wC,CAAAA;AADF,gBAGE,kBAAkB;AAChBgiE,UAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,YAAAA,UAAAA,EADiB;AAEjBC,YAAAA,UAAAA,EAFiB;AAGjBtjC,YAAAA,QAAAA,EAAUqiC,YAAAA,CAHO;AAIjBW,YAAAA,UAAAA,EAAY7hE,IAAAA,CAJK;AAKjBA,YAAAA,IAAAA,EALiB;AAAA,WAAnBiiE;AAJJ,WAYE,kBAAkB;AAChBA,UAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,YAAAA,UAAAA,EADiB;AAEjBC,YAAAA,UAAAA,EAFiB;AAGjBtjC,YAAAA,QAAAA,EAAUqiC,YAAAA,CAHO;AAIjBW,YAAAA,UAAAA,EAAY7hE,IAAAA,CAJK;AAKjBo4B,YAAAA,MAAAA,EAAQ0pC,UAAAA,CALS,MAKTA;AALS,WAAnBG;AAhBe,SAGnB;AAHmB;AA9BY;;AAyDjC,UAAIjiE,IAAAA,CAAJ,UAAmB;AACjB,gCADiB,IACjB;;AADiB;AAzDc;;AA6DjC8wC,MAAAA,MAAAA,CAAO9wC,IAAAA,CA7D0B,IA6DjC8wC,CAAAA;AAzEwC,KAY1C;;AA+DAmxB,IAAAA,MAAAA,CAAAA,gBAAAA,CAAAA,SAAAA,EAAmC,KA3EO,kBA2E1CA;AA5EiB;;;;WA+EnBG,YAAAA,UAAAA,EAAAA,OAAAA,EAAwB;AAUtB,UAAMC,EAAAA,GAAK,KAVW,aAUtB;;AACA,UAAIA,EAAAA,CAAJ,UAAIA,CAAJ,EAAoB;AAClB,cAAM,4DADY,UACZ,QAAN;AAZoB;;AActBA,MAAAA,EAAAA,CAAAA,UAAAA,CAAAA,GAdsB,OActBA;AA7FiB;;;WAsGnBC,cAAAA,UAAAA,EAAAA,IAAAA,EAAAA,SAAAA,EAAkC;AAChC,wBACE;AACEJ,QAAAA,UAAAA,EAAY,KADd;AAEEC,QAAAA,UAAAA,EAAY,KAFd;AAGErxB,QAAAA,MAAAA,EAHF;AAIE9wC,QAAAA,IAJF,EAIEA;AAJF,OADF,EADgC,SAChC;AAvGiB;;;WA0HnBuiE,yBAAAA,UAAAA,EAAAA,IAAAA,EAAAA,SAAAA,EAA6C;AAC3C,UAAMV,UAAAA,GAAa,KADwB,UACxB,EAAnB;AACA,UAAM5gD,UAAAA,GAFqC,oCAE3C;AACA,8CAH2C,UAG3C;;AACA,UAAI;AACF,0BACE;AACEihD,UAAAA,UAAAA,EAAY,KADd;AAEEC,UAAAA,UAAAA,EAAY,KAFd;AAGErxB,UAAAA,MAAAA,EAHF;AAIE+wB,UAAAA,UAJF,EAIEA,UAJF;AAKE7hE,UAAAA,IALF,EAKEA;AALF,SADF,EADE,SACF;AADF,QAWE,WAAW;AACXihB,QAAAA,UAAAA,CAAAA,MAAAA,CADW,EACXA;AAhByC;;AAkB3C,aAAOA,UAAAA,CAlBoC,OAkB3C;AA5IiB;;;WAyJnBuhD,wBAAAA,UAAAA,EAAAA,IAAAA,EAAAA,gBAAAA,EAAAA,SAAAA,EAA8D;AAAA;;AAC5D,UAAMC,QAAAA,GAAW,KAD2C,QAC3C,EAAjB;AACA,UAAMP,UAAAA,GAAa,KAFyC,UAE5D;AACA,UAAMC,UAAAA,GAAa,KAHyC,UAG5D;AACA,UAAMF,MAAAA,GAAS,KAJ6C,MAI5D;AAEA,aAAO,mBACL;AACEl+D,QAAAA,KAAAA,EAAO6hC,eAAAA,UAAAA,EAAc;AACnB,cAAM88B,eAAAA,GADa,oCACnB;AACA,+CAAmC;AACjC98B,YAAAA,UADiC,EACjCA,UADiC;AAEjC+8B,YAAAA,SAAAA,EAFiC;AAGjCC,YAAAA,QAAAA,EAHiC;AAIjCC,YAAAA,UAAAA,EAJiC;AAKjCC,YAAAA,QAAAA,EALiC;AAAA,WAAnC;;AAOA,8BACE;AACEZ,YAAAA,UADF,EACEA,UADF;AAEEC,YAAAA,UAFF,EAEEA,UAFF;AAGErxB,YAAAA,MAAAA,EAHF;AAIE2xB,YAAAA,QAJF,EAIEA,QAJF;AAKEziE,YAAAA,IALF,EAKEA,IALF;AAMEylC,YAAAA,WAAAA,EAAaG,UAAAA,CANf;AAAA,WADF,EATmB,SASnB;;AAYA,iBAAO88B,eAAAA,CArBY,OAqBnB;AAtBJ;AAyBEluB,QAAAA,IAAAA,EAAM5O,cAAAA,UAAAA,EAAc;AAClB,cAAMm9B,cAAAA,GADY,oCAClB;AACA,wDAFkB,cAElB;AACAd,UAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,YAAAA,UADiB,EACjBA,UADiB;AAEjBC,YAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,YAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,YAAAA,QAJiB,EAIjBA,QAJiB;AAKjBh9B,YAAAA,WAAAA,EAAaG,UAAAA,CALI;AAAA,WAAnBq8B;AASA,iBAAOc,cAAAA,CAZW,OAYlB;AArCJ;AAwCEthC,QAAAA,MAAAA,EAAQrJ,gBAAAA,MAAAA,EAAU;AAChB71B,4BAAO61B,MAAAA,YAAP71B,KAAAA,EADgB,iCAChBA;AACA,cAAMygE,gBAAAA,GAFU,oCAEhB;AACA,0DAHgB,gBAGhB;AACA,wDAJgB,IAIhB;AACAf,UAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,YAAAA,UADiB,EACjBA,UADiB;AAEjBC,YAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,YAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,YAAAA,QAJiB,EAIjBA,QAJiB;AAKjBrqC,YAAAA,MAAAA,EAAQ0pC,UAAAA,CALS,MAKTA;AALS,WAAnBG;AAQA,iBAAOe,gBAAAA,CAbS,OAahB;AArDJ;AAAA,OADK,EANqD,gBAMrD,CAAP;AA/JiB;;;WA+NnBC,2BAAAA,IAAAA,EAAwB;AACtB,UAAMC,IAAAA,GADgB,IACtB;AACA,UAAMpyB,MAAAA,GAAS,mBAAmB9wC,IAAAA,CAFZ,MAEP,CAAf;AACA,UAAMyiE,QAAAA,GAAWziE,IAAAA,CAHK,QAGtB;AACA,UAAMkiE,UAAAA,GAAa,KAJG,UAItB;AACA,UAAMC,UAAAA,GAAaniE,IAAAA,CALG,UAKtB;AACA,UAAMiiE,MAAAA,GAAS,KANO,MAMtB;AAEA,UAAMkB,UAAAA,GAAa;AACjB59B,QAAAA,OADiB,mBACjBA,KADiB,EACmB;AAAA,cAArBxI,IAAqB,uEAApCwI,CAAoC;AAAA,cAApCA,SAAoC;;AAClC,cAAI,KAAJ,aAAsB;AAAA;AADY;;AAIlC,cAAM69B,eAAAA,GAAkB,KAJU,WAIlC;AACA,8BALkC,IAKlC;;AAIA,cAAIA,eAAAA,GAAAA,CAAAA,IAAuB,oBAA3B,GAAkD;AAChD,kCADgD,oCAChD;AACA,yBAAa,oBAFmC,OAEhD;AAXgC;;AAalCF,UAAAA,IAAAA,CAAAA,YAAAA,CACE;AACEhB,YAAAA,UADF,EACEA,UADF;AAEEC,YAAAA,UAFF,EAEEA,UAFF;AAGEljC,YAAAA,MAAAA,EAAQoiC,UAAAA,CAHV;AAIEoB,YAAAA,QAJF,EAIEA,QAJF;AAKE9kD,YAAAA,KALF,EAKEA;AALF,WADFulD,EAbkC,SAalCA;AAde;AA0BjB59B,QAAAA,KA1BiB,mBA0BT;AACN,cAAI,KAAJ,aAAsB;AAAA;AADhB;;AAIN,6BAJM,IAIN;AACA28B,UAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,YAAAA,UADiB,EACjBA,UADiB;AAEjBC,YAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,YAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,YAAAA,QAJiB,EAIjBA;AAJiB,WAAnBR;AAMA,iBAAOiB,IAAAA,CAAAA,WAAAA,CAXD,QAWCA,CAAP;AArCe;AAwCjBpnC,QAAAA,KAxCiB,iBAwCjBA,MAxCiB,EAwCH;AACZv5B,4BAAO61B,MAAAA,YAAP71B,KAAAA,EADY,gCACZA;;AACA,cAAI,KAAJ,aAAsB;AAAA;AAFV;;AAKZ,6BALY,IAKZ;AACA0/D,UAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,YAAAA,UADiB,EACjBA,UADiB;AAEjBC,YAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,YAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,YAAAA,QAJiB,EAIjBA,QAJiB;AAKjBrqC,YAAAA,MAAAA,EAAQ0pC,UAAAA,CALS,MAKTA;AALS,WAAnBG;AA9Ce;AAuDjBoB,QAAAA,cAAAA,EAvDiB;AAwDjBC,QAAAA,MAAAA,EAxDiB;AAyDjBC,QAAAA,QAAAA,EAzDiB;AA0DjBC,QAAAA,WAAAA,EA1DiB;AA2DjB/9B,QAAAA,WAAAA,EAAazlC,IAAAA,CA3DI;AA4DjBwmC,QAAAA,KAAAA,EA5DiB;AAAA,OAAnB;AA+DA28B,MAAAA,UAAAA,CAAAA,cAAAA,CAvEsB,OAuEtBA;AACAA,MAAAA,UAAAA,CAAAA,KAAAA,GAAmBA,UAAAA,CAAAA,cAAAA,CAxEG,OAwEtBA;AACA,mCAzEsB,UAyEtB;AACA,kBAAY,mBAAmB;AAC7BljE,QAAAA,OAAAA,CAAQ6wC,MAAAA,CAAO9wC,IAAAA,CAAP8wC,IAAAA,EADqB,UACrBA,CAAR7wC,CAAAA;AADF,cAGE,YAAY;AACVgiE,QAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,UAAAA,UADiB,EACjBA,UADiB;AAEjBC,UAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,UAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,UAAAA,QAJiB,EAIjBA,QAJiB;AAKjBgB,UAAAA,OAAAA,EALiB;AAAA,SAAnBxB;AAJJ,SAYE,kBAAkB;AAChBA,QAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,UAAAA,UADiB,EACjBA,UADiB;AAEjBC,UAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,UAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,UAAAA,QAJiB,EAIjBA,QAJiB;AAKjBrqC,UAAAA,MAAAA,EAAQ0pC,UAAAA,CALS,MAKTA;AALS,SAAnBG;AAvFkB,OA0EtB;AAzSiB;;;WAoUnByB,+BAAAA,IAAAA,EAA4B;AAC1B,UAAMjB,QAAAA,GAAWziE,IAAAA,CADS,QAC1B;AACA,UAAMkiE,UAAAA,GAAa,KAFO,UAE1B;AACA,UAAMC,UAAAA,GAAaniE,IAAAA,CAHO,UAG1B;AACA,UAAMiiE,MAAAA,GAAS,KAJW,MAI1B;;AAEA,cAAQjiE,IAAAA,CAAR;AACE,aAAKqhE,UAAAA,CAAL;AACE,cAAIrhE,IAAAA,CAAJ,SAAkB;AAChB,uDADgB,OAChB;AADF,iBAEO;AACL,8DACE8hE,UAAAA,CAAW9hE,IAAAA,CAFR,MAEH8hE,CADF;AAJJ;;AADF;;AAUE,aAAKT,UAAAA,CAAL;AACE,cAAIrhE,IAAAA,CAAJ,SAAkB;AAChB,sDADgB,OAChB;AADF,iBAEO;AACL,6DACE8hE,UAAAA,CAAW9hE,IAAAA,CAFR,MAEH8hE,CADF;AAJJ;;AAVF;;AAmBE,aAAKT,UAAAA,CAAL;AAEE,cAAI,CAAC,iBAAL,QAAK,CAAL,EAAiC;AAC/BY,YAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,cAAAA,UADiB,EACjBA,UADiB;AAEjBC,cAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,cAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,cAAAA,QAJiB,EAIjBA,QAJiB;AAKjBgB,cAAAA,OAAAA,EALiB;AAAA,aAAnBxB;AAD+B;AAFnC;;AAeE,cACE,+CACAjiE,IAAAA,CAAAA,WAAAA,GAFF,GAGE;AACA,sDADA,OACA;AAnBJ;;AAsBE,mDAAyCA,IAAAA,CAtB3C,WAsBE;AACA,cAAM,MAAN,GAAmB,iBAAiBA,IAAAA,CAvBtC,QAuBqB,CAAnB,CAAM,MAAN;AACA,sBAAY,mBAAmB;AAC7BC,YAAAA,OAAAA,CAAQqjE,MAAAA,IAAUA,MADW,EAC7BrjE,CAAAA;AADF,kBAGE,YAAY;AACVgiE,YAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,cAAAA,UADiB,EACjBA,UADiB;AAEjBC,cAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,cAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,cAAAA,QAJiB,EAIjBA,QAJiB;AAKjBgB,cAAAA,OAAAA,EALiB;AAAA,aAAnBxB;AAJJ,aAYE,kBAAkB;AAChBA,YAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,cAAAA,UADiB,EACjBA,UADiB;AAEjBC,cAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,cAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,cAAAA,QAJiB,EAIjBA,QAJiB;AAKjBrqC,cAAAA,MAAAA,EAAQ0pC,UAAAA,CALS,MAKTA;AALS,aAAnBG;AArCN,WAwBE;AA3CJ;;AAkEE,aAAKZ,UAAAA,CAAL;AACE9+D,4BACE,uBADFA,QACE,CADFA,EADF,uCACEA;;AAIA,cAAI,iCAAJ,UAA+C;AAAA;AALjD;;AAQE,8DAAoDvC,IAAAA,CARtD,KAQE;AA1EJ;;AA4EE,aAAKqhE,UAAAA,CAAL;AACE9+D,4BACE,uBADFA,QACE,CADFA,EADF,qCACEA;;AAIA,cAAI,iCAAJ,UAA+C;AAAA;AALjD;;AAQE,sDARF,IAQE;AACA,sDATF,KASE;;AACA,uCAVF,QAUE;;AAtFJ;;AAwFE,aAAK8+D,UAAAA,CAAL;AACE9+D,4BACE,uBADFA,QACE,CADFA,EADF,qCACEA;AAIA,4DACEu/D,UAAAA,CAAW9hE,IAAAA,CANf,MAMI8hE,CADF;;AAGA,uCARF,QAQE;;AAhGJ;;AAkGE,aAAKT,UAAAA,CAAL;AACE,cAAIrhE,IAAAA,CAAJ,SAAkB;AAChB,wDADgB,OAChB;AADF,iBAEO;AACL,+DACE8hE,UAAAA,CAAW9hE,IAAAA,CAFR,MAEH8hE,CADF;AAJJ;;AAQE,uCARF,QAQE;;AA1GJ;;AA4GE,aAAKT,UAAAA,CAAL;AACE,cAAI,CAAC,iBAAL,QAAK,CAAL,EAAiC;AAAA;AADnC;;AAIE,cAAM,QAAN,GAAqB,iBAAiBrhE,IAAAA,CAJxC,QAIuB,CAArB,CAAM,QAAN;AACA,sBAAY,mBAAmB;AAC7BC,YAAAA,OAAAA,CAAQsjE,QAAAA,IAAYA,QAAAA,CAASzB,UAAAA,CAAW9hE,IAAAA,CADX,MACA8hE,CAATyB,CAApBtjE,CAAAA;AADF,kBAGE,YAAY;AACVgiE,YAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,cAAAA,UADiB,EACjBA,UADiB;AAEjBC,cAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,cAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,cAAAA,QAJiB,EAIjBA,QAJiB;AAKjBgB,cAAAA,OAAAA,EALiB;AAAA,aAAnBxB;AAJJ,aAYE,kBAAkB;AAChBA,YAAAA,MAAAA,CAAAA,WAAAA,CAAmB;AACjBC,cAAAA,UADiB,EACjBA,UADiB;AAEjBC,cAAAA,UAFiB,EAEjBA,UAFiB;AAGjBljC,cAAAA,MAAAA,EAAQoiC,UAAAA,CAHS;AAIjBoB,cAAAA,QAJiB,EAIjBA,QAJiB;AAKjBrqC,cAAAA,MAAAA,EAAQ0pC,UAAAA,CALS,MAKTA;AALS,aAAnBG;AAlBN,WAKE;AAsBA,2DACEH,UAAAA,CAAW9hE,IAAAA,CA5Bf,MA4BI8hE,CADF;AAGA,mDA9BF,IA8BE;AACA,iBAAO,iBA/BT,QA+BS,CAAP;AA3IJ;;AA6IE;AACE,gBAAM,UA9IV,wBA8IU,CAAN;AA9IJ;AA1UiB;;;;kGA+dnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGQ,mBACJ,CACE,iCADF,WAEE,iCAFF,UAGE,iCAHF,gBAIM,sBAAsB;AAC1B,yBAAO7gD,UAAAA,IAAcA,UAAAA,CADK,OAC1B;AATkC,iBAIpC,CADI,CAHR;;AAAA;AAYE,uBAAO,uBAZ+B,QAY/B,CAAP;;AAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAqBA0iD,sBAAAA,OAAAA,EAAAA,SAAAA,EAAiC;AAC/B,UAAI9f,SAAAA,IAAa,KAAjB,sBAA4C;AAC1C,yCAD0C,SAC1C;AADF,aAEO;AACL,gCADK,OACL;AAJ6B;AApfd;;;WA4fnBvJ,mBAAU;AACR,iDAA2C,KADnC,kBACR;AA7fiB;;;;;;;;;;;;;;;;;;;AC9ErB;;;;;;;;IAiBA;AACEn7C,0BAAqC;AAAA,QAAzB,UAAyB,QAAzB,UAAyB;AAAA,QAArCA,OAAqC,QAArCA,OAAqC;;AAAA;;AACnC,wBADmC,UACnC;AACA,iBAFmC,OAEnC;AAHW;;;;WAMbykE,kBAAS;AACP,aAAO,KADA,KACP;AAPW;;;WAUbziD,aAAAA,IAAAA,EAAU;AAAA;;AACR,sCAAO,2BAAP,yEADQ,IACR;AAXW;;;WAcbwqC,kBAAS;AACP,aAAOC,yBAAc,KADd,YACAA,CAAP;AAfW;;;WAkBbjoC,aAAAA,IAAAA,EAAU;AACR,aAAO,sBADC,IACD,CAAP;AAnBW;;;;;;;;;;;;;;;;;;;ACHf;;;;;;;;;;;;;;IAEA,uBACExkB,8BAAAA,IAAAA,EAAAA,MAAAA,EAA0B;AAAA;;AACxB,iBADwB,IACxB;AACA,cAFwB,IAExB;AACA,gBAHwB,MAGxB;AAJuB;;IAQ3B;AACEA,iCAAAA,IAAAA,EAAkB;AAAA;;AAChB,gBADgB,IAChB;AACA,mBAFgB,IAEhB;AACA,kBAHgB,IAGhB;AACA,mBAAe,IAJC,GAID,EAAf;;AAEA,QAAIa,IAAAA,KAAJ,MAAmB;AAAA;AANH;;AAShB,gBAAYA,IAAAA,CATI,IAShB;AACA,mBAAeA,IAAAA,CAVC,OAUhB;AACA,kBAAcA,IAAAA,CAXE,KAWhB;;AAXgB,+CAYIA,IAAAA,CAApB,MAZgB;AAAA;;AAAA;AAYhB,0DAAiC;AAAA,YAAjC,MAAiC;;AAC/B,yBACEm6D,MAAAA,CADF,IAEE,yBAAyBA,MAAAA,CAAzB,MAAqCA,MAAAA,CAHR,MAG7B,CAFF;AAbc;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBhB,QAAIn6D,IAAAA,CAAAA,SAAAA,KAAJ,OAA8B;AAAA,kDACR,KAApB,OAD4B;AAAA;;AAAA;AAC5B,+DAAkC;AAAA,cAAlC,KAAkC;AAChCm6D,UAAAA,KAAAA,CAAAA,OAAAA,GADgC,KAChCA;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBd;;AAAA,gDAyBCn6D,IAAAA,CAAjB,EAzBgB;AAAA;;AAAA;AAyBhB,6DAA0B;AAAA,YAA1B,EAA0B;AACxB,uCADwB,IACxB;AA1Bc;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gDA6BEA,IAAAA,CAAlB,GA7BgB;AAAA;;AAAA;AA6BhB,6DAA4B;AAAA,YAA5B,GAA4B;AAC1B,wCAD0B,KAC1B;AA9Bc;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ;;;;WAmC1B6jE,uCAAAA,KAAAA,EAAqC;AACnC,UAAMvmD,MAAAA,GAASwmD,KAAAA,CADoB,MACnC;;AACA,UAAIxmD,MAAAA,GAAJ,GAAgB;AACd,eADc,IACd;AAHiC;;AAKnC,UAAMymD,QAAAA,GAAWD,KAAAA,CALkB,CAKlBA,CAAjB;;AACA,WAAK,IAAIhhE,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,QAA4BA,CAA5B,IAAiC;AAC/B,YAAM87B,OAAAA,GAAUklC,KAAAA,CADe,CACfA,CAAhB;AACA,YAAIn7D,KAF2B,SAE/B;;AACA,YAAI+V,KAAAA,CAAAA,OAAAA,CAAJ,OAAIA,CAAJ,EAA4B;AAC1B/V,UAAAA,KAAAA,GAAQ,mCADkB,OAClB,CAARA;AADF,eAEO,IAAI,iBAAJ,OAAI,CAAJ,EAA+B;AACpCA,UAAAA,KAAAA,GAAQ,0BAD4B,OACpCA;AADK,eAEA;AACLvF,sEADK,OACLA;AACA,iBAFK,IAEL;AAT6B;;AAW/B;AACE;AACE,gBAAI,CAAJ,OAAY;AACV,qBADU,KACV;AAFJ;;AADF;;AAME;AACE,uBAAW;AACT,qBADS,IACT;AAFJ;;AANF;;AAWE;AACE,mBAAO,CAZX,KAYI;;AACF;AACE,mBAdJ,IAcI;AAdJ;AAjBiC;;AAkCnC,aAAO2gE,QAAAA,KAlC4B,KAkCnC;AArEwB;;;WAwE1BC,mBAAAA,KAAAA,EAAiB;AACf,UAAI,CAAJ,OAAY;AACV5gE,wBADU,qCACVA;AACA,eAFU,IAEV;AAHa;;AAKf,UAAI+2D,KAAAA,CAAAA,IAAAA,KAAJ,OAA0B;AACxB,YAAI,CAAC,iBAAiBA,KAAAA,CAAtB,EAAK,CAAL,EAAiC;AAC/B/2D,sEAA0C+2D,KAAAA,CADX,EAC/B/2D;AACA,iBAF+B,IAE/B;AAHsB;;AAKxB,eAAO,iBAAiB+2D,KAAAA,CAAjB,IALiB,OAKxB;AALF,aAMO,IAAIA,KAAAA,CAAAA,IAAAA,KAAJ,QAA2B;AAEhC,YAAIA,KAAAA,CAAJ,YAAsB;AACpB,iBAAO,mCAAmCA,KAAAA,CADtB,UACb,CAAP;AAH8B;;AAKhC,YAAI,CAACA,KAAAA,CAAD,UAAiBA,KAAAA,CAAAA,MAAAA,KAArB,SAA+C;AAAA,sDAE5BA,KAAAA,CAAjB,GAF6C;AAAA;;AAAA;AAE7C,mEAA4B;AAAA,kBAA5B,EAA4B;;AAC1B,kBAAI,CAAC,iBAAL,EAAK,CAAL,EAA2B;AACzB/2D,4EADyB,EACzBA;AACA,uBAFyB,IAEzB;AAHwB;;AAK1B,kBAAI,qBAAJ,SAAkC;AAChC,uBADgC,IAChC;AANwB;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAW7C,iBAX6C,KAW7C;AAXF,eAYO,IAAI+2D,KAAAA,CAAAA,MAAAA,KAAJ,SAA8B;AAAA,sDAClBA,KAAAA,CAAjB,GADmC;AAAA;;AAAA;AACnC,mEAA4B;AAAA,kBAA5B,GAA4B;;AAC1B,kBAAI,CAAC,iBAAL,GAAK,CAAL,EAA2B;AACzB/2D,4EADyB,GACzBA;AACA,uBAFyB,IAEzB;AAHwB;;AAK1B,kBAAI,CAAC,sBAAL,SAAmC;AACjC,uBADiC,KACjC;AANwB;AADO;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUnC,iBAVmC,IAUnC;AAVK,eAWA,IAAI+2D,KAAAA,CAAAA,MAAAA,KAAJ,UAA+B;AAAA,sDACnBA,KAAAA,CAAjB,GADoC;AAAA;;AAAA;AACpC,mEAA4B;AAAA,kBAA5B,IAA4B;;AAC1B,kBAAI,CAAC,iBAAL,IAAK,CAAL,EAA2B;AACzB/2D,4EADyB,IACzBA;AACA,uBAFyB,IAEzB;AAHwB;;AAK1B,kBAAI,CAAC,uBAAL,SAAmC;AACjC,uBADiC,IACjC;AANwB;AADQ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUpC,iBAVoC,KAUpC;AAVK,eAWA,IAAI+2D,KAAAA,CAAAA,MAAAA,KAAJ,UAA+B;AAAA,sDACnBA,KAAAA,CAAjB,GADoC;AAAA;;AAAA;AACpC,mEAA4B;AAAA,kBAA5B,IAA4B;;AAC1B,kBAAI,CAAC,iBAAL,IAAK,CAAL,EAA2B;AACzB/2D,4EADyB,IACzBA;AACA,uBAFyB,IAEzB;AAHwB;;AAK1B,kBAAI,uBAAJ,SAAkC;AAChC,uBADgC,KAChC;AANwB;AADQ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUpC,iBAVoC,IAUpC;AAjD8B;;AAmDhCA,kEAAwC+2D,KAAAA,CAnDR,MAmDhC/2D;AACA,eApDgC,IAoDhC;AA/Da;;AAiEfA,mDAA2B+2D,KAAAA,CAjEZ,IAiEf/2D;AACA,aAlEe,IAkEf;AA1IwB;;;WA6I1B6gE,uBAAAA,EAAAA,EAAkC;AAAA,UAAhB3I,OAAgB,uEAAlC2I,IAAkC;;AAChC,UAAI,CAAC,iBAAL,EAAK,CAAL,EAA2B;AACzB7gE,oEADyB,EACzBA;AADyB;AADK;;AAKhC,qCAA+B,CAAC,CALA,OAKhC;AAlJwB;;;WAqJ1B8gE,oBAAW;AACT,UAAI,CAAC,aAAL,MAAwB;AACtB,eADsB,IACtB;AAFO;;AAIT,UAAI,KAAJ,QAAiB;AACf,eAAO,YADQ,KACR,EAAP;AALO;;AAOT,aAAOxlD,KAAAA,CAAAA,IAAAA,CAAW,aAPT,IAOS,EAAXA,CAAP;AA5JwB;;;WA+J1BylD,qBAAY;AACV,aAAO,wBAAwBvY,yBAAc,KAAtC,OAAwBA,CAAxB,GADG,IACV;AAhKwB;;;WAmK1BwY,kBAAAA,EAAAA,EAAa;AACX,aAAO,wBADI,IACX;AApKwB;;;;;;;;;;;;;;;;;;;;;ACT5B;;AAfA;;;;;;;;;;;;;;;;;;;;IAmBA;AACEjlE,kCAAAA,MAAAA,EAAAA,qBAAAA,EAA2C;AAAA;;AAAA;;AACzCoD,sBAAAA,qBAAAA,EADyC,6EACzCA;AAKA,yBANyC,EAMzC;AACA,4BAAwB04C,MAAAA,CAAAA,eAAAA,IAPiB,KAOzC;AACA,uCACEA,MAAAA,CAAAA,0BAAAA,IATuC,IAQzC;AAGA,QAAMa,WAAAA,GAAcb,MAAAA,CAXqB,WAWzC;;AACA,QAAIa,CAAAA,WAAAA,SAAAA,IAAAA,WAAAA,WAAAA,YAAAA,WAAAA,CAAAA,MAAAA,IAAJ,GAA6B;AAC3B,UAAM96B,MAAAA,GAAS,4BADY,MAC3B;;AACA,8BAF2B,MAE3B;AAduC;;AAiBzC,kCAjByC,qBAiBzC;AACA,iCAA6B,CAACi6B,MAAAA,CAlBW,aAkBzC;AACA,6BAAyB,CAACA,MAAAA,CAnBe,YAmBzC;AACA,0BAAsBA,MAAAA,CApBmB,MAoBzC;AAEA,8BAtByC,IAsBzC;AACA,yBAvByC,EAuBzC;;AAEA,iDAA6C,wBAAkB;AAC7D,2BAAoB;AAAEopB,QAAAA,KAAF,EAAEA,KAAF;AAAS1mD,QAAAA,KAAT,EAASA;AAAT,OAApB;AA1BuC,KAyBzC;;AAIA,oDAAgD,yBAAmB;AACjE,wBAAiB;AAAEqoC,QAAAA,MAAF,EAAEA,MAAF;AAAUC,QAAAA,KAAV,EAAUA;AAAV,OAAjB;AA9BuC,KA6BzC;;AAIA,2DAAuDtoC,UAAAA,KAAAA,EAAS;AAC9D,2BAAoB;AAAEA,QAAAA,KADwC,EACxCA;AAAF,OAApB;AAlCuC,KAiCzC;;AAIA,2DAAuD,YAAM;AAC3D,YAD2D,kBAC3D;AAtCuC,KAqCzC;;AAIA,gCAzCyC,cAyCzC;AA1CyB;;;;WA6C3B2mD,wBAAAA,IAAAA,EAAqB;AACnB,UAAMtjD,MAAAA,GAAS,eAAewJ,IAAAA,CAAf,OADI,MACnB;;AACA,UAAIA,IAAAA,CAAAA,KAAAA,KAAJ,WAA8B;AAC5B,YAAI,KAAJ,oBAA6B;AAC3B,2CAD2B,MAC3B;AADF,eAEO;AACL,kCADK,MACL;AAJ0B;AAA9B,aAMO;AACL,YAAM+5C,KAAAA,GAAQ,wBAAwB,uBAAuB;AAC3D,cAAI9d,WAAAA,CAAAA,MAAAA,KAAuBj8B,IAAAA,CAA3B,OAAuC;AACrC,mBADqC,KACrC;AAFyD;;AAI3Di8B,UAAAA,WAAAA,CAAAA,QAAAA,CAJ2D,MAI3DA;;AACA,iBAL2D,IAK3D;AANG,SACS,CAAd;;AAOAlkD,0BAAAA,KAAAA,EARK,yEAQLA;AAhBiB;AA7CM;;;SAoE3B,eAA6B;AAAA;;AAC3B,gEAAO,uBAAP,2DAAO,8BAAP,yEAD2B,CAC3B;AArEyB;;;WAwE3BiiE,qBAAAA,GAAAA,EAAiB;AACf,UAAIze,GAAAA,CAAAA,KAAAA,KAAJ,WAA6B;AAE3B,YAAM0e,WAAAA,GAAc,mBAFO,CAEP,CAApB;;AACA,YAAIA,WAAJ,aAAIA,WAAJ,eAAIA,WAAAA,CAAJ,YAA6B;AAC3BA,UAAAA,WAAAA,CAAAA,UAAAA,CAAuB;AAAEze,YAAAA,MAAAA,EAAQD,GAAAA,CADN;AACJ,WAAvB0e;AAJyB;AAA7B,aAMO;AACL,YAAMpe,UAAAA,GAAa,KADd,kBACL;;AACA,YAAIA,UAAJ,aAAIA,UAAJ,eAAIA,UAAAA,CAAJ,YAA4B;AAC1BA,UAAAA,UAAAA,CAAAA,UAAAA,CAAsB;AAAEL,YAAAA,MAAAA,EAAQD,GAAAA,CAAV;AAAsBE,YAAAA,KAAAA,EAAOF,GAAAA,CAA7B;AAAA,WAAtBM;AAHG;AAPQ;AAxEU;;;WAuF3Bqe,8BAAqB;AACnB,UAAI,KAAJ,oBAA6B;AAC3B,gCAD2B,eAC3B;AAFiB;;AAInB,8BAJmB,IAInB;AA3FyB;;;WA8F3BC,4BAAAA,MAAAA,EAA2B;AACzB,UAAM7hE,CAAAA,GAAI,2BADe,MACf,CAAV;;AACA,UAAIA,CAAAA,IAAJ,GAAY;AACV,qCADU,CACV;AAHuB;AA9FA;;;WAqG3B8hE,yBAAgB;AACdriE,wBACE,CAAC,KADHA,kBAAAA,EADc,+DACdA;AAIA,UAAMsiE,YAAAA,GAAe,KALP,aAKd;AACA,2BANc,IAMd;AACA,aAAO,qDAGL,KAHK,kBAIL,KAXY,2BAOP,CAAP;AA5GyB;;;WAoH3BC,wBAAAA,KAAAA,EAAAA,GAAAA,EAA2B;AACzB,UAAI7hE,GAAAA,IAAO,KAAX,wBAAwC;AACtC,eADsC,IACtC;AAFuB;;AAIzB,UAAM+7B,MAAAA,GAAS,mDAJU,GAIV,CAAf;;AACA,0DALyB,GAKzB;;AACA,8BANyB,MAMzB;;AACA,aAPyB,MAOzB;AA3HyB;;;WA8H3B+lC,2BAAAA,MAAAA,EAA0B;AACxB,UAAI,KAAJ,oBAA6B;AAC3B,uCAD2B,MAC3B;AAFsB;;AAAA,iDAIH,yBAArB,CAAqB,CAJG;AAAA;;AAAA;AAIxB,4DAAkD;AAAA,cAAlD,MAAkD;AAChD/lC,UAAAA,MAAAA,CAAAA,MAAAA,CADgD,MAChDA;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOxB,kCAPwB,KAOxB;AArIyB;;;;;;;;IA0I7B;AACE7/B,wCAAAA,MAAAA,EAAAA,YAAAA,EAKE;AAAA,QAFA48C,eAEA,uEALF58C,KAKE;AAAA,QADA68C,0BACA,uEALF78C,IAKE;;AAAA;;AACA,mBADA,MACA;AACA,iBAAa48C,eAAAA,IAFb,KAEA;AACA,qBAAiBipB,8BAAAA,0BAAAA,IAAAA,0BAAAA,GAHjB,IAGA;AAGA,yBAAqBH,YAAAA,IANrB,EAMA;AACA,mBAPA,CAOA;;AAPA,gDAQoB,KAApB,aARA;AAAA;;AAAA;AAQA,6DAAwC;AAAA,YAAxC,KAAwC;AACtC,wBAAgBlnD,KAAAA,CADsB,UACtC;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,qBAXA,EAWA;AACA,yBAAqBub,OAAAA,CAZrB,OAYqBA,EAArB;AACA+F,IAAAA,MAAAA,CAAAA,kBAAAA,GAbA,IAaAA;AAEA,sBAfA,IAeA;AArB+B;;;;WAwBjCgmC,kBAAAA,KAAAA,EAAgB;AACd,UAAI,KAAJ,OAAgB;AAAA;AADF;;AAId,UAAI,wBAAJ,GAA+B;AAC7B,YAAMC,iBAAAA,GAAoB,eADG,KACH,EAA1B;;AACAA,QAAAA,iBAAAA,CAAAA,OAAAA,CAA0B;AAAEl/D,UAAAA,KAAAA,EAAF;AAAgBiD,UAAAA,IAAAA,EAAhB;AAAA,SAA1Bi8D;AAFF,aAGO;AACL,gCADK,KACL;AARY;;AAUd,sBAAgBvnD,KAAAA,CAVF,UAUd;AAlC+B;;;SAqCjC,eAAmB;AACjB,aAAO,KADU,aACjB;AAtC+B;;;SAyCjC,eAAe;AACb,aAAO,KADM,SACb;AA1C+B;;;SA6CjC,eAAuB;AACrB,aAAO,aADc,iBACrB;AA9C+B;;;SAiDjC,eAA2B;AACzB,aAAO,aADkB,qBACzB;AAlD+B;;;SAqDjC,eAAoB;AAClB,aAAO,aADW,cAClB;AAtD+B;;;;+EAyDjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACM,4BAAJ,CADF;AAAA;AAAA;AAAA;;AAEUA,gBAAAA,KAFV,GAEkB,mBADmB,KACnB,EAFlB;AAAA,iDAGW;AAAE3X,kBAAAA,KAAAA,EAAF;AAAgBiD,kBAAAA,IAAAA,EAAhB;AAAA,iBAHX;;AAAA;AAAA,qBAKM,KAAJ,KALF;AAAA;AAAA;AAAA;;AAAA,iDAMW;AAAEjD,kBAAAA,KAAAA,EAAF;AAAoBiD,kBAAAA,IAAAA,EAApB;AAAA,iBANX;;AAAA;AAQQi8D,gBAAAA,iBARR,GAAa,oCAAb;;AASE,oCATW,iBASX;;AATF,iDAUSA,iBAAAA,CAVI,OAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAaAzjC,gBAAAA,MAAAA,EAAe;AACb,mBADa,IACb;;AADa,kDAEmB,KAAhC,SAFa;AAAA;;AAAA;AAEb,+DAAgD;AAAA,cAAhD,iBAAgD;AAC9CyjC,UAAAA,iBAAAA,CAAAA,OAAAA,CAA0B;AAAEl/D,YAAAA,KAAAA,EAAF;AAAoBiD,YAAAA,IAAAA,EAApB;AAAA,WAA1Bi8D;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKb,8BALa,CAKb;AA3E+B;;;WA8EjCnpB,2BAAkB;AAChB,UAAI,KAAJ,OAAgB;AAAA;AADA;;AAIhB,mBAJgB,IAIhB;AAlF+B;;;;;;IAuFnC;AACE58C,6CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAgC;AAAA;;AAC9B,mBAD8B,MAC9B;AACA,kBAF8B,KAE9B;AACA,gBAH8B,GAG9B;AACA,wBAJ8B,IAI9B;AACA,qBAL8B,EAK9B;AACA,iBAN8B,KAM9B;AAEA,sBAR8B,IAQ9B;AAToC;;;;WAYtC8lE,kBAAAA,KAAAA,EAAgB;AACd,UAAI,KAAJ,OAAgB;AAAA;AADF;;AAId,UAAI,0BAAJ,GAAiC;AAC/B,4BAD+B,KAC/B;AADF,aAEO;AACL,YAAME,kBAAAA,GAAqB,eADtB,KACsB,EAA3B;;AACAA,QAAAA,kBAAAA,CAAAA,OAAAA,CAA2B;AAAEn/D,UAAAA,KAAAA,EAAF;AAAgBiD,UAAAA,IAAAA,EAAhB;AAAA,SAA3Bk8D;;AAFK,oDAG2B,KAAhC,SAHK;AAAA;;AAAA;AAGL,iEAAgD;AAAA,gBAAhD,iBAAgD;AAC9CD,YAAAA,iBAAAA,CAAAA,OAAAA,CAA0B;AAAEl/D,cAAAA,KAAAA,EAAF;AAAoBiD,cAAAA,IAAAA,EAApB;AAAA,aAA1Bi8D;AAJG;AAAA;AAAA;AAAA;AAAA;AAAA;;AAML,gCANK,CAML;AAZY;;AAcd,mBAdc,IAcd;;AACA,sCAfc,IAed;AA3BoC;;;SA8BtC,eAA2B;AACzB,aADyB,KACzB;AA/BoC;;;;gFAkCtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACM,KAAJ,YADF;AAAA;AAAA;AAAA;;AAEUvnD,gBAAAA,KAFV,GAEkB,KADO,YADzB;AAGI,oCAFqB,IAErB;AAHJ,kDAIW;AAAE3X,kBAAAA,KAAAA,EAAF;AAAgBiD,kBAAAA,IAAAA,EAAhB;AAAA,iBAJX;;AAAA;AAAA,qBAMM,KAAJ,KANF;AAAA;AAAA;AAAA;;AAAA,kDAOW;AAAEjD,kBAAAA,KAAAA,EAAF;AAAoBiD,kBAAAA,IAAAA,EAApB;AAAA,iBAPX;;AAAA;AASQi8D,gBAAAA,iBATR,GAAa,oCAAb;;AAUE,oCAVW,iBAUX;;AAVF,kDAWSA,iBAAAA,CAXI,OAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAcAzjC,gBAAAA,MAAAA,EAAe;AACb,mBADa,IACb;;AADa,kDAEmB,KAAhC,SAFa;AAAA;;AAAA;AAEb,+DAAgD;AAAA,cAAhD,iBAAgD;AAC9CyjC,UAAAA,iBAAAA,CAAAA,OAAAA,CAA0B;AAAEl/D,YAAAA,KAAAA,EAAF;AAAoBiD,YAAAA,IAAAA,EAApB;AAAA,WAA1Bi8D;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKb,8BALa,CAKb;;AACA,sCANa,IAMb;AAtDoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICrOxC;;;;;;;WAUE,0BAAwB;AACtB,UAAMziB,KAAAA,GADgB,EACtB;AACA,UAAM2iB,MAAAA,GAAS;AACb3iB,QAAAA,KADa,EACbA,KADa;AAEbC,QAAAA,MAAAA,EAAQh/C,MAAAA,CAAAA,MAAAA,CAFK,IAELA;AAFK,OAAf;;AAIA,0BAAoB;AAAA;;AAClB,YAAI,CAAJ,MAAW;AAAA;AADO;;AAIlB,YAAI0Z,GAAAA,GAJc,IAIlB;AACA,YAAMxZ,IAAAA,GAAO83B,IAAAA,CALK,IAKlB;;AACA,YAAI93B,IAAAA,KAAJ,SAAsB;AACpBwZ,UAAAA,GAAAA,GAAMse,IAAAA,CADc,KACpBte;AADF,eAEO,IAAI,CAACklC,OAAAA,CAAAA,eAAAA,CAAL,IAAKA,CAAL,EAAoC;AAAA;AAApC,eAEA,IAAI5mB,IAAJ,aAAIA,IAAJ,mCAAIA,IAAAA,CAAAA,UAAJ,6CAAIA,iBAAJ,aAAmC;AACxCte,UAAAA,GAAAA,GAAMse,IAAAA,CAAAA,UAAAA,CADkC,WACxCte;AADK,eAEA,IAAIse,IAAAA,CAAJ,OAAgB;AACrBte,UAAAA,GAAAA,GAAMse,IAAAA,CADe,KACrBte;AAbgB;;AAelB,YAAIA,GAAAA,KAAJ,MAAkB;AAChBqlC,UAAAA,KAAAA,CAAAA,IAAAA,CAAW;AACTrlC,YAAAA,GAFc,EAEdA;AADS,WAAXqlC;AAhBgB;;AAoBlB,YAAI,CAAC/mB,IAAAA,CAAL,UAAoB;AAAA;AApBF;;AAAA,mDAuBEA,IAAAA,CAApB,QAvBkB;AAAA;;AAAA;AAuBlB,8DAAmC;AAAA,gBAAnC,KAAmC;AACjC2pC,YAAAA,IAAAA,CADiC,KACjCA,CAAAA;AAxBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AANE;;AAiCtBA,MAAAA,IAAAA,CAjCsB,GAiCtBA,CAAAA;AACA,aAlCsB,MAkCtB;AA5CU;;;WAqDZ,+BAA6B;AAC3B,aAAO,EACL,uBACAzhE,IAAAA,KADA,WAEAA,IAAAA,KAFA,YAGAA,IAAAA,KALyB,QACpB,CAAP;AAtDU;;;;;;;;;;;;;;;;;;;;;ACAd;;AAOA;;AAtBA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAM0hE,iBAAAA,GAnCN,IAmCA;;IAoBA;;;;;;;WAKE,4BAA0B;AACxB,UAAMpU,OAAAA,GAAUqU,UAAAA,CAAAA,IAAAA,CADQ,cACxB;;AAEA;AACE,aAAKh4D,qBAAL;AACE,iBAAO,0BAFX,UAEW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,0BALX,UAKW,CAAP;;AAEF,aAAKA,qBAAL;AACE,cAAMi4D,SAAAA,GAAYD,UAAAA,CAAAA,IAAAA,CADpB,SACE;;AAEA;AACE;AACE,qBAAO,gCAFX,UAEW,CAAP;;AACF;AACE,kBAAIA,UAAAA,CAAAA,IAAAA,CAAJ,aAAiC;AAC/B,uBAAO,uCADwB,UACxB,CAAP;AADF,qBAEO,IAAIA,UAAAA,CAAAA,IAAAA,CAAJ,UAA8B;AACnC,uBAAO,oCAD4B,UAC5B,CAAP;AAJJ;;AAME,qBAAO,sCATX,UASW,CAAP;;AACF;AACE,qBAAO,kCAXX,UAWW,CAAP;AAXJ;;AAaA,iBAAO,4BAvBX,UAuBW,CAAP;;AAEF,aAAKh4D,qBAAL;AACE,iBAAO,2BA1BX,UA0BW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,8BA7BX,UA6BW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,0BAhCX,UAgCW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,4BAnCX,UAmCW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,4BAtCX,UAsCW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,8BAzCX,UAyCW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,2BA5CX,UA4CW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,yBA/CX,UA+CW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,6BAlDX,UAkDW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,+BArDX,UAqDW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,+BAxDX,UAwDW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,8BA3DX,UA2DW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,+BA9DX,UA8DW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,2BAjEX,UAiEW,CAAP;;AAEF,aAAKA,qBAAL;AACE,iBAAO,oCApEX,UAoEW,CAAP;;AAEF;AACE,iBAAO,sBAvEX,UAuEW,CAAP;AAvEJ;AAR2B;;;;;;IAoF/B;AACEpO,6BAAAA,UAAAA,EAOE;AAAA,mFAPFA,EAOE;AAAA,iCAJEsmE,YAIF;AAAA,QAJEA,YAIF,kCALA,KAKA;AAAA,iCAHEC,YAGF;AAAA,QAHEA,YAGF,kCALA,KAKA;AAAA,qCAFEC,oBAEF;AAAA,QAFEA,oBAEF,sCALA,KAKA;;AAAA;;AACA,wBADA,YACA;AACA,gBAAYJ,UAAAA,CAFZ,IAEA;AACA,iBAAaA,UAAAA,CAHb,KAGA;AACA,gBAAYA,UAAAA,CAJZ,IAIA;AACA,oBAAgBA,UAAAA,CALhB,QAKA;AACA,uBAAmBA,UAAAA,CANnB,WAMA;AACA,2BAAuBA,UAAAA,CAPvB,eAOA;AACA,8BAA0BA,UAAAA,CAR1B,kBAQA;AACA,uBAAmBA,UAAAA,CATnB,WASA;AACA,sBAAkBA,UAAAA,CAVlB,UAUA;AACA,6BAAyBA,UAAAA,CAXzB,iBAWA;AACA,2BAAuBA,UAAAA,CAZvB,eAYA;AACA,wBAAoBA,UAAAA,CAbpB,YAaA;AACA,uBAAmBA,UAAAA,CAdnB,UAcA;;AAEA,sBAAkB;AAChB,uBAAiB,sBADD,YACC,CAAjB;AAjBF;;AAmBA,8BAA0B;AACxB,4BAAsB,2BADE,YACF,CAAtB;AApBF;AARoB;;;;WAwCtBK,4BAAuC;AAAA,UAAtBF,YAAsB,uEAAvCE,KAAuC;AACrC,UAAM5lE,IAAAA,GAAO,KAAb;AAAA,UACE4lD,IAAAA,GAAO,KADT;AAAA,UAEE1E,QAAAA,GAAW,KAHwB,QACrC;AAGA,UAAMle,SAAAA,GAAYtjC,QAAAA,CAAAA,aAAAA,CAJmB,SAInBA,CAAlB;AACA,UAAI4B,KAAAA,GAAQtB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CALU,CAKVA,CAA3B;AACA,UAAIuB,MAAAA,GAASvB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CANS,CAMTA,CAA5B;AAEAgjC,MAAAA,SAAAA,CAAAA,YAAAA,CAAAA,oBAAAA,EAA6ChjC,IAAAA,CARR,EAQrCgjC;;AAIA,UAAMnhC,IAAAA,GAAO,yBAAmB,CAC9B7B,IAAAA,CAAAA,IAAAA,CAD8B,CAC9BA,CAD8B,EAE9B4lD,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAe5lD,IAAAA,CAAAA,IAAAA,CAAf4lD,CAAe5lD,CAAf4lD,GAA8BA,IAAAA,CAAAA,IAAAA,CAFA,CAEAA,CAFA,EAG9B5lD,IAAAA,CAAAA,IAAAA,CAH8B,CAG9BA,CAH8B,EAI9B4lD,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAe5lD,IAAAA,CAAAA,IAAAA,CAAf4lD,CAAe5lD,CAAf4lD,GAA8BA,IAAAA,CAAAA,IAAAA,CAJA,CAIAA,CAJA,CAAnB,CAAb;;AAOA5iB,MAAAA,SAAAA,CAAAA,KAAAA,CAAAA,SAAAA,oBAAsCke,QAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAnBD,GAmBCA,CAAtCle;AACAA,MAAAA,SAAAA,CAAAA,KAAAA,CAAAA,eAAAA,aAAqC,CAACnhC,IAAAA,CAAJ,CAAIA,CAAtCmhC,gBAAmD,CAACnhC,IAAAA,CApBf,CAoBeA,CAApDmhC;;AAEA,UAAI,iBAAiBhjC,IAAAA,CAAAA,WAAAA,CAAAA,KAAAA,GAArB,GAAiD;AAC/CgjC,QAAAA,SAAAA,CAAAA,KAAAA,CAAAA,WAAAA,aAAiChjC,IAAAA,CAAAA,WAAAA,CADc,KAC/CgjC;;AACA,YAAIhjC,IAAAA,CAAAA,WAAAA,CAAAA,KAAAA,KAA2B2R,gCAA/B,WAAoE;AAIlErQ,UAAAA,KAAAA,IAAS,IAAItB,IAAAA,CAAAA,WAAAA,CAJqD,KAIlEsB;AACAC,UAAAA,MAAAA,IAAU,IAAIvB,IAAAA,CAAAA,WAAAA,CALoD,KAKlEuB;AAP6C;;AAU/C,YAAMskE,gBAAAA,GAAmB7lE,IAAAA,CAAAA,WAAAA,CAVsB,sBAU/C;AACA,YAAM8lE,cAAAA,GAAiB9lE,IAAAA,CAAAA,WAAAA,CAXwB,oBAW/C;;AACA,YAAI6lE,gBAAAA,GAAAA,CAAAA,IAAwBC,cAAAA,GAA5B,GAAgD;AAC9C,cAAMC,MAAAA,aAAS,gBAATA,kBADwC,cACxCA,OAAN;AACA/iC,UAAAA,SAAAA,CAAAA,KAAAA,CAAAA,YAAAA,GAF8C,MAE9CA;AAd6C;;AAiB/C,gBAAQhjC,IAAAA,CAAAA,WAAAA,CAAR;AACE,eAAK2R,gCAAL;AACEqxB,YAAAA,SAAAA,CAAAA,KAAAA,CAAAA,WAAAA,GADF,OACEA;AAFJ;;AAKE,eAAKrxB,gCAAL;AACEqxB,YAAAA,SAAAA,CAAAA,KAAAA,CAAAA,WAAAA,GADF,QACEA;AANJ;;AASE,eAAKrxB,gCAAL;AACEvO,4BADF,qCACEA;AAVJ;;AAaE,eAAKuO,gCAAL;AACEvO,4BADF,mCACEA;AAdJ;;AAiBE,eAAKuO,gCAAL;AACEqxB,YAAAA,SAAAA,CAAAA,KAAAA,CAAAA,iBAAAA,GADF,OACEA;AAlBJ;;AAqBE;AArBF;AAAA;;AAyBA,YAAIhjC,IAAAA,CAAJ,OAAgB;AACdgjC,UAAAA,SAAAA,CAAAA,KAAAA,CAAAA,WAAAA,GAA8B5jB,WAAAA,YAAAA,CAC5Bpf,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,IAD4Bof,CAAAA,EAE5Bpf,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,IAF4Bof,CAAAA,EAG5Bpf,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,IAJY,CACgBof,CAA9B4jB;AADF,eAMO;AAELA,UAAAA,SAAAA,CAAAA,KAAAA,CAAAA,WAAAA,GAFK,CAELA;AAlD6C;AAtBZ;;AA4ErCA,MAAAA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,aAA0BnhC,IAAAA,CA5EW,CA4EXA,CAA1BmhC;AACAA,MAAAA,SAAAA,CAAAA,KAAAA,CAAAA,GAAAA,aAAyBnhC,IAAAA,CA7EY,CA6EZA,CAAzBmhC;AACAA,MAAAA,SAAAA,CAAAA,KAAAA,CAAAA,KAAAA,aA9EqC,KA8ErCA;AACAA,MAAAA,SAAAA,CAAAA,KAAAA,CAAAA,MAAAA,aA/EqC,MA+ErCA;AACA,aAhFqC,SAgFrC;AAxHoB;;;WAmItBgjC,iCAA4C;AAAA,UAAtBN,YAAsB,uEAA5CM,KAA4C;;AAC1C,UAAI,CAAC,UAAL,YAA2B;AACzB,eADyB,IACzB;AAFwC;;AAK1C,UAAMC,cAAAA,GALoC,EAK1C;AACA,UAAMC,SAAAA,GAAY,UANwB,IAM1C;;AAN0C,iDAOlB,UAAxB,UAP0C;AAAA;;AAAA;AAO1C,4DAA8C;AAAA,cAA9C,SAA8C;AAC5C,2BAAiB,CACfC,SAAAA,CAAAA,CAAAA,CAAAA,CADe,GAEfA,SAAAA,CAAAA,CAAAA,CAAAA,CAFe,GAGfA,SAAAA,CAAAA,CAAAA,CAAAA,CAHe,GAIfA,SAAAA,CAAAA,CAAAA,CAAAA,CAJe,EAAjB;AAMAF,UAAAA,cAAAA,CAAAA,IAAAA,CAAoB,sBAPwB,YAOxB,CAApBA;AAdwC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgB1C,uBAhB0C,SAgB1C;AACA,aAjB0C,cAiB1C;AApJoB;;;WAiKtBG,sBAAAA,OAAAA,EAAAA,IAAAA,EAA4B;AAC1B,UAAIpjC,SAAAA,GAAY,KADU,SAC1B;;AACA,UAAI,KAAJ,gBAAyB;AACvBqjC,QAAAA,OAAAA,GAAUA,OAAAA,IAAW,KADE,cACvBA;AACArjC,QAAAA,SAAAA,GAAY,oBAFW,CAEX,CAAZA;AAJwB;;AAQ1B,UAAI,CAAJ,SAAc;AACZqjC,QAAAA,OAAAA,GAAU3mE,QAAAA,CAAAA,aAAAA,CADE,KACFA,CAAV2mE;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,MAAAA,GAAuBrjC,SAAAA,CAAAA,KAAAA,CAFX,MAEZqjC;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,KAAAA,GAAsBrjC,SAAAA,CAAAA,KAAAA,CAHV,KAGZqjC;AACArjC,QAAAA,SAAAA,CAAAA,WAAAA,CAJY,OAIZA;AAZwB;;AAe1B,UAAMsjC,YAAAA,GAAe,iBAAiB;AACpCtjC,QAAAA,SADoC,EACpCA,SADoC;AAEpCqjC,QAAAA,OAFoC,EAEpCA,OAFoC;AAGpCnN,QAAAA,KAAAA,EAAOl5D,IAAAA,CAH6B;AAIpCumE,QAAAA,KAAAA,EAAOvmE,IAAAA,CAJ6B;AAKpCwmE,QAAAA,gBAAAA,EAAkBxmE,IAAAA,CALkB;AAMpCymE,QAAAA,QAAAA,EAAUzmE,IAAAA,CAN0B;AAOpC0mE,QAAAA,WAAAA,EAPoC;AAAA,OAAjB,CAArB;AASA,UAAMC,KAAAA,GAAQL,YAAAA,CAxBY,MAwBZA,EAAd;AAGAK,MAAAA,KAAAA,CAAAA,KAAAA,CAAAA,IAAAA,GAAmB3jC,SAAAA,CAAAA,KAAAA,CA3BO,KA2B1B2jC;AAEA3jC,MAAAA,SAAAA,CAAAA,WAAAA,CA7B0B,KA6B1BA;AA9LoB;;;WAyMtB4jC,+BAAAA,SAAAA,EAAiC;AAAA,kDAQH,KAA5B,cAR+B;AAAA;;AAAA;AAQ/B,+DAAiD;AAAA,cAAjD,aAAiD;AAC/CC,UAAAA,aAAAA,CAAAA,SAAAA,GAD+C,SAC/CA;AAT6B;AAAA;AAAA;AAAA;AAAA;AAAA;;AAW/B,aAAO,KAXwB,cAW/B;AApNoB;;;WA8NtB1mB,kBAAS;AACPtjC,6BADO,mDACPA;AA/NoB;;;SAkOtB,eAAsB;AACpB,UAAMiqD,QAAAA,GAAW,mCAAmCzd,SAAAA,CAAnC,WADG,EACpB;AAEA,aAAO,oCAAyB;AAC9B0d,QAAAA,KAAAA,EAAOD,QAAAA,CAAAA,QAAAA,CADuB,KACvBA,CADuB;AAE9BE,QAAAA,KAAAA,EAAOF,QAAAA,CAAAA,QAAAA,CAFuB,KAEvBA;AAFuB,OAAzB,CAAP;AArOoB;;;;;;IA4OxB;;;;;AACE3nE,iCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,uBACAF,UAAAA,CAAAA,IAAAA,CADA,QAEAA,UAAAA,CAAAA,IAAAA,CAFA,UAGAA,UAAAA,CAAAA,IAAAA,CAHA,iBAICA,UAAAA,CAAAA,IAAAA,CAAAA,OAAAA,KACE,kCACCA,UAAAA,CAAAA,IAAAA,CAAAA,OAAAA,CADD,UACCA,CADD,IAECA,UAAAA,CAAAA,IAAAA,CAAAA,OAAAA,CATgB,YAShBA,CAHHA,CALmB,CAAtB;AADsB,6BAWtB,UAXsB,EAWJ;AAAEE,MAAAA,YAAF,EAAEA,YAAF;AAAgBE,MAAAA,oBAAAA,EAAhB;AAAA,KAXI;AAD4B;;;;WAepDxlB,kBAAS;AACP,UAAM,IAAN,GADO,IACP,CAAM,IAAN;AAAA,UAAM,WAAN,GADO,IACP,CAAM,WAAN;AACA,UAAMx9C,IAAAA,GAAOjD,QAAAA,CAAAA,aAAAA,CAFN,GAEMA,CAAb;;AAEA,UAAIM,IAAAA,CAAJ,KAAc;AACZinE,8CAAAA,IAAAA,EAAwB;AACtBzkE,UAAAA,GAAAA,EAAKxC,IAAAA,CADiB;AAEtB8iB,UAAAA,MAAAA,EAAQ9iB,IAAAA,CAAAA,SAAAA,GACJgC,0BADIhC,KAAAA,GAEJknE,WAAAA,CAJkB;AAKtBC,UAAAA,GAAAA,EAAKD,WAAAA,CALiB;AAMtB5kE,UAAAA,OAAAA,EAAS4kE,WAAAA,CANa;AAAA,SAAxBD;AADF,aASO,IAAIjnE,IAAAA,CAAJ,QAAiB;AACtB,oCAA4BA,IAAAA,CADN,MACtB;AADK,aAEA,IAAIA,IAAAA,CAAJ,MAAe;AACpB,6BAAqBA,IAAAA,CADD,IACpB;AADK,aAEA,IACLA,IAAAA,CAAAA,OAAAA,KACC,uBACCA,IAAAA,CAAAA,OAAAA,CADD,UACCA,CADD,IAECA,IAAAA,CAAAA,OAAAA,CAHFA,YAGEA,CAHFA,KAIA,KAJAA,eAAAA,IAKA,KANK,cAOL;AACA,iCADA,IACA;AARK,aASA;AACL,6BADK,EACL;AA3BK;;AA8BP,UAAI,KAAJ,gBAAyB;AACvB,eAAO,iDACL,gCAA0B;AACxB,cAAMonE,WAAAA,GAAc79C,KAAAA,KAAAA,CAAAA,GAAAA,IAAAA,GAAqB5mB,IAAAA,CADjB,SACiBA,EAAzC;AACAkkE,UAAAA,aAAAA,CAAAA,WAAAA,CAFwB,WAExBA;AACA,iBAHwB,aAGxB;AALmB,SAChB,CAAP;AA/BK;;AAwCP,iCAxCO,gBAwCP;AACA,iCAzCO,IAyCP;AACA,aAAO,KA1CA,SA0CP;AAzDkD;;;WAoEpDQ,mBAAAA,IAAAA,EAAAA,WAAAA,EAA6B;AAAA;;AAC3B1kE,MAAAA,IAAAA,CAAAA,IAAAA,GAAY,oCADe,WACf,CAAZA;;AACAA,MAAAA,IAAAA,CAAAA,OAAAA,GAAe,YAAM;AACnB,yBAAiB;AACf,4CADe,WACf;AAFiB;;AAInB,eAJmB,KAInB;AANyB,OAE3BA;;AAMA,UAAIuzC,WAAAA,IAAeA,WAAAA,KAAnB,IAA6D;AAC3DvzC,QAAAA,IAAAA,CAAAA,SAAAA,GAD2D,cAC3DA;AATyB;AApEuB;;;WAyFpD2kE,0BAAAA,IAAAA,EAAAA,MAAAA,EAA+B;AAAA;;AAC7B3kE,MAAAA,IAAAA,CAAAA,IAAAA,GAAY,8BADiB,EACjB,CAAZA;;AACAA,MAAAA,IAAAA,CAAAA,OAAAA,GAAe,YAAM;AACnB,8CADmB,MACnB;;AACA,eAFmB,KAEnB;AAJ2B,OAE7BA;;AAIAA,MAAAA,IAAAA,CAAAA,SAAAA,GAN6B,cAM7BA;AA/FkD;;;WA0GpD4kE,uBAAAA,IAAAA,EAAAA,IAAAA,EAA0B;AAAA;;AACxB5kE,MAAAA,IAAAA,CAAAA,IAAAA,GAAY,8BADY,EACZ,CAAZA;AACA,UAAMq4D,GAAAA,GAAM,QAAQ,CAClB,qBADkB,EAElB,yBAFkB,EAGlB,6BAHkB,CAAR,CAAZ;;AAFwB;AAOxB,YAAWp3D,IAAX;AACE,YAAM4jE,MAAAA,GAASxM,GAAAA,CAAAA,GAAAA,CAD6B,IAC7BA,CAAf;;AACA,YAAI,CAAJ,QAAa;AAAA;AAF+B;;AAK5Cr4D,QAAAA,IAAAA,CAAAA,MAAAA,CAAAA,GAAe,YAAM;AAAA;;AACnB,iLAA8D;AAC5DqgB,YAAAA,MAAAA,EAD4D;AAE5DykD,YAAAA,MAAAA,EAAQ;AACN/gD,cAAAA,EAAAA,EAAI1mB,IAAAA,CADE;AAEN4D,cAAAA,IAFM,EAENA;AAFM;AAFoD,WAA9D;AAOA,iBARmB,KAQnB;AAb0C,SAK5CjB;AAZsB;;AAOxB,sCAAmBe,MAAAA,CAAAA,IAAAA,CAAY1D,IAAAA,CAA/B,OAAmB0D,CAAnB,kCAA8C;AAAA;;AAAA,iCAE/B;AATS;;AAuBxBf,MAAAA,IAAAA,CAAAA,SAAAA,GAvBwB,cAuBxBA;AAjIkD;;;;EAAtD;;IAqIA;;;;;AACExD,iCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,8BAMtB,UANsB,EAMJ;AAAEE,MAAAA,YANE,EAMFA;AAAF,KANI;AAD4B;;;;WAUpDtlB,kBAAS;AACP,iCADO,gBACP;AAEA,UAAM2a,KAAAA,GAAQp7D,QAAAA,CAAAA,aAAAA,CAHP,KAGOA,CAAd;AACAo7D,MAAAA,KAAAA,CAAAA,KAAAA,CAAAA,MAAAA,GAAqB,qBAJd,MAIPA;AACAA,MAAAA,KAAAA,CAAAA,KAAAA,CAAAA,KAAAA,GAAoB,qBALb,KAKPA;AACAA,MAAAA,KAAAA,CAAAA,GAAAA,GACE,0CAEA,eAFA,WAEA,EAFA,GAPK,MAMPA;AAKAA,MAAAA,KAAAA,CAAAA,GAAAA,GAXO,uBAWPA;AACAA,MAAAA,KAAAA,CAAAA,OAAAA,CAAAA,MAAAA,GAZO,sBAYPA;AACAA,MAAAA,KAAAA,CAAAA,OAAAA,CAAAA,QAAAA,GAAyB4M,IAAAA,CAAAA,SAAAA,CAAe;AAAE7gE,QAAAA,IAAAA,EAAM,UAbzC;AAaiC,OAAf6gE,CAAzB5M;;AAEA,UAAI,CAAC,UAAL,UAAyB;AACvB,iCAAyB,KADF,IACvB;AAhBK;;AAmBP,iCAnBO,KAmBP;AACA,aAAO,KApBA,SAoBP;AA9BkD;;;;EAAtD;;IAkCA;;;;;;;;;;;;;WACE3a,kBAAS;AAEP,UAAI,UAAJ,iBAA+B;AAC7B,+BAAuB,UADM,eAC7B;AAHK;;AAMP,aAAO,KANA,SAMP;AAPoD;;;WAUtDwnB,yBAAAA,KAAAA,EAAuB;AACrB,kCAAyBC,iBAAAA,CADJ,QACrB;AAAA,UAAM,KAAN,yBAAM,KAAN;AAAA,UAAM,KAAN,yBAAM,KAAN;AACA,aAAQb,KAAAA,IAAS5uC,KAAAA,CAAV,OAAC4uC,IAA4BC,KAAAA,IAAS7uC,KAAAA,CAFxB,OAErB;AAZoD;;;WAetD0vC,2BAAAA,OAAAA,EAAAA,QAAAA,EAAAA,SAAAA,EAAAA,WAAAA,EAA6D;AAAA;;AAC3D,UAAIC,QAAAA,CAAAA,QAAAA,CAAJ,OAAIA,CAAJ,EAAgC;AAE9BlpC,QAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,QAAAA,EAAmCzG,UAAAA,KAAAA,EAAS;AAAA;;AAC1C,iLAA8D;AAC5DnV,YAAAA,MAAAA,EAD4D;AAE5DykD,YAAAA,MAAAA,EAAQ;AACN/gD,cAAAA,EAAAA,EAAI,YADE;AAEN9iB,cAAAA,IAAAA,EAFM;AAGNoC,cAAAA,KAAAA,EAAO+hE,WAAAA,CAHD,KAGCA,CAHD;AAINC,cAAAA,KAAAA,EAAO7vC,KAAAA,CAJD;AAKN8vC,cAAAA,QAAAA,EAAU,uBALJ,KAKI;AALJ;AAFoD,WAA9D;AAH4B,SAE9BrpC;AAFF,aAcO;AAELA,QAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,QAAAA,EAAmCzG,UAAAA,KAAAA,EAAS;AAAA;;AAC1C,oLAA8D;AAC5DnV,YAAAA,MAAAA,EAD4D;AAE5DykD,YAAAA,MAAAA,EAAQ;AACN/gD,cAAAA,EAAAA,EAAI,YADE;AAEN9iB,cAAAA,IAAAA,EAFM;AAGNoC,cAAAA,KAAAA,EAAOmyB,KAAAA,CAAAA,MAAAA,CAHD;AAAA;AAFoD,WAA9D;AAHG,SAELyG;AAjByD;AAfP;;;WA6CtDspC,4BAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,EAA2C;AAAA,kDACzC,KADyC;AAAA;;AAAA;AACzC,+DAA2C;AAAA;;AAAA;AAAA,cAAhC,QAAgC;AAAA,cAA3C,SAA2C;;AACzC,cAAIC,SAAAA,KAAAA,QAAAA,0BAA0B,iBAA1BA,+CAA0B,mBAA9B,SAA8B,CAA9B,EAA8D;AAC5D,iEAD4D,MAC5D;AAFuC;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AA7CW;;;WAqDtDC,mCAAAA,OAAAA,EAAAA,OAAAA,EAA4C;AAAA;;AAC1C,UAAMC,QAAAA,GAAW,SAAXA,QAAW,2BAA8B;AAC7C,YAAMnP,KAAAA,GAAQ/gC,KAAAA,CAAAA,MAAAA,CAD+B,MAC/BA,CAAd;AACAA,QAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAAA,SAAAA,IAAgCmwC,2CAAmBpP,KAAAA,CAAnBoP,CAAmBpP,CAAnBoP,YAC9BpP,KAAAA,CAAAA,KAAAA,CAH2C,CAG3CA,CAD8BoP,CAAhCnwC;AAHwC,OAC1C;;AAOA,UAAMowC,aAAAA,GAAgB;AACpBC,QAAAA,OAAAA,EAASrwC,iBAAAA,KAAAA,EAAS;AAChB,cAAMswC,MAAAA,GAAStwC,KAAAA,CAAAA,MAAAA,CAAAA,OAAAA,GAAAA,CAAAA,KADC,CAChB;AACAA,UAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAAA,UAAAA,GAAgCswC,MAAAA,GAAAA,QAAAA,GAFhB,SAEhBtwC;;AACA,4CAAgC,YAAhC,IAA8C;AAC5CswC,YAAAA,MAD4C,EAC5CA,MAD4C;AAE5CC,YAAAA,KAAAA,EAAOvwC,KAAAA,CAAAA,MAAAA,CAAAA,OAAAA,KAAAA,CAAAA,IAA8BA,KAAAA,CAAAA,MAAAA,CAAAA,OAAAA,KAFO;AAAA,WAA9C;AAJkB;AASpBuwC,QAAAA,KAAAA,EAAOvwC,eAAAA,KAAAA,EAAS;AACd,4CAAgC,YAAhC,IAA8C;AAC5CuwC,YAAAA,KAAAA,EAAOvwC,KAAAA,CAAAA,MAAAA,CAFK;AACgC,WAA9C;AAVkB;AAcpBswC,QAAAA,MAAAA,EAAQtwC,gBAAAA,KAAAA,EAAS;AACfA,UAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAAA,UAAAA,GAAgCA,KAAAA,CAAAA,MAAAA,CAAAA,MAAAA,GAAAA,QAAAA,GADjB,SACfA;;AAGA,4CAAgC,YAAhC,IAA8C;AAC5CswC,YAAAA,MAAAA,EAAQtwC,KAAAA,CAAAA,MAAAA,CALK;AAI+B,WAA9C;AAlBkB;AAsBpBwwC,QAAAA,KAAAA,EAAOxwC,eAAAA,KAAAA,EAAS;AACd4C,UAAAA,UAAAA,CAAW;AAAA,mBAAM5C,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAmB;AAAEywC,cAAAA,aAAAA,EAAtC7tC;AAAoC,aAAnB5C,CAAN;AAAA,WAAX4C,EADc,CACdA,CAAAA;AAvBkB;AAyBpB8tC,QAAAA,QAAAA,EAAU1wC,kBAAAA,KAAAA,EAAS;AAEjBA,UAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAqBA,KAAAA,CAAAA,MAAAA,CAFJ,QAEjBA;AA3BkB;AA6BpB2wC,QAAAA,QAAAA,EAAU3wC,kBAAAA,KAAAA,EAAS;AACjB,cAAIA,KAAAA,CAAAA,MAAAA,CAAJ,UAA2B;AACzBA,YAAAA,KAAAA,CAAAA,MAAAA,CAAAA,YAAAA,CAAAA,UAAAA,EADyB,EACzBA;AADF,iBAEO;AACLA,YAAAA,KAAAA,CAAAA,MAAAA,CAAAA,eAAAA,CADK,UACLA;AAJe;AA7BC;AAoCpB4wC,QAAAA,QAAAA,EAAU5wC,kBAAAA,KAAAA,EAAS;AACjB,cAAIA,KAAAA,CAAAA,MAAAA,CAAJ,UAA2B;AACzBA,YAAAA,KAAAA,CAAAA,MAAAA,CAAAA,YAAAA,CAAAA,UAAAA,EADyB,EACzBA;AADF,iBAEO;AACLA,YAAAA,KAAAA,CAAAA,MAAAA,CAAAA,eAAAA,CADK,UACLA;AAJe;AApCC;AA2CpB6wC,QAAAA,OAAAA,EAAS7wC,iBAAAA,KAAAA,EAAS;AAChBkwC,UAAAA,QAAAA,CAAAA,SAAAA,EAAAA,iBAAAA,EADgB,KAChBA,CAAAA;AA5CkB;AA8CpB3U,QAAAA,SAAAA,EAAWv7B,mBAAAA,KAAAA,EAAS;AAClBkwC,UAAAA,QAAAA,CAAAA,WAAAA,EAAAA,iBAAAA,EADkB,KAClBA,CAAAA;AA/CkB;AAiDpBY,QAAAA,OAAAA,EAAS9wC,iBAAAA,KAAAA,EAAS;AAChBkwC,UAAAA,QAAAA,CAAAA,SAAAA,EAAAA,OAAAA,EADgB,KAChBA,CAAAA;AAlDkB;AAoDpBa,QAAAA,SAAAA,EAAW/wC,mBAAAA,KAAAA,EAAS;AAClBkwC,UAAAA,QAAAA,CAAAA,WAAAA,EAAAA,OAAAA,EADkB,KAClBA,CAAAA;AArDkB;AAuDpBc,QAAAA,WAAAA,EAAahxC,qBAAAA,KAAAA,EAAS;AACpBkwC,UAAAA,QAAAA,CAAAA,aAAAA,EAAAA,aAAAA,EADoB,KACpBA,CAAAA;AAxDkB;AA0DpB3S,QAAAA,WAAAA,EAAav9B,qBAAAA,KAAAA,EAAS;AACpBkwC,UAAAA,QAAAA,CAAAA,aAAAA,EAAAA,aAAAA,EADoB,KACpBA,CAAAA;AA3DkB;AAAA,OAAtB;;AA+DA,wCAAmB3kE,MAAAA,CAAAA,IAAAA,CAAY0lE,OAAAA,CAA/B,MAAmB1lE,CAAnB,qCAAgD;AAAhD,YAAWE,IAAX;AACE,YAAMktC,MAAAA,GAASH,OAAAA,CAAAA,IAAAA,CAAAA,IAAiB43B,aAAAA,CADc,IACdA,CAAhC;;AACA,oBAAY;AACVz3B,UAAAA,MAAAA,CADU,OACVA,CAAAA;AAH4C;AAvEN;AArDU;;;;EAAxD;;IAqIA;;;;;AACE3xC,uCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GACJF,UAAAA,CAAAA,WAAAA,IACC,CAACA,UAAAA,CAAAA,IAAAA,CAAD,iBAAkC,CAAC,CAACA,UAAAA,CAAAA,IAAAA,CAHjB,UACtB;AADsB,8BAItB,UAJsB,EAIJ;AAAEE,MAAAA,YAJE,EAIFA;AAAF,KAJI;AADwC;;;;WAQhE4D,+BAAAA,IAAAA,EAAAA,GAAAA,EAAAA,KAAAA,EAAAA,YAAAA,EAAsD;AACpD,UAAMC,OAAAA,GAAU,KADoC,iBACpD;;AADoD,kDAE9B5pE,QAAAA,CAAAA,iBAAAA,CAA2Bod,IAAAA,CAAjD,IAAsBpd,CAF8B;AAAA;;AAAA;AAEpD,+DAA6D;AAAA,cAA7D,OAA6D;;AAC3D,cAAIk/B,OAAAA,KAAJ,MAAsB;AACpBA,YAAAA,OAAAA,CAAAA,GAAAA,CAAAA,GADoB,KACpBA;AACA,gBAAM5+B,IAAAA,GAAO0D,MAAAA,CAAAA,MAAAA,CAFO,IAEPA,CAAb;AACA1D,YAAAA,IAAAA,CAAAA,YAAAA,CAAAA,GAHoB,KAGpBA;AACAspE,YAAAA,OAAAA,CAAAA,QAAAA,CAAiB1qC,OAAAA,CAAAA,YAAAA,CAAjB0qC,IAAiB1qC,CAAjB0qC,EAJoB,IAIpBA;AALyD;AAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AARU;;;WAoBhEnpB,kBAAS;AAAA;;AACP,UAAMmpB,OAAAA,GAAU,KADT,iBACP;AACA,UAAM5iD,EAAAA,GAAK,UAFJ,EAEP;AAEA,iCAJO,sBAIP;AAEA,UAAIkY,OAAAA,GANG,IAMP;;AACA,UAAI,KAAJ,aAAsB;AAIpB,YAAM2qC,UAAAA,GAAa,qBAAqB;AACtCvjE,UAAAA,KAAAA,EAAO,UAD+B;AAEtCwjE,UAAAA,aAAAA,EAAe,UAFuB;AAAA,SAArB,CAAnB;AAIA,YAAMrnB,WAAAA,GAAconB,UAAAA,CAAAA,aAAAA,IAA4BA,UAAAA,CAA5BA,KAAAA,IARA,EAQpB;AACA,YAAME,WAAAA,GAAc;AAClBC,UAAAA,SAAAA,EADkB;AAElBC,UAAAA,cAAAA,EAFkB;AAGlBC,UAAAA,yBAAAA,EAHkB;AAIlBC,UAAAA,gBAAAA,EAJkB;AAAA,SAApB;;AAOA,YAAI,UAAJ,WAAyB;AACvBjrC,UAAAA,OAAAA,GAAUl/B,QAAAA,CAAAA,aAAAA,CADa,UACbA,CAAVk/B;AACAA,UAAAA,OAAAA,CAAAA,WAAAA,GAFuB,WAEvBA;AAFF,eAGO;AACLA,UAAAA,OAAAA,GAAUl/B,QAAAA,CAAAA,aAAAA,CADL,OACKA,CAAVk/B;AACAA,UAAAA,OAAAA,CAAAA,IAAAA,GAFK,MAELA;AACAA,UAAAA,OAAAA,CAAAA,YAAAA,CAAAA,OAAAA,EAHK,WAGLA;AAtBkB;;AAwBpBA,QAAAA,OAAAA,CAAAA,QAAAA,GAxBoB,iBAwBpBA;AAEA6qC,QAAAA,WAAAA,CAAAA,SAAAA,GA1BoB,WA0BpBA;AACA7qC,QAAAA,OAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EA3BoB,EA2BpBA;AAEAA,QAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAkCzG,UAAAA,KAAAA,EAAS;AACzCmxC,UAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,YAAAA,KAAAA,EAAOmyB,KAAAA,CAAAA,MAAAA,CADW;AACpB,WAArBmxC;;AACA,yDAGEnxC,KAAAA,CAAAA,MAAAA,CAHF,OAFyC,OAEzC;AA/BkB,SA6BpByG;;AAUA,YAAIkrC,YAAAA,GAAe3xC,sBAAAA,KAAAA,EAAS;AAC1B,cAAIsxC,WAAAA,CAAJ,gBAAgC;AAC9BtxC,YAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAqBsxC,WAAAA,CADS,cAC9BtxC;AAFwB;;AAK1BA,UAAAA,KAAAA,CAAAA,MAAAA,CAAAA,UAAAA,GAL0B,CAK1BA;AACAsxC,UAAAA,WAAAA,CAAAA,yBAAAA,GAN0B,IAM1BA;AA7CkB,SAuCpB;;AASA,YAAI,wBAAwB,KAA5B,cAA+C;AAAA;;AAC7C7qC,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAkCzG,UAAAA,KAAAA,EAAS;AACzC,gBAAIsxC,WAAAA,CAAJ,WAA2B;AACzBtxC,cAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAqBsxC,WAAAA,CADI,SACzBtxC;AAFuC;AADE,WAC7CyG;AAMAA,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,mBAAAA,EAA8CwqC,UAAAA,OAAAA,EAAW;AACvD,gBAAMz4B,OAAAA,GAAU;AACd3qC,cAAAA,KADc,iBACdA,KADc,EACD;AACXyjE,gBAAAA,WAAAA,CAAAA,SAAAA,GAAwBtxC,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IADb,EACXsxC;AACAH,gBAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,kBAAAA,KAAAA,EAAOyjE,WAAAA,CAAAA,SAAAA,CAFnB,QAEmBA;AAAT,iBAArBH;;AACA,oBAAI,CAACG,WAAAA,CAAL,gBAAiC;AAC/BtxC,kBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAqBsxC,WAAAA,CADU,SAC/BtxC;AAJS;AADC;AAQdqxC,cAAAA,aARc,yBAQdA,KARc,EAQO;AACnBC,gBAAAA,WAAAA,CAAAA,cAAAA,GAA6BtxC,KAAAA,CAAAA,MAAAA,CAAAA,aAAAA,IADV,EACnBsxC;;AACA,oBAAItxC,KAAAA,CAAAA,MAAAA,KAAiBz4B,QAAAA,CAArB,eAA6C;AAE3Cy4B,kBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAqBsxC,WAAAA,CAFsB,cAE3CtxC;AAJiB;;AAMnBmxC,gBAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AACnBK,kBAAAA,cAAAA,EAAgBF,WAAAA,CAPC;AAME,iBAArBH;AAdY;AAkBdS,cAAAA,QAlBc,oBAkBdA,KAlBc,EAkBE;AACd,2DAA2B5xC,KAAAA,CAAAA,MAAAA,CADb,QACd;AAAA,oBAAM,QAAN;AAAA,oBAAM,MAAN;;AACA,oBAAI6xC,QAAAA,IAAAA,CAAAA,IAAiBC,MAAAA,GAAS9xC,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAA9B,QAAyD;AACvDA,kBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,iBAAAA,CAAAA,QAAAA,EADuD,MACvDA;AAHY;AAlBF;AAAA,aAAhB;;AAyBA,sDA1BuD,OA0BvD;AAjC2C,WAO7CyG;AA+BAA,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,SAAAA,EAAoCzG,UAAAA,KAAAA,EAAS;AAAA;;AAC3CsxC,YAAAA,WAAAA,CAAAA,gBAAAA,GAA+BtxC,KAAAA,CAAAA,MAAAA,CADY,KAC3CsxC;AAGA,gBAAIS,SAAAA,GAAY,CAJ2B,CAI3C;;AACA,gBAAI/xC,KAAAA,CAAAA,GAAAA,KAAJ,UAA4B;AAC1B+xC,cAAAA,SAAAA,GAD0B,CAC1BA;AADF,mBAEO,IAAI/xC,KAAAA,CAAAA,GAAAA,KAAJ,SAA2B;AAChC+xC,cAAAA,SAAAA,GADgC,CAChCA;AADK,mBAEA,IAAI/xC,KAAAA,CAAAA,GAAAA,KAAJ,OAAyB;AAC9B+xC,cAAAA,SAAAA,GAD8B,CAC9BA;AAVyC;;AAY3C,gBAAIA,SAAAA,KAAc,CAAlB,GAAsB;AAAA;AAZqB;;AAgB3CT,YAAAA,WAAAA,CAAAA,SAAAA,GAAwBtxC,KAAAA,CAAAA,MAAAA,CAhBmB,KAgB3CsxC;AACA,mLAA8D;AAC5DzmD,cAAAA,MAAAA,EAD4D;AAE5DykD,cAAAA,MAAAA,EAAQ;AACN/gD,gBAAAA,EADM,EACNA,EADM;AAEN9iB,gBAAAA,IAAAA,EAFM;AAGNoC,gBAAAA,KAAAA,EAAOmyB,KAAAA,CAAAA,MAAAA,CAHD;AAINgyC,gBAAAA,UAAAA,EAJM;AAKND,gBAAAA,SALM,EAKNA,SALM;AAMNF,gBAAAA,QAAAA,EAAU7xC,KAAAA,CAAAA,MAAAA,CANJ;AAON8xC,gBAAAA,MAAAA,EAAQ9xC,KAAAA,CAAAA,MAAAA,CAPF;AAAA;AAFoD,aAA9D;AAvD2C,WAsC7CyG;AA8BA,cAAMwrC,aAAAA,GApEuC,YAoE7C;AACAN,UAAAA,YAAAA,GArE6C,IAqE7CA;AACAlrC,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,MAAAA,EAAiCzG,UAAAA,KAAAA,EAAS;AACxC,gBAAI,mBAAJ,QAA6B;AAAA;;AAE3BsxC,cAAAA,WAAAA,CAAAA,SAAAA,GAAwBtxC,KAAAA,CAAAA,MAAAA,CAFG,KAE3BsxC;AACA,wLAA8D;AAC5DzmD,gBAAAA,MAAAA,EAD4D;AAE5DykD,gBAAAA,MAAAA,EAAQ;AACN/gD,kBAAAA,EADM,EACNA,EADM;AAEN9iB,kBAAAA,IAAAA,EAFM;AAGNoC,kBAAAA,KAAAA,EAAOmyB,KAAAA,CAAAA,MAAAA,CAHD;AAINgyC,kBAAAA,UAAAA,EAJM;AAKND,kBAAAA,SAAAA,EALM;AAMNF,kBAAAA,QAAAA,EAAU7xC,KAAAA,CAAAA,MAAAA,CANJ;AAON8xC,kBAAAA,MAAAA,EAAQ9xC,KAAAA,CAAAA,MAAAA,CAPF;AAAA;AAFoD,eAA9D;AAJsC;;AAiBxCiyC,YAAAA,aAAAA,CAjBwC,KAiBxCA,CAAAA;AAvF2C,WAsE7CxrC;AAmBAA,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,WAAAA,EAAsCzG,UAAAA,KAAAA,EAAS;AAC7CsxC,YAAAA,WAAAA,CAAAA,gBAAAA,GAA+BtxC,KAAAA,CAAAA,MAAAA,CADc,KAC7CsxC;AACAA,YAAAA,WAAAA,CAAAA,yBAAAA,GAF6C,IAE7CA;AA3F2C,WAyF7C7qC;AAIAA,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAkCzG,UAAAA,KAAAA,EAAS;AAEzC,gBAAIA,KAAAA,CAAAA,MAAAA,CAAAA,cAAAA,KAAgCA,KAAAA,CAAAA,MAAAA,CAApC,cAA+D;AAC7DsxC,cAAAA,WAAAA,CAAAA,yBAAAA,GAD6D,IAC7DA;AAHuC;AA7FE,WA6F7C7qC;AAMAA,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,QAAAA,EAAmCzG,UAAAA,KAAAA,EAAS;AAC1CsxC,YAAAA,WAAAA,CAAAA,yBAAAA,GAAwC,CACtCtxC,KAAAA,CAAAA,MAAAA,CADsC,gBAEtCA,KAAAA,CAAAA,MAAAA,CAFsC,aAAxCsxC;AApG2C,WAmG7C7qC;;AAOA,qCAAI,iBAAJ,gDAAI,oBAAJ,WAAkC;AAGhCA,YAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAkCzG,UAAAA,KAAAA,EAAS;AAAA;;AACzC,kBAAI6xC,QAAAA,GAAW,CAD0B,CACzC;AACA,kBAAIC,MAAAA,GAAS,CAF4B,CAEzC;;AACA,kBAAIR,WAAAA,CAAJ,2BAA2C;AAAA,2DACpBA,WAAAA,CADoB;;AACzC,wBADyC;AACzC,sBADyC;AAHF;;AAMzC,wLAA8D;AAC5DzmD,gBAAAA,MAAAA,EAD4D;AAE5DykD,gBAAAA,MAAAA,EAAQ;AACN/gD,kBAAAA,EADM,EACNA,EADM;AAEN9iB,kBAAAA,IAAAA,EAFM;AAGNoC,kBAAAA,KAAAA,EAAOyjE,WAAAA,CAHD;AAINY,kBAAAA,MAAAA,EAAQlyC,KAAAA,CAJF;AAKNgyC,kBAAAA,UAAAA,EALM;AAMNH,kBAAAA,QANM,EAMNA,QANM;AAONC,kBAAAA,MAPM,EAONA;AAPM;AAFoD,eAA9D;AAT8B,aAGhCrrC;AA7G2C;;AAkI7C,2CAEE,CACE,kBADF,EAEE,gBAFF,EAGE,2BAHF,EAIE,6BAJF,EAKE,4BALF,EAME,uBANF,CAFF,EAUEzG,UAAAA,KAAAA;AAAAA,mBAASA,KAAAA,CAAAA,MAAAA,CA5IkC,KA4I3CA;AAAAA,WAVF;AAlLkB;;AAgMpB,0BAAkB;AAChByG,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,MAAAA,EADgB,YAChBA;AAjMkB;;AAoMpBA,QAAAA,OAAAA,CAAAA,QAAAA,GAAmB,UApMC,QAoMpBA;AACAA,QAAAA,OAAAA,CAAAA,IAAAA,GAAe,UArMK,SAqMpBA;;AAEA,YAAI,qBAAJ,MAA+B;AAC7BA,UAAAA,OAAAA,CAAAA,SAAAA,GAAoB,UADS,MAC7BA;AAxMkB;;AA2MpB,YAAI,UAAJ,MAAoB;AAClB,cAAM0rC,UAAAA,GAAa,oBAAoB,eADrB,CACqB,CAAvC;AACA,cAAMC,SAAAA,GAAYD,UAAAA,GAAa,UAFb,MAElB;AAEA1rC,UAAAA,OAAAA,CAAAA,SAAAA,CAAAA,GAAAA,CAJkB,MAIlBA;AACAA,UAAAA,OAAAA,CAAAA,KAAAA,CAAAA,aAAAA,kBALkB,SAKlBA;AAhNkB;AAAtB,aAkNO;AACLA,QAAAA,OAAAA,GAAUl/B,QAAAA,CAAAA,aAAAA,CADL,KACKA,CAAVk/B;AACAA,QAAAA,OAAAA,CAAAA,WAAAA,GAAsB,UAFjB,UAELA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,aAAAA,GAHK,QAGLA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,OAAAA,GAJK,YAILA;AA7NK;;AAgOP,yBAhOO,OAgOP;;AAEA,iCAlOO,OAkOP;AACA,aAAO,KAnOA,SAmOP;AAvP8D;;;WAiQhE4rC,uBAAAA,OAAAA,EAAuB;AACrB,UAAMC,cAAAA,GAAiB,2BAAvB;AACA,kCAAgC,UAFX,qBAErB;AAAA,UAAM,QAAN,yBAAM,QAAN;AAAA,UAAM,SAAN,yBAAM,SAAN;AACA,UAAMC,KAAAA,GAAQ9rC,OAAAA,CAHO,KAGrB;;AAKA,oBAAc;AACZ8rC,QAAAA,KAAAA,CAAAA,QAAAA,aADY,QACZA;AATmB;;AAYrBA,MAAAA,KAAAA,CAAAA,KAAAA,GAActrD,WAAAA,YAAAA,CAAkBurD,SAAAA,CAAlBvrD,CAAkBurD,CAAlBvrD,EAAgCurD,SAAAA,CAAhCvrD,CAAgCurD,CAAhCvrD,EAA8CurD,SAAAA,CAZvC,CAYuCA,CAA9CvrD,CAAdsrD;;AAEA,UAAI,4BAAJ,MAAsC;AACpCA,QAAAA,KAAAA,CAAAA,SAAAA,GAAkBD,cAAAA,CAAe,UADG,aAClBA,CAAlBC;AAfmB;AAjQyC;;;;EAAlE;;IAqRA;;;;;AACEvrE,2CAAAA,UAAAA,EAAwB;AAAA;;AAAA,8BACtB,UADsB,EACJ;AAAEsmE,MAAAA,YAAAA,EAAcF,UAAAA,CADZ;AACJ,KADI;AAD4C;;;;WAKpEplB,kBAAS;AAAA;;AACP,UAAMmpB,OAAAA,GAAU,KADT,iBACP;AACA,UAAMtpE,IAAAA,GAAO,KAFN,IAEP;AACA,UAAM0mB,EAAAA,GAAK1mB,IAAAA,CAHJ,EAGP;AACA,UAAIgG,KAAAA,GAAQsjE,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAC/BtjE,QAAAA,KAAAA,EACEhG,IAAAA,CAAAA,UAAAA,KACEA,IAAAA,CAAAA,WAAAA,IAAoBA,IAAAA,CAAAA,WAAAA,KAAqBA,IAAAA,CAA1C,UAACA,IACC,CAACA,IAAAA,CAAD,eAAqBA,IAAAA,CAAAA,UAAAA,KAJhBspE,KAERtpE;AAF6B,OAArBspE,EAJL,KAIP;;AAMA,UAAI,iBAAJ,UAA+B;AAE7BtjE,QAAAA,KAAAA,GAAQA,KAAAA,KAFqB,KAE7BA;AACAsjE,QAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,UAAAA,KAHM,EAGNA;AAAF,SAArBsjE;AAbK;;AAgBP,iCAhBO,iCAgBP;AAEA,UAAM1qC,OAAAA,GAAUl/B,QAAAA,CAAAA,aAAAA,CAlBT,OAkBSA,CAAhB;AACAk/B,MAAAA,OAAAA,CAAAA,QAAAA,GAAmB5+B,IAAAA,CAnBZ,QAmBP4+B;AACAA,MAAAA,OAAAA,CAAAA,IAAAA,GApBO,UAoBPA;AACAA,MAAAA,OAAAA,CAAAA,IAAAA,GAAe,UArBR,SAqBPA;;AACA,iBAAW;AACTA,QAAAA,OAAAA,CAAAA,YAAAA,CAAAA,SAAAA,EADS,IACTA;AAvBK;;AAyBPA,MAAAA,OAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAzBO,EAyBPA;AACAA,MAAAA,OAAAA,CAAAA,QAAAA,GA1BO,iBA0BPA;AAEAA,MAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,QAAAA,EAAmC,iBAAiB;AAClD,YAAMh7B,IAAAA,GAAOu0B,KAAAA,CAAAA,MAAAA,CADqC,IAClD;;AADkD,oDAE3Bz4B,QAAAA,CAAAA,iBAAAA,CAAvB,IAAuBA,CAF2B;AAAA;;AAAA;AAElD,iEAAyD;AAAA,gBAAzD,QAAyD;;AACvD,gBAAIkrE,QAAAA,KAAazyC,KAAAA,CAAjB,QAA+B;AAC7ByyC,cAAAA,QAAAA,CAAAA,OAAAA,GAD6B,KAC7BA;AACAtB,cAAAA,OAAAA,CAAAA,QAAAA,CACEsB,QAAAA,CAAAA,UAAAA,CAAAA,YAAAA,CADFtB,oBACEsB,CADFtB,EAEE;AAAEtjE,gBAAAA,KAAAA,EAJyB;AAI3B,eAFFsjE;AAHqD;AAFP;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWlDA,QAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,UAAAA,KAAAA,EAAOmyB,KAAAA,CAAAA,MAAAA,CAXoB;AAW7B,SAArBmxC;AAvCK,OA4BP1qC;;AAcA,UAAI,wBAAwB,KAA5B,cAA+C;AAC7CA,QAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,mBAAAA,EAA8CwqC,UAAAA,OAAAA,EAAW;AACvD,cAAMz4B,OAAAA,GAAU;AACd3qC,YAAAA,KADc,iBACdA,KADc,EACD;AACXmyB,cAAAA,KAAAA,CAAAA,MAAAA,CAAAA,OAAAA,GAAuBA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,KADZ,KACXA;AACAmxC,cAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,gBAAAA,KAAAA,EAAOmyB,KAAAA,CAAAA,MAAAA,CAFnB;AAEU,eAArBmxC;AAHY;AAAA,WAAhB;;AAMA,oDAPuD,OAOvD;AAR2C,SAC7C1qC;;AAUA,yCAEE,CACE,sBADF,EAEE,oBAFF,EAGE,kBAHF,EAIE,gBAJF,EAKE,2BALF,EAME,6BANF,EAOE,4BAPF,EAQE,uBARF,CAFF,EAYEzG,UAAAA,KAAAA;AAAAA,iBAASA,KAAAA,CAAAA,MAAAA,CAvBkC,OAuB3CA;AAAAA,SAZF;AArDK;;AAqEP,iCArEO,OAqEP;AACA,aAAO,KAtEA,SAsEP;AA3EkE;;;;EAAtE;;IA+EA;;;;;AACEh5B,8CAAAA,UAAAA,EAAwB;AAAA;;AAAA,8BACtB,UADsB,EACJ;AAAEsmE,MAAAA,YAAAA,EAAcF,UAAAA,CADZ;AACJ,KADI;AAD+C;;;;WAKvEplB,kBAAS;AAAA;;AACP,iCADO,oCACP;AACA,UAAMmpB,OAAAA,GAAU,KAFT,iBAEP;AACA,UAAMtpE,IAAAA,GAAO,KAHN,IAGP;AACA,UAAM0mB,EAAAA,GAAK1mB,IAAAA,CAJJ,EAIP;AACA,UAAIgG,KAAAA,GAAQsjE,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAC/BtjE,QAAAA,KAAAA,EAAOhG,IAAAA,CAAAA,UAAAA,KAAoBA,IAAAA,CADjBspE;AAAqB,OAArBA,EALL,KAKP;;AAGA,UAAI,iBAAJ,UAA+B;AAE7BtjE,QAAAA,KAAAA,GAAQA,KAAAA,KAAUhG,IAAAA,CAFW,WAE7BgG;AACAsjE,QAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,UAAAA,KAHM,EAGNA;AAAF,SAArBsjE;AAXK;;AAcP,UAAM1qC,OAAAA,GAAUl/B,QAAAA,CAAAA,aAAAA,CAdT,OAcSA,CAAhB;AACAk/B,MAAAA,OAAAA,CAAAA,QAAAA,GAAmB5+B,IAAAA,CAfZ,QAeP4+B;AACAA,MAAAA,OAAAA,CAAAA,IAAAA,GAhBO,OAgBPA;AACAA,MAAAA,OAAAA,CAAAA,IAAAA,GAAe5+B,IAAAA,CAjBR,SAiBP4+B;;AACA,iBAAW;AACTA,QAAAA,OAAAA,CAAAA,YAAAA,CAAAA,SAAAA,EADS,IACTA;AAnBK;;AAqBPA,MAAAA,OAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EArBO,EAqBPA;AACAA,MAAAA,OAAAA,CAAAA,QAAAA,GAtBO,iBAsBPA;AAEAA,MAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,QAAAA,EAAmC,iBAAiB;AAClD,YAAM,MAAN,GADkD,KAClD,CAAM,MAAN;;AADkD,oDAE9Bl/B,QAAAA,CAAAA,iBAAAA,CAA2BojB,MAAAA,CAA/C,IAAoBpjB,CAF8B;AAAA;;AAAA;AAElD,iEAA6D;AAAA,gBAA7D,KAA6D;;AAC3D,gBAAImrE,KAAAA,KAAJ,QAAsB;AACpBvB,cAAAA,OAAAA,CAAAA,QAAAA,CAAiBuB,KAAAA,CAAAA,YAAAA,CAAjBvB,IAAiBuB,CAAjBvB,EAA2C;AAAEtjE,gBAAAA,KAAAA,EADzB;AACuB,eAA3CsjE;AAFyD;AAFX;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOlDA,QAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,UAAAA,KAAAA,EAAO8c,MAAAA,CAPoB;AAO7B,SAArBwmD;AA/BK,OAwBP1qC;;AAUA,UAAI,wBAAwB,KAA5B,cAA+C;AAC7C,YAAMksC,cAAAA,GAAiB9qE,IAAAA,CADsB,WAC7C;AACA4+B,QAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,mBAAAA,EAA8CwqC,UAAAA,OAAAA,EAAW;AACvD,cAAMz4B,OAAAA,GAAU;AACd3qC,YAAAA,KADc,iBACdA,KADc,EACD;AACX,kBAAM+kE,OAAAA,GAAUD,cAAAA,KAAmB3yC,KAAAA,CAAAA,MAAAA,CADxB,KACX;;AADW,0DAESz4B,QAAAA,CAAAA,iBAAAA,CAA2By4B,KAAAA,CAAAA,MAAAA,CAA/C,IAAoBz4B,CAFT;AAAA;;AAAA;AAEX,uEAAmE;AAAA,sBAAnE,KAAmE;AACjE,sBAAMsrE,OAAAA,GAAUH,KAAAA,CAAAA,YAAAA,CADiD,IACjDA,CAAhB;AACAA,kBAAAA,KAAAA,CAAAA,OAAAA,GAAgBG,OAAAA,KAAAA,EAAAA,IAFiD,OAEjEH;AACAvB,kBAAAA,OAAAA,CAAAA,QAAAA,CAAAA,OAAAA,EAA0B;AAAEtjE,oBAAAA,KAAAA,EAAO6kE,KAAAA,CAH8B;AAGvC,mBAA1BvB;AALS;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA,WAAhB;;AAUA,oDAXuD,OAWvD;AAb2C,SAE7C1qC;;AAcA,yCAEE,CACE,sBADF,EAEE,oBAFF,EAGE,kBAHF,EAIE,gBAJF,EAKE,2BALF,EAME,6BANF,EAOE,4BAPF,EAQE,uBARF,CAFF,EAYEzG,UAAAA,KAAAA;AAAAA,iBAASA,KAAAA,CAAAA,MAAAA,CA5BkC,OA4B3CA;AAAAA,SAZF;AAlDK;;AAkEP,iCAlEO,OAkEP;AACA,aAAO,KAnEA,SAmEP;AAxEqE;;;;EAAzE;;IA4EA;;;;;;;;;;;;;WACEgoB,kBAAS;AAIP,UAAMnd,SAJC,gGAIP;;AACAA,MAAAA,SAAAA,CAAAA,SAAAA,GALO,mCAKPA;;AAEA,UAAI,UAAJ,iBAA+B;AAC7BA,QAAAA,SAAAA,CAAAA,KAAAA,GAAkB,UADW,eAC7BA;AARK;;AAWP,aAXO,SAWP;AAZkE;;;;EAAtE;;IAgBA;;;;;AACE7jC,yCAAAA,UAAAA,EAAwB;AAAA;;AAAA,8BACtB,UADsB,EACJ;AAAEsmE,MAAAA,YAAAA,EAAcF,UAAAA,CADZ;AACJ,KADI;AAD0C;;;;WAKlEplB,kBAAS;AAAA;;AACP,iCADO,wBACP;AACA,UAAMmpB,OAAAA,GAAU,KAFT,iBAEP;AACA,UAAM5iD,EAAAA,GAAK,UAHJ,EAGP;AASA4iD,MAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AACnBtjE,QAAAA,KAAAA,EACE,kCAAkC,qBAAlC,CAAkC,CAAlC,GAdG;AAYc,OAArBsjE;AAKA,UAAI,QAAJ,GAAmB,UAjBZ,qBAiBP,CAAI,QAAJ;;AACA,UAAI,CAAJ,UAAe;AACbjT,QAAAA,QAAAA,GADa,CACbA;AAnBK;;AAqBP,UAAM4U,aAAAA,kBArBC,QAqBDA,6BAAN;AAEA,UAAMC,aAAAA,GAAgBxrE,QAAAA,CAAAA,aAAAA,CAvBf,QAuBeA,CAAtB;AACAwrE,MAAAA,aAAAA,CAAAA,QAAAA,GAAyB,UAxBlB,QAwBPA;AACAA,MAAAA,aAAAA,CAAAA,IAAAA,GAAqB,UAzBd,SAyBPA;AACAA,MAAAA,aAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EA1BO,EA0BPA;AACAA,MAAAA,aAAAA,CAAAA,QAAAA,GA3BO,iBA2BPA;AAEAA,MAAAA,aAAAA,CAAAA,KAAAA,CAAAA,QAAAA,aA7BO,QA6BPA;;AAEA,UAAI,CAAC,UAAL,OAAsB;AAEpBA,QAAAA,aAAAA,CAAAA,IAAAA,GAAqB,kBAFD,MAEpBA;;AACA,YAAI,UAAJ,aAA2B;AACzBA,UAAAA,aAAAA,CAAAA,QAAAA,GADyB,IACzBA;AAJkB;AA/Bf;;AAAA,kDAwCc,UAArB,OAxCO;AAAA;;AAAA;AAwCP,+DAAwC;AAAA,cAAxC,MAAwC;AACtC,cAAMC,aAAAA,GAAgBzrE,QAAAA,CAAAA,aAAAA,CADgB,QAChBA,CAAtB;AACAyrE,UAAAA,aAAAA,CAAAA,WAAAA,GAA4BC,MAAAA,CAFU,YAEtCD;AACAA,UAAAA,aAAAA,CAAAA,KAAAA,GAAsBC,MAAAA,CAHgB,WAGtCD;;AACA,cAAI,UAAJ,OAAqB;AACnBA,YAAAA,aAAAA,CAAAA,KAAAA,CAAAA,QAAAA,GADmB,aACnBA;AALoC;;AAOtC,cAAI,8BAA8BC,MAAAA,CAAlC,WAAI,CAAJ,EAAuD;AACrDD,YAAAA,aAAAA,CAAAA,YAAAA,CAAAA,UAAAA,EADqD,IACrDA;AARoC;;AAUtCD,UAAAA,aAAAA,CAAAA,WAAAA,CAVsC,aAUtCA;AAlDK;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqDP,UAAM1f,QAAAA,GAAW,SAAXA,QAAW,kBAAqB;AACpC,YAAM5nD,IAAAA,GAAOynE,QAAAA,GAAAA,OAAAA,GADuB,aACpC;AACA,YAAM1oD,OAAAA,GAAUwV,KAAAA,CAAAA,MAAAA,CAFoB,OAEpC;;AACA,YAAI,CAACA,KAAAA,CAAAA,MAAAA,CAAL,UAA4B;AAC1B,iBAAOxV,OAAAA,CAAAA,aAAAA,KAA0B,CAA1BA,CAAAA,GAAAA,IAAAA,GAEHA,OAAAA,CAAQA,OAAAA,CAARA,aAAAA,CAAAA,CAHsB,IAGtBA,CAFJ;AAJkC;;AAQpC,eAAOjE,KAAAA,CAAAA,SAAAA,CAAAA,MAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EACU0sD,UAAAA,MAAAA;AAAAA,iBAAUA,MAAAA,CADpB1sD,QACU0sD;AAAAA,SADV1sD,EAAAA,GAAAA,CAEA0sD,UAAAA,MAAAA;AAAAA,iBAAUA,MAAAA,CAVmB,IAUnBA,CAAVA;AAAAA,SAFA1sD,CAAP;AA7DK,OAqDP;;AAaA,UAAM4sD,QAAAA,GAAWnzC,SAAXmzC,QAAWnzC,CAAAA,KAAAA,EAAS;AACxB,YAAMxV,OAAAA,GAAUwV,KAAAA,CAAAA,MAAAA,CADQ,OACxB;AACA,eAAO,kCAAkCizC,UAAAA,MAAAA,EAAU;AACjD,iBAAO;AAAEG,YAAAA,YAAAA,EAAcH,MAAAA,CAAhB;AAAoCI,YAAAA,WAAAA,EAAaJ,MAAAA,CAAjD;AAAA,WAAP;AAHsB,SAEjB,CAAP;AApEK,OAkEP;;AAOA,UAAI,wBAAwB,KAA5B,cAA+C;AAC7CF,QAAAA,aAAAA,CAAAA,gBAAAA,CAAAA,mBAAAA,EAAoD9B,UAAAA,OAAAA,EAAW;AAC7D,cAAMz4B,OAAAA,GAAU;AACd3qC,YAAAA,KADc,iBACdA,KADc,EACD;AACX,kBAAM2c,OAAAA,GAAUuoD,aAAAA,CADL,OACX;AACA,kBAAMllE,KAAAA,GAAQmyB,KAAAA,CAAAA,MAAAA,CAFH,KAEX;AACA,kBAAM3wB,MAAAA,GAAS,QAAQkX,KAAAA,CAAAA,OAAAA,CAAAA,KAAAA,IAAAA,KAAAA,GAA+B,CAH3C,KAG2C,CAAvC,CAAf;AACAA,cAAAA,KAAAA,CAAAA,SAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAAsC0sD,UAAAA,MAAAA,EAAU;AAC9CA,gBAAAA,MAAAA,CAAAA,QAAAA,GAAkB5jE,MAAAA,CAAAA,GAAAA,CAAW4jE,MAAAA,CADiB,KAC5B5jE,CAAlB4jE;AALS,eAIX1sD;AAGA4qD,cAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AACnBtjE,gBAAAA,KAAAA,EAAOwlD,QAAAA,CAAAA,KAAAA,EARE,IAQFA;AADY,eAArB8d;AARY;AAYdmC,YAAAA,iBAZc,6BAYdA,KAZc,EAYW;AACvBP,cAAAA,aAAAA,CAAAA,QAAAA,GADuB,IACvBA;AAbY;AAedQ,YAAAA,MAfc,kBAedA,KAfc,EAeA;AACZ,kBAAM/oD,OAAAA,GAAUuoD,aAAAA,CADJ,OACZ;AACA,kBAAM3hD,KAAAA,GAAQ4O,KAAAA,CAAAA,MAAAA,CAFF,MAEZ;AACAxV,cAAAA,OAAAA,CAAAA,KAAAA,CAAAA,CAAAA,QAAAA,GAHY,KAGZA;AACAuoD,cAAAA,aAAAA,CAAAA,MAAAA,CAJY,KAIZA;;AACA,kBAAIvoD,OAAAA,CAAAA,MAAAA,GAAJ,GAAwB;AACtB,oBAAM7f,CAAAA,GAAI4b,KAAAA,CAAAA,SAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAER0sD,UAAAA,MAAAA;AAAAA,yBAAUA,MAAAA,CAHU,QAGpBA;AAAAA,iBAFQ1sD,CAAV;;AAIA,oBAAI5b,CAAAA,KAAM,CAAV,GAAc;AACZ6f,kBAAAA,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAAA,GADY,IACZA;AANoB;AALZ;;AAcZ2mD,cAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AACnBtjE,gBAAAA,KAAAA,EAAOwlD,QAAAA,CAAAA,KAAAA,EADY,IACZA,CADY;AAEnB/I,gBAAAA,KAAAA,EAAO6oB,QAAAA,CAFY,KAEZA;AAFY,eAArBhC;AA7BY;AAkCdrvC,YAAAA,KAlCc,iBAkCdA,KAlCc,EAkCD;AACX,qBAAOixC,aAAAA,CAAAA,MAAAA,KAAP,GAAmC;AACjCA,gBAAAA,aAAAA,CAAAA,MAAAA,CADiC,CACjCA;AAFS;;AAIX5B,cAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,gBAAAA,KAAAA,EAAF;AAAey8C,gBAAAA,KAAAA,EAAf;AAAA,eAArB6mB;AAtCY;AAwCdqC,YAAAA,MAxCc,kBAwCdA,KAxCc,EAwCA;AACZ,yCAA6CxzC,KAAAA,CAAAA,MAAAA,CADjC,MACZ;AAAA,kBAAM,KAAN,wBAAM,KAAN;AAAA,kBAAM,YAAN,wBAAM,YAAN;AAAA,kBAAM,WAAN,wBAAM,WAAN;AACA,kBAAMgzC,aAAAA,GAAgBzrE,QAAAA,CAAAA,aAAAA,CAFV,QAEUA,CAAtB;AACAyrE,cAAAA,aAAAA,CAAAA,WAAAA,GAHY,YAGZA;AACAA,cAAAA,aAAAA,CAAAA,KAAAA,GAJY,WAIZA;AACAD,cAAAA,aAAAA,CAAAA,YAAAA,CAAAA,aAAAA,EAEEA,aAAAA,CAAAA,QAAAA,CAPU,KAOVA,CAFFA;AAIA5B,cAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AACnBtjE,gBAAAA,KAAAA,EAAOwlD,QAAAA,CAAAA,KAAAA,EADY,IACZA,CADY;AAEnB/I,gBAAAA,KAAAA,EAAO6oB,QAAAA,CAFY,KAEZA;AAFY,eAArBhC;AAjDY;AAsDd7mB,YAAAA,KAtDc,iBAsDdA,KAtDc,EAsDD;AACX,kBAAM,KAAN,GAAkBtqB,KAAAA,CADP,MACX,CAAM,KAAN;;AACA,qBAAO+yC,aAAAA,CAAAA,MAAAA,KAAP,GAAmC;AACjCA,gBAAAA,aAAAA,CAAAA,MAAAA,CADiC,CACjCA;AAHS;;AAAA,0DAKX,KALW;AAAA;;AAAA;AAKX,uEAA0B;AAAA,sBAA1B,IAA0B;AACxB,sBAAM,YAAN,GADwB,IACxB,CAAM,YAAN;AAAA,sBAAM,WAAN,GADwB,IACxB,CAAM,WAAN;AACA,sBAAMC,aAAAA,GAAgBzrE,QAAAA,CAAAA,aAAAA,CAFE,QAEFA,CAAtB;AACAyrE,kBAAAA,aAAAA,CAAAA,WAAAA,GAHwB,YAGxBA;AACAA,kBAAAA,aAAAA,CAAAA,KAAAA,GAJwB,WAIxBA;AACAD,kBAAAA,aAAAA,CAAAA,WAAAA,CALwB,aAKxBA;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYX,kBAAIA,aAAAA,CAAAA,OAAAA,CAAAA,MAAAA,GAAJ,GAAsC;AACpCA,gBAAAA,aAAAA,CAAAA,OAAAA,CAAAA,CAAAA,EAAAA,QAAAA,GADoC,IACpCA;AAbS;;AAeX5B,cAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AACnBtjE,gBAAAA,KAAAA,EAAOwlD,QAAAA,CAAAA,KAAAA,EADY,IACZA,CADY;AAEnB/I,gBAAAA,KAAAA,EAAO6oB,QAAAA,CAFY,KAEZA;AAFY,eAArBhC;AArEY;AA0EdsC,YAAAA,OA1Ec,mBA0EdA,KA1Ec,EA0EC;AACb,kBAAMA,OAAAA,GAAU,QAAQzzC,KAAAA,CAAAA,MAAAA,CADX,OACG,CAAhB;AACA,kBAAMxV,OAAAA,GAAUwV,KAAAA,CAAAA,MAAAA,CAFH,OAEb;AACAzZ,cAAAA,KAAAA,CAAAA,SAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAAsC,qBAAe;AACnD0sD,gBAAAA,MAAAA,CAAAA,QAAAA,GAAkBQ,OAAAA,CAAAA,GAAAA,CADiC,CACjCA,CAAlBR;AAJW,eAGb1sD;AAGA4qD,cAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AACnBtjE,gBAAAA,KAAAA,EAAOwlD,QAAAA,CAAAA,KAAAA,EAPI,IAOJA;AADY,eAArB8d;AAhFY;AAoFduC,YAAAA,QApFc,oBAoFdA,KApFc,EAoFE;AACd1zC,cAAAA,KAAAA,CAAAA,MAAAA,CAAAA,QAAAA,GAAwB,CAACA,KAAAA,CAAAA,MAAAA,CADX,QACdA;AArFY;AAAA,WAAhB;;AAwFA,oDAzF6D,OAyF7D;AA1F2C,SAC7C+yC;AA4FAA,QAAAA,aAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAwC/yC,UAAAA,KAAAA,EAAS;AAAA;;AAC/C,cAAMqzC,WAAAA,GAAchgB,QAAAA,CAAAA,KAAAA,EAD2B,IAC3BA,CAApB;AACA,cAAMxlD,KAAAA,GAAQwlD,QAAAA,CAAAA,KAAAA,EAFiC,KAEjCA,CAAd;AACA8d,UAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,YAAAA,KAAAA,EAHwB;AAG1B,WAArBsjE;AAEA,iLAA8D;AAC5DtmD,YAAAA,MAAAA,EAD4D;AAE5DykD,YAAAA,MAAAA,EAAQ;AACN/gD,cAAAA,EADM,EACNA,EADM;AAEN9iB,cAAAA,IAAAA,EAFM;AAGNoC,cAAAA,KAHM,EAGNA,KAHM;AAIN8lE,cAAAA,QAAAA,EAJM;AAKN3B,cAAAA,UAAAA,EALM;AAMND,cAAAA,SAAAA,EANM;AAON6B,cAAAA,OAAAA,EAPM;AAAA;AAFoD,WAA9D;AAlG2C,SA6F7Cb;;AAmBA,+CAEE,CACE,kBADF,EAEE,gBAFF,EAGE,2BAHF,EAIE,6BAJF,EAKE,4BALF,EAME,uBANF,EAOE,mBAPF,CAFF,EAWE/yC,UAAAA,KAAAA;AAAAA,iBAASA,KAAAA,CAAAA,MAAAA,CA3HkC,OA2H3CA;AAAAA,SAXF;AAhHF,aA6HO;AACL+yC,QAAAA,aAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAwC,iBAAiB;AACvD5B,UAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,YAAAA,KAAAA,EAAOwlD,QAAAA,CADyB,KACzBA;AAAT,WAArB8d;AAFG,SACL4B;AAvMK;;AA4MP,iCA5MO,aA4MP;AACA,aAAO,KA7MA,SA6MP;AAlNgE;;;;EAApE;;IAsNA;;;;;AACE/rE,kCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EAAE,yBAAyBF,UAAAA,CAAAA,IAAAA,CAD3B,QACA,CAAtB;AADsB,8BAEtB,UAFsB,EAEJ;AAAEE,MAAAA,YAFE,EAEFA;AAAF,KAFI;AAD6B;;;;WAMrDtlB,kBAAS;AAGP,UAAM6rB,YAAAA,GAAe,0DAArB;AASA,iCAZO,iBAYP;;AAEA,UAAIA,YAAAA,CAAAA,QAAAA,CAAsB,UAA1B,UAAIA,CAAJ,EAAiD;AAC/C,eAAO,KADwC,SAC/C;AAfK;;AAkBP,UAAMC,QAAAA,mCAAmC,UAlBlC,QAkBDA,QAAN;AACA,UAAMC,cAAAA,GAAiB,4BAnBhB,QAmBgB,CAAvB;;AACA,UAAIA,cAAAA,CAAAA,MAAAA,KAAJ,GAAiC;AAC/B,eAAO,KADwB,SAC/B;AArBK;;AAwBP,UAAMvF,KAAAA,GAAQ,iBAAiB;AAC7B3jC,QAAAA,SAAAA,EAAW,KADkB;AAE7BqjC,QAAAA,OAAAA,EAAS3nD,KAAAA,CAAAA,IAAAA,CAFoB,cAEpBA,CAFoB;AAG7Bw6C,QAAAA,KAAAA,EAAO,UAHsB;AAI7BqN,QAAAA,KAAAA,EAAO,UAJsB;AAK7BC,QAAAA,gBAAAA,EAAkB,UALW;AAM7BC,QAAAA,QAAAA,EAAU,UANmB;AAAA,OAAjB,CAAd;AAWA,UAAM7gB,IAAAA,GAAO,KAnCN,IAmCP;;AACA,UAAM/jD,IAAAA,GAAO,yBAAmB,CAC9B,qBAD8B,CAC9B,CAD8B,EAE9B+jD,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAe,qBAAfA,CAAe,CAAfA,GAAyCA,IAAAA,CAAAA,IAAAA,CAFX,CAEWA,CAFX,EAG9B,qBAH8B,CAG9B,CAH8B,EAI9BA,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAe,qBAAfA,CAAe,CAAfA,GAAyCA,IAAAA,CAAAA,IAAAA,CAJX,CAIWA,CAJX,CAAnB,CAAb;;AAMA,UAAMumB,SAAAA,GACJtqE,IAAAA,CAAAA,CAAAA,CAAAA,GAAU,qBAAVA,CAAU,CAAVA,GAAoC,qBA3C/B,CA2C+B,CADtC;AAEA,UAAMuqE,QAAAA,GAAWvqE,IAAAA,CA5CV,CA4CUA,CAAjB;AAEA,uDAA0C,CAAH,SAAvC,gBAA0D,CA9CnD,QA8CP;AACA,4CA/CO,SA+CP;AACA,2CAhDO,QAgDP;AAEA,iCAA2B8kE,KAAAA,CAlDpB,MAkDoBA,EAA3B;AACA,aAAO,KAnDA,SAmDP;AAzDmD;;;;EAAvD;;IA6DA;AACExnE,wBAAAA,UAAAA,EAAwB;AAAA;;AACtB,qBAAiBomE,UAAAA,CADK,SACtB;AACA,mBAAeA,UAAAA,CAFO,OAEtB;AACA,iBAAaA,UAAAA,CAHS,KAGtB;AACA,iBAAaA,UAAAA,CAJS,KAItB;AACA,4BAAwBA,UAAAA,CALF,gBAKtB;AACA,oBAAgBA,UAAAA,CANM,QAMtB;AACA,uBAAmBA,UAAAA,CAAAA,WAAAA,IAPG,KAOtB;AAEA,kBATsB,KAStB;AAVe;;;;WAajBplB,kBAAS;AACP,UAAMksB,kBAAAA,GADC,GACP;AAEA,UAAM5zC,OAAAA,GAAU/4B,QAAAA,CAAAA,aAAAA,CAHT,KAGSA,CAAhB;AACA+4B,MAAAA,OAAAA,CAAAA,SAAAA,GAJO,cAIPA;AAMA,yBAAmB,6BAA6B,KAVzC,SAUP;AACA,gCAXO,IAWP;AAEA,UAAMkuC,KAAAA,GAAQjnE,QAAAA,CAAAA,aAAAA,CAbP,KAaOA,CAAd;AACAinE,MAAAA,KAAAA,CAAAA,SAAAA,GAdO,OAcPA;AAEA,UAAMzN,KAAAA,GAAQ,KAhBP,KAgBP;;AACA,iBAAW;AAET,YAAM55C,CAAAA,GAAI+sD,kBAAAA,IAAsB,MAAMnT,KAAAA,CAA5BmT,CAA4BnT,CAA5BmT,CAAAA,GAAwCnT,KAAAA,CAFzC,CAEyCA,CAAlD;AACA,YAAMoT,CAAAA,GAAID,kBAAAA,IAAsB,MAAMnT,KAAAA,CAA5BmT,CAA4BnT,CAA5BmT,CAAAA,GAAwCnT,KAAAA,CAHzC,CAGyCA,CAAlD;AACA,YAAMt5C,CAAAA,GAAIysD,kBAAAA,IAAsB,MAAMnT,KAAAA,CAA5BmT,CAA4BnT,CAA5BmT,CAAAA,GAAwCnT,KAAAA,CAJzC,CAIyCA,CAAlD;AACAyN,QAAAA,KAAAA,CAAAA,KAAAA,CAAAA,eAAAA,GAA8BvnD,WAAAA,YAAAA,CAAkBE,CAAAA,GAAlBF,CAAAA,EAAyBktD,CAAAA,GAAzBltD,CAAAA,EAAgCQ,CAAAA,GALrD,CAKqBR,CAA9BunD;AAtBK;;AAyBP,UAAMJ,KAAAA,GAAQ7mE,QAAAA,CAAAA,aAAAA,CAzBP,IAyBOA,CAAd;AACA6mE,MAAAA,KAAAA,CAAAA,WAAAA,GAAoB,KA1Bb,KA0BPA;AACAI,MAAAA,KAAAA,CAAAA,WAAAA,CA3BO,KA2BPA;;AAKA,UAAM4F,UAAAA,GAAaC,6BAAAA,YAAAA,CAA2B,KAhCvC,gBAgCYA,CAAnB;;AACA,sBAAgB;AACd,YAAMhG,gBAAAA,GAAmB9mE,QAAAA,CAAAA,aAAAA,CADX,MACWA,CAAzB;AACA8mE,QAAAA,gBAAAA,CAAAA,WAAAA,GAFc,oBAEdA;AACAA,QAAAA,gBAAAA,CAAAA,OAAAA,CAAAA,MAAAA,GAHc,wBAGdA;AACAA,QAAAA,gBAAAA,CAAAA,OAAAA,CAAAA,QAAAA,GAAoC,eAAe;AACjDzlD,UAAAA,IAAAA,EAAMwrD,UAAAA,CAD2C,kBAC3CA,EAD2C;AAEjD5oE,UAAAA,IAAAA,EAAM4oE,UAAAA,CAF2C,kBAE3CA;AAF2C,SAAf,CAApC/F;AAIAG,QAAAA,KAAAA,CAAAA,WAAAA,CARc,gBAQdA;AAzCK;;AA4CP,UAAMF,QAAAA,GAAW,qBAAqB,KA5C/B,QA4CU,CAAjB;;AACAE,MAAAA,KAAAA,CAAAA,WAAAA,CA7CO,QA6CPA;;AAEA,UAAI,CAACjoD,KAAAA,CAAAA,OAAAA,CAAc,KAAnB,OAAKA,CAAL,EAAkC;AAChC,uBAAe,CAAC,KADgB,OACjB,CAAf;AAhDK;;AAAA,mDAoDe,KAAtB,OApDO;AAAA;;AAAA;AAoDP,kEAAoC;AAAA,cAApC,OAAoC;AAClCkgB,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAkC,kBADA,IACA,CAAlCA;AACAA,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,WAAAA,EAAsC,sBAFJ,KAEI,CAAtCA;AACAA,UAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,UAAAA,EAAqC,sBAHH,KAGG,CAArCA;AAvDK;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyDP+nC,MAAAA,KAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAgC,sBAzDzB,IAyDyB,CAAhCA;AAEAluC,MAAAA,OAAAA,CAAAA,WAAAA,CA3DO,KA2DPA;AACA,aA5DO,OA4DP;AAzEe;;;WAoFjBg0C,yBAAAA,QAAAA,EAA0B;AACxB,UAAM1tD,CAAAA,GAAIrf,QAAAA,CAAAA,aAAAA,CADc,GACdA,CAAV;AACA,UAAMgtE,KAAAA,GAAQjG,QAAAA,CAAAA,KAAAA,CAFU,cAEVA,CAAd;;AACA,WAAK,IAAI3jE,CAAAA,GAAJ,GAAWD,EAAAA,GAAK6pE,KAAAA,CAArB,QAAmC5pE,CAAAA,GAAnC,IAA2C,EAA3C,GAAgD;AAC9C,YAAM6pE,IAAAA,GAAOD,KAAAA,CADiC,CACjCA,CAAb;AACA3tD,QAAAA,CAAAA,CAAAA,WAAAA,CAAcrf,QAAAA,CAAAA,cAAAA,CAFgC,IAEhCA,CAAdqf;;AACA,YAAIjc,CAAAA,GAAID,EAAAA,GAAR,GAAgB;AACdkc,UAAAA,CAAAA,CAAAA,WAAAA,CAAcrf,QAAAA,CAAAA,aAAAA,CADA,IACAA,CAAdqf;AAJ4C;AAHxB;;AAUxB,aAVwB,CAUxB;AA9Fe;;;WAuGjB6tD,mBAAU;AACR,UAAI,KAAJ,QAAiB;AACf,mBADe,IACf;AADF,aAEO;AACL,mBADK,IACL;AAJM;AAvGO;;;WAsHjBC,iBAAmB;AAAA,UAAbC,GAAa,uEAAnBD,KAAmB;;AACjB,eAAS;AACP,sBADO,IACP;AAFe;;AAIjB,UAAI,iBAAJ,QAA6B;AAC3B,kCAD2B,KAC3B;AACA,uCAF2B,CAE3B;AANe;AAtHF;;;WAuIjBE,iBAAoB;AAAA,UAAdC,KAAc,uEAApBD,IAAoB;;AAClB,iBAAW;AACT,sBADS,KACT;AAFgB;;AAIlB,UAAI,CAAC,iBAAD,UAA4B,CAAC,KAAjC,QAA8C;AAC5C,kCAD4C,IAC5C;AACA,uCAF4C,CAE5C;AANgB;AAvIH;;;;;;IAkJnB;;;;;AACE5tE,qCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,+BAMtB,UANsB,EAMJ;AAAEE,MAAAA,YAAF,EAAEA,YAAF;AAAgBC,MAAAA,YAAAA,EAAhB;AAAA,KANI;AADgC;;;;WAUxDvlB,kBAAS;AACP,iCADO,oBACP;;AAEA,UAAI,CAAC,UAAL,UAAyB;AACvB,gCAAwB,KADD,IACvB;AAJK;;AAMP,aAAO,KANA,SAMP;AAhBsD;;;;EAA1D;;IAoBA;;;;;AACEhhD,iCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,+BAMtB,UANsB,EAMJ;AAAEE,MAAAA,YAAF,EAAEA,YAAF;AAAgBC,MAAAA,YAAAA,EAAhB;AAAA,KANI;AAD4B;;;;WAUpDvlB,kBAAS;AACP,iCADO,gBACP;AAKA,UAAMngD,IAAAA,GAAO,KANN,IAMP;AACA,UAAMsB,KAAAA,GAAQtB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CAPtB,CAOsBA,CAA7B;AACA,UAAMuB,MAAAA,GAASvB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CARvB,CAQuBA,CAA9B;AACA,UAAMw6C,GAAAA,GAAM,8BATL,MASK,CAAZ;AAIA,UAAMmyB,IAAAA,GAAO,8BAbN,UAaM,CAAb;AACAA,MAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAwB3sE,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,eAAAA,CAdhC,CAcgCA,CAAvC2sE;AACAA,MAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAwB3sE,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,eAAAA,CAfhC,CAegCA,CAAvC2sE;AACAA,MAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAwB3sE,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,eAAAA,CAhBhC,CAgBgCA,CAAvC2sE;AACAA,MAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAwB3sE,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,eAAAA,CAjBhC,CAiBgCA,CAAvC2sE;AAGAA,MAAAA,IAAAA,CAAAA,YAAAA,CAAAA,cAAAA,EAAkC3sE,IAAAA,CAAAA,WAAAA,CAAAA,KAAAA,IApB3B,CAoBP2sE;AACAA,MAAAA,IAAAA,CAAAA,YAAAA,CAAAA,QAAAA,EArBO,aAqBPA;AAEAnyB,MAAAA,GAAAA,CAAAA,WAAAA,CAvBO,IAuBPA;AACA,4BAxBO,GAwBP;;AAIA,8BA5BO,IA4BP;;AAEA,aAAO,KA9BA,SA8BP;AAxCkD;;;;EAAtD;;IA4CA;;;;;AACEr7C,mCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,+BAMtB,UANsB,EAMJ;AAAEE,MAAAA,YAAF,EAAEA,YAAF;AAAgBC,MAAAA,YAAAA,EAAhB;AAAA,KANI;AAD8B;;;;WAUtDvlB,kBAAS;AACP,iCADO,kBACP;AAKA,UAAMngD,IAAAA,GAAO,KANN,IAMP;AACA,UAAMsB,KAAAA,GAAQtB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CAPtB,CAOsBA,CAA7B;AACA,UAAMuB,MAAAA,GAASvB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CARvB,CAQuBA,CAA9B;AACA,UAAMw6C,GAAAA,GAAM,8BATL,MASK,CAAZ;AAKA,UAAMyyB,WAAAA,GAAcjtE,IAAAA,CAAAA,WAAAA,CAdb,KAcP;AACA,UAAMktE,MAAAA,GAAS,8BAfR,UAeQ,CAAf;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,GAAAA,EAAyBD,WAAAA,GAhBlB,CAgBPC;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,GAAAA,EAAyBD,WAAAA,GAjBlB,CAiBPC;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,OAAAA,EAA6B5rE,KAAAA,GAlBtB,WAkBP4rE;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,QAAAA,EAA8B3rE,MAAAA,GAnBvB,WAmBP2rE;AAGAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,cAAAA,EAAoCD,WAAAA,IAtB7B,CAsBPC;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,QAAAA,EAvBO,aAuBPA;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAxBO,MAwBPA;AAEA1yB,MAAAA,GAAAA,CAAAA,WAAAA,CA1BO,MA0BPA;AACA,4BA3BO,GA2BP;;AAIA,gCA/BO,IA+BP;;AAEA,aAAO,KAjCA,SAiCP;AA3CoD;;;;EAAxD;;IA+CA;;;;;AACEr7C,mCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,+BAMtB,UANsB,EAMJ;AAAEE,MAAAA,YAAF,EAAEA,YAAF;AAAgBC,MAAAA,YAAAA,EAAhB;AAAA,KANI;AAD8B;;;;WAUtDvlB,kBAAS;AACP,iCADO,kBACP;AAKA,UAAMngD,IAAAA,GAAO,KANN,IAMP;AACA,UAAMsB,KAAAA,GAAQtB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CAPtB,CAOsBA,CAA7B;AACA,UAAMuB,MAAAA,GAASvB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CARvB,CAQuBA,CAA9B;AACA,UAAMw6C,GAAAA,GAAM,8BATL,MASK,CAAZ;AAKA,UAAMyyB,WAAAA,GAAcjtE,IAAAA,CAAAA,WAAAA,CAdb,KAcP;AACA,UAAMmtE,MAAAA,GAAS,8BAfR,aAeQ,CAAf;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAA0B7rE,KAAAA,GAhBnB,CAgBP6rE;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAA0B5rE,MAAAA,GAjBnB,CAiBP4rE;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAA0B7rE,KAAAA,GAAAA,CAAAA,GAAY2rE,WAAAA,GAlB/B,CAkBPE;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAA0B5rE,MAAAA,GAAAA,CAAAA,GAAa0rE,WAAAA,GAnBhC,CAmBPE;AAGAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,cAAAA,EAAoCF,WAAAA,IAtB7B,CAsBPE;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,QAAAA,EAvBO,aAuBPA;AACAA,MAAAA,MAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAxBO,MAwBPA;AAEA3yB,MAAAA,GAAAA,CAAAA,WAAAA,CA1BO,MA0BPA;AACA,4BA3BO,GA2BP;;AAIA,gCA/BO,IA+BP;;AAEA,aAAO,KAjCA,SAiCP;AA3CoD;;;;EAAxD;;IA+CA;;;;;AACEr7C,qCAAAA,UAAAA,EAAwB;AAAA;;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AAKA,8CAAkB;AAAEE,MAAAA,YAAF,EAAEA,YAAF;AAAgBC,MAAAA,YAAAA,EAAhB;AAAA,KAAlB;AAEA,iCARsB,oBAQtB;AACA,6BATsB,cAStB;AATsB;AADgC;;;;WAaxDvlB,kBAAS;AACP,iCAA2B,KADpB,kBACP;AAKA,UAAMngD,IAAAA,GAAO,KANN,IAMP;AACA,UAAMsB,KAAAA,GAAQtB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CAPtB,CAOsBA,CAA7B;AACA,UAAMuB,MAAAA,GAASvB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CARvB,CAQuBA,CAA9B;AACA,UAAMw6C,GAAAA,GAAM,8BATL,MASK,CAAZ;AAMA,UAAI+S,MAAAA,GAfG,EAeP;;AAfO,mDAgBkBvtD,IAAAA,CAAzB,QAhBO;AAAA;;AAAA;AAgBP,kEAAwC;AAAA,cAAxC,UAAwC;AACtC,cAAMmsB,CAAAA,GAAIihD,UAAAA,CAAAA,CAAAA,GAAeptE,IAAAA,CAAAA,IAAAA,CADa,CACbA,CAAzB;AACA,cAAMosB,CAAAA,GAAIpsB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeotE,UAAAA,CAFa,CAEtC;AACA7f,UAAAA,MAAAA,CAAAA,IAAAA,CAAYphC,CAAAA,GAAAA,GAAAA,GAH0B,CAGtCohC;AAnBK;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBPA,MAAAA,MAAAA,GAASA,MAAAA,CAAAA,IAAAA,CArBF,GAqBEA,CAATA;AAEA,UAAM8f,QAAAA,GAAW,8BAA8B,KAvBxC,cAuBU,CAAjB;AACAA,MAAAA,QAAAA,CAAAA,YAAAA,CAAAA,QAAAA,EAxBO,MAwBPA;AAGAA,MAAAA,QAAAA,CAAAA,YAAAA,CAAAA,cAAAA,EAAsCrtE,IAAAA,CAAAA,WAAAA,CAAAA,KAAAA,IA3B/B,CA2BPqtE;AACAA,MAAAA,QAAAA,CAAAA,YAAAA,CAAAA,QAAAA,EA5BO,aA4BPA;AACAA,MAAAA,QAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EA7BO,MA6BPA;AAEA7yB,MAAAA,GAAAA,CAAAA,WAAAA,CA/BO,QA+BPA;AACA,4BAhCO,GAgCP;;AAIA,kCApCO,IAoCP;;AAEA,aAAO,KAtCA,SAsCP;AAnDsD;;;;EAA1D;;IAuDA;;;;;AACEr7C,oCAAAA,UAAAA,EAAwB;AAAA;;AAAA;;AAEtB,kCAFsB,UAEtB;AAEA,iCAJsB,mBAItB;AACA,6BALsB,aAKtB;AALsB;AADuC;;;EAAjE;;IAUA;;;;;AACEA,kCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,+BAMtB,UANsB,EAMJ;AAAEE,MAAAA,YAAF,EAAEA,YAAF;AAAgBC,MAAAA,YAAAA,EAAhB;AAAA,KANI;AAD6B;;;;WAUrDvlB,kBAAS;AACP,iCADO,iBACP;;AAEA,UAAI,CAAC,UAAL,UAAyB;AACvB,gCAAwB,KADD,IACvB;AAJK;;AAMP,aAAO,KANA,SAMP;AAhBmD;;;;EAAvD;;IAoBA;;;;;AACEhhD,gCAAAA,UAAAA,EAAwB;AAAA;;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AAKA,8CAAkB;AAAEE,MAAAA,YAAF,EAAEA,YAAF;AAAgBC,MAAAA,YAAAA,EAAhB;AAAA,KAAlB;AAEA,iCARsB,eAQtB;AAIA,6BAZsB,cAYtB;AAZsB;AAD2B;;;;WAgBnDvlB,kBAAS;AACP,iCAA2B,KADpB,kBACP;AAIA,UAAMngD,IAAAA,GAAO,KALN,IAKP;AACA,UAAMsB,KAAAA,GAAQtB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CANtB,CAMsBA,CAA7B;AACA,UAAMuB,MAAAA,GAASvB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeA,IAAAA,CAAAA,IAAAA,CAPvB,CAOuBA,CAA9B;AACA,UAAMw6C,GAAAA,GAAM,8BARL,MAQK,CAAZ;;AARO,mDAUex6C,IAAAA,CAAtB,QAVO;AAAA;;AAAA;AAUP,kEAAqC;AAAA,cAArC,OAAqC;AAKnC,cAAIutD,MAAAA,GAL+B,EAKnC;;AALmC,uDAMnC,OANmC;AAAA;;AAAA;AAMnC,sEAAkC;AAAA,kBAAlC,UAAkC;AAChC,kBAAMphC,CAAAA,GAAIihD,UAAAA,CAAAA,CAAAA,GAAeptE,IAAAA,CAAAA,IAAAA,CADO,CACPA,CAAzB;AACA,kBAAMosB,CAAAA,GAAIpsB,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAeotE,UAAAA,CAFO,CAEhC;AACA7f,cAAAA,MAAAA,CAAAA,IAAAA,WAAY,CAAZA,cAHgC,CAGhCA;AATiC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWnCA,UAAAA,MAAAA,GAASA,MAAAA,CAAAA,IAAAA,CAX0B,GAW1BA,CAATA;AAEA,cAAM8f,QAAAA,GAAW,8BAA8B,KAbZ,cAalB,CAAjB;AACAA,UAAAA,QAAAA,CAAAA,YAAAA,CAAAA,QAAAA,EAdmC,MAcnCA;AAGAA,UAAAA,QAAAA,CAAAA,YAAAA,CAAAA,cAAAA,EAAsCrtE,IAAAA,CAAAA,WAAAA,CAAAA,KAAAA,IAjBH,CAiBnCqtE;AACAA,UAAAA,QAAAA,CAAAA,YAAAA,CAAAA,QAAAA,EAlBmC,aAkBnCA;AACAA,UAAAA,QAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAnBmC,MAmBnCA;;AAIA,sCAvBmC,IAuBnC;;AAEA7yB,UAAAA,GAAAA,CAAAA,WAAAA,CAzBmC,QAyBnCA;AAnCK;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsCP,4BAtCO,GAsCP;AACA,aAAO,KAvCA,SAuCP;AAvDiD;;;;EAArD;;IA2DA;;;;;AACEr7C,sCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,+BAMtB,UANsB,EAMJ;AAChBE,MAAAA,YADgB,EAChBA,YADgB;AAEhBC,MAAAA,YAAAA,EAFgB;AAGhBC,MAAAA,oBAAAA,EAHgB;AAAA,KANI;AADiC;;;;WAczDxlB,kBAAS;AACP,UAAI,CAAC,UAAL,UAAyB;AACvB,gCAAwB,KADD,IACvB;AAFK;;AAKP,UAAI,KAAJ,gBAAyB;AACvB,eAAO,2BADgB,qBAChB,CAAP;AANK;;AASP,iCATO,qBASP;AACA,aAAO,KAVA,SAUP;AAxBuD;;;;EAA3D;;IA4BA;;;;;AACEhhD,sCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,+BAMtB,UANsB,EAMJ;AAChBE,MAAAA,YADgB,EAChBA,YADgB;AAEhBC,MAAAA,YAAAA,EAFgB;AAGhBC,MAAAA,oBAAAA,EAHgB;AAAA,KANI;AADiC;;;;WAczDxlB,kBAAS;AACP,UAAI,CAAC,UAAL,UAAyB;AACvB,gCAAwB,KADD,IACvB;AAFK;;AAKP,UAAI,KAAJ,gBAAyB;AACvB,eAAO,2BADgB,qBAChB,CAAP;AANK;;AASP,iCATO,qBASP;AACA,aAAO,KAVA,SAUP;AAxBuD;;;;EAA3D;;IA4BA;;;;;AACEhhD,qCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,+BAMtB,UANsB,EAMJ;AAChBE,MAAAA,YADgB,EAChBA,YADgB;AAEhBC,MAAAA,YAAAA,EAFgB;AAGhBC,MAAAA,oBAAAA,EAHgB;AAAA,KANI;AADgC;;;;WAcxDxlB,kBAAS;AACP,UAAI,CAAC,UAAL,UAAyB;AACvB,gCAAwB,KADD,IACvB;AAFK;;AAKP,UAAI,KAAJ,gBAAyB;AACvB,eAAO,2BADgB,oBAChB,CAAP;AANK;;AASP,iCATO,oBASP;AACA,aAAO,KAVA,SAUP;AAxBsD;;;;EAA1D;;IA4BA;;;;;AACEhhD,sCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,+BAMtB,UANsB,EAMJ;AAChBE,MAAAA,YADgB,EAChBA,YADgB;AAEhBC,MAAAA,YAAAA,EAFgB;AAGhBC,MAAAA,oBAAAA,EAHgB;AAAA,KANI;AADiC;;;;WAczDxlB,kBAAS;AACP,UAAI,CAAC,UAAL,UAAyB;AACvB,gCAAwB,KADD,IACvB;AAFK;;AAKP,UAAI,KAAJ,gBAAyB;AACvB,eAAO,2BADgB,qBAChB,CAAP;AANK;;AASP,iCATO,qBASP;AACA,aAAO,KAVA,SAUP;AAxBuD;;;;EAA3D;;IA4BA;;;;;AACEhhD,kCAAAA,UAAAA,EAAwB;AAAA;;AACtB,QAAMsmE,YAAAA,GAAe,CAAC,EACpB,4BACAF,UAAAA,CAAAA,IAAAA,CADA,SAEAA,UAAAA,CAAAA,IAAAA,CAJoB,QACA,CAAtB;AADsB,+BAMtB,UANsB,EAMJ;AAAEE,MAAAA,YAAF,EAAEA,YAAF;AAAgBC,MAAAA,YAAAA,EAAhB;AAAA,KANI;AAD6B;;;;WAUrDvlB,kBAAS;AACP,iCADO,iBACP;;AAEA,UAAI,CAAC,UAAL,UAAyB;AACvB,gCAAwB,KADD,IACvB;AAJK;;AAMP,aAAO,KANA,SAMP;AAhBmD;;;;EAAvD;;IAoBA;;;;;AACEhhD,2CAAAA,UAAAA,EAAwB;AAAA;;AAAA;;AAAA;;AACtB,8CAAkB;AAAEsmE,MAAAA,YAAAA,EADE;AACJ,KAAlB;AAEA,4BAA8B,aAHR,IAGtB;AAAA,QAAM,QAAN,qBAAM,QAAN;AAAA,QAAM,OAAN,qBAAM,OAAN;AACA,uBAAgB6H,uCAJM,QAINA,CAAhB;AACA,sBALsB,OAKtB;AAEA,8KAAgE;AAC9DtqD,MAAAA,MAD8D;AAE9D0D,MAAAA,EAAAA,EAAI6mD,6BAF0D,QAE1DA,CAF0D;AAG9D5lB,MAAAA,QAH8D,EAG9DA,QAH8D;AAI9D6lB,MAAAA,OAJ8D,EAI9DA;AAJ8D,KAAhE;AAPsB;AADsC;;;;WAgB9DrtB,kBAAS;AACP,iCADO,0BACP;AAEA,UAAMkmB,OAAAA,GAAU3mE,QAAAA,CAAAA,aAAAA,CAHT,KAGSA,CAAhB;AACA2mE,MAAAA,OAAAA,CAAAA,KAAAA,CAAAA,MAAAA,GAAuB,qBAJhB,MAIPA;AACAA,MAAAA,OAAAA,CAAAA,KAAAA,CAAAA,KAAAA,GAAsB,qBALf,KAKPA;AACAA,MAAAA,OAAAA,CAAAA,gBAAAA,CAAAA,UAAAA,EAAqC,oBAN9B,IAM8B,CAArCA;;AAEA,UAAI,CAAC,UAAD,aAAwB,mBAAmB,UAA/C,QAAI,CAAJ,EAAoE;AAClE,mCAA2B,KADuC,IAClE;AATK;;AAYP,iCAZO,OAYP;AACA,aAAO,KAbA,SAaP;AA7B4D;;;WAsC9DoH,qBAAY;AAAA;;AACV,sJACE,KADF,WAEE,KAFF,SAGE,KAJQ,QACV;AAvC4D;;;;EAAhE;;IA+DA;;;;;;;WAQE,4BAA0B;AACxB,UAAMC,iBAAAA,GAAN;AAAA,UACEC,gBAAAA,GAFsB,EACxB;;AADwB,mDAMLpI,UAAAA,CAAnB,WANwB;AAAA;;AAAA;AAMxB,kEAA2C;AAAA,cAA3C,KAA2C;;AACzC,cAAI,CAAJ,OAAW;AAAA;AAD8B;;AAIzC,cAAIvlE,KAAAA,CAAAA,cAAAA,KAAwBuN,qBAA5B,OAAkD;AAChDogE,YAAAA,gBAAAA,CAAAA,IAAAA,CADgD,KAChDA;AADgD;AAJT;;AAQzCD,UAAAA,iBAAAA,CAAAA,IAAAA,CARyC,KAQzCA;AAdsB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBxB,UAAIC,gBAAAA,CAAJ,QAA6B;AAC3BD,QAAAA,iBAAAA,CAAAA,IAAAA,OAAAA,iBAAAA,EAD2B,gBAC3BA,CAAAA;AAjBsB;;AAoBxB,wGAAsC;AAAtC,YAAW1tE,IAAX;AACE,YAAM4+B,OAAAA,GAAU,gCAAgC;AAC9C5+B,UAAAA,IAD8C,EAC9CA,IAD8C;AAE9C4tE,UAAAA,KAAAA,EAAOrI,UAAAA,CAFuC;AAG9C3f,UAAAA,IAAAA,EAAM2f,UAAAA,CAHwC;AAI9CrkB,UAAAA,QAAAA,EAAUqkB,UAAAA,CAJoC;AAK9C2B,UAAAA,WAAAA,EAAa3B,UAAAA,CALiC;AAM9CsI,UAAAA,eAAAA,EAAiBtI,UAAAA,CAN6B;AAO9CuI,UAAAA,kBAAAA,EAAoBvI,UAAAA,CAAAA,kBAAAA,IAP0B;AAQ9CwI,UAAAA,WAAAA,EAAaxI,UAAAA,CAAAA,WAAAA,KARiC;AAS9CyI,UAAAA,UAAAA,EAAY,IATkC,4BASlC,EATkC;AAU9CzqB,UAAAA,iBAAAA,EACEgiB,UAAAA,CAAAA,iBAAAA,IAAgC,IAXY,qCAWZ,EAXY;AAY9C0I,UAAAA,eAAAA,EAAiB1I,UAAAA,CAZ6B;AAa9C3lB,UAAAA,YAAAA,EAAc2lB,UAAAA,CAbgC;AAc9C2I,UAAAA,UAAAA,EAAY3I,UAAAA,CAAAA,UAAAA,IAAyB;AAAE4I,YAAAA,MAAAA,EAdO;AAcT;AAdS,SAAhC,CAAhB;;AAgBA,YAAIvvC,OAAAA,CAAJ,cAA0B;AACxB,cAAMwvC,QAAAA,GAAWxvC,OAAAA,CADO,MACPA,EAAjB;;AACA,cAAI5+B,IAAAA,CAAJ,QAAiB;AACfouE,YAAAA,QAAAA,CAAAA,KAAAA,CAAAA,UAAAA,GADe,QACfA;AAHsB;;AAKxB,cAAI1vD,KAAAA,CAAAA,OAAAA,CAAJ,QAAIA,CAAJ,EAA6B;AAAA,yDAC3B,QAD2B;AAAA;;AAAA;AAC3B,wEAAwC;AAAA,oBAAxC,eAAwC;AACtC6mD,gBAAAA,UAAAA,CAAAA,GAAAA,CAAAA,WAAAA,CADsC,eACtCA;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7B,iBAIO;AACL,gBAAI3mC,OAAAA,YAAJ,wBAA+C;AAG7C2mC,cAAAA,UAAAA,CAAAA,GAAAA,CAAAA,OAAAA,CAH6C,QAG7CA;AAHF,mBAIO;AACLA,cAAAA,UAAAA,CAAAA,GAAAA,CAAAA,WAAAA,CADK,QACLA;AANG;AATiB;AAjBU;AApBd;AARN;;;WA0EpB,4BAA0B;AACxB,UAAMtvD,SAAAA,oBAAsBsvD,UAAAA,CAAAA,QAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CADJ,GACIA,CAAtBtvD,MAAN;;AADwB,mDAELsvD,UAAAA,CAAnB,WAFwB;AAAA;;AAAA;AAExB,kEAA2C;AAAA,cAA3C,IAA2C;AACzC,cAAM5mC,QAAAA,GAAW4mC,UAAAA,CAAAA,GAAAA,CAAAA,gBAAAA,iCACSvlE,IAAAA,CAFe,EACxBulE,SAAjB;;AAGA,wBAAc;AAAA,yDACZ,QADY;AAAA;;AAAA;AACZ,wEAAgC;AAAA,oBAAhC,OAAgC;AAC9B3mC,gBAAAA,OAAAA,CAAAA,KAAAA,CAAAA,SAAAA,GAD8B,SAC9BA;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAJ2B;AAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYxB2mC,MAAAA,UAAAA,CAAAA,GAAAA,CAAAA,MAAAA,GAZwB,KAYxBA;AAtFkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACn+DtB,0BAA0B;AACxB,SAAOnkE,IAAAA,CAAAA,KAAAA,CAAWA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAYA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAZA,CAAYA,CAAZA,IAAXA,GAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EAAAA,QAAAA,CAAAA,CAAAA,EADiB,GACjBA,CAAP;AAvBF;;IA6BA;;;;;;;WACE,sBAA4B;AAAA;AAAA,UAAd,CAAc;AAAA,UAAd,CAAc;AAAA,UAAd,CAAc;AAAA,UAA5B,CAA4B;;AAC1B,aAAO,MAAM,IAAIA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAY,UAAU,OAAV,IAAqB,OAArB,IAAtB,CAAUA,CAAV,CAAP;AAFkB;;;WAKpB,uBAAmB;AAAA;AAAA,UAAnB,CAAmB;;AACjB,aAAO,kBAAkB,IAAlB,EAAP;AANkB;;;WASpB,sBAAkB;AAAA;AAAA,UAAlB,CAAkB;;AAChB,aAAO,gBAAP;AAVkB;;;WAapB,uBAAmB;AAAA;AAAA,UAAnB,CAAmB;;AACjB,UAAMitE,CAAAA,GAAIC,aAAAA,CADO,CACPA,CAAV;AACA,wBAAO,CAAP,SAAO,CAAP,SAFiB,CAEjB;AAfkB;;;WAkBpB,sBAAwB;AAAA;AAAA,UAAX,CAAW;AAAA,UAAX,CAAW;AAAA,UAAxB,CAAwB;;AACtB,aAAO,MAAM,UAAU,OAAV,IAAqB,OAA3B,EAAP;AAnBkB;;;WAsBpB,0BAA2B;AAAA;AAAA,UAAX,CAAW;AAAA,UAAX,CAAW;AAAA,UAA3B,CAA2B;;AACzB,UAAMC,CAAAA,GAAID,aAAAA,CADe,CACfA,CAAV;AACA,UAAMD,CAAAA,GAAIC,aAAAA,CAFe,CAEfA,CAAV;AACA,UAAME,CAAAA,GAAIF,aAAAA,CAHe,CAGfA,CAAV;AACA,wBAAO,CAAP,SAAO,CAAP,SAJyB,CAIzB;AA1BkB;;;WA6BpB,kBAAgB;AACd,aADc,WACd;AA9BkB;;;WAiCpB,0BAA8B;AAAA;AAAA,UAAd,CAAc;AAAA,UAAd,CAAc;AAAA,UAAd,CAAc;AAAA,UAA9B,CAA8B;;AAC5B,aAAO,QAEL,IAAIltE,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAYye,CAAAA,GAFX,CAEDze,CAFC,EAGL,IAAIA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAY4d,CAAAA,GAHX,CAGD5d,CAHC,EAIL,IAAIA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAYgrB,CAAAA,GAJX,CAIDhrB,CAJC,CAAP;AAlCkB;;;WA0CpB,+BAA6B;AAC3B,aAAO,cAAc,cADM,UACN,CAAd,CAAP;AA3CkB;;;WA8CpB,0BAA2B;AAAA;AAAA,UAAX,CAAW;AAAA,UAAX,CAAW;AAAA,UAA3B,CAA2B;;AACzB,UAAMye,CAAAA,GAAI,IADe,CACzB;AACA,UAAMb,CAAAA,GAAI,IAFe,CAEzB;AACA,UAAMoN,CAAAA,GAAI,IAHe,CAGzB;AACA,UAAMkiC,CAAAA,GAAIltD,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAJe,CAIfA,CAAV;AACA,aAAO,oBAAP;AAnDkB;;;;;;;;;;;;;;;;;;;ACdtB;;;;;;;;;;;;;;AA6BA,IAAMqtE,uBAAAA,GA5CN,MA4CA;AACA,IAAMC,iBAAAA,GA7CN,EA6CA;AACA,IAAMC,mBAAAA,GA9CN,GA8CA;AACA,IAAMC,WAAAA,GAAc,IA/CpB,GA+CoB,EAApB;AACA,IAAMC,mBAAAA,GAhDN,QAgDA;;AAEA,oCAAoC;AAClC,MAAMC,YAAAA,GAAeF,WAAAA,CAAAA,GAAAA,CADa,UACbA,CAArB;;AACA,oBAAkB;AAChB,WADgB,YAChB;AAHgC;;AAMlCjlB,EAAAA,GAAAA,CANkC,IAMlCA;AACAA,EAAAA,GAAAA,CAAAA,IAAAA,aAAW,iBAAXA,gBAPkC,UAOlCA;AACA,MAAMolB,OAAAA,GAAUplB,GAAAA,CAAAA,WAAAA,CARkB,EAQlBA,CAAhB;AAGA,MAAIqlB,MAAAA,GAASD,OAAAA,CAXqB,qBAWlC;AACA,MAAIE,OAAAA,GAAU7tE,IAAAA,CAAAA,GAAAA,CAAS2tE,OAAAA,CAZW,sBAYpB3tE,CAAd;;AACA,cAAY;AACVuoD,IAAAA,GAAAA,CADU,OACVA;AACA,QAAMulB,KAAAA,GAAQF,MAAAA,IAAU,SAFd,OAEIA,CAAd;AACAJ,IAAAA,WAAAA,CAAAA,GAAAA,CAAAA,UAAAA,EAHU,KAGVA;AACA,WAJU,KAIV;AAjBgC;;AAwBlCjlB,EAAAA,GAAAA,CAAAA,WAAAA,GAxBkC,KAwBlCA;AACAA,EAAAA,GAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,iBAAAA,EAzBkC,iBAyBlCA;AACAA,EAAAA,GAAAA,CAAAA,UAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EA1BkC,CA0BlCA;AACA,MAAIwlB,MAAAA,GAASxlB,GAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,iBAAAA,EAAAA,iBAAAA,EA3BqB,IA2BlC;AAMAslB,EAAAA,OAAAA,GAjCkC,CAiClCA;;AACA,OAAK,IAAInsE,CAAAA,GAAIqsE,MAAAA,CAAAA,MAAAA,GAAAA,CAAAA,GAAb,GAAoCrsE,CAAAA,IAApC,GAA4CA,CAAAA,IAA5C,GAAoD;AAClD,QAAIqsE,MAAAA,CAAAA,CAAAA,CAAAA,GAAJ,GAAmB;AACjBF,MAAAA,OAAAA,GAAU7tE,IAAAA,CAAAA,IAAAA,CAAU0B,CAAAA,GAAAA,CAAAA,GADH,iBACP1B,CAAV6tE;AADiB;AAD+B;AAlClB;;AA4ClCtlB,EAAAA,GAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,iBAAAA,EA5CkC,iBA4ClCA;AACAA,EAAAA,GAAAA,CAAAA,UAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EA7CkC,iBA6ClCA;AACAwlB,EAAAA,MAAAA,GAASxlB,GAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,iBAAAA,EAAAA,iBAAAA,EA9CyB,IA8ClCwlB;AACAH,EAAAA,MAAAA,GA/CkC,CA+ClCA;;AACA,OAAK,IAAIlsE,EAAAA,GAAJ,GAAWD,EAAAA,GAAKssE,MAAAA,CAArB,QAAoCrsE,EAAAA,GAApC,IAA4CA,EAAAA,IAA5C,GAAoD;AAClD,QAAIqsE,MAAAA,CAAAA,EAAAA,CAAAA,GAAJ,GAAmB;AACjBH,MAAAA,MAAAA,GAASN,iBAAAA,GAAoBttE,IAAAA,CAAAA,KAAAA,CAAW0B,EAAAA,GAAAA,CAAAA,GADvB,iBACY1B,CAA7B4tE;AADiB;AAD+B;AAhDlB;;AAuDlCrlB,EAAAA,GAAAA,CAvDkC,OAuDlCA;;AAEA,cAAY;AACV,QAAMulB,MAAAA,GAAQF,MAAAA,IAAU,SADd,OACIA,CAAd;;AACAJ,IAAAA,WAAAA,CAAAA,GAAAA,CAAAA,UAAAA,EAFU,MAEVA;AACA,WAHU,MAGV;AA5DgC;;AA+DlCA,EAAAA,WAAAA,CAAAA,GAAAA,CAAAA,UAAAA,EA/DkC,mBA+DlCA;AACA,SAhEkC,mBAgElC;AAlHF;;AAqHA,6CAA6C;AAE3C,MAAMQ,OAAAA,GAAU1vE,QAAAA,CAAAA,aAAAA,CAF2B,MAE3BA,CAAhB;AACA,MAAM2vE,iBAAAA,GAAoB;AACxBtjD,IAAAA,KAAAA,EADwB;AAExBujD,IAAAA,WAAAA,EAFwB;AAGxBC,IAAAA,OAAAA,EAASC,IAAAA,CAAAA,GAAAA,KAHe;AAIxBC,IAAAA,MAAAA,EAAQD,IAAAA,CAJgB;AAKxBE,IAAAA,iBAAAA,EALwB;AAMxBC,IAAAA,aAAAA,EANwB;AAOxBC,IAAAA,WAAAA,EAPwB;AAQxBC,IAAAA,YAAAA,EARwB;AASxBC,IAAAA,UAAAA,EATwB;AAUxBruE,IAAAA,KAAAA,EAVwB;AAAA,GAA1B;;AAaA+zB,EAAAA,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAhB2C,OAgB3CA;;AAEA,MAAMu6C,EAAAA,GAAK3wD,WAAAA,SAAAA,CAAeoW,IAAAA,CAAAA,SAAAA,CAAfpW,SAAAA,EAAyCowD,IAAAA,CAlBT,SAkBhCpwD,CAAX;;AACA,MAAI2M,KAAAA,GAAQ3qB,IAAAA,CAAAA,KAAAA,CAAW2uE,EAAAA,CAAX3uE,CAAW2uE,CAAX3uE,EAAkB2uE,EAAAA,CAnBa,CAmBbA,CAAlB3uE,CAAZ;AACA,MAAMspE,KAAAA,GAAQhoB,MAAAA,CAAO8sB,IAAAA,CApBsB,QAoB7B9sB,CAAd;;AACA,MAAIgoB,KAAAA,CAAJ,UAAoB;AAClB3+C,IAAAA,KAAAA,IAAS3qB,IAAAA,CAAAA,EAAAA,GADS,CAClB2qB;AAtByC;;AAwB3C,MAAMikD,UAAAA,GAAa5uE,IAAAA,CAAAA,KAAAA,CAAW2uE,EAAAA,CAAX3uE,CAAW2uE,CAAX3uE,EAAkB2uE,EAAAA,CAxBM,CAwBNA,CAAlB3uE,CAAnB;AACA,MAAM6uE,UAAAA,GAAaD,UAAAA,GAAaE,SAAAA,CAAUxF,KAAAA,CAAVwF,UAAAA,EAzBW,GAyBXA,CAAhC;AAEA,YA3B2C,GA2B3C;;AACA,MAAInkD,KAAAA,KAAJ,GAAiB;AACfqvC,IAAAA,IAAAA,GAAO2U,EAAAA,CADQ,CACRA,CAAP3U;AACAC,IAAAA,GAAAA,GAAM0U,EAAAA,CAAAA,CAAAA,CAAAA,GAFS,UAEf1U;AAFF,SAGO;AACLD,IAAAA,IAAAA,GAAO2U,EAAAA,CAAAA,CAAAA,CAAAA,GAAQE,UAAAA,GAAa7uE,IAAAA,CAAAA,GAAAA,CADvB,KACuBA,CAA5Bg6D;AACAC,IAAAA,GAAAA,GAAM0U,EAAAA,CAAAA,CAAAA,CAAAA,GAAQE,UAAAA,GAAa7uE,IAAAA,CAAAA,GAAAA,CAFtB,KAEsBA,CAA3Bi6D;AAjCyC;;AAqC3C+T,EAAAA,OAAAA,CAAAA,KAAAA,CAAAA,IAAAA,aArC2C,IAqC3CA;AACAA,EAAAA,OAAAA,CAAAA,KAAAA,CAAAA,GAAAA,aAtC2C,GAsC3CA;AACAA,EAAAA,OAAAA,CAAAA,KAAAA,CAAAA,QAAAA,aAvC2C,UAuC3CA;AACAA,EAAAA,OAAAA,CAAAA,KAAAA,CAAAA,UAAAA,GAA2B1E,KAAAA,CAxCgB,UAwC3C0E;AAGAA,EAAAA,OAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EA3C2C,cA2C3CA;AAEAA,EAAAA,OAAAA,CAAAA,WAAAA,GAAsBI,IAAAA,CA7CqB,GA6C3CJ;AAEAA,EAAAA,OAAAA,CAAAA,GAAAA,GAAcI,IAAAA,CA/C6B,GA+C3CJ;;AAIA,MAAI55C,IAAAA,CAAJ,uBAAgC;AAC9B45C,IAAAA,OAAAA,CAAAA,OAAAA,CAAAA,QAAAA,GAA2BI,IAAAA,CADG,QAC9BJ;AApDyC;;AAsD3C,MAAIrjD,KAAAA,KAAJ,GAAiB;AACfsjD,IAAAA,iBAAAA,CAAAA,KAAAA,GAA0BtjD,KAAAA,IAAS,MAAM3qB,IAAAA,CAD1B,EACW2qB,CAA1BsjD;AAvDyC;;AA4D3C,MAAIc,eAAAA,GA5DuC,KA4D3C;;AACA,MACEX,IAAAA,CAAAA,GAAAA,CAAAA,MAAAA,GAAAA,CAAAA,IACCh6C,IAAAA,CAAAA,qBAAAA,IAA8Bq5C,mBAAAA,CAAAA,IAAAA,CAAyBW,IAAAA,CAF1D,GAEiCX,CAFjC,EAGE;AACAsB,IAAAA,eAAAA,GADA,IACAA;AAJF,SAKO,IAAIX,IAAAA,CAAAA,SAAAA,CAAAA,CAAAA,MAAsBA,IAAAA,CAAAA,SAAAA,CAA1B,CAA0BA,CAA1B,EAA6C;AAClD,QAAMY,SAAAA,GAAYhvE,IAAAA,CAAAA,GAAAA,CAASouE,IAAAA,CAAAA,SAAAA,CAA3B,CAA2BA,CAATpuE,CAAlB;AAAA,QACEivE,SAAAA,GAAYjvE,IAAAA,CAAAA,GAAAA,CAASouE,IAAAA,CAAAA,SAAAA,CAF2B,CAE3BA,CAATpuE,CADd;;AAIA,QACEgvE,SAAAA,KAAAA,SAAAA,IACAhvE,IAAAA,CAAAA,GAAAA,CAAAA,SAAAA,EAAAA,SAAAA,IAAiCA,IAAAA,CAAAA,GAAAA,CAAAA,SAAAA,EAAjCA,SAAiCA,CAAjCA,GAFF,KAGE;AACA+uE,MAAAA,eAAAA,GADA,IACAA;AATgD;AAlET;;AA8E3C,uBAAqB;AACnB,QAAIzF,KAAAA,CAAJ,UAAoB;AAClB2E,MAAAA,iBAAAA,CAAAA,WAAAA,GAAgCG,IAAAA,CAAAA,MAAAA,GAAch6C,IAAAA,CAAAA,SAAAA,CAD5B,KAClB65C;AADF,WAEO;AACLA,MAAAA,iBAAAA,CAAAA,WAAAA,GAAgCG,IAAAA,CAAAA,KAAAA,GAAah6C,IAAAA,CAAAA,SAAAA,CADxC,KACL65C;AAJiB;AA9EsB;;AAqF3C75C,EAAAA,IAAAA,CAAAA,kBAAAA,CAAAA,GAAAA,CAAAA,OAAAA,EArF2C,iBAqF3CA;;AACA,MAAIA,IAAAA,CAAJ,oBAA6B;AAC3BA,IAAAA,IAAAA,CAAAA,WAAAA,CAD2B,OAC3BA;AAvFyC;;AA0F3C,MAAIA,IAAAA,CAAAA,qBAAAA,IAA8B65C,iBAAAA,CAAlC,SAA6D;AAC3D,QAAIiB,QAAAA,GAAJ;AAAA,QACEC,QAAAA,GAFyD,CAC3D;;AAEA,QAAIxkD,KAAAA,KAAJ,GAAiB;AACfukD,MAAAA,QAAAA,GAAWlvE,IAAAA,CAAAA,GAAAA,CADI,KACJA,CAAXkvE;AACAC,MAAAA,QAAAA,GAAWnvE,IAAAA,CAAAA,GAAAA,CAFI,KAEJA,CAAXmvE;AALyD;;AAO3D,QAAMC,QAAAA,GACH,kBAAiBhB,IAAAA,CAAjB,SAA+BA,IAAAA,CAAhC,KAAC,IAA6Ch6C,IAAAA,CAAAA,SAAAA,CARW,KAO3D;AAEA,QAAMi7C,SAAAA,GATqD,UAS3D;AAEA,WAX2D,CAW3D;;AACA,QAAI1kD,KAAAA,KAAJ,GAAiB;AACf/M,MAAAA,CAAAA,GAAI,qBAAqB,CAArB,8BAAJA;AACAY,MAAAA,CAAAA,GAAI,sCAAgC,2BAAhC,EAFW,CAEX,CAAJA;AAFF,WAGO;AACLA,MAAAA,CAAAA,GAAI,YAAYw7C,IAAAA,GAAZ,UAA6BC,GAAAA,GAA7B,UAAJz7C;AAhByD;;AAmB3D4V,IAAAA,IAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAkB;AAChB4lC,MAAAA,IAAAA,EAAMx7C,CAAAA,CADU,CACVA,CADU;AAEhBy7C,MAAAA,GAAAA,EAAKz7C,CAAAA,CAFW,CAEXA,CAFW;AAGhB8wD,MAAAA,KAAAA,EAAO9wD,CAAAA,CAHS,CAGTA,CAHS;AAIhB+wD,MAAAA,MAAAA,EAAQ/wD,CAAAA,CAJQ,CAIRA,CAJQ;AAKhB0qC,MAAAA,GAAAA,EALgB;AAMhBvtB,MAAAA,IAAAA,EAAM,qBANU;AAOhB/d,MAAAA,CAPgB,EAOhBA;AAPgB,KAAlBwW;AA7GyC;AArH7C;;AA8OA,sBAAsB;AACpB,MAAIA,IAAAA,CAAJ,WAAoB;AAAA;AADA;;AAIpB,MAAMo7C,QAAAA,GAAWp7C,IAAAA,CAJG,SAIpB;AACA,MAAMvU,UAAAA,GAAauU,IAAAA,CALC,WAKpB;AACA,MAAMq7C,cAAAA,GAAiBD,QAAAA,CANH,MAMpB;;AAIA,MAAIC,cAAAA,GAAJ,yBAA8C;AAC5Cr7C,IAAAA,IAAAA,CAAAA,cAAAA,GAD4C,IAC5CA;AACAvU,IAAAA,UAAAA,CAF4C,OAE5CA;AAF4C;AAV1B;;AAgBpB,MAAI,CAACuU,IAAAA,CAAL,oBAA8B;AAC5B,SAAK,IAAI1yB,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,gBAAoCA,CAApC,IAAyC;AACvC0yB,MAAAA,IAAAA,CAAAA,WAAAA,CAAiBo7C,QAAAA,CADsB,CACtBA,CAAjBp7C;AAF0B;AAhBV;;AAsBpBA,EAAAA,IAAAA,CAAAA,cAAAA,GAtBoB,IAsBpBA;AACAvU,EAAAA,UAAAA,CAvBoB,OAuBpBA;AArQF;;AAwQA,4CAA4C;AAC1C,MAAI/Y,MAAAA,GADsC,CAC1C;;AACA,OAAK,IAAIpF,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,OAA2BA,CAA3B,IAAgC;AAC9B,QAAMiqB,CAAAA,GAAI+jD,EAAAA,CAAGrnB,MADiB,EACpBqnB,CAAV;;AACA,QAAI/jD,CAAAA,GAAJ,GAAW;AACT7kB,MAAAA,MAAAA,GAASA,MAAAA,GAAS9G,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAT8G,MAAS9G,CAAT8G,GADA,CACTA;AAH4B;AAFU;;AAQ1C,SAR0C,MAQ1C;AAhRF;;AAmRA,sBAAsB;AACpB,MAAMkyD,MAAAA,GAAS5kC,IAAAA,CADK,OACpB;AACA,MAAM0rB,QAAAA,GAAW1rB,IAAAA,CAFG,SAEpB;AAEA,MAAMu7C,QAAAA,GAAWC,YAAAA,CAAa9vB,QAAAA,CAAb8vB,KAAAA,EAA6B9vB,QAAAA,CAA7B8vB,MAAAA,EAJG,MAIHA,CAAjB;;AACA,OAAK,IAAIluE,CAAAA,GAAT,GAAgBA,CAAAA,GAAIiuE,QAAAA,CAApB,QAAqCjuE,CAArC,IAA0C;AACxC,QAAMwnD,GAAAA,GAAM8P,MAAAA,CAAAA,CAAAA,CAAAA,CAD4B,GACxC;;AACA,QAAM6W,aAAAA,GAAgBz7C,IAAAA,CAAAA,kBAAAA,CAAAA,GAAAA,CAFkB,GAElBA,CAAtB;;AACA,QAAIy7C,aAAAA,CAAAA,KAAAA,KAAJ,GAA+B;AAC7BA,MAAAA,aAAAA,CAAAA,WAAAA,GAA4B7W,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,GAAiB2W,QAAAA,CAAAA,CAAAA,CAAAA,CADhB,IAC7BE;AACAA,MAAAA,aAAAA,CAAAA,UAAAA,GAA2B7W,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,GAAgB2W,QAAAA,CAAAA,CAAAA,CAAAA,CAFd,GAE7BE;AACAA,MAAAA,aAAAA,CAAAA,YAAAA,GAA6BF,QAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,GAAoB3W,MAAAA,CAAAA,CAAAA,CAAAA,CAHpB,KAG7B6W;AACAA,MAAAA,aAAAA,CAAAA,aAAAA,GAA8BF,QAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,GAAqB3W,MAAAA,CAAAA,CAAAA,CAAAA,CAJtB,MAI7B6W;;AACAz7C,MAAAA,IAAAA,CAAAA,kBAAAA,CAAAA,GAAAA,CAAAA,GAAAA,EAL6B,aAK7BA;;AAL6B;AAHS;;AAaxC,QAAM6O,CAAAA,GAAI0sC,QAAAA,CAAV,CAAUA,CAAV;AAAA,QACEnxD,CAAAA,GAAIw6C,MAAAA,CAdkC,CAclCA,CADN;AAEA,QAAMp7C,CAAAA,GAAIY,CAAAA,CAAV;AAAA,QACEC,CAAAA,GAAIb,CAAAA,CADN,CACMA,CADN;AAAA,QAEE0qC,CAAAA,GAAI1qC,CAAAA,CAjBkC,CAiBlCA,CAFN;AAIA,QAAMuuC,MAAAA,GAAS,CAAC,MAAD,EAAS,IAAI3tC,CAAAA,CAAAA,IAAAA,CAAJ,CAAIA,CAAJ,CAAT,EAAyB,CAACA,CAAAA,CAAAA,IAAAA,CAAD,CAACA,CAAD,IAAzB,EAAyCA,CAAAA,CAAzC,KAAf;AACA,QAAMkxD,EAAAA,GAAK,iBApB6B,EAoB7B,CAAX;;AACA,SAAK,IAAIjjB,CAAAA,GAAJ,GAAWqjB,EAAAA,GAAK3jB,MAAAA,CAArB,QAAoCM,CAAAA,GAApC,IAA4CA,CAA5C,IAAiD;AAC/C,UAAM9gC,CAAAA,GAAI3N,WAAAA,cAAAA,CAAoBmuC,MAAAA,CAApBnuC,CAAoBmuC,CAApBnuC,EADqC,CACrCA,CAAV;;AACA0xD,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,CAAAA,CAAAA,GAAYjxD,CAAAA,IAAM,UAASkN,CAAAA,CAAV,CAAUA,CAAT,IAF6B,CAE/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,CAAAA,CAAAA,GAAYpnB,CAAAA,IAAM,SAAQ38B,CAAAA,CAAT,CAASA,CAAR,IAH6B,CAG/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,CAAAA,CAAAA,GAAYjxD,CAAAA,IAAM,WAAUkN,CAAAA,CAAX,CAAWA,CAAV,IAJ6B,CAI/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAapnB,CAAAA,IAAM,YAAW38B,CAAAA,CAAZ,CAAYA,CAAX,IAL4B,CAK/C+jD;AAEAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAapnB,CAAAA,IAAM,UAAS38B,CAAAA,CAAV,CAAUA,CAAT,IAAiB,CAPW,CAO/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAajxD,CAAAA,IAAM,SAAQkN,CAAAA,CAAT,CAASA,CAAR,IAR4B,CAQ/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAapnB,CAAAA,IAAM,WAAU38B,CAAAA,CAAX,CAAWA,CAAV,IAAkB,CATU,CAS/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAajxD,CAAAA,IAAM,YAAWkN,CAAAA,CAAZ,CAAYA,CAAX,IAV4B,CAU/C+jD;AAEAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAajxD,CAAAA,IAAM,UAASkN,CAAAA,CAAV,CAAUA,CAAT,IAAiB,CAZW,CAY/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAapnB,CAAAA,IAAM,SAAQ38B,CAAAA,CAAT,CAASA,CAAR,IAAgB,CAbY,CAa/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAajxD,CAAAA,IAAM,WAAUkN,CAAAA,CAAX,CAAWA,CAAV,IAAkB,CAdU,CAc/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAapnB,CAAAA,IAAM,YAAW38B,CAAAA,CAAZ,CAAYA,CAAX,IAAmB,CAfS,CAe/C+jD;AAEAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAapnB,CAAAA,IAAM,UAAS38B,CAAAA,CAAV,CAAUA,CAAT,IAjB4B,CAiB/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAajxD,CAAAA,IAAM,SAAQkN,CAAAA,CAAT,CAASA,CAAR,IAAgB,CAlBY,CAkB/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAapnB,CAAAA,IAAM,WAAU38B,CAAAA,CAAX,CAAWA,CAAV,IAnB4B,CAmB/C+jD;AACAA,MAAAA,EAAAA,CAAGjjB,CAAAA,GAAHijB,EAAAA,CAAAA,GAAajxD,CAAAA,IAAM,YAAWkN,CAAAA,CAAZ,CAAYA,CAAX,IAAmB,CApBS,CAoB/C+jD;AAzCsC;;AA6CxC,QAAMK,QAAAA,GAAW,IAAI/vE,IAAAA,CAAAA,GAAAA,CAASA,IAAAA,CAAAA,GAAAA,CAATA,CAASA,CAATA,EAAsBA,IAAAA,CAAAA,GAAAA,CA7CH,CA6CGA,CAAtBA,CAArB;AACA6vE,IAAAA,aAAAA,CAAAA,WAAAA,GAA4BG,eAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,GA9CY,QA8CxCH;AACAA,IAAAA,aAAAA,CAAAA,UAAAA,GAA2BG,eAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,GA/Ca,QA+CxCH;AACAA,IAAAA,aAAAA,CAAAA,YAAAA,GAA6BG,eAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,GAhDW,QAgDxCH;AACAA,IAAAA,aAAAA,CAAAA,aAAAA,GAA8BG,eAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,GAjDU,QAiDxCH;;AACAz7C,IAAAA,IAAAA,CAAAA,kBAAAA,CAAAA,GAAAA,CAAAA,GAAAA,EAlDwC,aAkDxCA;AAvDkB;AAnRtB;;AA8UA,4CAA4C;AAC1C,MAAM4kC,MAAAA,GAAS,UAAU,kBAAkB;AACzC,WAAO;AACLJ,MAAAA,EAAAA,EAAIqX,GAAAA,CADC;AAELpX,MAAAA,EAAAA,EAAIoX,GAAAA,CAFC;AAGL7kD,MAAAA,EAAAA,EAAI6kD,GAAAA,CAHC;AAIL5kD,MAAAA,EAAAA,EAAI4kD,GAAAA,CAJC;AAKL9nD,MAAAA,KAAAA,EALK;AAML+nD,MAAAA,KAAAA,EANK;AAOLC,MAAAA,KAAAA,EAPK;AAAA,KAAP;AAFwC,GAC3B,CAAf;AAWAC,EAAAA,eAAAA,CAAAA,KAAAA,EAZ0C,MAY1CA,CAAAA;AAEA,MAAMT,QAAAA,GAAW,UAAUU,KAAAA,CAde,MAczB,CAAjB;;AAd0C,6CAe1C,MAf0C;AAAA;;AAAA;AAe1C,wDAAwB;AAAA,UAAxB,CAAwB;AACtB,UAAM3uE,CAAAA,GAAI8c,CAAAA,CADY,KACtB;AACAmxD,MAAAA,QAAAA,CAAAA,CAAAA,CAAAA,GAAc;AACZ3V,QAAAA,IAAAA,EAAMx7C,CAAAA,CADM;AAEZy7C,QAAAA,GAAAA,EAFY;AAGZqV,QAAAA,KAAAA,EAAO9wD,CAAAA,CAHK;AAIZ+wD,QAAAA,MAAAA,EAJY;AAAA,OAAdI;AAjBwC;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2B1CU,EAAAA,KAAAA,CAAAA,GAAAA,CAAU,kBAAkB;AAC1B,QAAMptC,CAAAA,GAAI0sC,QAAAA,CAAV,CAAUA,CAAV;AAAA,QACEnxD,CAAAA,GAAIw6C,MAAAA,CAFoB,CAEpBA,CADN;AAEAx6C,IAAAA,CAAAA,CAAAA,EAAAA,GAAOyxD,GAAAA,CAHmB,GAG1BzxD;AACAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAOte,KAAAA,GAAQ+iC,CAAAA,CAJW,KAI1BzkB;AACAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAOyxD,GAAAA,CALmB,MAK1BzxD;AACAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAOte,KAAAA,GAAQ+iC,CAAAA,CANW,IAM1BzkB;AACAA,IAAAA,CAAAA,CAAAA,KAAAA,GAP0B,CAO1BA;AACAA,IAAAA,CAAAA,CAAAA,KAAAA,GAR0B,SAQ1BA;AACAA,IAAAA,CAAAA,CAAAA,KAAAA,GAT0B,SAS1BA;AApCwC,GA2B1C6xD;AAWAD,EAAAA,eAAAA,CAAAA,MAAAA,EAtC0C,MAsC1CA,CAAAA;;AAtC0C,8CAwC1C,MAxC0C;AAAA;;AAAA;AAwC1C,2DAAwB;AAAA,UAAxB,EAAwB;AACtB,UAAM1uE,GAAAA,GAAI8c,EAAAA,CADY,KACtB;AACAmxD,MAAAA,QAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,GAAkBnxD,EAAAA,CAFI,KAEtBmxD;AACAA,MAAAA,QAAAA,CAAAA,GAAAA,CAAAA,CAAAA,MAAAA,GAAqBnxD,EAAAA,CAHC,KAGtBmxD;AA3CwC;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6C1C,SA7C0C,QA6C1C;AA3XF;;AA8XA,wCAAwC;AAEtC3W,EAAAA,MAAAA,CAAAA,IAAAA,CAAY,gBAAgB;AAC1B,WAAOz6C,CAAAA,CAAAA,EAAAA,GAAOC,CAAAA,CAAPD,EAAAA,IAAeA,CAAAA,CAAAA,KAAAA,GAAUC,CAAAA,CADN,KAC1B;AAHoC,GAEtCw6C;AAKA,MAAMsX,YAAAA,GAAe;AACnB1X,IAAAA,EAAAA,EAAI,CADe;AAEnBC,IAAAA,EAAAA,EAAI,CAFe;AAGnBztC,IAAAA,EAAAA,EAHmB;AAInBC,IAAAA,EAAAA,EAJmB;AAKnBlD,IAAAA,KAAAA,EAAO,CALY;AAMnB+nD,IAAAA,KAAAA,EANmB;AAOnBC,IAAAA,KAAAA,EAPmB;AAAA,GAArB;AASA,MAAMI,OAAAA,GAAU,CACd;AACE5tE,IAAAA,KAAAA,EAAO,CADT;AAEEd,IAAAA,GAAAA,EAFF;AAGE2uE,IAAAA,QAAAA,EAHF;AAAA,GADc,CAAhB;;AAhBsC,8CAwBtC,MAxBsC;AAAA;;AAAA;AAwBtC,2DAA+B;AAAA,UAA/B,QAA+B;AAG7B,UAAI9uE,CAAAA,GAHyB,CAG7B;;AACA,aAAOA,CAAAA,GAAI6uE,OAAAA,CAAJ7uE,MAAAA,IAAsB6uE,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,IAAkBC,QAAAA,CAA/C,IAA4D;AAC1D9uE,QAAAA,CAD0D;AAJ/B;;AAO7B,UAAI+qD,CAAAA,GAAI8jB,OAAAA,CAAAA,MAAAA,GAPqB,CAO7B;;AACA,aAAO9jB,CAAAA,IAAAA,CAAAA,IAAU8jB,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,IAAoBC,QAAAA,CAArC,IAAkD;AAChD/jB,QAAAA,CADgD;AARrB;;AAY7B,UAAIgkB,YAAJ;AAAA,UAAiBC,iBAZY,SAY7B;;AACA,UAAInT,CAAJ;AAAA,UACErQ,CADF;AAAA,UAEEyjB,OAAAA,GAAU,CAfiB,QAa7B;;AAGA,WAAKpT,CAAAA,GAAL,GAAYA,CAAAA,IAAZ,GAAoBA,CAApB,IAAyB;AACvBkT,QAAAA,YAAAA,GAAcF,OAAAA,CADS,CACTA,CAAdE;AACAC,QAAAA,iBAAAA,GAAmBD,YAAAA,CAFI,QAEvBC;AACA,YAAIE,IAHmB,SAGvB;;AACA,YAAIF,iBAAAA,CAAAA,EAAAA,GAAsBF,QAAAA,CAA1B,IAAuC;AAIrCI,UAAAA,IAAAA,GACEF,iBAAAA,CAAAA,KAAAA,GAAyBF,QAAAA,CAAzBE,KAAAA,GACIA,iBAAAA,CADJA,KAAAA,GAEIF,QAAAA,CAP+B,EAIrCI;AAJF,eAQO,IAAIF,iBAAAA,CAAAA,KAAAA,KAAJ,WAA0C;AAG/CE,UAAAA,IAAAA,GAAQ,wBAAsBJ,QAAAA,CAAvB,EAAC,IAHuC,CAG/CI;AAHK,eAIA;AAELA,UAAAA,IAAAA,GAAOF,iBAAAA,CAFF,KAELE;AAlBqB;;AAoBvB,YAAIA,IAAAA,GAAJ,SAAoB;AAClBD,UAAAA,OAAAA,GADkB,IAClBA;AArBqB;AAhBI;;AA0C7BH,MAAAA,QAAAA,CAAAA,KAAAA,GA1C6B,OA0C7BA;;AAGA,WAAKjT,CAAAA,GAAL,GAAYA,CAAAA,IAAZ,GAAoBA,CAApB,IAAyB;AACvBkT,QAAAA,YAAAA,GAAcF,OAAAA,CADS,CACTA,CAAdE;AACAC,QAAAA,iBAAAA,GAAmBD,YAAAA,CAFI,QAEvBC;;AACA,YAAIA,iBAAAA,CAAAA,KAAAA,KAAJ,WAA0C;AAExC,cAAIA,iBAAAA,CAAAA,EAAAA,GAAsBF,QAAAA,CAA1B,IAAuC;AAGrC,gBAAIE,iBAAAA,CAAAA,KAAAA,GAAyBF,QAAAA,CAA7B,OAA6C;AAC3CE,cAAAA,iBAAAA,CAAAA,KAAAA,GAAyBA,iBAAAA,CADkB,EAC3CA;AAJmC;AAAvC,iBAMO;AACLA,YAAAA,iBAAAA,CAAAA,KAAAA,GADK,OACLA;AATsC;AAA1C,eAWO,IAAIA,iBAAAA,CAAAA,KAAAA,GAAJ,SAAsC;AAE3CA,UAAAA,iBAAAA,CAAAA,KAAAA,GAAyB1wE,IAAAA,CAAAA,GAAAA,CAAAA,OAAAA,EAAkB0wE,iBAAAA,CAFA,EAElB1wE,CAAzB0wE;AAhBqB;AA7CI;;AAkE7B,UAAMG,cAAAA,GAlEuB,EAkE7B;AACA,UAAIC,YAAAA,GAnEyB,IAmE7B;;AACA,WAAKvT,CAAAA,GAAL,GAAYA,CAAAA,IAAZ,GAAoBA,CAApB,IAAyB;AACvBkT,QAAAA,YAAAA,GAAcF,OAAAA,CADS,CACTA,CAAdE;AACAC,QAAAA,iBAAAA,GAAmBD,YAAAA,CAFI,QAEvBC;AAEA,YAAMK,WAAAA,GACJL,iBAAAA,CAAAA,EAAAA,GAAsBF,QAAAA,CAAtBE,EAAAA,GAAAA,iBAAAA,GALqB,QAIvB;;AAEA,YAAII,YAAAA,KAAJ,aAAkC;AAEhCD,UAAAA,cAAAA,CAAeA,cAAAA,CAAAA,MAAAA,GAAfA,CAAAA,CAAAA,CAAAA,GAAAA,GAAgDJ,YAAAA,CAFhB,GAEhCI;AAFF,eAGO;AACLA,UAAAA,cAAAA,CAAAA,IAAAA,CAAoB;AAClBluE,YAAAA,KAAAA,EAAO8tE,YAAAA,CADW;AAElB5uE,YAAAA,GAAAA,EAAK4uE,YAAAA,CAFa;AAGlBD,YAAAA,QAAAA,EAHkB;AAAA,WAApBK;AAKAC,UAAAA,YAAAA,GANK,WAMLA;AAfqB;AApEI;;AAsF7B,UAAIP,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,GAAmBC,QAAAA,CAAvB,IAAoC;AAClCK,QAAAA,cAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,GAA0BL,QAAAA,CADQ,EAClCK;AACAA,QAAAA,cAAAA,CAAAA,OAAAA,CAAuB;AACrBluE,UAAAA,KAAAA,EAAO4tE,OAAAA,CAAAA,CAAAA,CAAAA,CADc;AAErB1uE,UAAAA,GAAAA,EAAK2uE,QAAAA,CAFgB;AAGrBA,UAAAA,QAAAA,EAAUD,OAAAA,CAAAA,CAAAA,CAAAA,CAHW;AAAA,SAAvBM;AAxF2B;;AA8F7B,UAAIL,QAAAA,CAAAA,EAAAA,GAAcD,OAAAA,CAAAA,CAAAA,CAAAA,CAAlB,KAAkC;AAChCM,QAAAA,cAAAA,CAAeA,cAAAA,CAAAA,MAAAA,GAAfA,CAAAA,CAAAA,CAAAA,GAAAA,GAAgDL,QAAAA,CADhB,EAChCK;AACAA,QAAAA,cAAAA,CAAAA,IAAAA,CAAoB;AAClBluE,UAAAA,KAAAA,EAAO6tE,QAAAA,CADW;AAElB3uE,UAAAA,GAAAA,EAAK0uE,OAAAA,CAAAA,CAAAA,CAAAA,CAFa;AAGlBC,UAAAA,QAAAA,EAAUD,OAAAA,CAAAA,CAAAA,CAAAA,CAHQ;AAAA,SAApBM;AAhG2B;;AA0G7B,WAAKtT,CAAAA,GAAL,GAAYA,CAAAA,IAAZ,GAAoBA,CAApB,IAAyB;AACvBkT,QAAAA,YAAAA,GAAcF,OAAAA,CADS,CACTA,CAAdE;AACAC,QAAAA,iBAAAA,GAAmBD,YAAAA,CAFI,QAEvBC;;AACA,YAAIA,iBAAAA,CAAAA,KAAAA,KAAJ,WAA0C;AAAA;AAHnB;;AAMvB,YAAIM,IAAAA,GANmB,KAMvB;;AACA,aACE9jB,CAAAA,GAAIxrD,CAAAA,GADN,GAEE,SAASwrD,CAAAA,IAAT,KAAmBqjB,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,IAAoBG,iBAAAA,CAFzC,IAGExjB,CAHF,IAIE;AACA8jB,UAAAA,IAAAA,GAAOT,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAAA,KADP,iBACAS;AAZqB;;AAcvB,aACE9jB,CAAAA,GAAIT,CAAAA,GADN,GAEE,SAASS,CAAAA,GAAIqjB,OAAAA,CAAb,UAA+BA,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,IAAkBG,iBAAAA,CAFnD,IAGExjB,CAHF,IAIE;AACA8jB,UAAAA,IAAAA,GAAOT,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAAA,KADP,iBACAS;AAnBqB;;AAqBvB,aAAK9jB,CAAAA,GAAL,GAAY,SAASA,CAAAA,GAAI2jB,cAAAA,CAAzB,QAAgD3jB,CAAhD,IAAqD;AACnD8jB,UAAAA,IAAAA,GAAOH,cAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAAA,KAD4C,iBACnDG;AAtBqB;;AAwBvB,YAAI,CAAJ,MAAW;AACTN,UAAAA,iBAAAA,CAAAA,KAAAA,GADS,OACTA;AAzBqB;AA1GI;;AAuI7BpzD,MAAAA,KAAAA,CAAAA,SAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAAA,OAAAA,EAEE,IAAImvC,CAAAA,GAAAA,CAAAA,GAAJ,UAzI2B,cAyI3B,CAFFnvC;AA/JoC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsKtC,sEAAmC;AAAnC,QAAWmzD,WAAX;AACE,QAAMC,gBAAAA,GAAmBD,WAAAA,CADQ,QACjC;;AACA,QAAIC,gBAAAA,CAAAA,KAAAA,KAAJ,WAA0C;AACxCA,MAAAA,gBAAAA,CAAAA,KAAAA,GAAyB1wE,IAAAA,CAAAA,GAAAA,CAAAA,KAAAA,EAAgB0wE,gBAAAA,CADD,EACf1wE,CAAzB0wE;AAH+B;AAtKG;AA9XxC;;IA4iBA;AACE3yE,qCAQG;AAAA;AAAA;;AAAA,QARS,WAQT,QARS,WAQT;AAAA,QARS,iBAQT,QARS,iBAQT;AAAA,QARS,SAQT,QARS,SAQT;AAAA,QARS,QAQT,QARS,QAQT;AAAA,QARS,QAQT,QARS,QAQT;AAAA,QARS,mBAQT,QARS,mBAQT;AAAA,QARHA,oBAQG,QARHA,oBAQG;;AAAA;;AACD,wBADC,WACD;AACA,8BAFC,iBAED;AACA,sBAHC,SAGD;AACA,qBAAiB6jC,SAAAA,CAJhB,aAID;AACA,qBALC,QAKD;AACA,qBAAiB4tC,QAAAA,IANhB,EAMD;AACA,gCAA4ByB,mBAAAA,IAP3B,EAOD;AACA,iCAA6B,CAAC,CAR7B,oBAQD;AACA,iCAA6B,CAAC,2BAAChzE,UAAAA,CAAAA,aAAD,kDAACA,sBAT9B,OAS6B,CAA9B;AAEA,mBAXC,IAWD;AACA,mCAZC,IAYD;AACA,qCAbC,IAaD;AACA,0BAdC,IAcD;AACA,8BAA0B,IAfzB,OAeyB,EAA1B;AACA,0BAhBC,KAgBD;AACA,qBAjBC,KAiBD;AACA,uBAlBC,oCAkBD;AACA,wBAnBC,IAmBD;AACA,mBApBC,EAoBD;;AAGA,wCACW,YAAM;AACb,UAAI,MAAJ,gBAAyB;AAGvB,4CAHuB,CAGvB;AACA,6CAJuB,CAIvB;AACA,+BALuB,IAKvB;AANW;AADjB,gBAUS,YAAM,CAjCd,CAuBD;AAhCsB;;;;SAmDxB,eAAc;AACZ,aAAO,iBADK,OACZ;AApDsB;;;WA0DxBoiC,kBAAS;AACP,uBADO,IACP;;AACA,UAAI,KAAJ,SAAkB;AAChB,4BACU,yBADV,2BACU,CADV,WAES,YAAM,CAHC,CAChB;;AAKA,uBANgB,IAMhB;AARK;;AAUP,UAAI,sBAAJ,MAAgC;AAC9Bif,QAAAA,YAAAA,CAAa,KADiB,YAC9BA,CAAAA;AACA,4BAF8B,IAE9B;AAZK;;AAcP,8BAAwB,UAdjB,2BAciB,CAAxB;AAxEsB;;;WA8ExB4xB,uBAAAA,KAAAA,EAAAA,UAAAA,EAAiC;AAC/B,WAAK,IAAIxvE,CAAAA,GAAJ,GAAW2nB,GAAAA,GAAMg4B,KAAAA,CAAtB,QAAoC3/C,CAAAA,GAApC,KAA6CA,CAA7C,IAAkD;AAChD,YAAI2/C,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,KAAJ,WAAgC;AAC9B,cACEA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAAA,yBAAAA,IACAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAFF,sBAGE;AACA,gBAAM5pB,MAAAA,GAAS,KADf,UACA;AACA,8BAAkBn5B,QAAAA,CAAAA,aAAAA,CAFlB,MAEkBA,CAAlB;;AACA,0CAHA,eAGA;;AACA,gBAAI+iD,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,KAAJ,MAA0B;AACxB,2DAAsCA,KAAAA,CAAAA,CAAAA,CAAAA,CADd,EACxB;AALF;;AAOA5pB,YAAAA,MAAAA,CAAAA,WAAAA,CAAmB,KAPnB,UAOAA;AAVF,iBAWO,IAAI4pB,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAJ,oBAA0C;AAC/C,8BAAkB,gBAD6B,UAC/C;AAb4B;;AAAA;AADgB;;AAkBhD,uCAA+BA,KAAAA,CAAAA,CAAAA,CAAAA,CAlBiB,GAkBhD;;AACA8vB,QAAAA,UAAAA,CAAAA,IAAAA,EAAiB9vB,KAAAA,CAAjB8vB,CAAiB9vB,CAAjB8vB,EAAAA,UAAAA,EAAuC,KAnBS,cAmBhDA,CAAAA;AApB6B;AA9ET;;;WAyGxBC,qBAAAA,OAAAA,EAAqB;AACnB,UAAMnD,iBAAAA,GAAoB,4BADP,OACO,CAA1B;;AAEA,UAAIp5D,SAAAA,GAHe,EAGnB;;AACA,UAAIo5D,iBAAAA,CAAAA,WAAAA,KAAAA,CAAAA,IAAuCA,iBAAAA,CAA3C,SAAsE;AACpE,6BAAiCD,OAAAA,CADmC,KACpE;AAAA,YAAM,QAAN,kBAAM,QAAN;AAAA,YAAM,UAAN,kBAAM,UAAN;;AAGA,YACE/Y,QAAAA,KAAa,KAAbA,uBAAAA,IACAoc,UAAAA,KAAe,KAFjB,2BAGE;AACA,+CAA2B,QAA3B,cADA,UACA;AACA,yCAFA,QAEA;AACA,2CAHA,UAGA;AAVkE;;AAapE,oCAAkB,gCAAgCrD,OAAAA,CAbkB,WAalD,CAAlB;AAAA,YAAM,KAAN,yBAAM,KAAN;;AAEA,YAAI9tE,KAAAA,GAAJ,GAAe;AACb+tE,UAAAA,iBAAAA,CAAAA,KAAAA,GAA0BA,iBAAAA,CAAAA,WAAAA,GADb,KACbA;AACAp5D,UAAAA,SAAAA,oBAAsBo5D,iBAAAA,CAFT,KAEbp5D,MAAAA;AAjBkE;AAJnD;;AAwBnB,UAAIo5D,iBAAAA,CAAAA,KAAAA,KAAJ,GAAmC;AACjCp5D,QAAAA,SAAAA,oBAAsBo5D,iBAAAA,CAAV,KAAZp5D,kBADiC,SACjCA,CAAAA;AAzBiB;;AA2BnB,UAAIA,SAAAA,CAAAA,MAAAA,GAAJ,GAA0B;AACxB,YAAI,KAAJ,uBAAgC;AAC9Bo5D,UAAAA,iBAAAA,CAAAA,iBAAAA,GAD8B,SAC9BA;AAFsB;;AAIxBD,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,SAAAA,GAJwB,SAIxBA;AA/BiB;;AAkCnB,UAAIC,iBAAAA,CAAJ,SAA+B;AAC7B,oCAD6B,OAC7B;AAnCiB;;AAqCnB,UAAIA,iBAAAA,CAAJ,QAA8B;AAC5B,YAAM1V,EAAAA,GAAKj6D,QAAAA,CAAAA,aAAAA,CADiB,IACjBA,CAAX;AACAi6D,QAAAA,EAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAF4B,cAE5BA;;AACA,oCAH4B,EAG5B;AAxCiB;AAzGG;;;WAwJxB+Y,mBAAqB;AAAA;;AAAA,UAAbC,OAAa,uEAArBD,CAAqB;AACnB,UAAMzxD,UAAAA,GADa,oCACnB;AACA,UAAI2xD,UAAAA,GAAalvE,MAAAA,CAAAA,MAAAA,CAFE,IAEFA,CAAjB;;AAGA,UAAMnE,MAAAA,GAAS,6BALI,QAKJ,CAAf;;AACAA,MAAAA,MAAAA,CAAAA,MAAAA,GAAgBA,MAAAA,CAAAA,KAAAA,GANG,iBAMnBA;AAMEA,MAAAA,MAAAA,CAAAA,SAAAA,GAZiB,IAYjBA;AAEF,4BAAsBA,MAAAA,CAAAA,UAAAA,CAAAA,IAAAA,EAAwB;AAAEixD,QAAAA,KAAAA,EAd7B;AAc2B,OAAxBjxD,CAAtB;;AAEA,UAAI,KAAJ,cAAuB;AACrB,YAAMszE,SAAAA,GAAY,kBADG,KACrB;AACA,YAAMC,UAAAA,GAAa,kBAFE,MAErB;;AACA,sCAHqB,UAGrB;;AACA7xD,QAAAA,UAAAA,CAJqB,OAIrBA;AAJF,aAKO,IAAI,KAAJ,oBAA6B;AAClC,YAAMuhC,IAAAA,GAAO,SAAPA,IAAO,GAAM;AACjB,qCAAyB,iBAAqB;AAAA,gBAApB,KAAoB,SAApB,KAAoB;AAAA,gBAArB,IAAqB,SAArB,IAAqB;;AAC5C,sBAAU;AACRvhC,cAAAA,UAAAA,CADQ,OACRA;AADQ;AADkC;;AAM5Cvd,YAAAA,MAAAA,CAAAA,MAAAA,CAAAA,UAAAA,EAA0BsC,KAAAA,CANkB,MAM5CtC;;AACA,iCAAmBsC,KAAAA,CAAnB,OAP4C,UAO5C;;AACAw8C,YAAAA,IAR4C;AAA9C,aASGvhC,UAAAA,CAVc,MACjB;AAFgC,SAClC;;AAaA,uBAAe,wBAdmB,SAcnB,EAAf;AACAuhC,QAAAA,IAfkC;AAA7B,aAgBA;AACL,cAAM,UADD,qEACC,CAAN;AAtCiB;;AA2CnBvhC,MAAAA,UAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAwB,YAAM;AAC5B2xD,QAAAA,UAAAA,GAD4B,IAC5BA;;AACA,YAAI,CAAJ,SAAc;AAEZzyB,UAAAA,MAAAA,CAFY,MAEZA,CAAAA;AAFF,eAGO;AAEL,gCAAoB,WAAW,YAAM;AACnCA,YAAAA,MAAAA,CADmC,MACnCA,CAAAA;AACA,kCAFmC,IAEnC;AAFkB,aAFf,OAEe,CAApB;AAP0B;AAA9Bl/B,OAAAA,EAYG,iBAvDgB,MA2CnBA;AAnMsB;;;WAqNxB8xD,0BAAmC;AAAA,UAApBC,UAAoB,uEAAnCD,KAAmC;;AACjC,UAAI,CAAC,KAAD,yBAA+B,CAAC,KAApC,gBAAyD;AAAA;AADxB;;AAIjC,UAAI,iBAAJ,MAA2B;AACzBE,QAAAA,MAAAA,CADyB,IACzBA,CAAAA;AACA,uBAFyB,IAEzB;AAN+B;;AAQjC,UAAMC,YAAAA,GAAN;AAAA,UACEC,UAAAA,GAT+B,EAQjC;;AAGA,WAAK,IAAIrwE,CAAAA,GAAJ,GAAWD,EAAAA,GAAK,eAArB,QAA4CC,CAAAA,GAA5C,IAAoDA,CAApD,IAAyD;AACvD,YAAMwnD,GAAAA,GAAM,eAD2C,CAC3C,CAAZ;;AACA,YAAM8oB,QAAAA,GAAW,4BAFsC,GAEtC,CAAjB;;AAEA,YAAI,CAACA,QAAAA,CAAL,SAAuB;AAAA;AAJgC;;AAOvD,wBAAgB;AACdF,UAAAA,YAAAA,CAAAA,MAAAA,GADc,CACdA;AACAC,UAAAA,UAAAA,CAAAA,MAAAA,GAFc,CAEdA;;AAEA,cAAIC,QAAAA,CAAJ,mBAAgC;AAC9BF,YAAAA,YAAAA,CAAAA,IAAAA,CAAkBE,QAAAA,CADY,iBAC9BF;AALY;;AAOd,cAAIE,QAAAA,CAAAA,UAAAA,GAAJ,GAA6B;AAC3BD,YAAAA,UAAAA,CAAAA,IAAAA,WAAmBC,QAAAA,CADQ,UAC3BD;AACAD,YAAAA,YAAAA,CAAAA,IAAAA,sBAAgC,CAACE,QAAAA,CAFN,UAE3BF;AAFF,iBAGO;AACLC,YAAAA,UAAAA,CAAAA,IAAAA,CADK,CACLA;AAXY;;AAad,cAAIC,QAAAA,CAAAA,YAAAA,GAAJ,GAA+B;AAC7BD,YAAAA,UAAAA,CAAAA,IAAAA,WAAmBC,QAAAA,CAAAA,YAAAA,GAAwBA,QAAAA,CADd,KAC7BD;AADF,iBAEO;AACLA,YAAAA,UAAAA,CAAAA,IAAAA,CADK,CACLA;AAhBY;;AAkBd,cAAIC,QAAAA,CAAAA,aAAAA,GAAJ,GAAgC;AAC9BD,YAAAA,UAAAA,CAAAA,IAAAA,WAAmBC,QAAAA,CADW,aAC9BD;AADF,iBAEO;AACLA,YAAAA,UAAAA,CAAAA,IAAAA,CADK,CACLA;AArBY;;AAuBd,cAAIC,QAAAA,CAAAA,WAAAA,GAAJ,GAA8B;AAC5BD,YAAAA,UAAAA,CAAAA,IAAAA,WAAmBC,QAAAA,CAAAA,WAAAA,GAAuBA,QAAAA,CADd,KAC5BD;AACAD,YAAAA,YAAAA,CAAAA,IAAAA,sBACgB,CAACE,QAAAA,CAAD,cAAwBA,QAAAA,CAHZ,KAE5BF;AAFF,iBAKO;AACLC,YAAAA,UAAAA,CAAAA,IAAAA,CADK,CACLA;AA7BY;;AAgCd7oB,UAAAA,GAAAA,CAAAA,KAAAA,CAAAA,OAAAA,GAAoB6oB,UAAAA,CAAAA,IAAAA,CAhCN,GAgCMA,CAApB7oB;;AACA,cAAI4oB,YAAAA,CAAJ,QAAyB;AACvB5oB,YAAAA,GAAAA,CAAAA,KAAAA,CAAAA,SAAAA,GAAsB4oB,YAAAA,CAAAA,IAAAA,CADC,GACDA,CAAtB5oB;AAlCY;AAAhB,eAoCO;AACLA,UAAAA,GAAAA,CAAAA,KAAAA,CAAAA,OAAAA,GADK,IACLA;AACAA,UAAAA,GAAAA,CAAAA,KAAAA,CAAAA,SAAAA,GAAsB8oB,QAAAA,CAFjB,iBAEL9oB;AA7CqD;AAXxB;AArNX;;;;;;AAuR1B,2CAA2C;AACzC,MAAM90B,IAAAA,GAAO,wBAAwB;AACnC2sB,IAAAA,WAAAA,EAAakxB,gBAAAA,CADsB;AAEnCC,IAAAA,iBAAAA,EAAmBD,gBAAAA,CAFgB;AAGnCrwC,IAAAA,SAAAA,EAAWqwC,gBAAAA,CAHwB;AAInCnyB,IAAAA,QAAAA,EAAUmyB,gBAAAA,CAJyB;AAKnCzC,IAAAA,QAAAA,EAAUyC,gBAAAA,CALyB;AAMnChB,IAAAA,mBAAAA,EAAqBgB,gBAAAA,CANc;AAOnCE,IAAAA,oBAAAA,EAAsBF,gBAAAA,CAPa;AAAA,GAAxB,CAAb;;AASA79C,EAAAA,IAAAA,CAAAA,OAAAA,CAAa69C,gBAAAA,CAV4B,OAUzC79C;;AACA,SAXyC,IAWzC;AA90BF;;;;;;;;;;;;;ACgBA;;AAhBA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAIg+C,WAAAA,GACFr0E,uBAAc;AAAA;;AACZ0d,yBADY,8BACZA;AAFoB,CAAxB;;;AASE;AAAA,MA0TA,YA1TA,GA0TA,8BAA8B;AAC5B,QAAI24D,MAAAA,GADwB,EAC5B;AACA,QAAM9Y,GAAAA,GAFsB,EAE5B;;AAF4B,+CAI5B,MAJ4B;AAAA;;AAAA;AAI5B,0DAAoC;AAAA,YAApC,aAAoC;;AAClC,YAAI+Y,aAAAA,CAAAA,EAAAA,KAAJ,QAAiC;AAC/BD,UAAAA,MAAAA,CAAAA,IAAAA,CAAY;AAAEhjB,YAAAA,IAAAA,EAAF;AAAYzrD,YAAAA,EAAAA,EAAZ;AAAyB07C,YAAAA,KAAAA,EAAzB;AAAA,WAAZ+yB;AACA9Y,UAAAA,GAAAA,CAAAA,IAAAA,CAF+B,MAE/BA;AACA8Y,UAAAA,MAAAA,GAASA,MAAAA,CAAOA,MAAAA,CAAAA,MAAAA,GAAPA,CAAAA,CAAAA,CAHsB,KAG/BA;AAH+B;AADC;;AAQlC,YAAIC,aAAAA,CAAAA,EAAAA,KAAJ,WAAoC;AAClCD,UAAAA,MAAAA,GAAS9Y,GAAAA,CADyB,GACzBA,EAAT8Y;AADF,eAEO;AACLA,UAAAA,MAAAA,CAAAA,IAAAA,CADK,aACLA;AAXgC;AAJR;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkB5B,WAlB4B,MAkB5B;AA5UF;;AAAA,MAsVA,EAtVA,GAsVA,mBAAmB;AACjB,QAAI54D,MAAAA,CAAAA,SAAAA,CAAJ,KAAIA,CAAJ,EAA6B;AAC3B,aAAO5W,KAAAA,CADoB,QACpBA,EAAP;AAFe;;AAIjB,QAAM0jD,CAAAA,GAAI1jD,KAAAA,CAAAA,OAAAA,CAJO,EAIPA,CAAV;AACA,QAAIlD,CAAAA,GAAI4mD,CAAAA,CAAAA,MAAAA,GALS,CAKjB;;AACA,QAAIA,CAAAA,CAAAA,CAAAA,CAAAA,KAAJ,KAAkB;AAChB,aADgB,CAChB;AAPe;;AAWjB,OAAG;AACD5mD,MAAAA,CADC;AAAH,aAES4mD,CAAAA,CAAAA,CAAAA,CAAAA,KAbQ,GAWjB;;AAGA,WAAOA,CAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAeA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,GAAAA,GAAAA,CAAAA,GAAmB5mD,CAAAA,GAdxB,CAcV4mD,CAAP;AApWF;;AAAA,MAgXA,EAhXA,GAgXA,eAAe;AACb,QAAI1qC,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAAA,IAAcA,CAAAA,CAAAA,CAAAA,CAAAA,KAAlB,GAA8B;AAC5B,UAAIA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAAA,IAAcA,CAAAA,CAAAA,CAAAA,CAAAA,KAAlB,GAA8B;AAC5B,YAAIA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAAA,IAAcA,CAAAA,CAAAA,CAAAA,CAAAA,KAAlB,GAA8B;AAC5B,iBAD4B,EAC5B;AAF0B;;AAI5B,+BAAgB02D,EAAAA,CAAG12D,CAAAA,CAAZ,CAAYA,CAAH02D,CAAhB,cAA4BA,EAAAA,CAAG12D,CAAAA,CAJH,CAIGA,CAAH02D,CAA5B;AAL0B;;AAO5B,UAAI12D,CAAAA,CAAAA,CAAAA,CAAAA,KAASA,CAAAA,CAATA,CAASA,CAATA,IAAiBA,CAAAA,CAAAA,CAAAA,CAAAA,KAAS,CAACA,CAAAA,CAA/B,CAA+BA,CAA/B,EAAqC;AACnC,YAAMW,CAAAA,GAAKve,IAAAA,CAAAA,IAAAA,CAAU4d,CAAAA,CAAV5d,CAAU4d,CAAV5d,IAAD,GAACA,GAAyBA,IAAAA,CADD,EACnC;AACA,gCAAiBs0E,EAAAA,CAFkB,CAElBA,CAAjB;AAT0B;AAA9B,WAWO;AACL,UAAI12D,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAAA,IAAcA,CAAAA,CAAAA,CAAAA,CAAAA,KAAdA,CAAAA,IAA4BA,CAAAA,CAAAA,CAAAA,CAAAA,KAA5BA,CAAAA,IAA0CA,CAAAA,CAAAA,CAAAA,CAAAA,KAA9C,GAA0D;AACxD,mCAAoB02D,EAAAA,CAAG12D,CAAAA,CAAhB,CAAgBA,CAAH02D,CAApB,cAAgCA,EAAAA,CAAG12D,CAAAA,CADqB,CACrBA,CAAH02D,CAAhC;AAFG;AAZM;;AAiBb,WACE,iBAAUA,EAAAA,CAAG12D,CAAAA,CAAb,CAAaA,CAAH02D,CAAV,cAAsBA,EAAAA,CAAG12D,CAAAA,CAAzB,CAAyBA,CAAH02D,CAAtB,cAAkCA,EAAAA,CAAG12D,CAAAA,CAArC,CAAqCA,CAAH02D,CAAlC,cAA8CA,EAAAA,CAAG12D,CAAAA,CAAjD,CAAiDA,CAAH02D,CAA9C,cAA0DA,EAAAA,CAAG12D,CAAAA,CAA7D,CAA6DA,CAAH02D,CAA1D,mBACGA,EAAAA,CAAG12D,CAAAA,CAnBK,CAmBLA,CAAH02D,CADH,MADF;AAjYF;;AACA,MAAMjC,YAAAA,GAAe;AACnBC,IAAAA,SAAAA,EADmB;AAEnBC,IAAAA,UAAAA,EAFmB;AAGnBjgB,IAAAA,SAAAA,EAHmB;AAAA,GAArB;AAKA,MAAMkgB,MAAAA,GANN,sCAMA;AACA,MAAMC,QAAAA,GAPN,8BAOA;AACA,MAAMliB,eAAAA,GAAkB,2BAAxB;AACA,MAAMC,gBAAAA,GAAmB,2BAAzB;;AAEA,MAAMkiB,mBAAAA,GAAuB,YAAY;AACvC,QAAMC,UAAAA,GAAa,eAAe,gDAAf,CAAnB;AAGA,QAAMC,kBAAAA,GAJiC,EAIvC;AAEA,QAAMC,QAAAA,GAAW,eANsB,GAMtB,CAAjB;;AACA,SAAK,IAAInxE,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,KAAyBA,CAAzB,IAA8B;AAC5B,UAAI+c,CAAAA,GADwB,CAC5B;;AACA,WAAK,IAAIo7C,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,GAAuBA,CAAvB,IAA4B;AAC1B,YAAIp7C,CAAAA,GAAJ,GAAW;AACTA,UAAAA,CAAAA,GAAI,aAAeA,CAAAA,IAAD,CAACA,GADV,UACTA;AADF,eAEO;AACLA,UAAAA,CAAAA,GAAKA,CAAAA,IAAD,CAACA,GADA,UACLA;AAJwB;AAFA;;AAS5Bo0D,MAAAA,QAAAA,CAAAA,CAAAA,CAAAA,GAT4B,CAS5BA;AAhBqC;;AAmBvC,qCAAiC;AAC/B,UAAIC,GAAAA,GAAM,CADqB,CAC/B;;AACA,WAAK,IAAIpxE,EAAAA,GAAT,OAAoBA,EAAAA,GAApB,KAA6BA,EAA7B,IAAkC;AAChC,YAAM6c,CAAAA,GAAK,OAAM3f,IAAAA,CAAP,EAAOA,CAAN,IADqB,IAChC;AACA,YAAM4f,CAAAA,GAAIq0D,QAAAA,CAFsB,CAEtBA,CAAV;AACAC,QAAAA,GAAAA,GAAOA,GAAAA,KAAD,CAACA,GAHyB,CAGhCA;AAL6B;;AAO/B,aAAOA,GAAAA,GAAM,CAPkB,CAO/B;AA1BqC;;AA6BvC,qDAAiD;AAC/C,UAAIn1D,CAAAA,GAD2C,MAC/C;AACA,UAAM0L,GAAAA,GAAM0pD,IAAAA,CAFmC,MAE/C;AAEAn0E,MAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAWyqB,GAAAA,IAAD,EAACA,GAJoC,IAI/CzqB;AACAA,MAAAA,IAAAA,CAAK+e,CAAAA,GAAL/e,CAAAA,CAAAA,GAAeyqB,GAAAA,IAAD,EAACA,GALgC,IAK/CzqB;AACAA,MAAAA,IAAAA,CAAK+e,CAAAA,GAAL/e,CAAAA,CAAAA,GAAeyqB,GAAAA,IAAD,CAACA,GANgC,IAM/CzqB;AACAA,MAAAA,IAAAA,CAAK+e,CAAAA,GAAL/e,CAAAA,CAAAA,GAAcyqB,GAAAA,GAPiC,IAO/CzqB;AACA+e,MAAAA,CAAAA,IAR+C,CAQ/CA;AAEA/e,MAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAU6G,IAAAA,CAAAA,UAAAA,CAAAA,CAAAA,IAVqC,IAU/C7G;AACAA,MAAAA,IAAAA,CAAK+e,CAAAA,GAAL/e,CAAAA,CAAAA,GAAc6G,IAAAA,CAAAA,UAAAA,CAAAA,CAAAA,IAXiC,IAW/C7G;AACAA,MAAAA,IAAAA,CAAK+e,CAAAA,GAAL/e,CAAAA,CAAAA,GAAc6G,IAAAA,CAAAA,UAAAA,CAAAA,CAAAA,IAZiC,IAY/C7G;AACAA,MAAAA,IAAAA,CAAK+e,CAAAA,GAAL/e,CAAAA,CAAAA,GAAc6G,IAAAA,CAAAA,UAAAA,CAAAA,CAAAA,IAbiC,IAa/C7G;AACA+e,MAAAA,CAAAA,IAd+C,CAc/CA;AAEA/e,MAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,EAhB+C,CAgB/CA;AACA+e,MAAAA,CAAAA,IAAKo1D,IAAAA,CAjB0C,MAiB/Cp1D;AAEA,UAAMm1D,GAAAA,GAAME,KAAAA,CAAAA,IAAAA,EAAY3qB,MAAAA,GAAZ2qB,CAAAA,EAnBmC,CAmBnCA,CAAZ;AACAp0E,MAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAWk0E,GAAAA,IAAD,EAACA,GApBoC,IAoB/Cl0E;AACAA,MAAAA,IAAAA,CAAK+e,CAAAA,GAAL/e,CAAAA,CAAAA,GAAek0E,GAAAA,IAAD,EAACA,GArBgC,IAqB/Cl0E;AACAA,MAAAA,IAAAA,CAAK+e,CAAAA,GAAL/e,CAAAA,CAAAA,GAAek0E,GAAAA,IAAD,CAACA,GAtBgC,IAsB/Cl0E;AACAA,MAAAA,IAAAA,CAAK+e,CAAAA,GAAL/e,CAAAA,CAAAA,GAAck0E,GAAAA,GAvBiC,IAuB/Cl0E;AApDqC;;AAuDvC,uCAAmC;AACjC,UAAI2f,CAAAA,GAD6B,CACjC;AACA,UAAIC,CAAAA,GAF6B,CAEjC;;AACA,WAAK,IAAI9c,GAAAA,GAAT,OAAoBA,GAAAA,GAApB,KAA6B,EAA7B,KAAkC;AAChC6c,QAAAA,CAAAA,GAAK,MAAK,YAAN,IAAC,KAD2B,KAChCA;AACAC,QAAAA,CAAAA,GAAK,KAAD,CAAC,IAF2B,KAEhCA;AAL+B;;AAOjC,aAAQA,CAAAA,IAAD,EAACA,GAPyB,CAOjC;AA9DqC;;AAuEvC,mCAA+B;AAC7B,UAAI,CAAJ,mBAAe;AAIb,eAAOy0D,uBAAAA,CAJM,QAINA,CAAP;AAL2B;;AAO7B,UAAI;AAUF,YAVE,KAUF;;AAEA,YAAIxvE,QAAAA,CAASod,OAAAA,CAAAA,QAAAA,CAATpd,IAAAA,CAAAA,IAAJ,GAA0C;AACxCkgB,UAAAA,KAAAA,GADwC,QACxCA;AADF,eAEO;AAELA,UAAAA,KAAAA,GAAQhD,MAAAA,CAAAA,IAAAA,CAFH,QAEGA,CAARgD;AAhBA;;AAkBF,YAAMqgD,MAAAA,GAAS9Z,OAAAA,CAAAA,MAAAA,CAAAA,CAAAA,WAAAA,CAAAA,KAAAA,EAAmD;AAChEgpB,UAAAA,KAAAA,EAnBA;AAkBgE,SAAnDhpB,CAAf;;AAGA,eAAO8Z,MAAAA,YAAAA,UAAAA,GAAAA,MAAAA,GAAwC,eArB7C,MAqB6C,CAA/C;AArBF,QAsBE,UAAU;AACVhiE,wBACE,kEAFQ,CACVA;AA9B2B;;AAmC7B,aAAOixE,uBAAAA,CAnCsB,QAmCtBA,CAAP;AA1GqC;;AA8GvC,+CAA2C;AACzC,UAAI5pD,GAAAA,GAAM8pD,QAAAA,CAD+B,MACzC;AACA,UAAMC,cAAAA,GAFmC,MAEzC;AAEA,UAAMC,aAAAA,GAAgBrzE,IAAAA,CAAAA,IAAAA,CAAUqpB,GAAAA,GAJS,cAInBrpB,CAAtB;AACA,UAAMszE,IAAAA,GAAO,eAAe,UAAUD,aAAAA,GAAV,IALa,CAK5B,CAAb;AACA,UAAIE,EAAAA,GANqC,CAMzC;AACAD,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAPyC,IAOzCA;AACAA,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GARyC,IAQzCA;AAEA,UAAI32D,GAAAA,GAVqC,CAUzC;;AACA,aAAO0M,GAAAA,GAAP,gBAA6B;AAE3BiqD,QAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAF2B,IAE3BA;AACAA,QAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAH2B,IAG3BA;AACAA,QAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAJ2B,IAI3BA;AACAA,QAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAL2B,IAK3BA;AACAA,QAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAN2B,IAM3BA;AACAA,QAAAA,IAAAA,CAAAA,GAAAA,CAASH,QAAAA,CAAAA,QAAAA,CAAAA,GAAAA,EAAuBx2D,GAAAA,GAAhC22D,cAASH,CAATG,EAP2B,EAO3BA;AACAC,QAAAA,EAAAA,IAR2B,cAQ3BA;AACA52D,QAAAA,GAAAA,IAT2B,cAS3BA;AACA0M,QAAAA,GAAAA,IAV2B,cAU3BA;AArBuC;;AAyBzCiqD,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAzByC,IAyBzCA;AACAA,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAAajqD,GAAAA,GA1B4B,IA0BzCiqD;AACAA,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAAcjqD,GAAAA,IAAD,CAACA,GA3B2B,IA2BzCiqD;AACAA,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAAa,gBA5B4B,IA4BzCA;AACAA,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAAe,QAAD,MAAC,KAAF,CAAE,GA7B0B,IA6BzCA;AACAA,MAAAA,IAAAA,CAAAA,GAAAA,CAASH,QAAAA,CAAAA,QAAAA,CAATG,GAASH,CAATG,EA9ByC,EA8BzCA;AACAC,MAAAA,EAAAA,IAAMJ,QAAAA,CAAAA,MAAAA,GA/BmC,GA+BzCI;AAEA,UAAMC,KAAAA,GAAQC,OAAAA,CAAAA,QAAAA,EAAAA,CAAAA,EAAqBN,QAAAA,CAjCM,MAiC3BM,CAAd;AACAH,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAAcE,KAAAA,IAAD,EAACA,GAlC2B,IAkCzCF;AACAA,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAAcE,KAAAA,IAAD,EAACA,GAnC2B,IAmCzCF;AACAA,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAAcE,KAAAA,IAAD,CAACA,GApC2B,IAoCzCF;AACAA,MAAAA,IAAAA,CAAKC,EAALD,EAAAA,CAAAA,GAAaE,KAAAA,GArC4B,IAqCzCF;AACA,aAtCyC,IAsCzC;AApJqC;;AAuJvC,4DAAwD;AACtD,UAAMpzE,KAAAA,GAAQ+rD,OAAAA,CADwC,KACtD;AACA,UAAM9rD,MAAAA,GAAS8rD,OAAAA,CAFuC,MAEtD;AACA,+BAHsD,QAGtD;AACA,UAAMhwC,KAAAA,GAAQgwC,OAAAA,CAJwC,IAItD;;AAEA;AACE,aAAKlgD,gBAAL;AACE2nE,UAAAA,SAAAA,GADF,CACEA;AACAC,UAAAA,QAAAA,GAFF,CAEEA;AACAvnB,UAAAA,QAAAA,GAAYlsD,KAAAA,GAAD,CAACA,IAHd,CAGEksD;AAJJ;;AAME,aAAKrgD,gBAAL;AACE2nE,UAAAA,SAAAA,GADF,CACEA;AACAC,UAAAA,QAAAA,GAFF,CAEEA;AACAvnB,UAAAA,QAAAA,GAAWlsD,KAAAA,GAHb,CAGEksD;AATJ;;AAWE,aAAKrgD,gBAAL;AACE2nE,UAAAA,SAAAA,GADF,CACEA;AACAC,UAAAA,QAAAA,GAFF,CAEEA;AACAvnB,UAAAA,QAAAA,GAAWlsD,KAAAA,GAHb,CAGEksD;AAdJ;;AAgBE;AACE,gBAAM,UAjBV,gBAiBU,CAAN;AAjBJ;;AAqBA,UAAM+mB,QAAAA,GAAW,eAAgB,KAAD,QAAC,IA3BqB,MA2BrC,CAAjB;AACA,UAAIS,cAAAA,GAAJ;AAAA,UACEC,WAAAA,GA7BoD,CA4BtD;;AAEA,WAAK,IAAI7oD,CAAAA,GAAT,GAAgBA,CAAAA,GAAhB,QAA4B,EAA5B,GAAiC;AAC/BmoD,QAAAA,QAAAA,CAASS,cAATT,EAAAA,CAAAA,GAD+B,CAC/BA;AACAA,QAAAA,QAAAA,CAAAA,GAAAA,CACEl3D,KAAAA,CAAAA,QAAAA,CAAAA,WAAAA,EAA4B43D,WAAAA,GAD9BV,QACEl3D,CADFk3D,EAF+B,cAE/BA;AAIAU,QAAAA,WAAAA,IAN+B,QAM/BA;AACAD,QAAAA,cAAAA,IAP+B,QAO/BA;AArCoD;;AAwCtD,UAAIzlD,IAAAA,KAASpiB,gBAAToiB,cAAAA,IAAJ,QAAiD;AAE/CylD,QAAAA,cAAAA,GAF+C,CAE/CA;;AACA,aAAK,IAAI5oD,EAAAA,GAAT,GAAgBA,EAAAA,GAAhB,QAA4BA,EAA5B,IAAiC;AAC/B4oD,UAAAA,cAD+B;;AAE/B,eAAK,IAAIlyE,GAAAA,GAAT,GAAgBA,GAAAA,GAAhB,UAA8BA,GAA9B,IAAmC;AACjCyxE,YAAAA,QAAAA,CAASS,cAATT,EAAAA,CAAAA,IADiC,IACjCA;AAH6B;AAHc;AAxCK;;AAmDtD,UAAMW,IAAAA,GAAO,eAAe,CACzB5zE,KAAAA,IAAD,EAACA,GADyB,MAEzBA,KAAAA,IAAD,EAACA,GAFyB,MAGzBA,KAAAA,IAAD,CAACA,GAHyB,MAI1BA,KAAAA,GAJ0B,MAKzBC,MAAAA,IAAD,EAACA,GALyB,MAMzBA,MAAAA,IAAD,EAACA,GANyB,MAOzBA,MAAAA,IAAD,CAACA,GAPyB,MAQ1BA,MAAAA,GAR0B,4CAAf,CAAb;AAeA,UAAMmzE,IAAAA,GAAOS,WAAAA,CAlEyC,QAkEzCA,CAAb;AAGA,UAAMC,SAAAA,GACJrB,UAAAA,CAAAA,MAAAA,GAAoBC,kBAAAA,GAApBD,CAAAA,GAA6CmB,IAAAA,CAA7CnB,MAAAA,GAA2DW,IAAAA,CAtEP,MAqEtD;AAEA,UAAM10E,IAAAA,GAAO,eAvEyC,SAuEzC,CAAb;AACA,UAAIypD,MAAAA,GAxEkD,CAwEtD;AACAzpD,MAAAA,IAAAA,CAAAA,GAAAA,CAAAA,UAAAA,EAzEsD,MAyEtDA;AACAypD,MAAAA,MAAAA,IAAUsqB,UAAAA,CA1E4C,MA0EtDtqB;AACA4rB,MAAAA,aAAAA,CAAAA,MAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EA3EsD,MA2EtDA,CAAAA;AACA5rB,MAAAA,MAAAA,IAAUuqB,kBAAAA,GAAqBkB,IAAAA,CA5EuB,MA4EtDzrB;AACA4rB,MAAAA,aAAAA,CAAAA,OAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EA7EsD,MA6EtDA,CAAAA;AACA5rB,MAAAA,MAAAA,IAAUuqB,kBAAAA,GAAqBU,IAAAA,CA9EuB,MA8EtDjrB;AACA4rB,MAAAA,aAAAA,CAAAA,MAAAA,EAAsB,eAAtBA,CAAsB,CAAtBA,EAAAA,IAAAA,EA/EsD,MA+EtDA,CAAAA;AAEA,aAAOC,2BAAAA,IAAAA,EAAAA,WAAAA,EAjF+C,eAiF/CA,CAAP;AAxOqC;;AA4OvC,WAAO,+DAA+D;AACpE,UAAM/lD,IAAAA,GACJ89B,OAAAA,CAAAA,IAAAA,KAAAA,SAAAA,GAA6BlgD,gBAA7BkgD,cAAAA,GAAwDA,OAAAA,CAFU,IACpE;AAEA,aAAOkoB,MAAAA,CAAAA,OAAAA,EAAAA,IAAAA,EAAAA,eAAAA,EAH6D,MAG7DA,CAAP;AA/OqC,KA4OvC;AAvPF,GAW6B,EAA7B;;AAXA,MA8PA,aA9PA;AA+PEp2E,6BAAc;AAAA;;AACZ,2BADY,CACZ;AACA,wBAAkBs0E,YAAAA,CAFN,UAEZ;AACA,sBAHY,CAGZ;AAEA,wBALY,qBAKZ;AACA,wBANY,0BAMZ;AACA,qBAPY,CAOZ;AACA,+BAAyBjnE,wBARb,IAQZ;AACA,6BATY,CASZ;AAGA,eAZY,CAYZ;AACA,eAbY,CAaZ;AAGA,mBAhBY,CAgBZ;AACA,mBAjBY,CAiBZ;AAGA,yBApBY,CAoBZ;AACA,yBArBY,CAqBZ;AACA,wBAtBY,CAsBZ;AACA,sBAvBY,CAuBZ;AAGA,uBAAiBinE,YAAAA,CA1BL,SA0BZ;AACA,yBA3BY,SA2BZ;AAEA,uBA7BY,CA6BZ;AACA,yBA9BY,CA8BZ;AACA,uBA/BY,CA+BZ;AACA,sBAhCY,EAgCZ;AACA,qBAjCY,EAiCZ;AACA,wBAlCY,CAkCZ;AAEA,uBApCY,EAoCZ;AACA,uBArCY,CAqCZ;AAEA,0BAvCY,EAuCZ;AAGA,2BA1CY,IA0CZ;AACA,uBA3CY,IA2CZ;AAEA,oBA7CY,EA6CZ;AA9CgB;;AA9PpB;AAAA;AAAA,aA+SEjyE,iBAAQ;AACN,eAAOkC,MAAAA,CAAAA,MAAAA,CADD,IACCA,CAAP;AAlDgB;AA9PpB;AAAA;AAAA,aAmTEirD,yBAAAA,CAAAA,EAAAA,CAAAA,EAAsB;AACpB,iBADoB,CACpB;AACA,iBAFoB,CAEpB;AAvDgB;AA9PpB;;AAAA;AAAA;;AA0YA,MAAIgnB,SAAAA,GA1YJ,CA0YA;AACA,MAAIC,SAAAA,GA3YJ,CA2YA;AACA,MAAIC,YAAAA,GA5YJ,CA4YA;;AAEArC,EAAAA,mBAAAA,GAAAA,WAAAA;AACEr0E,yBAAAA,UAAAA,EAAAA,IAAAA,EAAuD;AAAA,UAAzBkiB,eAAyB,uEAAvDliB,KAAuD;;AAAA;;AACrD,wBAAkB,IADmC,4BACnC,EAAlB;AAEA,qBAAe,IAHsC,aAGtC,EAAf;AACA,6BAJqD,qBAIrD;AACA,4BALqD,EAKrD;AACA,wBANqD,EAMrD;AACA,wBAPqD,UAOrD;AACA,kBARqD,IAQrD;AACA,yBATqD,IASrD;AACA,2BAVqD,KAUrD;AAEA,wBAZqD,KAYrD;AACA,2BAAqBuE,MAAAA,CAAAA,MAAAA,CAbgC,IAahCA,CAArB;AACA,sBAdqD,IAcrD;AACA,6BAAuB,CAAC,CAf6B,eAerD;AAKA,gCApBqD,EAoBrD;;AACA,gCAAsB;AACpB,gCAAwB2R,UAAxB,EAAwBA,CAAxB,IADoB,EACpB;AAtBmD;AADrC;;AAApBm+D;AAAAA;AAAAA,aA2BEz9D,gBAAO;AACL,iCAAyB,KADpB,eACL;AACA,YAAM42C,GAAAA,GAAM,KAFP,OAEL;AACA,6BAHK,GAGL;AACA,uBAAeA,GAAAA,CAJV,KAIUA,EAAf;AA/BgB;AAApB6mB;AAAAA;AAAAA,aAkCEx9D,mBAAU;AACR,+BAAuB,oBADf,GACe,EAAvB;AACA,uBAAe,gBAFP,GAEO,EAAf;AACA,2BAHQ,IAGR;AACA,oBAJQ,IAIR;AAtCgB;AAApBw9D;AAAAA;AAAAA,aAyCErZ,eAAAA,KAAAA,EAAa;AACX,aADW,IACX;AACA,2BAFW,KAEX;AACA,aAHW,OAGX;AA5CgB;AAApBqZ;AAAAA;AAAAA,aA+CEsC,0BAAAA,YAAAA,EAA+B;AAAA;;AAC7B,YAAMj1B,OAAAA,GAAUQ,YAAAA,CADa,OAC7B;AACA,YAAMP,SAAAA,GAAYO,YAAAA,CAFW,SAE7B;;AAEA,aAAK,IAAIv+C,CAAAA,GAAJ,GAAWD,EAAAA,GAAKg+C,OAAAA,CAArB,QAAqC/9C,CAAAA,GAArC,IAA6CA,CAA7C,IAAkD;AAChD,cAAI+9C,OAAAA,CAAAA,CAAAA,CAAAA,KAAexrC,UAAnB,YAAmC;AAAA;AADa;;AAAA,sDAK9ByrC,SAAAA,CAAlB,CAAkBA,CAL8B;AAAA;;AAAA;AAAA;AAAA,kBAKhD,GALgD;AAM9C,kBAAM2R,QAAAA,GAAWrsD,GAAAA,CAAAA,UAAAA,CAAAA,IAAAA,IAAuB,MAAvBA,UAAAA,GAAyC,MAD5B,IAC9B;AACA,kBAAM+wB,OAAAA,GAAU,YAAYl3B,UAAAA,OAAAA,EAAW;AACrCwyD,gBAAAA,QAAAA,CAAAA,GAAAA,CAAAA,GAAAA,EADqC,OACrCA;AAH4B,eAEd,CAAhB;;AAGA,8CAL8B,OAK9B;AAV8C;;AAKhD,mEAAgC;AAAA;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAJrB;;AAiB7B,eAAOv5B,OAAAA,CAAAA,GAAAA,CAAY,aAjBU,YAiBtBA,CAAP;AAhEgB;AAApBs6C;AAAAA;AAAAA,aAmEEv9D,mBAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAA4B;AAC1B,YAAM8/D,eAAAA,GAAkB,kBAAxB;AACA,+BAAuB32D,WAAAA,SAAAA,CACrB,KADqBA,eAAAA,EAFG,eAEHA,CAAvB;AAIA,oBAN0B,IAM1B;AAzEgB;AAApBo0D;AAAAA;AAAAA,aA4EEwC,gBAAAA,YAAAA,EAAAA,QAAAA,EAA+B;AAAA;;AAC7B,wBAD6B,QAC7B;;AAEA,YAAMC,UAAAA,GAAa,iBAHU,QAGV,CAAnB;;AACA,eAAO,yCAAyC,YAAM;AACpD,mCADoD,qBACpD;;AACA,+BAAmB,qBAFiC,YAEjC,CAAnB;;AACA,iBAHoD,UAGpD;AAP2B,SAItB,CAAP;AAhFgB;AAApBzC;AAAAA;AAAAA,aAuFE0C,uBAAAA,YAAAA,EAA4B;AAC1B,YAAMC,iBAAAA,GAAoB,KADA,kBAC1B;AACA,YAAMr1B,SAAAA,GAAYO,YAAAA,CAFQ,SAE1B;AACA,YAAMR,OAAAA,GAAUQ,YAAAA,CAHU,OAG1B;AACA,YAAM+0B,MAAAA,GAJoB,EAI1B;;AACA,aAAK,IAAItzE,CAAAA,GAAJ,GAAWD,EAAAA,GAAKg+C,OAAAA,CAArB,QAAqC/9C,CAAAA,GAArC,IAA6CA,CAA7C,IAAkD;AAChD,cAAM0vD,IAAAA,GAAO3R,OAAAA,CADmC,CACnCA,CAAb;AACAu1B,UAAAA,MAAAA,CAAAA,IAAAA,CAAY;AACV5jB,YAAAA,IADU,EACVA,IADU;AAEVzrD,YAAAA,EAAAA,EAAIovE,iBAAAA,CAFM,IAENA,CAFM;AAGV3rD,YAAAA,IAAAA,EAAMs2B,SAAAA,CAHI,CAGJA;AAHI,WAAZs1B;AAPwB;;AAa1B,eAAOC,YAAAA,CAbmB,MAanBA,CAAP;AApGgB;AAApB7C;AAAAA;AAAAA,aAuGE8C,uBAAAA,MAAAA,EAAsB;AAAA,oDACpB,MADoB;AAAA;;AAAA;AACpB,iEAAoC;AAAA,gBAApC,aAAoC;AAClC,gBAAMvvE,EAAAA,GAAKwvE,aAAAA,CADuB,EAClC;AACA,gBAAM/jB,IAAAA,GAAO+jB,aAAAA,CAFqB,IAElC;AACA,gBAAM/rD,IAAAA,GAAO+rD,aAAAA,CAHqB,IAGlC;;AAEA,oBAAQ/jB,IAAAA,GAAR;AACE,mBAAKn9C,UAAL;AACE,qBADF,SACE;AAFJ;;AAIE,mBAAKA,UAAL;AAJF;;AAOE,mBAAKA,UAAL;AACE,gCADF,IACE;AARJ;;AAUE,mBAAKA,UAAL;AACE,wCAAwBmV,IAAAA,CAAxB,CAAwBA,CAAxB,EAAiCA,IAAAA,CADnC,CACmCA,CAAjC;AAXJ;;AAaE,mBAAKnV,UAAL;AACE,6BADF,IACE;AAdJ;;AAgBE,mBAAKA,UAAL;AACE,8BAAcmV,IAAAA,CADhB,CACgBA,CAAd;AAjBJ;;AAmBE,mBAAKnV,UAAL;AACE,8BAAcmV,IAAAA,CADhB,CACgBA,CAAd;AApBJ;;AAsBE,mBAAKnV,UAAL;AACE,qBADF,OACE;AAvBJ;;AAyBE,mBAAKA,UAAL;AACE,8BAAcmV,IAAAA,CAAd,CAAcA,CAAd,EAAuBA,IAAAA,CADzB,CACyBA,CAAvB;AA1BJ;;AA4BE,mBAAKnV,UAAL;AACE,oCAAoBmV,IAAAA,CADtB,CACsBA,CAApB;AA7BJ;;AA+BE,mBAAKnV,UAAL;AACE,oCAAoBmV,IAAAA,CADtB,CACsBA,CAApB;AAhCJ;;AAkCE,mBAAKnV,UAAL;AACE,+BAAemV,IAAAA,CADjB,CACiBA,CAAf;AAnCJ;;AAqCE,mBAAKnV,UAAL;AACE,mCACEmV,IAAAA,CADF,CACEA,CADF,EAEEA,IAAAA,CAFF,CAEEA,CAFF,EAGEA,IAAAA,CAHF,CAGEA,CAHF,EAIEA,IAAAA,CAJF,CAIEA,CAJF,EAKEA,IAAAA,CALF,CAKEA,CALF,EAMEA,IAAAA,CAPJ,CAOIA,CANF;AAtCJ;;AA+CE,mBAAKnV,UAAL;AACE,iCAAiBmV,IAAAA,CADnB,CACmBA,CAAjB;AAhDJ;;AAkDE,mBAAKnV,UAAL;AACE,0CAA0BmV,IAAAA,CAD5B,CAC4BA,CAA1B;AAnDJ;;AAqDE,mBAAKnV,UAAL;AACE,kCAAkBmV,IAAAA,CADpB,CACoBA,CAAlB;AAtDJ;;AAwDE,mBAAKnV,UAAL;AACE,iCAAiBmV,IAAAA,CADnB,CACmBA,CAAjB;AAzDJ;;AA2DE,mBAAKnV,UAAL;AACE,gCAAgBmV,IAAAA,CADlB,CACkBA,CAAhB;AA5DJ;;AA8DE,mBAAKnV,UAAL;AACE,mCAAmBmV,IAAAA,CADrB,CACqBA,CAAnB;AA/DJ;;AAiEE,mBAAKnV,UAAL;AACE,qCAAqBmV,IAAAA,CAArB,CAAqBA,CAArB,EAA8BA,IAAAA,CAA9B,CAA8BA,CAA9B,EAAuCA,IAAAA,CADzC,CACyCA,CAAvC;AAlEJ;;AAoEE,mBAAKnV,UAAL;AACE,uCAAuBmV,IAAAA,CAAvB,CAAuBA,CAAvB,EAAgCA,IAAAA,CAAhC,CAAgCA,CAAhC,EAAyCA,IAAAA,CAD3C,CAC2CA,CAAzC;AArEJ;;AAuEE,mBAAKnV,UAAL;AACE,qCADF,IACE;AAxEJ;;AA0EE,mBAAKA,UAAL;AACE,mCADF,IACE;AA3EJ;;AA6EE,mBAAKA,UAAL;AACE,iCAAiBmV,IAAAA,CADnB,CACmBA,CAAjB;AA9EJ;;AAgFE,mBAAKnV,UAAL;AACE,6BAAamV,IAAAA,CAAb,CAAaA,CAAb,EAAsBA,IAAAA,CADxB,CACwBA,CAAtB;AAjFJ;;AAmFE,mBAAKnV,UAAL;AACE,wCAAwBmV,IAAAA,CAD1B,CAC0BA,CAAxB;AApFJ;;AAsFE,mBAAKnV,UAAL;AACE,iCAAiBmV,IAAAA,CADnB,CACmBA,CAAjB;AAvFJ;;AAyFE,mBAAKnV,UAAL;AACE,+BAAemV,IAAAA,CADjB,CACiBA,CAAf;AA1FJ;;AA4FE,mBAAKnV,UAAL;AACE,qBADF,IACE;AA7FJ;;AA+FE,mBAAKA,UAAL;AACE,qBADF,MACE;AAhGJ;;AAkGE,mBAAKA,UAAL;AACE,qBADF,MACE;AAnGJ;;AAqGE,mBAAKA,UAAL;AACE,qBADF,UACE;AAtGJ;;AAwGE,mBAAKA,UAAL;AACE,qBADF,YACE;AAzGJ;;AA2GE,mBAAKA,UAAL;AACE,0BADF,SACE;AA5GJ;;AA8GE,mBAAKA,UAAL;AACE,0BADF,SACE;AA/GJ;;AAiHE,mBAAKA,UAAL;AACE,qBADF,wBACE;AAlHJ;;AAoHE,mBAAKA,UAAL;AACE,uCAAuBmV,IAAAA,CADzB,CACyBA,CAAvB;AArHJ;;AAuHE,mBAAKnV,UAAL;AACE,6CAA6BmV,IAAAA,CAD/B,CAC+BA,CAA7B;AAxHJ;;AA0HE,mBAAKnV,UAAL;AACE,2CAA2BmV,IAAAA,CAD7B,CAC6BA,CAA3B;AA3HJ;;AA6HE,mBAAKnV,UAAL;AACE,2CAA2BmV,IAAAA,CAA3B,CAA2BA,CAA3B,EAAoCA,IAAAA,CADtC,CACsCA,CAApC;AA9HJ;;AAgIE,mBAAKnV,UAAL;AACE,qBADF,mBACE;AAjIJ;;AAmIE,mBAAKA,UAAL;AACE,qBADF,SACE;AApIJ;;AAsIE,mBAAKA,UAAL;AACE,qBADF,WACE;AAvIJ;;AAyIE,mBAAKA,UAAL;AACE,qBADF,eACE;AA1IJ;;AA4IE,mBAAKA,UAAL;AACE,qBADF,iBACE;AA7IJ;;AA+IE,mBAAKA,UAAL;AACE,qBADF,QACE;AAhJJ;;AAkJE,mBAAKA,UAAL;AACE,+BACEmV,IAAAA,CADF,CACEA,CADF,EAEEA,IAAAA,CAFF,CAEEA,CAFF,EAGEA,IAAAA,CAHF,CAGEA,CAHF,EAIEA,IAAAA,CAJF,CAIEA,CAJF,EAKEA,IAAAA,CALF,CAKEA,CALF,EAMEA,IAAAA,CAPJ,CAOIA,CANF;AAnJJ;;AA4JE,mBAAKnV,UAAL;AACE,mCAAmBmV,IAAAA,CAAnB,CAAmBA,CAAnB,EAA4BA,IAAAA,CAD9B,CAC8BA,CAA5B;AA7JJ;;AA+JE,mBAAKnV,UAAL;AACE,qBADF,OACE;AAhKJ;;AAkKE;AACE,2BAAWkhE,aAAAA,CADb,KACE;AAnKJ;;AAqKE;AACEnzE,iEADF,EACEA;AAtKJ;AAAA;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAvGJ;AAApBowE;AAAAA;AAAAA,aAyREj8D,wBAAAA,WAAAA,EAA4B;AAC1B,mCAD0B,WAC1B;AA1RgB;AAApBi8D;AAAAA;AAAAA,aA6REl8D,wBAAAA,WAAAA,EAA4B;AAC1B,mCAD0B,WAC1B;AA9RgB;AAApBk8D;AAAAA;AAAAA,aAiSEx7D,oBAAW;AACT,yBAAiB,aADR,OACT;AAlSgB;AAApBw7D;AAAAA;AAAAA,aAqSEz7D,uBAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAgC;AAC9B,YAAMkzC,OAAAA,GAAU,KADc,OAC9B;AACAA,QAAAA,OAAAA,CAAAA,UAAAA,GAAqBA,OAAAA,CAAAA,UAAAA,GAAqB,kBAA1CA;AACAA,QAAAA,OAAAA,CAAAA,eAAAA,GAA0B7pD,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAHI,CAGJA,CAA1B6pD;AAEAA,QAAAA,OAAAA,CAAAA,CAAAA,GAAYA,OAAAA,CAAAA,KAAAA,GALkB,CAK9BA;AACAA,QAAAA,OAAAA,CAAAA,CAAAA,GAAYA,OAAAA,CAAAA,KAAAA,GANkB,CAM9BA;AAEAA,QAAAA,OAAAA,CAAAA,OAAAA,GAR8B,EAQ9BA;AACAA,QAAAA,OAAAA,CAAAA,OAAAA,GAT8B,EAS9BA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,GAAgB,8BAVc,WAUd,CAAhBA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,aAAAA,EAAkDA,OAAAA,CAXpB,UAW9BA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,YAGKyqB,EAAAA,CAAGzqB,OAAAA,CAfsB,QAezByqB,CAHLzqB;AAKAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAwCyqB,EAAAA,CAAG,CAACzqB,OAAAA,CAjBd,CAiBUyqB,CAAxCzqB;AAEAA,QAAAA,OAAAA,CAAAA,UAAAA,GAAqB,8BAnBS,UAmBT,CAArBA;AACAA,QAAAA,OAAAA,CAAAA,UAAAA,CAAAA,WAAAA,CAA+BA,OAAAA,CApBD,KAoB9BA;AAzTgB;AAApBuoB;AAAAA;AAAAA,aA4TEp8D,qBAAY;AACV,YAAM6zC,OAAAA,GAAU,KADN,OACV;AACAA,QAAAA,OAAAA,CAAAA,CAAAA,GAAYA,OAAAA,CAAAA,KAAAA,GAFF,CAEVA;AACAA,QAAAA,OAAAA,CAAAA,CAAAA,GAAYA,OAAAA,CAAAA,KAAAA,GAHF,CAGVA;AACAA,QAAAA,OAAAA,CAAAA,UAAAA,GAJU,qBAIVA;AACAA,QAAAA,OAAAA,CAAAA,UAAAA,GALU,qBAKVA;AACAA,QAAAA,OAAAA,CAAAA,eAAAA,GANU,CAMVA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,GAAgB,8BAPN,WAOM,CAAhBA;AACAA,QAAAA,OAAAA,CAAAA,UAAAA,GAAqB,8BARX,UAQW,CAArBA;AACAA,QAAAA,OAAAA,CAAAA,MAAAA,GAAiB,8BATP,OASO,CAAjBA;AACAA,QAAAA,OAAAA,CAAAA,OAAAA,GAVU,EAUVA;AACAA,QAAAA,OAAAA,CAAAA,OAAAA,GAXU,EAWVA;AAvUgB;AAApBuoB;AAAAA;AAAAA,aA0UE37D,kBAAAA,CAAAA,EAAAA,CAAAA,EAAe;AACb,YAAMozC,OAAAA,GAAU,KADH,OACb;AACAA,QAAAA,OAAAA,CAAAA,CAAAA,GAAYA,OAAAA,CAAAA,KAAAA,IAFC,CAEbA;AACAA,QAAAA,OAAAA,CAAAA,CAAAA,GAAYA,OAAAA,CAAAA,KAAAA,IAHC,CAGbA;AAEAA,QAAAA,OAAAA,CAAAA,OAAAA,GALa,EAKbA;AACAA,QAAAA,OAAAA,CAAAA,OAAAA,GANa,EAMbA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,GAAgB,8BAPH,WAOG,CAAhBA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,aAAAA,EAAkDA,OAAAA,CARrC,UAQbA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,YAGKyqB,EAAAA,CAAGzqB,OAAAA,CAZK,QAYRyqB,CAHLzqB;AAKAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAwCyqB,EAAAA,CAAG,CAACzqB,OAAAA,CAd/B,CAc2ByqB,CAAxCzqB;AAxVgB;AAApBuoB;AAAAA;AAAAA,aA2VEv7D,kBAAAA,MAAAA,EAAiB;AACf,YAAMgzC,OAAAA,GAAU,KADD,OACf;AACA,YAAMzvC,IAAAA,GAAOyvC,OAAAA,CAFE,IAEf;AACA,YAAMoL,QAAAA,GAAWpL,OAAAA,CAHF,QAGf;;AACA,YAAIoL,QAAAA,KAAJ,GAAoB;AAAA;AAJL;;AAQf,YAAMK,aAAAA,GAAgBzL,OAAAA,CARP,aAQf;AACA,YAAM0L,WAAAA,GAAc1L,OAAAA,CATL,WASf;AACA,YAAM2L,WAAAA,GAAc3L,OAAAA,CAVL,WAUf;AACA,YAAM4L,aAAAA,GAAgB5L,OAAAA,CAXP,aAWf;AACA,YAAM6L,UAAAA,GAAa7L,OAAAA,CAAAA,UAAAA,GAZJ,aAYf;AACA,YAAMgM,QAAAA,GAAWz7C,IAAAA,CAbF,QAaf;AACA,YAAM07C,UAAAA,GAAaD,QAAAA,GAAAA,CAAAA,GAAe,CAdnB,CAcf;AACA,YAAME,eAAAA,GAAkB37C,IAAAA,CAfT,eAef;AACA,YAAM47C,iBAAAA,GAAoBf,QAAAA,GAAWpL,OAAAA,CAAAA,UAAAA,CAhBtB,CAgBsBA,CAArC;AAEA,YAAI9+B,CAAAA,GAlBW,CAkBf;;AAlBe,oDAmBf,MAnBe;AAAA;;AAAA;AAmBf,iEAA4B;AAAA,gBAA5B,KAA4B;;AAC1B,gBAAIsrC,KAAAA,KAAJ,MAAoB;AAElBtrC,cAAAA,CAAAA,IAAK0qC,aAAAA,GAFa,WAElB1qC;AAFkB;AAApB,mBAIO,IAAIurC,iBAAJ,KAAIA,CAAJ,EAAkB;AACvBvrC,cAAAA,CAAAA,IAAM+qC,UAAAA,GAAAA,KAAAA,GAAD,QAACA,GADiB,IACvB/qC;AADuB;AALC;;AAU1B,gBAAMyrC,OAAAA,GAAW,+BAAD,CAAC,IAVS,WAU1B;AACA,gBAAMC,SAAAA,GAAYJ,KAAAA,CAXQ,QAW1B;AACA,gBAAIM,OAAJ;AAAA,gBAAaC,OAZa,SAY1B;AACA,gBAAI12D,KAAAA,GAAQm2D,KAAAA,CAbc,KAa1B;;AACA,0BAAc;AACZ,kBAAIS,EADQ,SACZ;AACA,kBAAMD,OAAAA,GAAUR,KAAAA,CAAAA,OAAAA,IAFJ,eAEZ;AACAS,cAAAA,EAAAA,GAAKT,KAAAA,CAAAA,OAAAA,GAAgBQ,OAAAA,CAAhBR,CAAgBQ,CAAhBR,GAA6Bn2D,KAAAA,GAHtB,GAGZ42D;AACAA,cAAAA,EAAAA,GAAK,MAJO,iBAIZA;AACA,kBAAMC,EAAAA,GAAKF,OAAAA,CAAAA,CAAAA,CAAAA,GALC,iBAKZ;AAEA32D,cAAAA,KAAAA,GAAQ22D,OAAAA,GAAU,CAACA,OAAAA,CAAXA,CAAWA,CAAXA,GAPI,KAOZ32D;AACAy2D,cAAAA,OAAAA,GAAUG,EAAAA,GARE,aAQZH;AACAC,cAAAA,OAAAA,GAAW,KAAD,EAAC,IATC,aASZA;AATF,mBAUO;AACLD,cAAAA,OAAAA,GAAU5rC,CAAAA,GADL,aACL4rC;AACAC,cAAAA,OAAAA,GAFK,CAELA;AA1BwB;;AA6B1B,gBAAIP,KAAAA,CAAAA,QAAAA,IAAkBj8C,IAAAA,CAAtB,aAAwC;AACtCyvC,cAAAA,OAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAqBA,OAAAA,CAAAA,CAAAA,GADiB,OACtCA;;AACA,4BAAc;AACZA,gBAAAA,OAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAqB,CAACA,OAAAA,CAAD,IADT,OACZA;AAHoC;;AAKtCA,cAAAA,OAAAA,CAAAA,KAAAA,CAAAA,WAAAA,IALsC,SAKtCA;AALF,mBAMO,CAnCmB;;AA0C1B,gBAAIuN,SA1CsB,SA0C1B;;AACA,0BAAc;AACZA,cAAAA,SAAAA,GAAYl3D,KAAAA,GAAAA,iBAAAA,GAA4Bs2D,OAAAA,GAD5B,aACZY;AADF,mBAEO;AACLA,cAAAA,SAAAA,GAAYl3D,KAAAA,GAAAA,iBAAAA,GAA4Bs2D,OAAAA,GADnC,aACLY;AA9CwB;;AAiD1BrsC,YAAAA,CAAAA,IAjD0B,SAiD1BA;AApEa;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsEf8+B,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAGEA,OAAAA,CAAAA,OAAAA,CAAAA,GAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAzEa,GAyEbA,CAHFA;;AAKA,sBAAc;AACZA,UAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAGEA,OAAAA,CAAAA,OAAAA,CAAAA,GAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAJU,GAIVA,CAHFA;AADF,eAMO;AACLA,UAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAwCyqB,EAAAA,CAAG,CAACzqB,OAAAA,CADvC,CACmCyqB,CAAxCzqB;AAlFa;;AAqFf,sBAAc;AACZA,UAAAA,OAAAA,CAAAA,CAAAA,IADY,CACZA;AADF,eAEO;AACLA,UAAAA,OAAAA,CAAAA,CAAAA,IAAa9+B,CAAAA,GADR,UACL8+B;AAxFa;;AA2FfA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,aAAAA,EAAkDA,OAAAA,CA3FnC,UA2FfA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,YAGKyqB,EAAAA,CAAGzqB,OAAAA,CA/FO,QA+FVyqB,CAHLzqB;;AAKA,YAAIA,OAAAA,CAAAA,SAAAA,KAAsBwoB,YAAAA,CAA1B,WAAkD;AAChDxoB,UAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,YAAAA,EAAiDA,OAAAA,CADD,SAChDA;AAlGa;;AAoGf,YAAIA,OAAAA,CAAAA,UAAAA,KAAuBwoB,YAAAA,CAA3B,YAAoD;AAClDxoB,UAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,aAAAA,EAAkDA,OAAAA,CADA,UAClDA;AArGa;;AAwGf,YAAMqL,cAAAA,GACJrL,OAAAA,CAAAA,iBAAAA,GAA4Bz+C,wBAzGf,gBAwGf;;AAEA,YACE8pD,cAAAA,KAAmB9pD,wBAAnB8pD,IAAAA,IACAA,cAAAA,KAAmB9pD,wBAFrB,aAGE;AACA,cAAIy+C,OAAAA,CAAAA,SAAAA,KAAsBwoB,YAAAA,CAA1B,WAAkD;AAChDxoB,YAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAA2CA,OAAAA,CADK,SAChDA;AAFF;;AAIA,cAAIA,OAAAA,CAAAA,SAAAA,GAAJ,GAA2B;AACzBA,YAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,cAAAA,EAAmDA,OAAAA,CAD1B,SACzBA;AALF;AAHF,eAUO,IAAIA,OAAAA,CAAAA,iBAAAA,KAA8Bz+C,wBAAlC,aAAiE;AAGtEy+C,UAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAHsE,aAGtEA;AAHK,eAIA;AACLA,UAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EADK,MACLA;AAzHa;;AA4Hf,YACEqL,cAAAA,KAAmB9pD,wBAAnB8pD,MAAAA,IACAA,cAAAA,KAAmB9pD,wBAFrB,aAGE;AACA,cAAMgqE,cAAAA,GAAiB,KAAK,2BAD5B,CACuB,CAAvB;;AACA,oCAA0BvrB,OAAAA,CAA1B,OAFA,cAEA;AAjIa;;AAuIf,YAAIwrB,UAAAA,GAAaxrB,OAAAA,CAvIF,UAuIf;;AACA,YAAIA,OAAAA,CAAAA,QAAAA,KAAJ,GAA4B;AAC1BwrB,UAAAA,UAAAA,GAAaA,UAAAA,CADa,KACbA,EAAbA;AACAA,UAAAA,UAAAA,CAAAA,CAAAA,CAAAA,IAAiBxrB,OAAAA,CAFS,QAE1BwrB;AA1Ia;;AA6IfxrB,QAAAA,OAAAA,CAAAA,UAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,YAGKyrB,EAAAA,CAAH,UAAGA,CAHLzrB,oBAG6ByqB,EAAAA,CAhJd,UAgJcA,CAH7BzqB;AAKAA,QAAAA,OAAAA,CAAAA,UAAAA,CAAAA,cAAAA,CAAAA,MAAAA,EAAAA,WAAAA,EAlJe,UAkJfA;AACAA,QAAAA,OAAAA,CAAAA,UAAAA,CAAAA,WAAAA,CAA+BA,OAAAA,CAnJhB,KAmJfA;AACAA,QAAAA,OAAAA,CAAAA,MAAAA,CAAAA,WAAAA,CAA2BA,OAAAA,CApJZ,UAoJfA;;AAEA,iDAAyCA,OAAAA,CAtJ1B,UAsJf;AAjfgB;AAApBuoB;AAAAA;AAAAA,aAofE17D,4BAAAA,CAAAA,EAAAA,CAAAA,EAAyB;AACvB,wBAAgB,CADO,CACvB;AACA,yBAFuB,CAEvB;AAtfgB;AAApB07D;AAAAA;AAAAA,aAyfEmD,sBAAAA,OAAAA,EAAsB;AACpB,YAAI,CAAC7gB,OAAAA,CAAL,MAAmB;AACjB,gBAAM,UACJ,2CAFe,6DACX,CAAN;AAFkB;;AAOpB,YAAI,CAAC,KAAL,UAAoB;AAClB,0BAAgB,8BADE,WACF,CAAhB;AACA,qDAFkB,UAElB;AACA,gCAAsB,KAHJ,QAGlB;AAVkB;;AAapB,YAAMtzD,GAAAA,GAAM8yE,2BACVxf,OAAAA,CADUwf,IAAAA,EAEVxf,OAAAA,CAFUwf,QAAAA,EAGV,KAhBkB,eAaRA,CAAZ;AAKA,qCACE,sCAA8Bxf,OAAAA,CAA9B,yCAnBkB,GAmBlB,WADF;AA3gBgB;AAApB0d;AAAAA;AAAAA,aAghBE97D,iBAAAA,OAAAA,EAAiB;AACf,YAAMuzC,OAAAA,GAAU,KADD,OACf;AACA,YAAM6K,OAAAA,GAAU,oBAAoB8gB,OAAAA,CAFrB,CAEqBA,CAApB,CAAhB;AACA,YAAI75C,IAAAA,GAAO65C,OAAAA,CAHI,CAGJA,CAAX;AACA3rB,QAAAA,OAAAA,CAAAA,IAAAA,GAJe,OAIfA;;AAEA,YACE,mBACA,CAAC6K,OAAAA,CADD,eAEA,CAAC,mBAAmBA,OAAAA,CAHtB,UAGG,CAHH,EAIE;AACA,4BADA,OACA;AACA,6BAAmBA,OAAAA,CAAnB,cAFA,OAEA;AAZa;;AAcf7K,QAAAA,OAAAA,CAAAA,UAAAA,GAAqB6K,OAAAA,CAAAA,UAAAA,IAdN,0BAcf7K;AAEA,YAAI8K,IAAAA,GAhBW,QAgBf;;AACA,YAAID,OAAAA,CAAJ,OAAmB;AACjBC,UAAAA,IAAAA,GADiB,KACjBA;AADF,eAEO,IAAID,OAAAA,CAAJ,MAAkB;AACvBC,UAAAA,IAAAA,GADuB,MACvBA;AApBa;;AAsBf,YAAMC,MAAAA,GAASF,OAAAA,CAAAA,MAAAA,GAAAA,QAAAA,GAtBA,QAsBf;;AAEA,YAAI/4B,IAAAA,GAAJ,GAAc;AACZA,UAAAA,IAAAA,GAAO,CADK,IACZA;AACAkuB,UAAAA,OAAAA,CAAAA,aAAAA,GAAwB,CAFZ,CAEZA;AAFF,eAGO;AACLA,UAAAA,OAAAA,CAAAA,aAAAA,GADK,CACLA;AA5Ba;;AA8BfA,QAAAA,OAAAA,CAAAA,QAAAA,GA9Be,IA8BfA;AACAA,QAAAA,OAAAA,CAAAA,UAAAA,GAAqB6K,OAAAA,CA/BN,UA+Bf7K;AACAA,QAAAA,OAAAA,CAAAA,UAAAA,GAhCe,IAgCfA;AACAA,QAAAA,OAAAA,CAAAA,SAAAA,GAjCe,MAiCfA;AAEAA,QAAAA,OAAAA,CAAAA,KAAAA,GAAgB,8BAnCD,WAmCC,CAAhBA;AACAA,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAwCyqB,EAAAA,CAAG,CAACzqB,OAAAA,CApC7B,CAoCyByqB,CAAxCzqB;AACAA,QAAAA,OAAAA,CAAAA,OAAAA,GArCe,EAqCfA;AACAA,QAAAA,OAAAA,CAAAA,OAAAA,GAtCe,EAsCfA;AAtjBgB;AAApBuoB;AAAAA;AAAAA,aAyjBEn8D,mBAAU;AAAA;;AACR,YAAM4zC,OAAAA,GAAU,KADR,OACR;;AACA,YACEA,OAAAA,CAAAA,iBAAAA,GAA4Bz+C,wBAA5By+C,gBAAAA,2BACAA,OAAAA,CAAAA,UADAA,gDACAA,oBAFF,aAEEA,EAFF,EAGE;AAEAA,UAAAA,OAAAA,CAAAA,OAAAA,GAAkBA,OAAAA,CAFlB,UAEAA;AACA,oBAHA,SAGA;AACA,eAJA,OAIA;AATM;AAzjBQ;AAApBuoB;AAAAA;AAAAA,aAukBEj+D,sBAAAA,KAAAA,EAAoB;AAClB,YAAIjU,KAAAA,GAAJ,GAAe;AACb,mCADa,KACb;AAFgB;AAvkBF;AAApBkyE;AAAAA;AAAAA,aA6kBEh+D,oBAAAA,KAAAA,EAAkB;AAChB,+BAAuBm8C,eAAAA,CADP,KACOA,CAAvB;AA9kBgB;AAApB6hB;AAAAA;AAAAA,aAilBE/9D,qBAAAA,KAAAA,EAAmB;AACjB,gCAAwBm8C,gBAAAA,CADP,KACOA,CAAxB;AAllBgB;AAApB4hB;AAAAA;AAAAA,aAqlBE99D,uBAAAA,KAAAA,EAAqB;AACnB,kCADmB,KACnB;AAtlBgB;AAApB89D;AAAAA;AAAAA,aAylBEqD,wBAAAA,WAAAA,EAA4B;AAC1B,mCAD0B,WAC1B;AA1lBgB;AAApBrD;AAAAA;AAAAA,aA6lBEz6D,2BAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAA2B;AACzB,mCAA2BqG,WAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EADF,CACEA,CAA3B;AA9lBgB;AAApBo0D;AAAAA;AAAAA,aAimBEsD,sBAAAA,SAAAA,EAAwB;AACtB,iCADsB,SACtB;AAlmBgB;AAApBtD;AAAAA;AAAAA,aAqmBEx6D,yBAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAyB;AACvB,iCAAyBoG,WAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EADF,CACEA,CAAzB;AACA,6BAAqB,8BAFE,WAEF,CAArB;AACA,+BAHuB,EAGvB;AACA,+BAJuB,EAIvB;AAzmBgB;AAApBo0D;AAAAA;AAAAA,aA4mBE96D,yBAAAA,IAAAA,EAAsB;AACpB,mCAA2B,yBADP,IACO,CAA3B;AA7mBgB;AAApB86D;AAAAA;AAAAA,aAgnBE56D,uBAAAA,IAAAA,EAAoB;AAClB,iCAAyB,yBADP,IACO,CAAzB;AAjnBgB;AAApB46D;AAAAA;AAAAA,aAonBEr6D,qBAAAA,IAAAA,EAAkB;AAChB,YAAM7X,KAAAA,GAAQ,cADE,KAChB;AACA,YAAMC,MAAAA,GAAS,cAFC,MAEhB;;AACA,YAAMk4D,GAAAA,GAAMr6C,WAAAA,gBAAAA,CAAsB,KAHlB,eAGJA,CAAZ;;AACA,YAAMs6C,EAAAA,GAAK,0BAAoB,MAApB,EAJK,GAIL,CAAX;;AACA,YAAMC,EAAAA,GAAK,0BAAoB,WAApB,EALK,GAKL,CAAX;;AACA,YAAMC,EAAAA,GAAK,0BAAoB,UAApB,EANK,GAML,CAAX;;AACA,YAAMC,EAAAA,GAAK,0BAAoB,eAApB,EAPK,GAOL,CAAX;;AACA,YAAMC,EAAAA,GAAK14D,IAAAA,CAAAA,GAAAA,CAASs4D,EAAAA,CAATt4D,CAASs4D,CAATt4D,EAAgBu4D,EAAAA,CAAhBv4D,CAAgBu4D,CAAhBv4D,EAAuBw4D,EAAAA,CAAvBx4D,CAAuBw4D,CAAvBx4D,EAA8By4D,EAAAA,CARzB,CAQyBA,CAA9Bz4D,CAAX;AACA,YAAM24D,EAAAA,GAAK34D,IAAAA,CAAAA,GAAAA,CAASs4D,EAAAA,CAATt4D,CAASs4D,CAATt4D,EAAgBu4D,EAAAA,CAAhBv4D,CAAgBu4D,CAAhBv4D,EAAuBw4D,EAAAA,CAAvBx4D,CAAuBw4D,CAAvBx4D,EAA8By4D,EAAAA,CATzB,CASyBA,CAA9Bz4D,CAAX;AACA,YAAM44D,EAAAA,GAAK54D,IAAAA,CAAAA,GAAAA,CAASs4D,EAAAA,CAATt4D,CAASs4D,CAATt4D,EAAgBu4D,EAAAA,CAAhBv4D,CAAgBu4D,CAAhBv4D,EAAuBw4D,EAAAA,CAAvBx4D,CAAuBw4D,CAAvBx4D,EAA8By4D,EAAAA,CAVzB,CAUyBA,CAA9Bz4D,CAAX;AACA,YAAM64D,EAAAA,GAAK74D,IAAAA,CAAAA,GAAAA,CAASs4D,EAAAA,CAATt4D,CAASs4D,CAATt4D,EAAgBu4D,EAAAA,CAAhBv4D,CAAgBu4D,CAAhBv4D,EAAuBw4D,EAAAA,CAAvBx4D,CAAuBw4D,CAAvBx4D,EAA8By4D,EAAAA,CAXzB,CAWyBA,CAA9Bz4D,CAAX;AAEA,YAAMS,IAAAA,GAAO,8BAbG,UAaH,CAAb;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAdgB,EAchBA;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAfgB,EAehBA;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAmCm4D,EAAAA,GAhBnB,EAgBhBn4D;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAoCo4D,EAAAA,GAjBpB,EAiBhBp4D;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAAkC,yBAlBlB,IAkBkB,CAAlCA;;AACA,YAAI,yBAAJ,GAAgC;AAC9BA,UAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,cAAAA,EAA0C,aADZ,SAC9BA;AApBc;;AAsBhB,iDAtBgB,IAsBhB;AA1oBgB;AAApB2xE;AAAAA;AAAAA,aAgpBEuD,6BAAAA,IAAAA,EAA0B;AACxB,YAAIvsD,IAAAA,CAAAA,CAAAA,CAAAA,KAAJ,iBAAiC;AAC/B,iBAAO,wBADwB,IACxB,CAAP;AAFsB;;AAIxB,eAAO,yBAJiB,IAIjB,CAAP;AAppBgB;AAApBgpD;AAAAA;AAAAA,aA0pBEwD,4BAAAA,IAAAA,EAAyB;AACvB,YAAM9d,KAAAA,GAAQ1uC,IAAAA,CADS,CACTA,CAAd;AACA,YAAM62B,YAAAA,GAAe72B,IAAAA,CAFE,CAEFA,CAArB;AACA,YAAM+uC,MAAAA,GAAS/uC,IAAAA,CAAAA,CAAAA,CAAAA,IAHQ,qBAGvB;;AACA,oCAAyBA,IAAAA,CAJF,CAIEA,CAAzB;AAAA,YAAM,EAAN;AAAA,YAAM,EAAN;AAAA,YAAM,EAAN;AAAA,YAAM,EAAN;;AACA,YAAMu1C,KAAAA,GAAQv1C,IAAAA,CALS,CAKTA,CAAd;AACA,YAAMw1C,KAAAA,GAAQx1C,IAAAA,CANS,CAMTA,CAAd;AACA,YAAMy1C,SAAAA,GAAYz1C,IAAAA,CAPK,CAOLA,CAAlB;AAEA,YAAMysD,QAAAA,oBAAqBpB,YATJ,EASjBoB,CAAN;;AACA,kCAA6B,sDACxB,0BAAoB,QAApB,EAD2C,MAC3C,CADwB,sBAExB,0BAAoB,QAApB,EAF2C,MAE3C,CAFwB,GAA7B;AAAA;AAAA,YAAM,GAAN;AAAA,YAAM,GAAN;AAAA,YAAM,GAAN;AAAA,YAAM,GAAN;;AAIA,oCAAyB73D,WAAAA,6BAAAA,CAdF,MAcEA,CAAzB;AAAA;AAAA,YAAM,MAAN;AAAA,YAAM,MAAN;;AACA,YAAM83D,MAAAA,GAASnX,KAAAA,GAfQ,MAevB;AACA,YAAMoX,MAAAA,GAASnX,KAAAA,GAhBQ,MAgBvB;AAEA,YAAMoX,MAAAA,GAAS,8BAlBQ,aAkBR,CAAf;AACAA,QAAAA,MAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAnBuB,QAmBvBA;AACAA,QAAAA,MAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,cAAAA,EApBuB,gBAoBvBA;AACAA,QAAAA,MAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EArBuB,MAqBvBA;AACAA,QAAAA,MAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAtBuB,MAsBvBA;AACAA,QAAAA,MAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,YAvBuB,GAuBvBA;AACAA,QAAAA,MAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,YAxBuB,GAwBvBA;AAGA,YAAM58B,GAAAA,GAAM,KA3BW,GA2BvB;AACA,YAAMu7B,eAAAA,GAAkB,KA5BD,eA4BvB;AACA,YAAMriB,SAAAA,GAAY,aA7BK,SA6BvB;AACA,YAAMgC,WAAAA,GAAc,aA9BG,WA8BvB;AAEA,YAAMwE,IAAAA,GAAO,uBAAuBmd,GAAAA,GAAvB,KAAkCC,GAAAA,GAhCxB,GAgCV,CAAb;AACA,mBAjCuB,IAiCvB;AACA,+BAlCuB,MAkCvB;;AACA,YAAIrX,SAAAA,KAAJ,GAAqB;AACnB,cAAMgB,QAAAA,GAAW7hD,WAAAA,YAAAA,sCADE,KACFA,EAAjB;;AACA,mCAFmB,QAEnB;AACA,qCAHmB,QAGnB;AAtCqB;;AAwCvB,2BAAmB,mBAxCI,YAwCJ,CAAnB;AAGA,mBA3CuB,GA2CvB;AACA,+BA5CuB,eA4CvB;AACA,iCA7CuB,SA6CvB;AACA,mCA9CuB,WA8CvB;AAEAg4D,QAAAA,MAAAA,CAAAA,WAAAA,CAAmBld,IAAAA,CAAAA,UAAAA,CAhDI,CAgDJA,CAAnBkd;AACA,8BAjDuB,MAiDvB;AACA,8BAlDuB,QAkDvB;AA5sBgB;AAApB5D;AAAAA;AAAAA,aAktBE+D,6BAAAA,IAAAA,EAA0B;AACxB,gBAAQ/sD,IAAAA,CAAR,CAAQA,CAAR;AACE;AACE,gBAAMgtD,SAAAA,oBAAsB3B,YAD9B,EACQ2B,CAAN;AACA,gBAAMC,UAAAA,GAAajtD,IAAAA,CAFrB,CAEqBA,CAAnB;AACA,gBAHF,QAGE;;AAEA,oBAAQA,IAAAA,CAAR,CAAQA,CAAR;AACE;AACE,oBAAMktD,MAAAA,GAASltD,IAAAA,CADjB,CACiBA,CAAf;AACA,oBAAMmtD,MAAAA,GAASntD,IAAAA,CAFjB,CAEiBA,CAAf;AACAotD,gBAAAA,QAAAA,GAAW,8BAHb,oBAGa,CAAXA;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAJF,SAIEA;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,eAAAA,EALF,gBAKEA;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAoCF,MAAAA,CANtC,CAMsCA,CAApCE;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAoCF,MAAAA,CAPtC,CAOsCA,CAApCE;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAoCD,MAAAA,CARtC,CAQsCA,CAApCC;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAoCD,MAAAA,CATtC,CASsCA,CAApCC;AAVJ;;AAYE;AACE,oBAAMC,UAAAA,GAAartD,IAAAA,CADrB,CACqBA,CAAnB;AACA,oBAAMstD,WAAAA,GAActtD,IAAAA,CAFtB,CAEsBA,CAApB;AACA,oBAAMutD,WAAAA,GAAcvtD,IAAAA,CAHtB,CAGsBA,CAApB;AACA,oBAAMwtD,YAAAA,GAAextD,IAAAA,CAJvB,CAIuBA,CAArB;AACAotD,gBAAAA,QAAAA,GAAW,8BALb,oBAKa,CAAXA;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EANF,SAMEA;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,eAAAA,EAPF,gBAOEA;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAoCE,WAAAA,CARtC,CAQsCA,CAApCF;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAoCE,WAAAA,CATtC,CASsCA,CAApCF;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAVF,YAUEA;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAoCC,UAAAA,CAXtC,CAWsCA,CAApCD;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAoCC,UAAAA,CAZtC,CAYsCA,CAApCD;AACAA,gBAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAbF,WAaEA;AAzBJ;;AA2BE;AACE,sBAAM,8CAAuCptD,IAAAA,CA5BjD,CA4BiDA,CAAvC,EAAN;AA5BJ;;AALF,wDAmCE,UAnCF;AAAA;;AAAA;AAmCE,qEAAoC;AAAA,oBAApC,SAAoC;AAClC,oBAAM1gB,IAAAA,GAAO,8BADqB,UACrB,CAAb;AACAA,gBAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAoCsyD,SAAAA,CAFF,CAEEA,CAApCtyD;AACAA,gBAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,YAAAA,EAAwCsyD,SAAAA,CAHN,CAGMA,CAAxCtyD;AACA8tE,gBAAAA,QAAAA,CAAAA,WAAAA,CAJkC,IAIlCA;AAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyCE,kCAzCF,QAyCE;AACA,kCA3CJ,SA2CI;;AACF;AACEx0E,4BADF,4BACEA;AACA,mBA9CJ,IA8CI;;AACF;AACE,mBAhDJ,SAgDI;;AACF;AACE,kBAAM,qCAA8BonB,IAAAA,CAlDxC,CAkDwCA,CAA9B,EAAN;AAlDJ;AAntBgB;AAApBgpD;AAAAA;AAAAA,aAywBE79D,iBAAAA,SAAAA,EAAAA,SAAAA,EAA8B;AAC5B,iCAD4B,SAC5B;AACA,iCAF4B,SAE5B;AA3wBgB;AAApB69D;AAAAA;AAAAA,aA8wBEx4D,uBAAAA,GAAAA,EAAAA,IAAAA,EAAyB;AACvB,YAAMiwC,OAAAA,GAAU,KADO,OACvB;AACA,YAAI9+B,CAAAA,GAAI8+B,OAAAA,CAAR;AAAA,YACE7+B,CAAAA,GAAI6+B,OAAAA,CAHiB,CAEvB;AAEA,YAAI/rC,CAAAA,GAJmB,EAIvB;AACA,YAAI2uC,CAAAA,GALmB,CAKvB;;AALuB,oDAOvB,GAPuB;AAAA;;AAAA;AAOvB,iEAAsB;AAAA,gBAAtB,EAAsB;;AACpB,oBAAQoqB,EAAAA,GAAR;AACE,mBAAK5iE,UAAL;AACE8W,gBAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CADX,EACMrjC,CAAJ2B;AACAC,gBAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAFX,EAEMrjC,CAAJ4B;AACA,oBAAM9qB,KAAAA,GAAQkpB,IAAAA,CAAKqjC,CAHrB,EAGgBrjC,CAAd;AACA,oBAAMjpB,MAAAA,GAASipB,IAAAA,CAAKqjC,CAJtB,EAIiBrjC,CAAf;AACA,oBAAM+qC,EAAAA,GAAKppC,CAAAA,GALb,KAKE;AACA,oBAAMqpC,EAAAA,GAAKppC,CAAAA,GANb,MAME;AACAlN,gBAAAA,CAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAEEw2D,EAAAA,CAFFx2D,CAEEw2D,CAFFx2D,EAGEw2D,EAAAA,CAHFx2D,CAGEw2D,CAHFx2D,EAAAA,GAAAA,EAKEw2D,EAAAA,CALFx2D,EAKEw2D,CALFx2D,EAMEw2D,EAAAA,CANFx2D,CAMEw2D,CANFx2D,EAAAA,GAAAA,EAQEw2D,EAAAA,CARFx2D,EAQEw2D,CARFx2D,EASEw2D,EAAAA,CATFx2D,EASEw2D,CATFx2D,EAAAA,GAAAA,EAWEw2D,EAAAA,CAXFx2D,CAWEw2D,CAXFx2D,EAYEw2D,EAAAA,CAZFx2D,EAYEw2D,CAZFx2D,EAPF,GAOEA;AARJ;;AAwBE,mBAAK7J,UAAL;AACE8W,gBAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CADX,EACMrjC,CAAJ2B;AACAC,gBAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAFX,EAEMrjC,CAAJ4B;AACAlN,gBAAAA,CAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAAYw2D,EAAAA,CAAZx2D,CAAYw2D,CAAZx2D,EAAmBw2D,EAAAA,CAHrB,CAGqBA,CAAnBx2D;AA3BJ;;AA6BE,mBAAK7J,UAAL;AACE8W,gBAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CADX,EACMrjC,CAAJ2B;AACAC,gBAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAFX,EAEMrjC,CAAJ4B;AACAlN,gBAAAA,CAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAAYw2D,EAAAA,CAAZx2D,CAAYw2D,CAAZx2D,EAAmBw2D,EAAAA,CAHrB,CAGqBA,CAAnBx2D;AAhCJ;;AAkCE,mBAAK7J,UAAL;AACE8W,gBAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CAAAA,GADX,CACMrjC,CAAJ2B;AACAC,gBAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAAAA,GAFX,CAEMrjC,CAAJ4B;AACAlN,gBAAAA,CAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAEEw2D,EAAAA,CAAGlrD,IAAAA,CAFLtL,CAEKsL,CAAHkrD,CAFFx2D,EAGEw2D,EAAAA,CAAGlrD,IAAAA,CAAKqjC,CAAAA,GAHV3uC,CAGKsL,CAAHkrD,CAHFx2D,EAIEw2D,EAAAA,CAAGlrD,IAAAA,CAAKqjC,CAAAA,GAJV3uC,CAIKsL,CAAHkrD,CAJFx2D,EAKEw2D,EAAAA,CAAGlrD,IAAAA,CAAKqjC,CAAAA,GALV3uC,CAKKsL,CAAHkrD,CALFx2D,EAMEw2D,EAAAA,CANFx2D,CAMEw2D,CANFx2D,EAOEw2D,EAAAA,CAVJ,CAUIA,CAPFx2D;AASA2uC,gBAAAA,CAAAA,IAZF,CAYEA;AA9CJ;;AAgDE,mBAAKx4C,UAAL;AACE6J,gBAAAA,CAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAEEw2D,EAAAA,CAFFx2D,CAEEw2D,CAFFx2D,EAGEw2D,EAAAA,CAHFx2D,CAGEw2D,CAHFx2D,EAIEw2D,EAAAA,CAAGlrD,IAAAA,CAJLtL,CAIKsL,CAAHkrD,CAJFx2D,EAKEw2D,EAAAA,CAAGlrD,IAAAA,CAAKqjC,CAAAA,GALV3uC,CAKKsL,CAAHkrD,CALFx2D,EAMEw2D,EAAAA,CAAGlrD,IAAAA,CAAKqjC,CAAAA,GANV3uC,CAMKsL,CAAHkrD,CANFx2D,EAOEw2D,EAAAA,CAAGlrD,IAAAA,CAAKqjC,CAAAA,GARZ,CAQOrjC,CAAHkrD,CAPFx2D;AASAiN,gBAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CAAAA,GAVX,CAUMrjC,CAAJ2B;AACAC,gBAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAAAA,GAXX,CAWMrjC,CAAJ4B;AACAyhC,gBAAAA,CAAAA,IAZF,CAYEA;AA5DJ;;AA8DE,mBAAKx4C,UAAL;AACE8W,gBAAAA,CAAAA,GAAI3B,IAAAA,CAAKqjC,CAAAA,GADX,CACMrjC,CAAJ2B;AACAC,gBAAAA,CAAAA,GAAI5B,IAAAA,CAAKqjC,CAAAA,GAFX,CAEMrjC,CAAJ4B;AACAlN,gBAAAA,CAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAEEw2D,EAAAA,CAAGlrD,IAAAA,CAFLtL,CAEKsL,CAAHkrD,CAFFx2D,EAGEw2D,EAAAA,CAAGlrD,IAAAA,CAAKqjC,CAAAA,GAHV3uC,CAGKsL,CAAHkrD,CAHFx2D,EAIEw2D,EAAAA,CAJFx2D,CAIEw2D,CAJFx2D,EAKEw2D,EAAAA,CALFx2D,CAKEw2D,CALFx2D,EAMEw2D,EAAAA,CANFx2D,CAMEw2D,CANFx2D,EAOEw2D,EAAAA,CAVJ,CAUIA,CAPFx2D;AASA2uC,gBAAAA,CAAAA,IAZF,CAYEA;AA1EJ;;AA4EE,mBAAKx4C,UAAL;AACE6J,gBAAAA,CAAAA,CAAAA,IAAAA,CADF,GACEA;AA7EJ;AAAA;AARqB;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0FvBA,QAAAA,CAAAA,GAAIA,CAAAA,CAAAA,IAAAA,CA1FmB,GA0FnBA,CAAJA;;AAEA,YACE+rC,OAAAA,CAAAA,IAAAA,IACAqK,GAAAA,CAAAA,MAAAA,GADArK,CAAAA,IAEAqK,GAAAA,CAAAA,CAAAA,CAAAA,KAAWjgD,UAFX41C,SAAAA,IAGAqK,GAAAA,CAAAA,CAAAA,CAAAA,KAAWjgD,UAJb,QAKE;AAIA6J,UAAAA,CAAAA,GAAI+rC,OAAAA,CAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,IAJJ,CAIA/rC;AATF,eAUO;AACL+rC,UAAAA,OAAAA,CAAAA,IAAAA,GAAe,8BADV,UACU,CAAfA;;AACA,mDAAyCA,OAAAA,CAFpC,IAEL;AAxGqB;;AA2GvBA,QAAAA,OAAAA,CAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EA3GuB,CA2GvBA;AACAA,QAAAA,OAAAA,CAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EA5GuB,MA4GvBA;AAIAA,QAAAA,OAAAA,CAAAA,OAAAA,GAAkBA,OAAAA,CAhHK,IAgHvBA;AACAA,QAAAA,OAAAA,CAAAA,eAAAA,CAAAA,CAAAA,EAjHuB,CAiHvBA;AA/3BgB;AAApBuoB;AAAAA;AAAAA,aAk4BEv8D,mBAAU;AACR,YAAMg0C,OAAAA,GAAU,KADR,OACR;AAGAA,QAAAA,OAAAA,CAAAA,IAAAA,GAJQ,IAIRA;;AAEA,YAAI,CAAC,KAAL,aAAuB;AAAA;AANf;;AASR,YAAI,CAACA,OAAAA,CAAL,SAAsB;AACpB,6BADoB,IACpB;AADoB;AATd;;AAeR,YAAMitB,MAAAA,qBAAoBvC,SAflB,EAeFuC,CAAN;AACA,YAAMC,QAAAA,GAAW,8BAhBT,cAgBS,CAAjB;AACAA,QAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAjBQ,MAiBRA;AACAA,QAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAA2CzB,EAAAA,CAAG,KAlBtC,eAkBmCA,CAA3CyB;AAGA,YAAMC,WAAAA,GAAcntB,OAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CArBZ,IAqBYA,CAApB;;AACA,YAAI,qBAAJ,WAAoC;AAClCmtB,UAAAA,WAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EADkC,SAClCA;AADF,eAEO;AACLA,UAAAA,WAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EADK,SACLA;AAzBM;;AA2BR,2BA3BQ,IA2BR;AACAD,QAAAA,QAAAA,CAAAA,WAAAA,CA5BQ,WA4BRA;AACA,8BA7BQ,QA6BR;;AAEA,YAAIltB,OAAAA,CAAJ,eAA2B;AAGzBA,UAAAA,OAAAA,CAAAA,SAAAA,GAHyB,IAGzBA;;AAHyB,sDAIN,KAAnB,UAJyB;AAAA;;AAAA;AAIzB,mEAAoC;AAAA,kBAApC,IAAoC;AAClC2B,cAAAA,IAAAA,CAAAA,SAAAA,GADkC,IAClCA;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQzBurB,UAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAA2CltB,OAAAA,CARlB,aAQzBktB;AAvCM;;AAyCRltB,QAAAA,OAAAA,CAAAA,aAAAA,kBAzCQ,MAyCRA;AAEA,oBA3CQ,IA2CR;AA76BgB;AAApBuoB;AAAAA;AAAAA,aAg7BEt8D,cAAAA,IAAAA,EAAW;AACT,2BADS,IACT;AAj7BgB;AAApBs8D;AAAAA;AAAAA,aAo7BEj9D,qBAAY;AACV,YAAM00C,OAAAA,GAAU,KADN,OACV;;AACA,YAAIA,OAAAA,CAAJ,MAAkB;AAChB,cAAM/rC,CAAAA,aAAO+rC,OAAAA,CAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EADG,GACHA,CAAP/rC,MAAN;AACA+rC,UAAAA,OAAAA,CAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAFgB,CAEhBA;AAJQ;AAp7BM;AAApBuoB;AAAAA;AAAAA,aA47BE/7D,oBAAAA,OAAAA,EAAoB;AAClB,+BAAuB,CADL,OAClB;AA77BgB;AAApB+7D;AAAAA;AAAAA,aAg8BE57D,qBAAAA,QAAAA,EAAsB;AACpB,gCADoB,QACpB;AAj8BgB;AAApB47D;AAAAA;AAAAA,aAo8BE77D,8BAAAA,iBAAAA,EAAwC;AACtC,yCADsC,iBACtC;AAr8BgB;AAApB67D;AAAAA;AAAAA,aAw8BEh8D,mBAAAA,KAAAA,EAAiB;AACf,kCAA0B/V,KAAAA,GADX,GACf;AAz8BgB;AAApB+xE;AAAAA;AAAAA,aA48BE59D,4BAAAA,MAAAA,EAA2B,CA58BT;AAApB49D;AAAAA;AAAAA,aAg9BE39D,qBAAAA,QAAAA,EAAsB,CAh9BJ;AAApB29D;AAAAA;AAAAA,aAo9BE19D,mBAAAA,MAAAA,EAAkB;AAAA,oDAChB,MADgB;AAAA;;AAAA;AAChB,iEAAmC;AAAA;AAAA,gBAAxB,GAAwB;AAAA,gBAAnC,KAAmC;;AACjC;AACE;AACE,kCADF,KACE;AAFJ;;AAIE;AACE,gCADF,KACE;AALJ;;AAOE;AACE,iCADF,KACE;AARJ;;AAUE;AACE,mCADF,KACE;AAXJ;;AAaE;AACE,6BAAa9P,KAAAA,CAAb,CAAaA,CAAb,EAAuBA,KAAAA,CADzB,CACyBA,CAAvB;AAdJ;;AAgBE;AACE,wCADF,KACE;AAjBJ;;AAmBE;AACE,iCADF,KACE;AApBJ;;AAsBE;AACE,6BADF,KACE;AAvBJ;;AAyBE;AACE,oCADF,KACE;AA1BJ;;AA4BE;AACE,kCADF,KACE;AA7BJ;;AA+BE;AACE5C,+EADF,GACEA;AAhCJ;AAAA;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAp9BA;AAApBowE;AAAAA;AAAAA,aA4/BE78D,gBAAO;AACL,YAAMs0C,OAAAA,GAAU,KADX,OACL;;AACA,YAAIA,OAAAA,CAAJ,SAAqB;AACnBA,UAAAA,OAAAA,CAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAA6CA,OAAAA,CAD1B,SACnBA;AACAA,UAAAA,OAAAA,CAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,cAAAA,EAAqDA,OAAAA,CAFlC,SAEnBA;AACA,eAHmB,OAGnB;AALG;AA5/BW;AAApBuoB;AAAAA;AAAAA,aAqgCE/8D,kBAAS;AACP,YAAMw0C,OAAAA,GAAU,KADT,OACP;;AACA,YAAIA,OAAAA,CAAJ,SAAqB;AACnB,oCAA0BA,OAAAA,CADP,OACnB;;AACAA,UAAAA,OAAAA,CAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAFmB,MAEnBA;AACA,eAHmB,OAGnB;AALK;AArgCS;AAApBuoB;AAAAA;AAAAA,aAihCE6E,8BAAAA,OAAAA,EAAkD;AAAA,YAApB7B,cAAoB,uEAAlD6B,CAAkD;AAChD,YAAMptB,OAAAA,GAAU,KADgC,OAChD;AACA,YAAIqtB,SAAAA,GAAYrtB,OAAAA,CAFgC,SAEhD;;AACA,YAAIurB,cAAAA,KAAAA,CAAAA,IAAwB8B,SAAAA,CAAAA,MAAAA,GAA5B,GAAkD;AAChDA,UAAAA,SAAAA,GAAY,cAAc,iBAAiB;AACzC,mBAAO9B,cAAAA,GADkC,KACzC;AAF8C,WACpC,CAAZ8B;AAJ8C;;AAQhD15C,QAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAuCqsB,OAAAA,CARS,WAQhDrsB;AACAA,QAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,EAA+CqsB,OAAAA,CATC,WAShDrsB;AACAA,QAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,mBAAAA,EAAkD82C,EAAAA,CAAGzqB,OAAAA,CAVL,UAUEyqB,CAAlD92C;AACAA,QAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,EAA+CqsB,OAAAA,CAXC,OAWhDrsB;AACAA,QAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,iBAAAA,EAAgDqsB,OAAAA,CAZA,QAYhDrsB;AACAA,QAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,cAAAA,EAGE82C,EAAAA,CAAGc,cAAAA,GAAiBvrB,OAAAA,CAApByqB,SAAAA,CAAAA,GAhB8C,IAahD92C;AAKAA,QAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,kBAAAA,EAGE05C,SAAAA,CAAAA,GAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CArB8C,GAqB9CA,CAHF15C;AAKAA,QAAAA,OAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,mBAAAA,EAGE82C,EAAAA,CAAGc,cAAAA,GAAiBvrB,OAAAA,CAApByqB,SAAAA,CAAAA,GA1B8C,IAuBhD92C;AAxiCgB;AAApB40C;AAAAA;AAAAA,aA+iCE58D,kBAAS;AACP,YAAI,aAAJ,SAA0B;AACxB,iEADwB,SACxB;AAFK;;AAIP,aAJO,IAIP;AAnjCgB;AAApB48D;AAAAA;AAAAA,aAsjCE38D,sBAAa;AAGX,aAHW,MAGX;AACA,aAJW,IAIX;AA1jCgB;AAApB28D;AAAAA;AAAAA,aA6jCE18D,wBAAe;AACb,YAAI,aAAJ,SAA0B;AACxB,iEADwB,SACxB;AAFW;;AAIb,aAJa,UAIb;AAjkCgB;AAApB08D;AAAAA;AAAAA,aAokCE98D,uBAAc;AACZ,aADY,SACZ;AACA,aAFY,MAEZ;AAtkCgB;AAApB88D;AAAAA;AAAAA,aAykCEz8D,2BAAkB;AAChB,aADgB,SAChB;AACA,aAFgB,UAEhB;AA3kCgB;AAApBy8D;AAAAA;AAAAA,aA8kCEx8D,6BAAoB;AAClB,aADkB,SAClB;AACA,aAFkB,YAElB;AAhlCgB;AAApBw8D;AAAAA;AAAAA,aAmlCEz4D,oCAA2B;AACzB,YAAMlZ,IAAAA,GAAO,8BADY,UACZ,CAAb;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAFyB,GAEzBA;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAHyB,GAGzBA;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAJyB,KAIzBA;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EALyB,KAKzBA;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAAkC,aANT,SAMzBA;;AAEA,iDARyB,IAQzB;AA3lCgB;AAApB2xE;AAAAA;AAAAA,aA8lCE94D,2BAAAA,KAAAA,EAAyB;AACvB,YAAM2yC,OAAAA,GAAU0N,KAAAA,CAAAA,UAAAA,CAAAA,IAAAA,IACZ,oBADYA,KACZ,CADYA,GAEZ,cAHmB,KAGnB,CAFJ;;AAGA,YAAI,CAAJ,SAAc;AACZ33D,mEADY,KACZA;AADY;AAJS;;AAQvB,qCARuB,OAQvB;AAtmCgB;AAApBowE;AAAAA;AAAAA,aAymCE74D,iCAAAA,OAAAA,EAAAA,IAAAA,EAAuC;AACrC,YAAMrZ,KAAAA,GAAQ+rD,OAAAA,CADuB,KACrC;AACA,YAAM9rD,MAAAA,GAAS8rD,OAAAA,CAFsB,MAErC;AAEA,YAAMkrB,MAAAA,GAASzE,mBAAAA,CAAAA,OAAAA,EAA6B,KAA7BA,eAAAA,EAAmD,CAAC,CAJ9B,IAItBA,CAAf;AACA,YAAM0E,QAAAA,GAAW,8BALoB,UAKpB,CAAjB;AACAA,QAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EANqC,GAMrCA;AACAA,QAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAPqC,GAOrCA;AACAA,QAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAuC9C,EAAAA,CARF,KAQEA,CAAvC8C;AACAA,QAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAwC9C,EAAAA,CATH,MASGA,CAAxC8C;AACA,+BAVqC,QAUrC;AACA,kBAXqC,SAWrC;AAEA,YAAMC,KAAAA,GAAQ,8BAbuB,WAavB,CAAd;AACAA,QAAAA,KAAAA,CAAAA,cAAAA,CAAAA,QAAAA,EAAAA,YAAAA,EAdqC,MAcrCA;AACAA,QAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAfqC,GAerCA;AACAA,QAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAgC/C,EAAAA,CAAG,CAhBE,MAgBLA,CAAhC+C;AACAA,QAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAoC/C,EAAAA,CAAAA,KAAAA,CAAAA,GAjBC,IAiBrC+C;AACAA,QAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAqC/C,EAAAA,CAAAA,MAAAA,CAAAA,GAlBA,IAkBrC+C;AACAA,QAAAA,KAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,kBAGW/C,EAAAA,CAAG,IAAZ,KAASA,CAHX+C,cAG4B/C,EAAAA,CAAG,KAtBM,MAsBTA,CAH5B+C;;AAKA,kBAAU;AACR9qB,UAAAA,IAAAA,CAAAA,WAAAA,CADQ,KACRA;AADF,eAEO;AACL,mDADK,KACL;AA3BmC;AAzmCrB;AAApB6lB;AAAAA;AAAAA,aAwoCEh5D,+BAAAA,OAAAA,EAA+B;AAC7B,YAAMywC,OAAAA,GAAU,KADa,OAC7B;AACA,YAAM3pD,KAAAA,GAAQ+rD,OAAAA,CAFe,KAE7B;AACA,YAAM9rD,MAAAA,GAAS8rD,OAAAA,CAHc,MAG7B;AACA,YAAMqG,SAAAA,GAAYzI,OAAAA,CAJW,SAI7B;AAEAA,QAAAA,OAAAA,CAAAA,MAAAA,iBAAwB2qB,SANK,EAM7B3qB;AACA,YAAM0C,IAAAA,GAAO,8BAPgB,UAOhB,CAAb;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAgC1C,OAAAA,CARH,MAQ7B0C;AAEA,YAAM9rD,IAAAA,GAAO,8BAVgB,UAUhB,CAAb;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAX6B,GAW7BA;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAZ6B,GAY7BA;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAmC6zE,EAAAA,CAbN,KAaMA,CAAnC7zE;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAoC6zE,EAAAA,CAdP,MAcOA,CAApC7zE;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAf6B,SAe7BA;AACAA,QAAAA,IAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,MAAAA,iBAA0CopD,OAAAA,CAhBb,MAgB7BppD;AAEA,8BAlB6B,IAkB7B;;AACA,iDAnB6B,IAmB7B;;AAEA,8CArB6B,IAqB7B;AA7pCgB;AAApB2xE;AAAAA;AAAAA,aAgqCEz5D,+BAAAA,MAAAA,EAAAA,IAAAA,EAAoC;AAClC,YAAI2E,KAAAA,CAAAA,OAAAA,CAAAA,MAAAA,KAAyB66C,MAAAA,CAAAA,MAAAA,KAA7B,GAAkD;AAChD,yBACEA,MAAAA,CADF,CACEA,CADF,EAEEA,MAAAA,CAFF,CAEEA,CAFF,EAGEA,MAAAA,CAHF,CAGEA,CAHF,EAIEA,MAAAA,CAJF,CAIEA,CAJF,EAKEA,MAAAA,CALF,CAKEA,CALF,EAMEA,MAAAA,CAP8C,CAO9CA,CANF;AAFgC;;AAYlC,kBAAU;AACR,cAAMj4D,KAAAA,GAAQ44D,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CADhB,CACgBA,CAAxB;AACA,cAAM34D,MAAAA,GAAS24D,IAAAA,CAAAA,CAAAA,CAAAA,GAAUA,IAAAA,CAFjB,CAEiBA,CAAzB;AAEA,cAAMse,QAAAA,GAAW,8BAJT,UAIS,CAAjB;AACAA,UAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAmCte,IAAAA,CAL3B,CAK2BA,CAAnCse;AACAA,UAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAmCte,IAAAA,CAN3B,CAM2BA,CAAnCse;AACAA,UAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAuC9C,EAAAA,CAP/B,KAO+BA,CAAvC8C;AACAA,UAAAA,QAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAwC9C,EAAAA,CARhC,MAQgCA,CAAxC8C;AACA,iCATQ,QASR;AACA,oBAVQ,SAUR;AACA,eAXQ,OAWR;AAvBgC;AAhqClB;AAApBhF;AAAAA;AAAAA,aA2rCEx5D,+BAAsB,CA3rCJ;AAApBw5D;AAAAA;AAAAA,aAgsCEhvB,qBAAAA,QAAAA,EAAsB;AACpB,YAAMhK,GAAAA,GAAM,uBAAuB0G,QAAAA,CAAvB,OAAuCA,QAAAA,CAD/B,MACR,CAAZ;AAGA,YAAMw3B,WAAAA,GAAc,8BAJA,UAIA,CAApB;AACAl+B,QAAAA,GAAAA,CAAAA,WAAAA,CALoB,WAKpBA;AACA,oBANoB,WAMpB;AAIA,YAAMm+B,SAAAA,GAAY,8BAVE,OAUF,CAAlB;AACAA,QAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAA4CjC,EAAAA,CAAGx1B,QAAAA,CAX3B,SAWwBw1B,CAA5CiC;AACAn+B,QAAAA,GAAAA,CAAAA,WAAAA,CAZoB,SAYpBA;AAKA,mBAjBoB,SAiBpB;AAEA,eAnBoB,GAmBpB;AAntCgB;AAApBg5B;AAAAA;AAAAA,aAytCEoF,4BAAmB;AACjB,YAAI,CAAC,aAAL,WAA6B;AAC3B,cAAMC,SAAAA,GAAY,8BADS,OACT,CAAlB;AACAA,UAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAA4C,aAFjB,aAE3BA;AACA,+BAH2B,SAG3B;AACA,mCAJ2B,SAI3B;AALe;;AAOjB,eAAO,aAPU,SAOjB;AAhuCgB;AAApBrF;AAAAA;AAAAA,aAsuCEsF,iCAAwB;AACtB,YAAI,CAAC,KAAL,MAAgB;AACd,sBAAY,8BADE,OACF,CAAZ;AACA,sDAA4CpC,EAAAA,CAAG,KAFjC,eAE8BA,CAA5C;;AACA,cAAI,aAAJ,eAAgC;AAC9B,gDAAoC,KADN,IAC9B;AADF,iBAEO;AACL,iCAAqB,KADhB,IACL;AANY;AADM;;AAUtB,eAAO,KAVe,IAUtB;AAhvCgB;AAApBlD;;AAAAA;AAAAA,KAAAA;AAvbF;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;IAiBA;;;;;;;WACE,0DAAwD;AACtD,UAAMjK,UAAAA,GAAaD,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,QAAAA,KAAAA,EADY;AACd,OAArBsjE,CAAnB;;AACA,cAAQ1qC,OAAAA,CAAR;AACE;AACE,cAAI2qC,UAAAA,CAAAA,KAAAA,KAAJ,MAA+B;AAC7B35C,YAAAA,IAAAA,CAAAA,WAAAA,GAAmB25C,UAAAA,CADU,KAC7B35C;AAFJ;;AAIE,cAAIqwB,MAAAA,KAAJ,SAAwB;AAAA;AAJ1B;;AAOErwB,UAAAA,IAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAA+BuI,UAAAA,KAAAA,EAAS;AACtCmxC,YAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,cAAAA,KAAAA,EAAOmyB,KAAAA,CAAAA,MAAAA,CADQ;AACjB,aAArBmxC;AARJ,WAOE15C;AARJ;;AAYE;AACE,cACEgP,OAAAA,CAAAA,UAAAA,CAAAA,IAAAA,KAAAA,OAAAA,IACAA,OAAAA,CAAAA,UAAAA,CAAAA,IAAAA,KAFF,YAGE;AACA,gBAAI2qC,UAAAA,CAAAA,KAAAA,KAAqB3qC,OAAAA,CAAAA,UAAAA,CAAzB,OAAmD;AACjDhP,cAAAA,IAAAA,CAAAA,YAAAA,CAAAA,SAAAA,EADiD,IACjDA;AAFF;;AAIA,gBAAIqwB,MAAAA,KAAJ,SAAwB;AAAA;AAJxB;;AAOArwB,YAAAA,IAAAA,CAAAA,gBAAAA,CAAAA,QAAAA,EAAgCuI,UAAAA,KAAAA,EAAS;AACvCmxC,cAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AACnBtjE,gBAAAA,KAAAA,EAAOmyB,KAAAA,CAAAA,MAAAA,CAAAA,OAAAA,GACHA,KAAAA,CAAAA,MAAAA,CAAAA,YAAAA,CADGA,OACHA,CADGA,GAEHA,KAAAA,CAAAA,MAAAA,CAAAA,YAAAA,CAJiC,QAIjCA;AAHe,eAArBmxC;AARF,aAOA15C;AAVF,iBAiBO;AACL,gBAAI25C,UAAAA,CAAAA,KAAAA,KAAJ,MAA+B;AAC7B35C,cAAAA,IAAAA,CAAAA,YAAAA,CAAAA,OAAAA,EAA2B25C,UAAAA,CADE,KAC7B35C;AAFG;;AAIL,gBAAIqwB,MAAAA,KAAJ,SAAwB;AAAA;AAJnB;;AAOLrwB,YAAAA,IAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAA+BuI,UAAAA,KAAAA,EAAS;AACtCmxC,cAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,gBAAAA,KAAAA,EAAOmyB,KAAAA,CAAAA,MAAAA,CADQ;AACjB,eAArBmxC;AARG,aAOL15C;AAzBJ;;AAZF;;AA0CE;AACE,cAAI25C,UAAAA,CAAAA,KAAAA,KAAJ,MAA+B;AAAA,uDACR3qC,OAAAA,CAArB,QAD6B;AAAA;;AAAA;AAC7B,kEAAuC;AAAA,oBAAvC,MAAuC;;AACrC,oBAAIwsC,MAAAA,CAAAA,UAAAA,CAAAA,KAAAA,KAA4B7B,UAAAA,CAAhC,OAAkD;AAChD6B,kBAAAA,MAAAA,CAAAA,UAAAA,CAAAA,QAAAA,GADgD,IAChDA;AAFmC;AADV;AAAA;AAAA;AAAA;AAAA;AAAA;AADjC;;AAQEx7C,UAAAA,IAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAA+BuI,UAAAA,KAAAA,EAAS;AACtC,gBAAMxV,OAAAA,GAAUwV,KAAAA,CAAAA,MAAAA,CADsB,OACtC;AACA,gBAAMnyB,KAAAA,GACJ2c,OAAAA,CAAAA,aAAAA,KAA0B,CAA1BA,CAAAA,GAAAA,EAAAA,GAEIA,OAAAA,CAAQA,OAAAA,CAARA,aAAAA,CAAAA,CALgC,KAEtC;AAIA2mD,YAAAA,OAAAA,CAAAA,QAAAA,CAAAA,EAAAA,EAAqB;AAAEtjE,cAAAA,KANe,EAMfA;AAAF,aAArBsjE;AAdJ,WAQE15C;AAlDJ;AAAA;AAHW;;;WAiEb,uDAAqD;AACnD,UAAM,UAAN,GADmD,OACnD,CAAM,UAAN;;AACA,UAAImpD,UAAAA,CAAAA,IAAAA,KAAJ,SAAiC;AAG/BA,QAAAA,UAAAA,CAAAA,IAAAA,aAAqBA,UAAAA,CAAH,IAAlBA,cAH+B,MAG/BA;AALiD;;AAOnD,yCAA2Br1E,MAAAA,CAAAA,OAAAA,CAA3B,UAA2BA,CAA3B,qCAAuD;AAAvD;AAAA,YAAW,GAAX;AAAA;;AAIE,YAAIsC,KAAAA,KAAAA,IAAAA,IAAkBA,KAAAA,KAAlBA,SAAAA,IAAyCuD,GAAAA,KAA7C,UAA+D;AAAA;AAJV;;AAQrD,YAAIA,GAAAA,KAAJ,SAAqB;AACnB,cAAIA,GAAAA,KAAJ,eAA2B;AACzBqmB,YAAAA,IAAAA,CAAAA,WAAAA,GADyB,KACzBA;AADF,iBAEO,IAAIrmB,GAAAA,KAAJ,SAAqB;AAC1BqmB,YAAAA,IAAAA,CAAAA,YAAAA,CAAAA,GAAAA,EAAuB5pB,KAAAA,CAAAA,IAAAA,CADG,GACHA,CAAvB4pB;AADK,iBAEA;AACLA,YAAAA,IAAAA,CAAAA,YAAAA,CAAAA,GAAAA,EADK,KACLA;AANiB;AAArB,eAQO;AACLlsB,UAAAA,MAAAA,CAAAA,MAAAA,CAAcksB,IAAAA,CAAdlsB,KAAAA,EADK,KACLA;AAjBmD;AAPJ;;AA8BnD,UAAI4lE,OAAAA,IAAWyP,UAAAA,CAAf,QAAkC;AAChC,gCAAwBA,UAAAA,CAAxB,iBADgC,OAChC;AA/BiD;AAjExC;;;WAoGb,4BAA0B;AACxB,UAAMzP,OAAAA,GAAU/D,UAAAA,CADQ,iBACxB;AACA,UAAMyT,IAAAA,GAAOzT,UAAAA,CAFW,GAExB;AACA,UAAMtlB,MAAAA,GAASslB,UAAAA,CAAAA,MAAAA,IAHS,SAGxB;AACA,UAAM0T,QAAAA,GAAWv5E,QAAAA,CAAAA,aAAAA,CAAuBs5E,IAAAA,CAJhB,IAIPt5E,CAAjB;;AACA,UAAIs5E,IAAAA,CAAJ,YAAqB;AACnB,qCADmB,IACnB;AANsB;;AAQxB,UAAME,KAAAA,GAAQ,CAAC,OAAO,CAAP,YAAD,CAAd;AAEA,UAAMC,OAAAA,GAAU5T,UAAAA,CAVQ,GAUxB;AACA4T,MAAAA,OAAAA,CAAAA,WAAAA,CAXwB,QAWxBA;AACA,UAAMljE,SAAAA,oBAAsBsvD,UAAAA,CAAAA,QAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAZJ,GAYIA,CAAtBtvD,MAAN;AACAkjE,MAAAA,OAAAA,CAAAA,KAAAA,CAAAA,SAAAA,GAbwB,SAaxBA;AAGAA,MAAAA,OAAAA,CAAAA,YAAAA,CAAAA,OAAAA,EAhBwB,kBAgBxBA;AAGA,UAAMvI,QAAAA,GAnBkB,EAmBxB;;AAEA,aAAOsI,KAAAA,CAAAA,MAAAA,GAAP,GAAyB;AAAA;;AACvB,oCAA0BA,KAAAA,CAAMA,KAAAA,CAAAA,MAAAA,GADT,CACGA,CAA1B;AAAA,YAAM,MAAN;AAAA,YAAM,CAAN;AAAA,YAAM,IAAN;;AACA,YAAIp2E,CAAAA,GAAAA,CAAAA,KAAU+1B,MAAAA,CAAAA,QAAAA,CAAd,QAAsC;AACpCqgD,UAAAA,KAAAA,CADoC,GACpCA;AADoC;AAFf;;AAOvB,YAAME,KAAAA,GAAQvgD,MAAAA,CAAAA,QAAAA,CAAgB,EAAEqgD,KAAAA,CAAMA,KAAAA,CAAAA,MAAAA,GAANA,CAAAA,CAAAA,CAPT,CAOSA,CAAlBrgD,CAAd;;AACA,YAAIugD,KAAAA,KAAJ,MAAoB;AAAA;AARG;;AAYvB,YAAM,IAAN,GAZuB,KAYvB,CAAM,IAAN;;AACA,YAAIx1E,IAAAA,KAAJ,SAAsB;AACpB,cAAM83B,IAAAA,GAAOh8B,QAAAA,CAAAA,cAAAA,CAAwB05E,KAAAA,CADjB,KACP15E,CAAb;AACAkxE,UAAAA,QAAAA,CAAAA,IAAAA,CAFoB,IAEpBA;AACAhhD,UAAAA,IAAAA,CAAAA,WAAAA,CAHoB,IAGpBA;AAHoB;AAbC;;AAoBvB,YAAIypD,SApBmB,SAoBvB;;AACA,YAAID,KAAJ,aAAIA,KAAJ,oCAAIA,KAAAA,CAAAA,UAAJ,8CAAIA,kBAAJ,OAA8B;AAC5BC,UAAAA,SAAAA,GAAY35E,QAAAA,CAAAA,eAAAA,CAAyB05E,KAAAA,CAAAA,UAAAA,CAAzB15E,KAAAA,EADgB,IAChBA,CAAZ25E;AADF,eAEO;AACLA,UAAAA,SAAAA,GAAY35E,QAAAA,CAAAA,aAAAA,CADP,IACOA,CAAZ25E;AAxBqB;;AA2BvBzpD,QAAAA,IAAAA,CAAAA,WAAAA,CA3BuB,SA2BvBA;;AACA,YAAIwpD,KAAAA,CAAJ,YAAsB;AACpB,wDADoB,MACpB;AA7BqB;;AAgCvB,YAAIA,KAAAA,CAAAA,QAAAA,IAAkBA,KAAAA,CAAAA,QAAAA,CAAAA,MAAAA,GAAtB,GAAiD;AAC/CF,UAAAA,KAAAA,CAAAA,IAAAA,CAAW,QAAQ,CAAR,aAAXA;AADF,eAEO,IAAIE,KAAAA,CAAJ,OAAiB;AACtB,cAAM19C,KAAAA,GAAOh8B,QAAAA,CAAAA,cAAAA,CAAwB05E,KAAAA,CADf,KACT15E,CAAb;;AACA,cAAI4iD,kBAAAA,eAAAA,CAAJ,IAAIA,CAAJ,EAAmC;AACjCsuB,YAAAA,QAAAA,CAAAA,IAAAA,CADiC,KACjCA;AAHoB;;AAKtByI,UAAAA,SAAAA,CAAAA,WAAAA,CALsB,KAKtBA;AAvCqB;AArBD;;AAAA,kDAgFPF,OAAAA,CAAAA,gBAAAA,CAAjB,uDAAiBA,CAhFO;AAAA;;AAAA;AAgFxB,+DAEG;AAAA,cAFH,EAEG;AACD1vD,UAAAA,EAAAA,CAAAA,YAAAA,CAAAA,UAAAA,EADC,IACDA;AAnFsB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsFxB,aAAO;AACLmnD,QAAAA,QAvFsB,EAuFtBA;AADK,OAAP;AA1LW;;;WAsMb,4BAA0B;AACxB,UAAM36D,SAAAA,oBAAsBsvD,UAAAA,CAAAA,QAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CADJ,GACIA,CAAtBtvD,MAAN;AACAsvD,MAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,SAAAA,GAFwB,SAExBA;AACAA,MAAAA,UAAAA,CAAAA,GAAAA,CAAAA,MAAAA,GAHwB,KAGxBA;AAzMW;;;;;;;;;;;;;;;;;;;;;;;ACDf;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAtBA;;AAiCA,IAAMla,EAAAA,GAAKC,OAAAA,CAjCX,IAiCWA,CAAX;;AACA,IAAMguB,IAAAA,GAAOhuB,OAAAA,CAlCb,MAkCaA,CAAb;;AACA,IAAMiuB,KAAAA,GAAQjuB,OAAAA,CAnCd,OAmCcA,CAAd;;AACA,IAAM9oD,GAAAA,GAAM8oD,OAAAA,CApCZ,KAoCYA,CAAZ;;AAEA,IAAMkuB,YAAAA,GAtCN,yBAsCA;;AAEA,6BAA6B;AAC3B,MAAMC,SAAAA,GAAYj3E,GAAAA,CAAAA,KAAAA,CADS,SACTA,CAAlB;;AACA,MAAIi3E,SAAAA,CAAAA,QAAAA,KAAAA,OAAAA,IAAkCA,SAAAA,CAAtC,MAAsD;AACpD,WADoD,SACpD;AAHyB;;AAM3B,MAAI,qBAAJ,SAAI,CAAJ,EAAqC;AACnC,WAAOj3E,GAAAA,CAAAA,KAAAA,mBAD4B,SAC5BA,EAAP;AAPyB;;AAU3B,MAAI,CAACi3E,SAAAA,CAAL,MAAqB;AACnBA,IAAAA,SAAAA,CAAAA,QAAAA,GADmB,OACnBA;AAXyB;;AAa3B,SAb2B,SAa3B;AArDF;;IAwDA;AACEt6E,yBAAAA,MAAAA,EAAoB;AAAA;;AAClB,kBADkB,MAClB;AACA,eAAWu6E,QAAAA,CAAS12D,MAAAA,CAFF,GAEP02D,CAAX;AACA,kBACE,iCAAiC,sBAJjB,QAGlB;AAGA,mBAAe,sBANG,OAMlB;AACA,uBAAoB,eAAe12D,MAAAA,CAAhB,WAAC,IAPF,EAOlB;AAEA,8BATkB,IASlB;AACA,gCAVkB,EAUlB;AAXgB;;;;SAclB,eAA6B;AAAA;;AAC3B,gEAAO,uBAAP,2DAAO,8BAAP,yEAD2B,CAC3B;AAfgB;;;WAkBlB4hD,yBAAgB;AACdriE,wBACE,CAAC,KADHA,kBAAAA,EADc,sDACdA;AAIA,gCAA0B,eACtB,8BADsB,IACtB,CADsB,GAEtB,4BAPU,IAOV,CAFJ;AAGA,aAAO,KARO,kBAQd;AA1BgB;;;WA6BlBuiE,wBAAAA,KAAAA,EAAAA,GAAAA,EAA2B;AACzB,UAAI7hE,GAAAA,IAAO,KAAX,wBAAwC;AACtC,eADsC,IACtC;AAFuB;;AAIzB,UAAMwjD,WAAAA,GAAc,eAChB,4CADgB,GAChB,CADgB,GAEhB,0CANqB,GAMrB,CAFJ;;AAGA,qCAPyB,WAOzB;;AACA,aARyB,WAQzB;AArCgB;;;WAwClBse,2BAAAA,MAAAA,EAA0B;AACxB,UAAI,KAAJ,oBAA6B;AAC3B,uCAD2B,MAC3B;AAFsB;;AAAA,iDAIH,gCAArB,CAAqB,CAJG;AAAA;;AAAA;AAIxB,4DAAyD;AAAA,cAAzD,MAAyD;AACvD/lC,UAAAA,MAAAA,CAAAA,MAAAA,CADuD,MACvDA;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAxCR;;;;;;;;IAkDpB;AACE7/B,0BAAAA,MAAAA,EAAoB;AAAA;;AAClB,gBAAY8/B,MAAAA,CADM,GAClB;AACA,iBAFkB,KAElB;AACA,wBAHkB,IAGlB;AACA,sBAJkB,IAIlB;AACA,QAAMjc,MAAAA,GAASic,MAAAA,CALG,MAKlB;AACA,0BAAsBjc,MAAAA,CANJ,MAMlB;AACA,mBAPkB,CAOlB;AACA,qBARkB,IAQlB;AAEA,yBAAqBA,MAAAA,CAAAA,YAAAA,IAVH,KAUlB;AACA,2BAAuBA,MAAAA,CAXL,cAWlB;;AACA,QAAI,CAAC,KAAD,mBAAyB,CAAC,KAA9B,eAAkD;AAChD,2BADgD,IAChD;AAbgB;;AAgBlB,iCAA6B,CAACA,MAAAA,CAhBZ,aAgBlB;AACA,6BAAyB,CAACA,MAAAA,CAjBR,YAiBlB;AAEA,2BAnBkB,IAmBlB;AACA,2BApBkB,oCAoBlB;AACA,8BArBkB,oCAqBlB;AAtBiB;;;;SAyBnB,eAAmB;AACjB,aAAO,wBADU,OACjB;AA1BiB;;;SA6BnB,eAAe;AACb,aAAO,KADM,SACb;AA9BiB;;;SAiCnB,eAAoB;AAClB,aAAO,KADW,cAClB;AAlCiB;;;SAqCnB,eAAuB;AACrB,aAAO,KADc,iBACrB;AAtCiB;;;SAyCnB,eAA2B;AACzB,aAAO,KADkB,qBACzB;AA1CiB;;;;+EA6CnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,qBADK,OAAb;;AAAA;AAAA,qBAEM,KAAJ,KAFF;AAAA;AAAA;AAAA;;AAAA,iDAGW;AAAEhd,kBAAAA,KAAAA,EAAF;AAAoBiD,kBAAAA,IAAAA,EAApB;AAAA,iBAHX;;AAAA;AAAA,qBAKM,KAAJ,YALF;AAAA;AAAA;AAAA;;AAAA,sBAMU,KADe,YALzB;;AAAA;AASQ0U,gBAAAA,KATR,GASgB,qBATH,IASG,EAThB;;AAAA,sBAUMA,KAAAA,KAAJ,IAVF;AAAA;AAAA;AAAA;;AAWI,uCADkB,oCAClB;AAXJ,iDAYW,KAFW,IAEX,EAZX;;AAAA;AAcE,gCAAgBA,KAAAA,CAdL,MAcX;;AACA,oBAAI,KAAJ,YAAqB;AACnB,kCAAgB;AACdqoC,oBAAAA,MAAAA,EAAQ,KADM;AAEdC,oBAAAA,KAAAA,EAAO,KAFO;AAAA,mBAAhB;AAhBS;;AAsBLjlC,gBAAAA,MAtBR,GAsBiB,sBAtBJ,MAAb;AAAA,iDAuBS;AAAEhb,kBAAAA,KAAAA,EAAF;AAAiBiD,kBAAAA,IAAAA,EAAjB;AAAA,iBAvBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WA0BAw4B,gBAAAA,MAAAA,EAAe;AAGb,UAAI,CAAC,KAAL,iBAA2B;AACzB,oBADyB,MACzB;;AADyB;AAHd;;AAOb,mCAPa,MAOb;AA9EiB;;;WAiFnBk4C,gBAAAA,MAAAA,EAAe;AACb,0BADa,MACb;;AACA,2BAFa,OAEb;AAnFiB;;;WAsFnBC,4BAAAA,cAAAA,EAAmC;AAAA;;AACjC,6BADiC,cACjC;AACAr3B,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,UAAAA,EAA8B,YAAM;AAClC,8BADkC,OAClC;AAH+B,OAEjCA;AAIAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAyB,YAAM;AAE7BA,QAAAA,cAAAA,CAF6B,OAE7BA;AACA,sBAH6B,IAG7B;;AACA,8BAJ6B,OAI7B;AAV+B,OAMjCA;AAOAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,OAAAA,EAA2BnqB,UAAAA,MAAAA,EAAU;AACnC,qBADmC,MACnC;AAd+B,OAajCmqB;;AAMA,UAAI,CAAC,KAAD,yBAA+B,KAAnC,mBAA2D;AACzD,oBAAY,yBAD6C,uBAC7C,CAAZ;AApB+B;;AAwBjC,UAAI,KAAJ,cAAuB;AACrB,qCAA6B,KADR,YACrB;AAzB+B;AAtFhB;;;;;;IAoHrB;AACEpjD,2BAAAA,MAAAA,EAAoB;AAAA;;AAClB,gBAAY8/B,MAAAA,CADM,GAClB;AACA,iBAFkB,KAElB;AACA,wBAHkB,IAGlB;AACA,sBAJkB,IAIlB;AACA,mBALkB,CAKlB;AACA,2BANkB,IAMlB;AACA,2BAPkB,oCAOlB;AACA,QAAMjc,MAAAA,GAASic,MAAAA,CARG,MAQlB;AACA,iCAA6B,CAACjc,MAAAA,CATZ,aASlB;AAVkB;;;;SAapB,eAA2B;AACzB,aAAO,KADkB,qBACzB;AAdkB;;;;gFAiBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,qBADK,OAAb;;AAAA;AAAA,qBAEM,KAAJ,KAFF;AAAA;AAAA;AAAA;;AAAA,kDAGW;AAAEhd,kBAAAA,KAAAA,EAAF;AAAoBiD,kBAAAA,IAAAA,EAApB;AAAA,iBAHX;;AAAA;AAAA,qBAKM,KAAJ,YALF;AAAA;AAAA;AAAA;;AAAA,sBAMU,KADe,YALzB;;AAAA;AASQ0U,gBAAAA,KATR,GASgB,qBATH,IASG,EAThB;;AAAA,sBAUMA,KAAAA,KAAJ,IAVF;AAAA;AAAA;AAAA;;AAWI,uCADkB,oCAClB;AAXJ,kDAYW,KAFW,IAEX,EAZX;;AAAA;AAcE,gCAAgBA,KAAAA,CAdL,MAcX;;AACA,oBAAI,KAAJ,YAAqB;AACnB,kCAAgB;AAAEqoC,oBAAAA,MAAAA,EAAQ,KADP;AACH,mBAAhB;AAhBS;;AAmBLhlC,gBAAAA,MAnBR,GAmBiB,sBAnBJ,MAAb;AAAA,kDAoBS;AAAEhb,kBAAAA,KAAAA,EAAF;AAAiBiD,kBAAAA,IAAAA,EAAjB;AAAA,iBApBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAuBAw4B,gBAAAA,MAAAA,EAAe;AAGb,UAAI,CAAC,KAAL,iBAA2B;AACzB,oBADyB,MACzB;;AADyB;AAHd;;AAOb,mCAPa,MAOb;AA/CkB;;;WAkDpBk4C,gBAAAA,MAAAA,EAAe;AACb,0BADa,MACb;;AACA,2BAFa,OAEb;AApDkB;;;WAuDpBC,4BAAAA,cAAAA,EAAmC;AAAA;;AACjC,6BADiC,cACjC;AACAr3B,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,UAAAA,EAA8B,YAAM;AAClC,+BADkC,OAClC;AAH+B,OAEjCA;AAIAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAyB,YAAM;AAE7BA,QAAAA,cAAAA,CAF6B,OAE7BA;AACA,uBAH6B,IAG7B;;AACA,+BAJ6B,OAI7B;AAV+B,OAMjCA;AAOAA,MAAAA,cAAAA,CAAAA,EAAAA,CAAAA,OAAAA,EAA2BnqB,UAAAA,MAAAA,EAAU;AACnC,sBADmC,MACnC;AAd+B,OAajCmqB;;AAKA,UAAI,KAAJ,cAAuB;AACrB,qCAA6B,KADR,YACrB;AAnB+B;AAvDf;;;;;;AA+EtB,kDAAkD;AAChD,SAAO;AACLl+C,IAAAA,QAAAA,EAAUo1E,SAAAA,CADL;AAELI,IAAAA,IAAAA,EAAMJ,SAAAA,CAFD;AAGLK,IAAAA,IAAAA,EAAML,SAAAA,CAHD;AAIL3+C,IAAAA,IAAAA,EAAM2+C,SAAAA,CAJD;AAKLxqD,IAAAA,IAAAA,EAAMwqD,SAAAA,CALD;AAML7wE,IAAAA,MAAAA,EANK;AAOLmxE,IAAAA,OAPK,EAOLA;AAPK,GAAP;AA9SF;;IAyTA;;;;;AACE56E,mCAAAA,MAAAA,EAAoB;AAAA;;AAAA;;AAClB,+BADkB,MAClB;;AAEA,QAAM66E,cAAAA,GAAiBr6E,SAAjBq6E,cAAiBr6E,CAAAA,QAAAA,EAAY;AACjC,UAAIA,QAAAA,CAAAA,UAAAA,KAAJ,KAAiC;AAC/B,YAAMm8B,KAAAA,GAAQ,sDAAwC,OADvB,IACjB,SAAd;AACA,8BAF+B,KAE/B;;AACA,yCAH+B,KAG/B;;AAH+B;AADA;;AAOjC,gCAPiC,OAOjC;;AACA,gCARiC,QAQjC;;AAEA,UAAMm+C,iBAAAA,GAAoBr2E,SAApBq2E,iBAAoBr2E,CAAAA,IAAAA,EAAQ;AAGhC,eAAO,+BAA6BA,IAAAA,CAHJ,WAGIA,EAA7B,CAAP;AAb+B,OAUjC;;AAKA,kCACE,qDAAiC;AAC/Bq2E,QAAAA,iBAD+B,EAC/BA,iBAD+B;AAE/BC,QAAAA,MAAAA,EAAQj7C,MAAAA,CAFuB;AAG/Bod,QAAAA,cAAAA,EAAgB,OAHe;AAI/BJ,QAAAA,YAAAA,EAAc,OAJiB;AAAA,OAAjC,CADF;AAAA,UAAM,kBAAN,yBAAM,kBAAN;AAAA,UAAM,eAAN,yBAAM,eAAN;;AAQA,iCAvBiC,kBAuBjC;AAEA,8BAAsBk+B,eAAAA,IAAmB,OAzBR,cAyBjC;AAEA,yBAAiBC,8CA3BgB,iBA2BhBA,CAAjB;AA9BgB,KAGlB;;AA8BA,sBAjCkB,IAiClB;;AACA,QAAI,yBAAJ,SAAoC;AAClC,wBAAgBd,IAAAA,CAAAA,OAAAA,CACde,oBAAAA,CAAqB,OAArBA,IAAAA,EAAgCp7C,MAAAA,CADlBq6C,WACde,CADcf,EADkB,cAClBA,CAAhB;AADF,WAKO;AACL,wBAAgBC,KAAAA,CAAAA,OAAAA,CACdc,oBAAAA,CAAqB,OAArBA,IAAAA,EAAgCp7C,MAAAA,CADlBs6C,WACdc,CADcd,EADX,cACWA,CAAhB;AAxCgB;;AA8ClB,gCAA0BnhD,UAAAA,MAAAA,EAAU;AAClC,4BADkC,MAClC;;AACA,uCAFkC,MAElC;AAhDgB,KA8ClB;;AAOA,oBArDkB,GAqDlB;;AArDkB;AAD+B;;;EAArD;;IA0DA;;;;;AACEj5B,oCAAAA,MAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAgC;AAAA;;AAAA;;AAC9B,gCAD8B,MAC9B;AAEA,0BAH8B,EAG9B;;AACA,yBAAuB8/B,MAAAA,CAAvB,aAA2C;AACzC,UAAMj5B,KAAAA,GAAQi5B,MAAAA,CAAAA,WAAAA,CAD2B,QAC3BA,CAAd;;AACA,UAAI,iBAAJ,aAAkC;AAAA;AAFO;;AAKzC,sCALyC,KAKzC;AAT4B;;AAW9B,gDAA0B,KAA1B,cAA4Ch8B,GAAAA,GAXd,CAW9B;;AAEA,QAAM+2E,cAAAA,GAAiBr6E,SAAjBq6E,cAAiBr6E,CAAAA,QAAAA,EAAY;AACjC,UAAIA,QAAAA,CAAAA,UAAAA,KAAJ,KAAiC;AAC/B,YAAMm8B,KAAAA,GAAQ,sDAAwC,OADvB,IACjB,SAAd;AACA,8BAF+B,KAE/B;AAF+B;AADA;;AAMjC,gCANiC,QAMjC;AAnB4B,KAa9B;;AASA,sBAtB8B,IAsB9B;;AACA,QAAI,yBAAJ,SAAoC;AAClC,wBAAgBw9C,IAAAA,CAAAA,OAAAA,CACde,oBAAAA,CAAqB,OAArBA,IAAAA,EAAgC,OADlBf,YACde,CADcf,EADkB,cAClBA,CAAhB;AADF,WAKO;AACL,wBAAgBC,KAAAA,CAAAA,OAAAA,CACdc,oBAAAA,CAAqB,OAArBA,IAAAA,EAAgC,OADlBd,YACdc,CADcd,EADX,cACWA,CAAhB;AA7B4B;;AAmC9B,gCAA0BnhD,UAAAA,MAAAA,EAAU;AAClC,4BADkC,MAClC;AApC4B,KAmC9B;;AAGA,oBAtC8B,GAsC9B;;AAtC8B;AADqB;;;EAAvD;;IA2CA;;;;;AACEj5B,qCAAAA,MAAAA,EAAoB;AAAA;;AAAA;;AAClB,gCADkB,MAClB;AAEA,QAAI8vB,IAAAA,GAAOxrB,kBAAAA,CAAmB,YAHZ,IAGPA,CAAX;;AAGA,QAAI+1E,YAAAA,CAAAA,IAAAA,CAAkB,YAAtB,IAAIA,CAAJ,EAAuC;AACrCvqD,MAAAA,IAAAA,GAAOA,IAAAA,CAAAA,OAAAA,CAAAA,KAAAA,EAD8B,EAC9BA,CAAPA;AAPgB;;AAUlBo8B,IAAAA,EAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAe,uBAAiB;AAC9B,iBAAW;AACT,YAAIvvB,KAAAA,CAAAA,IAAAA,KAAJ,UAA6B;AAC3BA,UAAAA,KAAAA,GAAQ,sDADmB,IACnB,SAARA;AAFO;;AAIT,8BAJS,KAIT;;AACA,yCALS,KAKT;;AALS;AADmB;;AAU9B,8BAAsBvI,IAAAA,CAVQ,IAU9B;;AAEA,gCAAwB83B,EAAAA,CAAAA,gBAAAA,CAZM,IAYNA,CAAxB;;AACA,gCAb8B,OAa9B;AAvBgB,KAUlBA;AAVkB;AADiC;;;EAAvD;;IA6BA;;;;;AACElsD,sCAAAA,MAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAgC;AAAA;;AAAA;;AAC9B,gCAD8B,MAC9B;AAEA,QAAI8vB,IAAAA,GAAOxrB,kBAAAA,CAAmB,YAHA,IAGnBA,CAAX;;AAGA,QAAI+1E,YAAAA,CAAAA,IAAAA,CAAkB,YAAtB,IAAIA,CAAJ,EAAuC;AACrCvqD,MAAAA,IAAAA,GAAOA,IAAAA,CAAAA,OAAAA,CAAAA,KAAAA,EAD8B,EAC9BA,CAAPA;AAP4B;;AAU9B,8BAAwB,0BAA0B;AAAElrB,MAAAA,KAAF,EAAEA,KAAF;AAASd,MAAAA,GAAAA,EAAKA,GAAAA,GAAd;AAAA,KAA1B,CAAxB;;AAV8B;AADuB;;;EAAzD;;;;;;;;;;;;;;;;AC5aA;;AAfA;;AAAA;;AAuBA,gDAKG;AAAA,MALuC,iBAKvC,QALuC,iBAKvC;AAAA,MALuC,MAKvC,QALuC,MAKvC;AAAA,MALuC,cAKvC,QALuC,cAKvC;AAAA,MALH,YAKG,QALH,YAKG;AACDV,oBAAO85C,cAAAA,GAAP95C,CAAAA,EADC,2CACDA;AACA,MAAM+3E,YAAAA,GAAe;AACnBC,IAAAA,kBAAAA,EADmB;AAEnBJ,IAAAA,eAAAA,EAFmB;AAAA,GAArB;AAKA,MAAM78D,MAAAA,GAASzY,QAAAA,CAASo1E,iBAAAA,CAATp1E,gBAASo1E,CAATp1E,EAPd,EAOcA,CAAf;;AACA,MAAI,CAAC+X,MAAAA,CAAAA,SAAAA,CAAL,MAAKA,CAAL,EAA+B;AAC7B,WAD6B,YAC7B;AATD;;AAYD09D,EAAAA,YAAAA,CAAAA,eAAAA,GAZC,MAYDA;;AAEA,MAAIh9D,MAAAA,IAAU,IAAd,gBAAkC;AAGhC,WAHgC,YAGhC;AAjBD;;AAoBD,MAAI2+B,YAAAA,IAAgB,CAApB,QAA6B;AAC3B,WAD2B,YAC3B;AArBD;;AAuBD,MAAIg+B,iBAAAA,CAAAA,eAAAA,CAAAA,KAAJ,SAAoD;AAClD,WADkD,YAClD;AAxBD;;AA2BD,MAAMO,eAAAA,GAAkBP,iBAAAA,CAAAA,kBAAAA,CAAAA,IA3BvB,UA2BD;;AACA,MAAIO,eAAAA,KAAJ,YAAoC;AAClC,WADkC,YAClC;AA7BD;;AAgCDF,EAAAA,YAAAA,CAAAA,kBAAAA,GAhCC,IAgCDA;AACA,SAjCC,YAiCD;AA7DF;;AAgEA,sDAAsD;AACpD,MAAMG,kBAAAA,GAAqBR,iBAAAA,CADyB,qBACzBA,CAA3B;;AACA,0BAAwB;AACtB,QAAItyB,QAAAA,GAAW+yB,kEADO,kBACPA,CAAf;;AACA,QAAI/yB,QAAAA,CAAAA,QAAAA,CAAJ,GAAIA,CAAJ,EAA4B;AAC1B,UAAI;AACFA,QAAAA,QAAAA,GAAWlkD,kBAAAA,CADT,QACSA,CAAXkkD;AADF,QAEE,WAAW,CAHa;AAFN;;AAOtB,QAAIqd,8BAAJ,QAAIA,CAAJ,EAAyB;AACvB,aADuB,QACvB;AARoB;AAF4B;;AAapD,SAboD,IAapD;AA7EF;;AAgFA,gDAAgD;AAC9C,MAAIhpC,MAAAA,KAAAA,GAAAA,IAAmBA,MAAAA,KAAAA,CAAAA,IAAgBx5B,GAAAA,CAAAA,UAAAA,CAAvC,OAAuCA,CAAvC,EAAiE;AAC/D,WAAO,8BAAwB,wBADgC,IACxD,CAAP;AAF4C;;AAI9C,SAAO,4EACL,MADK,mDAJuC,MAIvC,CAAP;AApFF;;AA0FA,wCAAwC;AACtC,SAAOw5B,MAAAA,KAAAA,GAAAA,IAAkBA,MAAAA,KADa,GACtC;AA3FF;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;AA+BA,qEAAqE;AACnE,MAAI2+C,kBAAAA,GAD+D,IACnE;AAGA,MAAIje,GAAAA,GAAMke,aAAAA,CAAAA,aAAAA,EAAAA,GAAAA,CAAAA,CAAAA,IAAAA,CAJyD,kBAIzDA,CAAV;;AACA,WAAS;AACPle,IAAAA,GAAAA,GAAMA,GAAAA,CADC,CACDA,CAANA;AACA,QAAI/U,QAAAA,GAAWkzB,cAAAA,CAFR,GAEQA,CAAf;AACAlzB,IAAAA,QAAAA,GAAWhnC,QAAAA,CAHJ,QAGIA,CAAXgnC;AACAA,IAAAA,QAAAA,GAAWmzB,aAAAA,CAJJ,QAIIA,CAAXnzB;AACAA,IAAAA,QAAAA,GAAWozB,aAAAA,CALJ,QAKIA,CAAXpzB;AACA,WAAOqzB,aAAAA,CANA,QAMAA,CAAP;AAXiE;;AAiBnEte,EAAAA,GAAAA,GAAMue,eAAAA,CAjB6D,kBAiB7DA,CAANve;;AACA,WAAS;AAEP,QAAM/U,SAAAA,GAAWozB,aAAAA,CAFV,GAEUA,CAAjB;;AACA,WAAOC,aAAAA,CAHA,SAGAA,CAAP;AArBiE;;AAyBnEte,EAAAA,GAAAA,GAAMke,aAAAA,CAAAA,UAAAA,EAAAA,GAAAA,CAAAA,CAAAA,IAAAA,CAzB6D,kBAyB7DA,CAANle;;AACA,WAAS;AACPA,IAAAA,GAAAA,GAAMA,GAAAA,CADC,CACDA,CAANA;;AACA,QAAI/U,UAAAA,GAAWkzB,cAAAA,CAFR,GAEQA,CAAf;;AACAlzB,IAAAA,UAAAA,GAAWozB,aAAAA,CAHJ,UAGIA,CAAXpzB;AACA,WAAOqzB,aAAAA,CAJA,UAIAA,CAAP;AA9BiE;;AAoCnE,kDAAgD;AAC9C,WAAO,WACL,8GADK,KADuC,KACvC,CAAP;AArCiE;;AAmDnE,uCAAqC;AACnC,kBAAc;AACZ,UAAI,CAAC,sBAAL,KAAK,CAAL,EAAmC;AACjC,eADiC,KACjC;AAFU;;AAIZ,UAAI;AACF,YAAME,OAAAA,GAAU,0BAA0B;AAAEC,UAAAA,KAAAA,EAD1C;AACwC,SAA1B,CAAhB;AACA,YAAMn6D,MAAAA,GAASnhB,yBAFb,KAEaA,CAAf;AACAmG,QAAAA,KAAAA,GAAQk1E,OAAAA,CAAAA,MAAAA,CAHN,MAGMA,CAARl1E;AACA20E,QAAAA,kBAAAA,GAJE,KAIFA;AAJF,QAKE,UAAU;AAGV,YAAI,iBAAJ,QAAI,CAAJ,EAAgC;AAE9B,cAAI;AACF30E,YAAAA,KAAAA,GAAQvC,kBAAAA,CAAmBid,MAAAA,CADzB,KACyBA,CAAnBjd,CAARuC;AACA20E,YAAAA,kBAAAA,GAFE,KAEFA;AAFF,YAGE,YAAY,CALgB;AAHtB;AATA;AADqB;;AAsBnC,WAtBmC,KAsBnC;AAzEiE;;AA2EnE,gCAA8B;AAC5B,QAAIA,kBAAAA,IAAsB,mBAA1B,KAA0B,CAA1B,EAAqD;AAEnD30E,MAAAA,KAAAA,GAAQo1E,UAAAA,CAAAA,OAAAA,EAF2C,KAE3CA,CAARp1E;;AACA,8BAAwB;AAEtBA,QAAAA,KAAAA,GAAQo1E,UAAAA,CAAAA,YAAAA,EAFc,KAEdA,CAARp1E;AALiD;AADzB;;AAS5B,WAT4B,KAS5B;AApFiE;;AAsFnE,kDAAgD;AAC9C,QAAMrB,OAAAA,GADwC,EAC9C;AACA,QAF8C,KAE9C;AAGA,QAAM8D,IAAAA,GAAOmyE,aAAAA,CAAAA,iCAAAA,EALiC,IAKjCA,CAAb;;AACA,WAAQ,SAAQnyE,IAAAA,CAAAA,IAAAA,CAAT,qBAASA,CAAR,MAAR,MAA4D;AAC1D,mBAD0D,KAC1D;AAAA;AAAA,UAAI,CAAJ;AAAA,UAAI,IAAJ;AAAA,UAAI,IAAJ;;AACAkW,MAAAA,CAAAA,GAAI9Z,QAAAA,CAAAA,CAAAA,EAFsD,EAEtDA,CAAJ8Z;;AACA,UAAIA,CAAAA,IAAJ,SAAkB;AAEhB,YAAIA,CAAAA,KAAJ,GAAa;AAAA;AAFG;;AAAA;AAHwC;;AAU1Dha,MAAAA,OAAAA,CAAAA,CAAAA,CAAAA,GAAa,YAAbA;AAhB4C;;AAkB9C,QAAM02E,KAAAA,GAlBwC,EAkB9C;;AACA,SAAK,IAAI18D,GAAAA,GAAT,GAAgBA,GAAAA,GAAIha,OAAAA,CAApB,QAAoC,EAApC,KAAyC;AACvC,UAAI,EAAE,OAAN,OAAI,CAAJ,EAAqB;AAAA;AADkB;;AAKvC,uCAAmBA,OAAAA,CALoB,GAKpBA,CAAnB;AAAA,UAAI,KAAJ;AAAA,UAAI,KAAJ;;AACA22E,MAAAA,KAAAA,GAAOT,cAAAA,CANgC,KAMhCA,CAAPS;;AACA,iBAAU;AACRA,QAAAA,KAAAA,GAAO36D,QAAAA,CADC,KACDA,CAAP26D;;AACA,YAAI38D,GAAAA,KAAJ,GAAa;AACX28D,UAAAA,KAAAA,GAAOR,aAAAA,CADI,KACJA,CAAPQ;AAHM;AAP6B;;AAavCD,MAAAA,KAAAA,CAAAA,IAAAA,CAbuC,KAavCA;AAhC4C;;AAkC9C,WAAOA,KAAAA,CAAAA,IAAAA,CAlCuC,EAkCvCA,CAAP;AAxHiE;;AA0HnE,iCAA+B;AAC7B,QAAIr1E,KAAAA,CAAAA,UAAAA,CAAJ,GAAIA,CAAJ,EAA2B;AACzB,UAAMq1E,KAAAA,GAAQr1E,KAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,KAAAA,CADW,KACXA,CAAd;;AAEA,WAAK,IAAIlD,CAAAA,GAAT,GAAgBA,CAAAA,GAAIu4E,KAAAA,CAApB,QAAkC,EAAlC,GAAuC;AACrC,YAAME,SAAAA,GAAYF,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAAAA,CADmB,GACnBA,CAAlB;;AACA,YAAIE,SAAAA,KAAc,CAAlB,GAAsB;AACpBF,UAAAA,KAAAA,CAAAA,CAAAA,CAAAA,GAAWA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EADS,SACTA,CAAXA;AACAA,UAAAA,KAAAA,CAAAA,MAAAA,GAAev4E,CAAAA,GAFK,CAEpBu4E;AAJmC;;AAMrCA,QAAAA,KAAAA,CAAAA,CAAAA,CAAAA,GAAWA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAAAA,CAAAA,QAAAA,EAN0B,IAM1BA,CAAXA;AATuB;;AAWzBr1E,MAAAA,KAAAA,GAAQq1E,KAAAA,CAAAA,IAAAA,CAXiB,GAWjBA,CAARr1E;AAZ2B;;AAc7B,WAd6B,KAc7B;AAxIiE;;AA0InE,mCAAiC;AAE/B,QAAMw1E,WAAAA,GAAcC,QAAAA,CAAAA,OAAAA,CAFW,GAEXA,CAApB;;AACA,QAAID,WAAAA,KAAgB,CAApB,GAAwB;AAItB,aAJsB,QAItB;AAP6B;;AAS/B,QAAME,QAAAA,GAAWD,QAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EATc,WASdA,CAAjB;AACA,QAAME,SAAAA,GAAYF,QAAAA,CAAAA,KAAAA,CAAeD,WAAAA,GAVF,CAUbC,CAAlB;AAEA,QAAMz1E,KAAAA,GAAQ21E,SAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAZiB,EAYjBA,CAAd;AACA,WAAOP,UAAAA,CAAAA,QAAAA,EAbwB,KAaxBA,CAAP;AAvJiE;;AAyJnE,gCAA8B;AAW5B,QAAI,CAACp1E,KAAAA,CAAAA,UAAAA,CAAD,IAACA,CAAD,IAA2B,4BAA/B,KAA+B,CAA/B,EAAmE;AACjE,aADiE,KACjE;AAZ0B;;AAqB5B,WAAO,gEAEL,4CAA4C;AAC1C,UAAI01E,QAAAA,KAAAA,GAAAA,IAAoBA,QAAAA,KAAxB,KAA0C;AAExCE,QAAAA,IAAAA,GAAOA,IAAAA,CAAAA,OAAAA,CAAAA,IAAAA,EAFiC,GAEjCA,CAAPA;AACAA,QAAAA,IAAAA,GAAO,mCAAmC,sBAAsB;AAC9D,iBAAOp+D,MAAAA,CAAAA,YAAAA,CAAoB3Y,QAAAA,CAAAA,GAAAA,EADmC,EACnCA,CAApB2Y,CAAP;AAJsC,SAGjC,CAAPo+D;AAGA,eAAOR,UAAAA,CAAAA,OAAAA,EANiC,IAMjCA,CAAP;AAPwC;;AAS1C,UAAI;AACFQ,QAAAA,IAAAA,GAAOpyB,IAAAA,CADL,IACKA,CAAPoyB;AADF,QAEE,UAAU,CAX8B;;AAY1C,aAAOR,UAAAA,CAAAA,OAAAA,EAZmC,IAYnCA,CAAP;AAnCwB,KAqBrB,CAAP;AA9KiE;;AAiMnE,SAjMmE,EAiMnE;AAhOF;;;;;;;;;;;;;;;ACeA;;AAKA;;;;;;;;;;;;;;;;;;;;AApBA;AAgCA,IAAMS,WAAAA,GAhCN,GAgCA;AACA,IAAMC,wBAAAA,GAjCN,GAiCA;;AAEA,6BAA6B;AAC3B,MAAM97E,IAAAA,GAAO+7E,GAAAA,CADc,QAC3B;;AACA,MAAI,gBAAJ,UAA8B;AAC5B,WAD4B,IAC5B;AAHyB;;AAK3B,MAAMjY,KAAAA,GAAQjkE,yBALa,IAKbA,CAAd;AACA,SAAOikE,KAAAA,CANoB,MAM3B;AAzCF;;IA4CA;AACE3kE,0BAAAA,GAAAA,EAAAA,IAAAA,EAAuB;AAAA;;AACrB,eADqB,GACrB;AACAqrB,IAAAA,IAAAA,GAAOA,IAAAA,IAFc,EAErBA;AACA,kBAAc,iBAHO,GAGP,CAAd;AACA,uBAAoB,eAAeA,IAAAA,CAAhB,WAAC,IAJC,EAIrB;AACA,2BAAuBA,IAAAA,CAAAA,eAAAA,IALF,KAKrB;;AACA,kBACEA,IAAAA,CAAAA,MAAAA,IACA,iCAAiC;AAC/B,aAAO,IADwB,cACxB,EAAP;AATiB,KAMrB;;AAMA,qBAZqB,CAYrB;AACA,2BAAuB9mB,MAAAA,CAAAA,MAAAA,CAbF,IAaEA,CAAvB;AAdiB;;;;WAiBnBs4E,sBAAAA,KAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAoC;AAClC,UAAMxxD,IAAAA,GAAO;AACX65C,QAAAA,KADW,EACXA,KADW;AAEXphE,QAAAA,GAFW,EAEXA;AAFW,OAAb;;AAIA,kCAA8B;AAC5BunB,QAAAA,IAAAA,CAAAA,IAAAA,CAAAA,GAAayxD,SAAAA,CADe,IACfA,CAAbzxD;AANgC;;AAQlC,aAAO,aAR2B,IAQ3B,CAAP;AAzBiB;;;WA4BnB0xD,qBAAAA,SAAAA,EAAuB;AACrB,aAAO,aADc,SACd,CAAP;AA7BiB;;;WAgCnBp8E,iBAAAA,IAAAA,EAAc;AACZ,UAAMi8E,GAAAA,GAAM,KADA,MACA,EAAZ;AACA,UAAMI,KAAAA,GAAQ,KAFF,SAEE,EAAd;AACA,UAAMC,cAAAA,GAAkB,8BAA8B;AACpDL,QAAAA,GAJU,EAIVA;AADoD,OAAtD;AAIAA,MAAAA,GAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAAgB,KAPJ,GAOZA;AACAA,MAAAA,GAAAA,CAAAA,eAAAA,GAAsB,KARV,eAQZA;;AACA,2BAAuB,KAAvB,aAAyC;AACvC,YAAM/1E,KAAAA,GAAQ,iBADyB,QACzB,CAAd;;AACA,YAAI,iBAAJ,aAAkC;AAAA;AAFK;;AAKvC+1E,QAAAA,GAAAA,CAAAA,gBAAAA,CAAAA,QAAAA,EALuC,KAKvCA;AAdU;;AAgBZ,UAAI,eAAe,WAAf,QAAkC,SAAtC,MAAqD;AACnDA,QAAAA,GAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,kBAAuCvxD,IAAAA,CAAT,KAA9BuxD,cAAqDvxD,IAAAA,CAAAA,GAAAA,GADF,CACnDuxD;AACAK,QAAAA,cAAAA,CAAAA,cAAAA,GAFmD,wBAEnDA;AAFF,aAGO;AACLA,QAAAA,cAAAA,CAAAA,cAAAA,GADK,WACLA;AApBU;;AAsBZL,MAAAA,GAAAA,CAAAA,YAAAA,GAtBY,aAsBZA;;AAEA,UAAIvxD,IAAAA,CAAJ,SAAkB;AAChBuxD,QAAAA,GAAAA,CAAAA,OAAAA,GAAc,eAAe;AAC3BvxD,UAAAA,IAAAA,CAAAA,OAAAA,CAAauxD,GAAAA,CADc,MAC3BvxD;AAFc,SAChBuxD;AAzBU;;AA6BZA,MAAAA,GAAAA,CAAAA,kBAAAA,GAAyB,8BA7Bb,KA6Ba,CAAzBA;AACAA,MAAAA,GAAAA,CAAAA,UAAAA,GAAiB,2BA9BL,KA8BK,CAAjBA;AAEAK,MAAAA,cAAAA,CAAAA,iBAAAA,GAAmC5xD,IAAAA,CAhCvB,iBAgCZ4xD;AACAA,MAAAA,cAAAA,CAAAA,MAAAA,GAAwB5xD,IAAAA,CAjCZ,MAiCZ4xD;AACAA,MAAAA,cAAAA,CAAAA,OAAAA,GAAyB5xD,IAAAA,CAlCb,OAkCZ4xD;AACAA,MAAAA,cAAAA,CAAAA,UAAAA,GAA4B5xD,IAAAA,CAnChB,UAmCZ4xD;AAEAL,MAAAA,GAAAA,CAAAA,IAAAA,CArCY,IAqCZA;AAEA,aAvCY,KAuCZ;AAvEiB;;;WA0EnBM,oBAAAA,KAAAA,EAAAA,GAAAA,EAAuB;AACrB,UAAMD,cAAAA,GAAiB,qBADF,KACE,CAAvB;;AACA,UAAI,CAAJ,gBAAqB;AAAA;AAFA;;AAOrB,UAAIA,cAAAA,CAAJ,YAA+B;AAC7BA,QAAAA,cAAAA,CAAAA,UAAAA,CAD6B,GAC7BA;AARmB;AA1EJ;;;WAsFnBE,uBAAAA,KAAAA,EAAAA,GAAAA,EAA0B;AACxB,UAAMF,cAAAA,GAAiB,qBADC,KACD,CAAvB;;AACA,UAAI,CAAJ,gBAAqB;AAAA;AAFG;;AAOxB,UAAML,GAAAA,GAAMK,cAAAA,CAPY,GAOxB;;AACA,UAAIL,GAAAA,CAAAA,UAAAA,IAAAA,CAAAA,IAAuBK,cAAAA,CAA3B,mBAA6D;AAC3DA,QAAAA,cAAAA,CAD2D,iBAC3DA;AACA,eAAOA,cAAAA,CAFoD,iBAE3D;AAVsB;;AAaxB,UAAIL,GAAAA,CAAAA,UAAAA,KAAJ,GAA0B;AAAA;AAbF;;AAiBxB,UAAI,EAAE,SAAS,KAAf,eAAI,CAAJ,EAAsC;AAAA;AAjBd;;AAuBxB,aAAO,qBAvBiB,KAuBjB,CAAP;;AAGA,UAAIA,GAAAA,CAAAA,MAAAA,KAAAA,CAAAA,IAAoB,KAAxB,QAAqC;AACnC,YAAIK,cAAAA,CAAJ,SAA4B;AAC1BA,UAAAA,cAAAA,CAAAA,OAAAA,CAAuBL,GAAAA,CADG,MAC1BK;AAFiC;;AAAA;AA1Bb;;AAgCxB,UAAMG,SAAAA,GAAYR,GAAAA,CAAAA,MAAAA,IAhCM,WAgCxB;AAKA,UAAMS,4BAAAA,GACJD,SAAAA,KAAAA,WAAAA,IACAH,cAAAA,CAAAA,cAAAA,KAvCsB,wBAqCxB;;AAIA,UACE,iCACAG,SAAAA,KAAcH,cAAAA,CAFhB,gBAGE;AACA,YAAIA,cAAAA,CAAJ,SAA4B;AAC1BA,UAAAA,cAAAA,CAAAA,OAAAA,CAAuBL,GAAAA,CADG,MAC1BK;AAFF;;AAAA;AA5CsB;;AAmDxB,UAAMz+D,KAAAA,GAAQ8+D,cAAAA,CAnDU,GAmDVA,CAAd;;AACA,UAAIF,SAAAA,KAAJ,0BAA4C;AAC1C,YAAMG,WAAAA,GAAcX,GAAAA,CAAAA,iBAAAA,CADsB,eACtBA,CAApB;AACA,YAAMp3E,OAAAA,GAAU,gCAF0B,WAE1B,CAAhB;AACAy3E,QAAAA,cAAAA,CAAAA,MAAAA,CAAsB;AACpB/X,UAAAA,KAAAA,EAAOx/D,QAAAA,CAASF,OAAAA,CAATE,CAASF,CAATE,EADa,EACbA,CADa;AAEpB8Y,UAAAA,KAFoB,EAEpBA;AAFoB,SAAtBy+D;AAHF,aAOO,WAAW;AAChBA,QAAAA,cAAAA,CAAAA,MAAAA,CAAsB;AACpB/X,UAAAA,KAAAA,EADoB;AAEpB1mD,UAAAA,KAFoB,EAEpBA;AAFoB,SAAtBy+D;AADK,aAKA,IAAIA,cAAAA,CAAJ,SAA4B;AACjCA,QAAAA,cAAAA,CAAAA,OAAAA,CAAuBL,GAAAA,CADU,MACjCK;AAjEsB;AAtFP;;;WA2JnBO,uBAAAA,KAAAA,EAAqB;AACnB,aAAO,4BADY,GACnB;AA5JiB;;;WA+JnBC,0BAAAA,KAAAA,EAAwB;AACtB,aAAOT,KAAAA,IAAS,KADM,eACtB;AAhKiB;;;WAmKnB1vC,sBAAAA,KAAAA,EAAoB;AAClB,UAAMsvC,GAAAA,GAAM,4BADM,GAClB;AACA,aAAO,qBAFW,KAEX,CAAP;AACAA,MAAAA,GAAAA,CAHkB,KAGlBA;AAtKiB;;;;;;IA2KrB;AACE58E,4BAAAA,MAAAA,EAAoB;AAAA;;AAClB,mBADkB,MAClB;AACA,oBAAgB,mBAAmB6jB,MAAAA,CAAnB,KAA+B;AAC7Cm5B,MAAAA,WAAAA,EAAan5B,MAAAA,CADgC;AAE7Co5B,MAAAA,eAAAA,EAAiBp5B,MAAAA,CAF4B;AAAA,KAA/B,CAAhB;AAIA,2BAAuBA,MAAAA,CANL,cAMlB;AACA,8BAPkB,IAOlB;AACA,gCARkB,EAQlB;AATmB;;;;WAYrB65D,qCAAAA,MAAAA,EAAoC;AAClC,UAAM/5E,CAAAA,GAAI,kCADwB,MACxB,CAAV;;AACA,UAAIA,CAAAA,IAAJ,GAAY;AACV,4CADU,CACV;AAHgC;AAZf;;;WAmBrB8hE,yBAAgB;AACdriE,wBACE,CAAC,KADHA,kBAAAA,EADc,yDACdA;AAIA,gCAA0B,sCACxB,KADwB,UAExB,KAPY,OAKY,CAA1B;AAIA,aAAO,KATO,kBASd;AA5BmB;;;WA+BrBuiE,wBAAAA,KAAAA,EAAAA,GAAAA,EAA2B;AACzB,UAAM9lC,MAAAA,GAAS,uCACb,KADa,iBADU,GACV,CAAf;AAKAA,MAAAA,MAAAA,CAAAA,QAAAA,GAAkB,sCANO,IAMP,CAAlBA;;AACA,qCAPyB,MAOzB;;AACA,aARyB,MAQzB;AAvCmB;;;WA0CrB+lC,2BAAAA,MAAAA,EAA0B;AACxB,UAAI,KAAJ,oBAA6B;AAC3B,uCAD2B,MAC3B;AAFsB;;AAAA,iDAIH,gCAArB,CAAqB,CAJG;AAAA;;AAAA;AAIxB,4DAAyD;AAAA,cAAzD,MAAyD;AACvD/lC,UAAAA,MAAAA,CAAAA,MAAAA,CADuD,MACvDA;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CL;;;;;;;;IAqDvB;AACE7/B,6CAAAA,OAAAA,EAAAA,MAAAA,EAA6B;AAAA;;AAC3B,oBAD2B,OAC3B;AAEA,QAAMqrB,IAAAA,GAAO;AACXsyD,MAAAA,iBAAAA,EAAmB,6BADR,IACQ,CADR;AAEXC,MAAAA,MAAAA,EAAQ,kBAFG,IAEH,CAFG;AAGXC,MAAAA,OAAAA,EAAS,mBAHE,IAGF,CAHE;AAIXX,MAAAA,UAAAA,EAAY,sBAJD,IAIC;AAJD,KAAb;AAMA,gBAAYr5D,MAAAA,CATe,GAS3B;AACA,0BAAsBi6D,OAAAA,CAAAA,WAAAA,CAVK,IAULA,CAAtB;AACA,sCAX2B,oCAW3B;AACA,yBAAqBj6D,MAAAA,CAAAA,YAAAA,IAZM,KAY3B;AACA,0BAAsBA,MAAAA,CAbK,MAa3B;AACA,2BAAuBA,MAAAA,CAdI,cAc3B;;AACA,QAAI,CAAC,KAAD,mBAAyB,CAAC,KAA9B,eAAkD;AAChD,2BADgD,IAChD;AAhByB;;AAmB3B,iCAnB2B,KAmB3B;AACA,6BApB2B,KAoB3B;AAEA,yBAtB2B,EAsB3B;AACA,qBAvB2B,EAuB3B;AACA,iBAxB2B,KAwB3B;AACA,wBAzB2B,SAyB3B;AACA,qBA1B2B,IA0B3B;AAEA,sBA5B2B,IA4B3B;AA7BoC;;;;WAgCtCk6D,8BAAqB;AACnB,UAAMC,gBAAAA,GAAmB,KADN,cACnB;;AACA,UAAMC,cAAAA,GAAiB,4BAFJ,gBAEI,CAAvB;;AAEA,UAAMnD,iBAAAA,GAAoBr2E,SAApBq2E,iBAAoBr2E,CAAAA,IAAAA,EAAQ;AAChC,eAAOw5E,cAAAA,CAAAA,iBAAAA,CADyB,IACzBA,CAAP;AALiB,OAInB;;AAGA,kCACE,qDAAiC;AAC/BnD,QAAAA,iBAD+B,EAC/BA,iBAD+B;AAE/BC,QAAAA,MAAAA,EAAQ,cAFuB;AAG/B79B,QAAAA,cAAAA,EAAgB,KAHe;AAI/BJ,QAAAA,YAAAA,EAAc,KAJiB;AAAA,OAAjC,CADF;AAAA,UAAM,kBAAN,yBAAM,kBAAN;AAAA,UAAM,eAAN,yBAAM,eAAN;;AAQA,8BAAwB;AACtB,iCADsB,IACtB;AAhBiB;;AAmBnB,4BAAsBk+B,eAAAA,IAAmB,KAnBtB,cAmBnB;AAEA,uBAAiBC,8CArBE,iBAqBFA,CAAjB;;AAEA,UAAI,KAAJ,mBAA4B;AAK1B,mCAL0B,gBAK1B;AA5BiB;;AA+BnB,sCA/BmB,OA+BnB;AA/DoC;;;WAkEtCiD,iBAAAA,IAAAA,EAAc;AACZ,gBAAU;AACR,YAAI,wBAAJ,GAA+B;AAC7B,cAAMnY,iBAAAA,GAAoB,eADG,KACH,EAA1B;;AACAA,UAAAA,iBAAAA,CAAAA,OAAAA,CAA0B;AAAEl/D,YAAAA,KAAAA,EAAOwkB,IAAAA,CAAT;AAAqBvhB,YAAAA,IAAAA,EAArB;AAAA,WAA1Bi8D;AAFF,eAGO;AACL,kCAAwB16C,IAAAA,CADnB,KACL;AALM;AADE;;AASZ,mBATY,IASZ;;AACA,UAAI,4BAAJ,GAAmC;AAAA;AAVvB;;AAAA,kDAaoB,KAAhC,SAbY;AAAA;;AAAA;AAaZ,+DAAgD;AAAA,cAAhD,kBAAgD;;AAC9C06C,UAAAA,kBAAAA,CAAAA,OAAAA,CAA0B;AAAEl/D,YAAAA,KAAAA,EAAF;AAAoBiD,YAAAA,IAAAA,EAApB;AAAA,WAA1Bi8D;AAdU;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBZ,8BAhBY,CAgBZ;AAlFoC;;;WAqFtCoY,kBAAAA,MAAAA,EAAiB;AACf,UAAM96E,GAAAA,GAAM,KADG,IACf;AACA,UAAMokD,SAAAA,GAAY22B,8CAAAA,MAAAA,EAFH,GAEGA,CAAlB;AACA,0BAHe,SAGf;;AACA,6CAJe,SAIf;;AAJe,kDAKiB,KAAhC,SALe;AAAA;;AAAA;AAKf,+DAAgD;AAAA,cAAhD,iBAAgD;AAC9CrY,UAAAA,iBAAAA,CAAAA,MAAAA,CAD8C,SAC9CA;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQf,8BARe,CAQf;AACA,kCATe,CASf;AA9FoC;;;WAiGtCV,qBAAAA,IAAAA,EAAkB;AAChB,UAAI,KAAJ,YAAqB;AACnB,wBAAgB;AACdxe,UAAAA,MAAAA,EAAQhmD,IAAAA,CADM;AAEdimD,UAAAA,KAAAA,EAAOjmD,IAAAA,CAAAA,gBAAAA,GAAwBA,IAAAA,CAAxBA,KAAAA,GAAqC,KAF9B;AAAA,SAAhB;AAFc;AAjGoB;;;SA0GtC,eAAe;AACb,aAAO,KADM,SACb;AA3GoC;;;SA8GtC,eAAuB;AACrB,aAAO,KADc,iBACrB;AA/GoC;;;SAkHtC,eAA2B;AACzB,aAAO,KADkB,qBACzB;AAnHoC;;;SAsHtC,eAAoB;AAClB,aAAO,KADW,cAClB;AAvHoC;;;SA0HtC,eAAmB;AACjB,aAAO,gCADU,OACjB;AA3HoC;;;;+EA8HtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACM,KAAJ,YADF;AAAA;AAAA;AAAA;;AAAA,sBAEU,KADe,YADzB;;AAAA;AAAA,sBAIM,4BAAJ,CAJF;AAAA;AAAA;AAAA;;AAKU2d,gBAAAA,KALV,GAKkB,mBADmB,KACnB,EALlB;AAAA,iDAMW;AAAE3X,kBAAAA,KAAAA,EAAF;AAAgBiD,kBAAAA,IAAAA,EAAhB;AAAA,iBANX;;AAAA;AAAA,qBAQM,KAAJ,KARF;AAAA;AAAA;AAAA;;AAAA,iDASW;AAAEjD,kBAAAA,KAAAA,EAAF;AAAoBiD,kBAAAA,IAAAA,EAApB;AAAA,iBATX;;AAAA;AAWQi8D,gBAAAA,iBAXR,GAAa,oCAAb;;AAYE,oCAZW,iBAYX;;AAZF,iDAaSA,iBAAAA,CAbI,OAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAgBAzjC,gBAAAA,MAAAA,EAAe;AACb,mBADa,IACb;;AACA,6CAFa,MAEb;;AAFa,kDAGmB,KAAhC,SAHa;AAAA;;AAAA;AAGb,+DAAgD;AAAA,cAAhD,iBAAgD;AAC9CyjC,UAAAA,iBAAAA,CAAAA,OAAAA,CAA0B;AAAEl/D,YAAAA,KAAAA,EAAF;AAAoBiD,YAAAA,IAAAA,EAApB;AAAA,WAA1Bi8D;AAJW;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMb,8BANa,CAMb;;AACA,UAAI,+BAA+B,KAAnC,cAAI,CAAJ,EAAyD;AACvD,mCAA2B,KAD4B,cACvD;AARW;;AAUb,gCAVa,IAUb;AAxJoC;;;;;;IA6JxC;AACE/lE,8CAAAA,OAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAiC;AAAA;;AAC/B,oBAD+B,OAC/B;AACA,QAAMqrB,IAAAA,GAAO;AACXuyD,MAAAA,MAAAA,EAAQ,kBADG,IACH,CADG;AAEXV,MAAAA,UAAAA,EAAY,sBAFD,IAEC;AAFD,KAAb;AAIA,sBAAkBY,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAAAA,GAAAA,EANa,IAMbA,CAAlB;AACA,qBAP+B,EAO/B;AACA,wBAR+B,IAQ/B;AACA,iBAT+B,KAS/B;AAEA,sBAX+B,IAW/B;AACA,oBAZ+B,IAY/B;AAbqC;;;;WAgBvCO,kBAAS;AACP,UAAI,KAAJ,UAAmB;AACjB,sBADiB,IACjB;AAFK;AAhB8B;;;WAsBvCH,iBAAAA,IAAAA,EAAc;AACZ,UAAM1/D,KAAAA,GAAQ3d,IAAAA,CADF,KACZ;;AACA,UAAI,wBAAJ,GAA+B;AAC7B,YAAMklE,iBAAAA,GAAoB,eADG,KACH,EAA1B;;AACAA,QAAAA,iBAAAA,CAAAA,OAAAA,CAA0B;AAAEl/D,UAAAA,KAAAA,EAAF;AAAgBiD,UAAAA,IAAAA,EAAhB;AAAA,SAA1Bi8D;AAFF,aAGO;AACL,4BADK,KACL;AANU;;AAQZ,mBARY,IAQZ;;AARY,kDASoB,KAAhC,SATY;AAAA;;AAAA;AASZ,+DAAgD;AAAA,cAAhD,mBAAgD;;AAC9CA,UAAAA,mBAAAA,CAAAA,OAAAA,CAA0B;AAAEl/D,YAAAA,KAAAA,EAAF;AAAoBiD,YAAAA,IAAAA,EAApB;AAAA,WAA1Bi8D;AAVU;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYZ,8BAZY,CAYZ;;AACA,WAbY,MAaZ;AAnCqC;;;WAsCvCV,qBAAAA,GAAAA,EAAiB;AACf,UAAI,CAAC,KAAD,wBAA8B,KAAlC,YAAmD;AACjD,wBAAgB;AACdxe,UAAAA,MAAAA,EAAQD,GAAAA,CAFuC;AACjC,SAAhB;AAFa;AAtCsB;;;SA8CvC,eAA2B;AACzB,aADyB,KACzB;AA/CqC;;;;gFAkDvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACM,sBAAJ,IADF;AAAA;AAAA;AAAA;;AAEUpoC,gBAAAA,KAFV,GAEkB,KADgB,YADlC;AAGI,oCAF8B,IAE9B;AAHJ,kDAIW;AAAE3X,kBAAAA,KAAAA,EAAF;AAAgBiD,kBAAAA,IAAAA,EAAhB;AAAA,iBAJX;;AAAA;AAAA,qBAMM,KAAJ,KANF;AAAA;AAAA;AAAA;;AAAA,kDAOW;AAAEjD,kBAAAA,KAAAA,EAAF;AAAoBiD,kBAAAA,IAAAA,EAApB;AAAA,iBAPX;;AAAA;AASQi8D,gBAAAA,iBATR,GAAa,oCAAb;;AAUE,oCAVW,iBAUX;;AAVF,kDAWSA,iBAAAA,CAXI,OAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAcAzjC,gBAAAA,MAAAA,EAAe;AACb,mBADa,IACb;;AADa,kDAEmB,KAAhC,SAFa;AAAA;;AAAA;AAEb,+DAAgD;AAAA,cAAhD,iBAAgD;AAC9CyjC,UAAAA,iBAAAA,CAAAA,OAAAA,CAA0B;AAAEl/D,YAAAA,KAAAA,EAAF;AAAoBiD,YAAAA,IAAAA,EAApB;AAAA,WAA1Bi8D;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKb,8BALa,CAKb;;AACA,UAAI,+BAA+B,KAAnC,UAAI,CAAJ,EAAqD;AACnD,mCAA2B,KADwB,UACnD;AAPW;;AASb,WATa,MASb;AAzEqC;;;;;;;;;;;;;;;;;;;AC1ZzC;;AAKA;;;;;;;;;;;;;;;;;;;;AApBA;;AAiCA,uEAAuE;AACrE,SAAO;AACLt8D,IAAAA,MAAAA,EADK;AAELmxE,IAAAA,OAFK,EAELA,OAFK;AAGLrpC,IAAAA,MAAAA,EAAQ+sC,eAAR/sC,aAAQ+sC,eAAR/sC,uBAAQ+sC,eAAAA,CAHH;AAILp3D,IAAAA,IAAAA,EAJK;AAKLq3D,IAAAA,WAAAA,EAAathC,eAAAA,GAAAA,SAAAA,GALR;AAMLuhC,IAAAA,QAAAA,EANK;AAAA,GAAP;AAlCF;;AA4CA,oCAAoC;AAClC,MAAM5D,OAAAA,GAAU,IADkB,OAClB,EAAhB;;AACA,oCAAoC;AAClC,QAAM/zE,KAAAA,GAAQm2C,WAAAA,CADoB,QACpBA,CAAd;;AACA,QAAI,iBAAJ,aAAkC;AAAA;AAFA;;AAKlC49B,IAAAA,OAAAA,CAAAA,MAAAA,CAAAA,QAAAA,EALkC,KAKlCA;AAPgC;;AASlC,SATkC,OASlC;AArDF;;IAyDA;AACE56E,0BAAAA,MAAAA,EAAoB;AAAA;;AAClB,kBADkB,MAClB;AACA,kBAAc,iBAAiB6jB,MAAAA,CAFb,GAEJ,CAAd;AACA,uBAAoB,eAAeA,MAAAA,CAAhB,WAAC,IAHF,EAGlB;AAEA,8BALkB,IAKlB;AACA,gCANkB,EAMlB;AAPiB;;;;SAUnB,eAA6B;AAAA;;AAC3B,gEAAO,uBAAP,2DAAO,8BAAP,yEAD2B,CAC3B;AAXiB;;;WAcnB4hD,yBAAgB;AACdriE,wBACE,CAAC,KADHA,kBAAAA,EADc,uDACdA;AAIA,gCAA0B,yBALZ,IAKY,CAA1B;AACA,aAAO,KANO,kBAMd;AApBiB;;;WAuBnBuiE,wBAAAA,KAAAA,EAAAA,GAAAA,EAA2B;AACzB,UAAI7hE,GAAAA,IAAO,KAAX,wBAAwC;AACtC,eADsC,IACtC;AAFuB;;AAIzB,UAAM+7B,MAAAA,GAAS,2CAJU,GAIV,CAAf;;AACA,qCALyB,MAKzB;;AACA,aANyB,MAMzB;AA7BiB;;;WAgCnB+lC,2BAAAA,MAAAA,EAA0B;AACxB,UAAI,KAAJ,oBAA6B;AAC3B,uCAD2B,MAC3B;AAFsB;;AAAA,iDAIH,gCAArB,CAAqB,CAJG;AAAA;;AAAA;AAIxB,4DAAyD;AAAA,cAAzD,MAAyD;AACvD/lC,UAAAA,MAAAA,CAAAA,MAAAA,CADuD,MACvDA;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCP;;;;;;;;IA2CrB;AACE7/B,gCAAAA,MAAAA,EAAoB;AAAA;;AAAA;;AAClB,mBADkB,MAClB;AACA,mBAFkB,IAElB;AACA,mBAHkB,CAGlB;AACA,qBAJkB,IAIlB;AACA,QAAM6jB,MAAAA,GAASic,MAAAA,CALG,MAKlB;AACA,4BAAwBjc,MAAAA,CAAAA,eAAAA,IANN,KAMlB;AACA,0BAAsBA,MAAAA,CAPJ,MAOlB;AACA,8BARkB,oCAQlB;AACA,yBAAqBA,MAAAA,CAAAA,YAAAA,IATH,KASlB;AACA,2BAAuBA,MAAAA,CAVL,cAUlB;;AACA,QAAI,CAAC,KAAD,mBAAyB,CAAC,KAA9B,eAAkD;AAChD,2BADgD,IAChD;AAZgB;;AAelB,QAAI,2BAAJ,aAA4C;AAC1C,8BAAwB,IADkB,eAClB,EAAxB;AAhBgB;;AAkBlB,iCAA6B,CAACA,MAAAA,CAlBZ,aAkBlB;AACA,6BAAyB,CAACA,MAAAA,CAnBR,YAmBlB;AAEA,oBAAgB46D,aAAAA,CAAc,aArBZ,WAqBFA,CAAhB;AAEA,QAAMp7E,GAAAA,GAAMwgB,MAAAA,CAvBM,GAuBlB;AACApjB,IAAAA,KAAAA,CAAAA,GAAAA,EAEEi+E,kBAAAA,CACE,KADFA,QAAAA,EAEE,KAFFA,gBAAAA,EAGE,KALJj+E,gBAEEi+E,CAFFj+E,CAAAA,CAAAA,IAAAA,CAQQD,UAAAA,QAAAA,EAAY;AAChB,UAAI,CAACm+E,2CAAuBn+E,QAAAA,CAA5B,MAAKm+E,CAAL,EAA8C;AAC5C,cAAMP,8CAA0B59E,QAAAA,CAA1B49E,MAAAA,EADsC,GACtCA,CAAN;AAFc;;AAIhB,sBAAe59E,QAAAA,CAAAA,IAAAA,CAJC,SAIDA,EAAf;;AACA,+BALgB,OAKhB;;AAEA,UAAMs6E,iBAAAA,GAAoBr2E,SAApBq2E,iBAAoBr2E,CAAAA,IAAAA,EAAQ;AAChC,eAAOjE,QAAAA,CAAAA,OAAAA,CAAAA,GAAAA,CADyB,IACzBA,CAAP;AARc,OAOhB;;AAGA,kCACE,qDAAiC;AAC/Bs6E,QAAAA,iBAD+B,EAC/BA,iBAD+B;AAE/BC,QAAAA,MAAAA,EAAQ,cAFuB;AAG/B79B,QAAAA,cAAAA,EAAgB,MAHe;AAI/BJ,QAAAA,YAAAA,EAAc,MAJiB;AAAA,OAAjC,CADF;AAAA,UAAM,kBAAN,yBAAM,kBAAN;AAAA,UAAM,eAAN,yBAAM,eAAN;;AAQA,gCAlBgB,kBAkBhB;AAEA,6BAAsBk+B,eAAAA,IAAmB,MApBzB,cAoBhB;AAEA,wBAAiBC,8CAtBD,iBAsBCA,CAAjB;;AAIA,UAAI,CAAC,MAAD,yBAA+B,MAAnC,mBAA2D;AACzD,qBAAY,yBAD6C,wBAC7C,CAAZ;AA3Bc;AARpBx6E,KAAAA,WAsCS,wBA9DS,MAwBlBA;AAwCA,sBAhEkB,IAgElB;AAjEuB;;;;SAoEzB,eAAmB;AACjB,aAAO,wBADU,OACjB;AArEuB;;;SAwEzB,eAAe;AACb,aAAO,KADM,SACb;AAzEuB;;;SA4EzB,eAAoB;AAClB,aAAO,KADW,cAClB;AA7EuB;;;SAgFzB,eAAuB;AACrB,aAAO,KADc,iBACrB;AAjFuB;;;SAoFzB,eAA2B;AACzB,aAAO,KADkB,qBACzB;AArFuB;;;;+EAwFzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,wBADK,OAAb;;AAAA;AAAA;AAAA,uBAEgC,aAFnB,IAEmB,EAFhC;;AAAA;AAAA;AAEQ,qBAFR,yBAEQ,KAFR;AAEQ,oBAFR,yBAEQ,IAFR;;AAAA,qBAGE,IAHF;AAAA;AAAA;AAAA;;AAAA,iDAIW;AAAEoG,kBAAAA,KAAF,EAAEA,KAAF;AAASiD,kBAAAA,IAAT,EAASA;AAAT,iBAJX;;AAAA;AAME,gCAAgBjD,KAAAA,CANL,UAMX;;AACA,oBAAI,KAAJ,YAAqB;AACnB,kCAAgB;AACdggD,oBAAAA,MAAAA,EAAQ,KADM;AAEdC,oBAAAA,KAAAA,EAAO,KAFO;AAAA,mBAAhB;AARS;;AAaLjlC,gBAAAA,MAbR,GAaiB,sBAbJ,MAAb;AAAA,iDAcS;AAAEhb,kBAAAA,KAAAA,EAAF;AAAiBiD,kBAAAA,IAAAA,EAAjB;AAAA,iBAdT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAiBAw4B,gBAAAA,MAAAA,EAAe;AACb,UAAI,KAAJ,SAAkB;AAChB,4BADgB,MAChB;AAFW;;AAIb,UAAI,KAAJ,kBAA2B;AACzB,8BADyB,KACzB;AALW;AAzGU;;;;;;IAoH3B;AACEtiC,qCAAAA,MAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAgC;AAAA;;AAAA;;AAC9B,mBAD8B,MAC9B;AACA,mBAF8B,IAE9B;AACA,mBAH8B,CAG9B;AACA,QAAM6jB,MAAAA,GAASic,MAAAA,CAJe,MAI9B;AACA,4BAAwBjc,MAAAA,CAAAA,eAAAA,IALM,KAK9B;AACA,2BAN8B,oCAM9B;AACA,iCAA6B,CAACA,MAAAA,CAPA,aAO9B;;AAEA,QAAI,2BAAJ,aAA4C;AAC1C,8BAAwB,IADkB,eAClB,EAAxB;AAV4B;;AAa9B,oBAAgB46D,aAAAA,CAAc,aAbA,WAadA,CAAhB;;AACA,kDAA8B,KAA9B,cAAgD36E,GAAAA,GAdlB,CAc9B;;AAEA,QAAMT,GAAAA,GAAMwgB,MAAAA,CAhBkB,GAgB9B;AACApjB,IAAAA,KAAAA,CAAAA,GAAAA,EAEEi+E,kBAAAA,CACE,KADFA,QAAAA,EAEE,KAFFA,gBAAAA,EAGE,KALJj+E,gBAEEi+E,CAFFj+E,CAAAA,CAAAA,IAAAA,CAQQD,UAAAA,QAAAA,EAAY;AAChB,UAAI,CAACm+E,2CAAuBn+E,QAAAA,CAA5B,MAAKm+E,CAAL,EAA8C;AAC5C,cAAMP,8CAA0B59E,QAAAA,CAA1B49E,MAAAA,EADsC,GACtCA,CAAN;AAFc;;AAIhB,6BAJgB,OAIhB;;AACA,uBAAe59E,QAAAA,CAAAA,IAAAA,CALC,SAKDA,EAAf;AAbJC,KAAAA,WAeS,qBAhCqB,MAiB9BA;AAiBA,sBAlC8B,IAkC9B;AAnC4B;;;;SAsC9B,eAA2B;AACzB,aAAO,KADkB,qBACzB;AAvC4B;;;;gFA0C9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,qBADK,OAAb;;AAAA;AAAA;AAAA,uBAEgC,aAFnB,IAEmB,EAFhC;;AAAA;AAAA;AAEQ,qBAFR,0BAEQ,KAFR;AAEQ,oBAFR,0BAEQ,IAFR;;AAAA,qBAGE,IAHF;AAAA;AAAA;AAAA;;AAAA,kDAIW;AAAEoG,kBAAAA,KAAF,EAAEA,KAAF;AAASiD,kBAAAA,IAAT,EAASA;AAAT,iBAJX;;AAAA;AAME,gCAAgBjD,KAAAA,CANL,UAMX;;AACA,oBAAI,KAAJ,YAAqB;AACnB,kCAAgB;AAAEggD,oBAAAA,MAAAA,EAAQ,KADP;AACH,mBAAhB;AARS;;AAULhlC,gBAAAA,MAVR,GAUiB,sBAVJ,MAAb;AAAA,kDAWS;AAAEhb,kBAAAA,KAAAA,EAAF;AAAiBiD,kBAAAA,IAAAA,EAAjB;AAAA,iBAXT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;WAcAw4B,gBAAAA,MAAAA,EAAe;AACb,UAAI,KAAJ,SAAkB;AAChB,4BADgB,MAChB;AAFW;;AAIb,UAAI,KAAJ,kBAA2B;AACzB,8BADyB,KACzB;AALW;AAxDe;;;;;;;;;UCxNhC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYA;;AAYA;;AAkBA;;AA9CA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AA+DA,IAAMs8C,YAAAA,GA/DN,UA+DA;AAGA,IAAMC,UAAAA,GAlEN,WAkEA;AAgB+C;AAC7C,yBAA0C;AACxC,mBAA0Bx4E,mBAAAA,CADc,GACdA,CAA1B;AAAA,QAAM,aAAN,YAAM,aAAN;;AAEAy4E,yCAA2BhjC,UAAAA,MAAAA,EAAU;AACnC,aAAO,kBAD4B,MAC5B,CAAP;AAJsC,KAGxCgjC;AAHF,SAMO;AACL,oBAA6Bz4E,mBAAAA,CADxB,GACwBA,CAA7B;AAAA,QAAM,gBAAN,aAAM,gBAAN;;AACA,oBAA2BA,mBAAAA,CAFtB,GAEsBA,CAA3B;AAAA,QAAM,cAAN,aAAM,cAAN;;AAEAy4E,yCAA2BhjC,UAAAA,MAAAA,EAAU;AACnC,UAAIx7C,oCAAgBw7C,MAAAA,CAApB,GAAIx7C,CAAJ,EAAiC;AAC/B,eAAO,mBADwB,MACxB,CAAP;AAFiC;;AAInC,aAAO,qBAJ4B,MAI5B,CAAP;AARG,KAILw+E;AAX2C;AAlF/C","sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/node_modules/_@babel_runtime@7.15.3@@babel/runtime/regenerator/index.js","webpack://pdfjs-dist/build/pdf/node_modules/_regenerator-runtime@0.13.9@regenerator-runtime/runtime.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/es/global-this.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/modules/es.global-this.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/export.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/global.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-get-own-property-descriptor.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/descriptors.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/fails.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-property-is-enumerable.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/create-property-descriptor.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/to-indexed-object.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/indexed-object.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/classof-raw.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/require-object-coercible.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/to-property-key.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/to-primitive.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/is-object.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/is-symbol.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/get-built-in.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/use-symbol-as-uid.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/native-symbol.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/engine-v8-version.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/engine-user-agent.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/ordinary-to-primitive.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/well-known-symbol.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/shared.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/is-pure.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/shared-store.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/set-global.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/has.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/to-object.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/uid.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/ie8-dom-define.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/document-create-element.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/create-non-enumerable-property.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-define-property.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/an-object.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/redefine.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/inspect-source.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/internal-state.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/native-weak-map.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/shared-key.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/hidden-keys.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/copy-constructor-properties.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/own-keys.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-get-own-property-names.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-keys-internal.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/array-includes.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/to-length.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/to-integer.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/to-absolute-index.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/enum-bug-keys.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-get-own-property-symbols.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/is-forced.js","webpack://pdfjs-dist/build/pdf/node_modules/_dommatrix@0.0.6@dommatrix/dist/dommatrix.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/es/object/from-entries.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/modules/es.array.iterator.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/add-to-unscopables.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-create.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-define-properties.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-keys.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/html.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/iterators.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/define-iterator.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/create-iterator-constructor.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/iterators-core.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-get-prototype-of.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/correct-prototype-getter.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/set-to-string-tag.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-set-prototype-of.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/a-possible-prototype.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/modules/es.object.from-entries.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/iterate.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/is-array-iterator-method.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/function-bind-context.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/a-function.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/get-iterator.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/get-iterator-method.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/classof.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/to-string-tag-support.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/iterator-close.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/create-property.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/path.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/es/promise/index.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/modules/es.aggregate-error.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/to-string.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/modules/es.object.to-string.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/object-to-string.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/modules/es.promise.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/native-promise-constructor.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/redefine-all.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/set-species.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/an-instance.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/check-correctness-of-iteration.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/species-constructor.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/task.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/engine-is-ios.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/engine-is-node.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/microtask.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/engine-is-ios-pebble.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/engine-is-webos-webkit.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/promise-resolve.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/new-promise-capability.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/host-report-errors.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/perform.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/engine-is-browser.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/modules/es.promise.all-settled.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/modules/es.promise.any.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/modules/es.promise.finally.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/modules/es.string.iterator.js","webpack://pdfjs-dist/build/pdf/node_modules/_core-js@3.16.4@core-js/internals/string-multibyte.js","webpack://pdfjs-dist/build/pdf/node_modules/_web-streams-polyfill@3.1.0@web-streams-polyfill/dist/ponyfill.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/webpack/runtime/node module decorator","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  addLinkAttributes,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  RenderingCancelledException,\n  StatTimer,\n};\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for `globalThis` in legacy browsers.\n  // Support: Firefox<65, Chrome<71, Safari<12.1, Node.js<12.0.0\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    globalThis.DOMMatrix = require(\"dommatrix/dist/dommatrix.js\");\n  })();\n\n  // Provides support for Object.fromEntries in legacy browsers.\n  // Support: Firefox<63, Chrome<73, Safari<12.1, Node.js<12.0.0\n  (function checkObjectFromEntries() {\n    if (Object.fromEntries) {\n      return;\n    }\n    require(\"core-js/es/object/from-entries.js\");\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13, Node.js<12.9.0\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n      // Slightly reduce the size of the Chromium-extension, given\n      // that `ReadableStream` has been supported since Chrome 43.\n      return;\n    }\n    if (globalThis.ReadableStream || !isNodeJS) {\n      return;\n    }\n    globalThis.ReadableStream =\n      require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","require('../modules/es.global-this');\n\nmodule.exports = require('../internals/global');\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\n\n// `globalThis` object\n// https://tc39.es/ecma262/#sec-globalthis\n$({ global: true }, {\n  globalThis: global\n});\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : String(key);\n};\n","var isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = input[TO_PRIMITIVE];\n  var result;\n  if (exoticToPrim !== undefined) {\n    if (pref === undefined) pref = 'default';\n    result = exoticToPrim.call(input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return typeof $Symbol == 'function' && Object(it) instanceof $Symbol;\n};\n","var global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] < 4 ? 1 : match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var isObject = require('../internals/is-object');\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (pref !== 'string' && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.16.4',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = false;\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var global = require('../internals/global');\n\nmodule.exports = function (key, value) {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var toObject = require('../internals/to-object');\n\nvar hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty.call(toObject(it), key);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    if (wmhas.call(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (objectHas(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = {};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","/*!\n* DOMMatrix v0.0.6 (https://github.com/thednp/dommatrix)\n* Copyright 2021 © thednp\n* Licensed under MIT (https://github.com/thednp/DOMMatrix/blob/master/LICENSE)\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.CSSMatrix = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * DOMMatrix shim - CSSMatrix\n   *\n   * Creates and returns a new `DOMMatrix` compatible *Object*\n   * with equivalent instance methods.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/DOMMatrix\n   * https://github.com/thednp/DOMMatrix/\n   *\n   * @param {String} String valid CSS transform in `matrix()`/`matrix3d()` format\n   * @param {Array} Array expected to be *Float64Array* or *Float32Array* in the column major order.\n   * @param {[a,b,c,d,e,f]} Arguments representing the 6 elements of a 2d matrix\n   * @param {[m11,m21,m31,m41..]} Arguments representing the 16 elements of a 3d matrix\n   */\n\n  var CSSMatrix = function CSSMatrix() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    this.setIdentity();\n    return args && args.length && this.setMatrixValue(args);\n  };\n\n  var prototypeAccessors = { isIdentity: { configurable: true },is2D: { configurable: true } };\n\n  /**\n   * A `Boolean` whose value is `true` if the matrix is the identity matrix. The identity\n   * matrix is one in which every value is 0 except those on the main diagonal from top-left\n   * to bottom-right corner (in other words, where the offsets in each direction are equal).\n   *\n   * @return {Boolean} `Boolean` the current property value\n   */\n  prototypeAccessors.isIdentity.get = function () {\n    var m = this;\n    return (m.m11 === 1 && m.m12 === 0 && m.m13 === 0 && m.m14 === 0\n            && m.m21 === 0 && m.m22 === 1 && m.m23 === 0 && m.m24 === 0\n            && m.m31 === 0 && m.m32 === 0 && m.m33 === 1 && m.m34 === 0\n            && m.m41 === 0 && m.m42 === 0 && m.m43 === 0 && m.m44 === 1);\n  };\n\n  /**\n   * Sets a new `Boolean` flag value for `this.isIdentity` matrix property.\n   *\n   * @param {Boolean} value sets a new `Boolean` flag for this property\n   */\n  prototypeAccessors.isIdentity.set = function (value) {\n    this.isIdentity = value;\n  };\n\n  /**\n   * A `Boolean` flag whose value is `true` if the matrix was initialized as a 2D matrix\n   * and `false` if the matrix is 3D.\n   *\n   * @return {Boolean} `Boolean` the current property value\n   */\n  prototypeAccessors.is2D.get = function () {\n    var m = this;\n    return (m.m31 === 0 && m.m32 === 0 && m.m33 === 1 && m.m34 === 0 && m.m43 === 0 && m.m44 === 1);\n  };\n\n  /**\n   * Sets a new `Boolean` flag value for `this.is2D` matrix property.\n   *\n   * @param {Boolean} value sets a new `Boolean` flag for this property\n   */\n  prototypeAccessors.is2D.set = function (value) {\n    this.is2D = value;\n  };\n\n  Object.defineProperties( CSSMatrix.prototype, prototypeAccessors );\n\n  // export proto for custom compile via Buble\n  var CSSMatrixProto = CSSMatrix.prototype;\n\n  // Transform Functions\n  // https://www.w3.org/TR/css-transforms-1/#transform-functions\n\n  /**\n   * Creates a new `CSSMatrix` for the translation matrix and returns it.\n   * This method is equivalent to the CSS `translate3d()` function.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d\n   *\n   * @param {Number} x the `x-axis` position.\n   * @param {Number} y the `y-axis` position.\n   * @param {Number} z the `z-axis` position.\n   */\n  function Translate(x, y, z) {\n    var m = new CSSMatrix();\n    m.m41 = x;\n    m.e = x;\n    m.m42 = y;\n    m.f = y;\n    m.m43 = z;\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` for the rotation matrix and returns it.\n   *\n   * http://en.wikipedia.org/wiki/Rotation_matrix\n   *\n   * @param {Number} rx the `x-axis` rotation.\n   * @param {Number} ry the `y-axis` rotation.\n   * @param {Number} rz the `z-axis` rotation.\n   */\n\n  function Rotate(rx, ry, rz) {\n    var m = new CSSMatrix();\n\n    var radX = (rx * Math.PI) / 180;\n    var radY = (ry * Math.PI) / 180;\n    var radZ = (rz * Math.PI) / 180;\n\n    // minus sin() because of right-handed system\n    var cosx = Math.cos(radX);\n    var sinx = -Math.sin(radX);\n    var cosy = Math.cos(radY);\n    var siny = -Math.sin(radY);\n    var cosz = Math.cos(radZ);\n    var sinz = -Math.sin(radZ);\n\n    var cycz = cosy * cosz;\n    var cysz = -cosy * sinz;\n\n    m.m11 = cycz;\n    m.a = cycz;\n\n    m.m12 = cysz;\n    m.b = cysz;\n\n    m.m13 = siny;\n\n    var sxsy = sinx * siny * cosz + cosx * sinz;\n    m.m21 = sxsy;\n    m.c = sxsy;\n\n    var cxcz = cosx * cosz - sinx * siny * sinz;\n    m.m22 = cxcz;\n    m.d = cxcz;\n\n    m.m23 = -sinx * cosy;\n\n    m.m31 = sinx * sinz - cosx * siny * cosz;\n    m.m32 = sinx * cosz + cosx * siny * sinz;\n    m.m33 = cosx * cosy;\n\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` for the rotation matrix and returns it.\n   * This method is equivalent to the CSS `rotate3d()` function.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotate3d\n   *\n   * @param {Number} x the `x-axis` vector length.\n   * @param {Number} y the `y-axis` vector length.\n   * @param {Number} z the `z-axis` vector length.\n   * @param {Number} angle the value in degrees of the rotation.\n   */\n  function RotateAxisAngle(x, y, z, angle) {\n    var m = new CSSMatrix();\n    var radA = (angle * Math.PI) / 360;\n    var sinA = Math.sin(radA);\n    var cosA = Math.cos(radA);\n    var sinA2 = sinA * sinA;\n    var length = Math.sqrt(x * x + y * y + z * z);\n    var X = 0;\n    var Y = 0;\n    var Z = 1;\n\n    // bad vector length, use something reasonable\n    if (length !== 0) {\n      X = x / length;\n      Y = y / length;\n      Z = z / length;\n    }\n\n    var x2 = X * X;\n    var y2 = Y * Y;\n    var z2 = Z * Z;\n\n    var m11 = 1 - 2 * (y2 + z2) * sinA2;\n    m.m11 = m11;\n    m.a = m11;\n\n    var m12 = 2 * (x * y * sinA2 + z * sinA * cosA);\n    m.m12 = m12;\n    m.b = m12;\n\n    m.m13 = 2 * (x * z * sinA2 - y * sinA * cosA);\n\n    var m21 = 2 * (y * x * sinA2 - z * sinA * cosA);\n    m.m21 = m21;\n    m.c = m21;\n\n    var m22 = 1 - 2 * (z2 + x2) * sinA2;\n    m.m22 = m22;\n    m.d = m22;\n\n    m.m23 = 2 * (y * z * sinA2 + x * sinA * cosA);\n    m.m31 = 2 * (z * x * sinA2 + y * sinA * cosA);\n    m.m32 = 2 * (z * y * sinA2 - x * sinA * cosA);\n    m.m33 = 1 - 2 * (x2 + y2) * sinA2;\n\n    m.m14 = 0;\n    m.m24 = 0;\n    m.m34 = 0;\n\n    m.m41 = 0;\n    m.e = 0;\n    m.m42 = 0;\n    m.f = 0;\n    m.m43 = 0;\n\n    m.m44 = 1;\n\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` for the scale matrix and returns it.\n   * This method is equivalent to the CSS `scale3d()` function.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/scale3d\n   *\n   * @param {Number} x the `x-axis` scale.\n   * @param {Number} y the `y-axis` scale.\n   * @param {Number} z the `z-axis` scale.\n   */\n  function Scale(x, y, z) {\n    var m = new CSSMatrix();\n    m.m11 = x;\n    m.a = x;\n\n    m.m22 = y;\n    m.d = y;\n\n    m.m33 = z;\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` for the shear of the `x-axis` rotation matrix and\n   * returns it. This method is equivalent to the CSS `skewX()` function.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skewX\n   *\n   * @param {Number} angle the angle in degrees.\n   */\n  function SkewX(angle) {\n    var radA = (angle * Math.PI) / 180;\n    var m = new CSSMatrix();\n    var t = Math.tan(radA);\n    m.m21 = t;\n    m.c = t;\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` for the shear of the `y-axis` rotation matrix and\n   * returns it. This method is equivalent to the CSS `skewY()` function.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skewY\n   *\n   * @param {Number} angle the angle in degrees.\n   */\n  function SkewY(angle) {\n    var radA = (angle * Math.PI) / 180;\n    var m = new CSSMatrix();\n    var t = Math.tan(radA);\n    m.m12 = t;\n    m.b = t;\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` resulted from the multiplication of two matrixes\n   * and returns it. Both matrixes are not changed.\n   *\n   * @param {CSSMatrix} m1 the first matrix.\n   * @param {CSSMatrix} m2 the second matrix.\n   */\n  function Multiply(m1, m2) {\n    var m11 = m2.m11 * m1.m11 + m2.m12 * m1.m21 + m2.m13 * m1.m31 + m2.m14 * m1.m41;\n    var m12 = m2.m11 * m1.m12 + m2.m12 * m1.m22 + m2.m13 * m1.m32 + m2.m14 * m1.m42;\n    var m13 = m2.m11 * m1.m13 + m2.m12 * m1.m23 + m2.m13 * m1.m33 + m2.m14 * m1.m43;\n    var m14 = m2.m11 * m1.m14 + m2.m12 * m1.m24 + m2.m13 * m1.m34 + m2.m14 * m1.m44;\n\n    var m21 = m2.m21 * m1.m11 + m2.m22 * m1.m21 + m2.m23 * m1.m31 + m2.m24 * m1.m41;\n    var m22 = m2.m21 * m1.m12 + m2.m22 * m1.m22 + m2.m23 * m1.m32 + m2.m24 * m1.m42;\n    var m23 = m2.m21 * m1.m13 + m2.m22 * m1.m23 + m2.m23 * m1.m33 + m2.m24 * m1.m43;\n    var m24 = m2.m21 * m1.m14 + m2.m22 * m1.m24 + m2.m23 * m1.m34 + m2.m24 * m1.m44;\n\n    var m31 = m2.m31 * m1.m11 + m2.m32 * m1.m21 + m2.m33 * m1.m31 + m2.m34 * m1.m41;\n    var m32 = m2.m31 * m1.m12 + m2.m32 * m1.m22 + m2.m33 * m1.m32 + m2.m34 * m1.m42;\n    var m33 = m2.m31 * m1.m13 + m2.m32 * m1.m23 + m2.m33 * m1.m33 + m2.m34 * m1.m43;\n    var m34 = m2.m31 * m1.m14 + m2.m32 * m1.m24 + m2.m33 * m1.m34 + m2.m34 * m1.m44;\n\n    var m41 = m2.m41 * m1.m11 + m2.m42 * m1.m21 + m2.m43 * m1.m31 + m2.m44 * m1.m41;\n    var m42 = m2.m41 * m1.m12 + m2.m42 * m1.m22 + m2.m43 * m1.m32 + m2.m44 * m1.m42;\n    var m43 = m2.m41 * m1.m13 + m2.m42 * m1.m23 + m2.m43 * m1.m33 + m2.m44 * m1.m43;\n    var m44 = m2.m41 * m1.m14 + m2.m42 * m1.m24 + m2.m43 * m1.m34 + m2.m44 * m1.m44;\n\n    return new CSSMatrix(\n      [m11, m21, m31, m41,\n        m12, m22, m32, m42,\n        m13, m23, m33, m43,\n        m14, m24, m34, m44]\n    );\n  }\n\n  /**\n   * Returns a new *Float32Array* containing all 16 elements which comprise the matrix.\n   * The elements are stored into the array as single-precision floating-point numbers\n   * in column-major (colexographical access access or \"colex\") order.\n   *\n   * @return {Float32Array} matrix elements (m11, m21, m31, m41, ..)\n   */\n  // toFloat32Array(){\n  //   return Float32Array.from(this.toArray());\n  // }\n\n  /**\n   * Returns a new Float64Array containing all 16 elements which comprise the matrix.\n   * The elements are stored into the array as double-precision floating-point numbers\n   * in column-major (colexographical access access or \"colex\") order.\n   *\n   * @return {Float64Array} matrix elements (m11, m21, m31, m41, ..)\n   */\n  // toFloat64Array(){\n  //   return Float64Array.from(this.toArray());\n  // }\n\n  /**\n   * Creates a new mutable `CSSMatrix` object given an existing matrix or a\n   * `DOMMatrix` *Object* which provides the values for its properties.\n   *\n   * @param {CSSMatrix} CSSMatrix the source `CSSMatrix` initialization to feed values from\n   */\n  function fromMatrix(m) {\n    return new CSSMatrix(\n      // DOMMatrix elements order\n      [m.m11, m.m21, m.m31, m.m41,\n        m.m12, m.m22, m.m32, m.m42,\n        m.m13, m.m23, m.m33, m.m43,\n        m.m14, m.m24, m.m34, m.m44]\n    );\n  }\n\n  /**\n   * Feed a CSSMatrix object with the values of a 6/16 values array and returns it.\n   *\n   * @param {Array} array The source `Array` to feed values from.\n   * @return {CSSMatrix} a The source array to feed values from.\n   */\n  function feedFromArray(m, array) {\n    var a = Array.from(array);\n    if (a.length === 16) {\n      var m11 = a[0];\n      var m21 = a[1];\n      var m31 = a[2];\n      var m41 = a[3];\n      var m12 = a[4];\n      var m22 = a[5];\n      var m32 = a[6];\n      var m42 = a[7];\n      var m13 = a[8];\n      var m23 = a[9];\n      var m33 = a[10];\n      var m43 = a[11];\n      var m14 = a[12];\n      var m24 = a[13];\n      var m34 = a[14];\n      var m44 = a[15];\n\n      m.m11 = m11;\n      m.a = m11;\n\n      m.m21 = m21;\n      m.c = m21;\n\n      m.m31 = m31;\n\n      m.m41 = m41;\n      m.e = m41;\n\n      m.m12 = m12;\n      m.b = m12;\n\n      m.m22 = m22;\n      m.d = m22;\n\n      m.m32 = m32;\n\n      m.m42 = m42;\n      m.f = m42;\n\n      m.m13 = m13;\n      m.m23 = m23;\n      m.m33 = m33;\n      m.m43 = m43;\n      m.m14 = m14;\n      m.m24 = m24;\n      m.m34 = m34;\n      m.m44 = m44;\n    } else if (a.length === 6) {\n      var m11$1 = a[0];\n      var m12$1 = a[1];\n      var m21$1 = a[2];\n      var m22$1 = a[3];\n      var m14$1 = a[4];\n      var m24$1 = a[5];\n\n      m.m11 = m11$1;\n      m.a = m11$1;\n\n      m.m12 = m12$1;\n      m.b = m12$1;\n\n      m.m21 = m21$1;\n      m.c = m21$1;\n\n      m.m22 = m22$1;\n      m.d = m22$1;\n\n      m.m14 = m14$1;\n      m.e = m14$1;\n\n      m.m24 = m24$1;\n      m.f = m24$1;\n    } else {\n      throw new TypeError('CSSMatrix: expecting a 6/16 values Array');\n    }\n    return m;\n  }\n\n  /**\n   * Creates a new mutable `CSSMatrix` object given an array float values.\n   *\n   * If the array has six values, the result is a 2D matrix; if the array has 16 values,\n   * the result is a 3D matrix. Otherwise, a TypeError exception is thrown.\n   *\n   * @param {Array} array The source `Array` to feed values from.\n   * @return {CSSMatrix} a The source array to feed values from.\n   */\n  function fromArray(a) {\n    return feedFromArray(new CSSMatrix(), a);\n  }\n\n  /**\n   * Each create a new mutable `CSSMatrix` object given an array of single/double-precision\n   * (32/64 bit) floating-point values.\n   *\n   * If the array has six values, the result is a 2D matrix; if the array has 16 values,\n   * the result is a 3D matrix. Otherwise, a TypeError exception is thrown.\n   *\n   * @param {Float32Array|Float64Array} array The source float array to feed values from.\n   * @return {CSSMatrix} a The source array to feed values from.\n   */\n  // more of an alias for now, will update later if it's the case\n  // function fromFloat32Array(a){\n  //   return feedFromArray(new CSSMatrix(), a);\n  // }\n  // function fromFloat64Array(a){ // more of an alias\n  //   return feedFromArray(new CSSMatrix(), a);\n  // }\n\n  /**\n   * The `setMatrixValue` method replaces the existing matrix with one computed\n   * in the browser. EG: `matrix(1,0.25,-0.25,1,0,0)`\n   *\n   * The method accepts *Float64Array* / *Float32Array* / any *Array* values, the result of\n   * `DOMMatrix` / `CSSMatrix` instance method calls `toFloat64Array()` / `toFloat32Array()`.\n   *\n   * This method expects valid *matrix()* / *matrix3d()* string values, other\n   * transform functions like *translate()* are not supported.\n   *\n   * @param {String} source the *String* resulted from `getComputedStyle()`.\n   * @param {Array} source the *Array* resulted from `toFloat64Array()`.\n   */\n  CSSMatrixProto.setMatrixValue = function setMatrixValue(source) {\n    var m = this;\n\n    if (!source || !source.length) { // no parameters or source\n      return m;\n    } if (source.length && typeof source[0] === 'string' && source[0].length) { // CSS transform String source\n      var string = String(source[0]).trim();\n      var type = '';\n      var values = [];\n\n      if (string === 'none') { return m; }\n\n      type = string.slice(0, string.indexOf('('));\n      values = string.slice((type === 'matrix' ? 7 : 9), -1).split(',')\n        .map(function (n) { return (Math.abs(n) < 1e-6 ? 0 : +n); });\n\n      if ([6, 16].indexOf(values.length) > -1) {\n        feedFromArray(m, values);\n      } else {\n        throw new TypeError('CSSMatrix: expecting valid CSS matrix() / matrix3d() syntax');\n      }\n    } else if (source[0] instanceof CSSMatrix) { // CSSMatrix instance\n      feedFromArray(m, source[0].toArray());\n    } else if (Array.isArray(source[0])) { // Float32Array,Float64Array source\n      feedFromArray(m, source[0]);\n    } else if (Array.isArray(source)) { // Arguments list come here\n      feedFromArray(m, source);\n    }\n    return m;\n  };\n\n  /**\n   * Creates and returns a string representation of the matrix in `CSS` matrix syntax,\n   * using the appropriate `CSS` matrix notation.\n   *\n   * The 16 items in the array 3D matrix array are *transposed* in row-major order.\n   *\n   * @matrix3d *matrix3d(m11, m12, m13, m14, m21, ...)*\n   * @matrix *matrix(a, b, c, d, e, f)*\n   *\n   * @return {String} `String` representation of the matrix\n   */\n  CSSMatrixProto.toString = function toString() {\n    var m = this;\n    var type = m.is2D ? 'matrix' : 'matrix3d';\n\n    return (type + \"(\" + (m.toArray(1).join(',')) + \")\");\n  };\n\n  /**\n   * Returns an *Array* containing all 16 elements which comprise the matrix.\n   * The method can return either the elements in default column major order or\n   * row major order (what we call the *transposed* matrix, used by `toString`).\n   *\n   * Other methods make use of this method to feed their output values from this matrix.\n   *\n   * @param {Boolean} transposed changes the order of elements in the output\n   * @return {Array} an *Array* representation of the matrix\n   */\n  CSSMatrixProto.toArray = function toArray(transposed) {\n    var m = this;\n    var result;\n\n    if (m.is2D) {\n      result = [m.a, m.b, m.c, m.d, m.e, m.f];\n    } else if (transposed) {\n      result = [m.m11, m.m12, m.m13, m.m14, // transposed is used by toString\n        m.m21, m.m22, m.m23, m.m24,\n        m.m31, m.m32, m.m33, m.m34,\n        m.m41, m.m42, m.m43, m.m44];\n    } else {\n      result = [m.m11, m.m21, m.m31, m.m41, // used by constructor\n        m.m12, m.m22, m.m32, m.m42,\n        m.m13, m.m23, m.m33, m.m43,\n        m.m14, m.m24, m.m34, m.m44];\n    }\n    return result;\n  };\n\n  /**\n   * The Multiply method returns a new CSSMatrix which is the result of this\n   * matrix multiplied by the passed matrix, with the passed matrix to the right.\n   * This matrix is not modified.\n   *\n   * @param {CSSMatrix} m2 CSSMatrix\n   * @return {CSSMatrix} The result matrix.\n   */\n  CSSMatrixProto.multiply = function multiply(m2) {\n    return Multiply(this, m2);\n  };\n\n  /**\n   *\n   * These methods will be implemented later into an extended version to provide\n   * additional functionality.\n   */\n  // inverse = function(){}\n  // determinant = function(){}\n  // transpose = function(){}\n\n  /**\n   * The translate method returns a new matrix which is this matrix post\n   * multiplied by a translation matrix containing the passed values. If the z\n   * component is undefined, a 0 value is used in its place. This matrix is not\n   * modified.\n   *\n   * @param {number} x X component of the translation value.\n   * @param {number} y Y component of the translation value.\n   * @param {number=} z Z component of the translation value.\n   * @return {CSSMatrix} The result matrix\n   */\n\n  CSSMatrixProto.translate = function translate(x, y, z) {\n    var X = x;\n    var Y = y;\n    var Z = z;\n    if (Z == null) { Z = 0; }\n    if (Y == null) { Y = 0; }\n    return Multiply(this, Translate(X, Y, Z));\n  };\n\n  /**\n   * The scale method returns a new matrix which is this matrix post multiplied by\n   * a scale matrix containing the passed values. If the z component is undefined,\n   * a 1 value is used in its place. If the y component is undefined, the x\n   * component value is used in its place. This matrix is not modified.\n   *\n   * @param {number} x The X component of the scale value.\n   * @param {number=} y The Y component of the scale value.\n   * @param {number=} z The Z component of the scale value.\n   * @return {CSSMatrix} The result matrix\n   */\n  CSSMatrixProto.scale = function scale(x, y, z) {\n    var X = x;\n    var Y = y;\n    var Z = z;\n    if (Y == null) { Y = x; }\n    if (Z == null) { Z = x; }\n\n    return Multiply(this, Scale(X, Y, Z));\n  };\n\n  /**\n   * The rotate method returns a new matrix which is this matrix post multiplied\n   * by each of 3 rotation matrices about the major axes, first X, then Y, then Z.\n   * If the y and z components are undefined, the x value is used to rotate the\n   * object about the z axis, as though the vector (0,0,x) were passed. All\n   * rotation values are in degrees. This matrix is not modified.\n   *\n   * @param {number} rx The X component of the rotation, or Z if Y and Z are null.\n   * @param {number=} ry The (optional) Y component of the rotation value.\n   * @param {number=} rz The (optional) Z component of the rotation value.\n   * @return {CSSMatrix} The result matrix\n   */\n  CSSMatrixProto.rotate = function rotate(rx, ry, rz) {\n    var RX = rx;\n    var RY = ry;\n    var RZ = rz;\n    if (RY == null) { RY = 0; }\n    if (RZ == null) { RZ = RX; RX = 0; }\n    return Multiply(this, Rotate(RX, RY, RZ));\n  };\n\n  /**\n   * The rotateAxisAngle method returns a new matrix which is this matrix post\n   * multiplied by a rotation matrix with the given axis and `angle`. The right-hand\n   * rule is used to determine the direction of rotation. All rotation values are\n   * in degrees. This matrix is not modified.\n   *\n   * @param {number} x The X component of the axis vector.\n   * @param {number} y The Y component of the axis vector.\n   * @param {number} z The Z component of the axis vector.\n   * @param {number} angle The angle of rotation about the axis vector, in degrees.\n   * @return {CSSMatrix} The `CSSMatrix` result\n   */\n\n  CSSMatrixProto.rotateAxisAngle = function rotateAxisAngle(x, y, z, angle) {\n    if (arguments.length !== 4) {\n      throw new TypeError('CSSMatrix: expecting 4 values');\n    }\n    return Multiply(this, RotateAxisAngle(x, y, z, angle));\n  };\n\n  /**\n   * Specifies a skew transformation along the `x-axis` by the given angle.\n   * This matrix is not modified.\n   *\n   * @param {number} angle The angle amount in degrees to skew.\n   * @return {CSSMatrix} The `CSSMatrix` result\n   */\n\n  CSSMatrixProto.skewX = function skewX(angle) {\n    return Multiply(this, SkewX(angle));\n  };\n\n  /**\n   * Specifies a skew transformation along the `y-axis` by the given angle.\n   * This matrix is not modified.\n   *\n   * @param {number} angle The angle amount in degrees to skew.\n   * @return {CSSMatrix} The `CSSMatrix` result\n   */\n\n  CSSMatrixProto.skewY = function skewY(angle) {\n    return Multiply(this, SkewY(angle));\n  };\n\n  /**\n   * Set the current `CSSMatrix` instance to the identity form and returns it.\n   *\n   * @return {CSSMatrix} this `CSSMatrix` instance\n   */\n  CSSMatrixProto.setIdentity = function setIdentity() {\n    var identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    return feedFromArray(this, identity);\n  };\n\n  /**\n   * Transforms the specified point using the matrix, returning a new\n   * *Object* containing the transformed point.\n   * Neither the matrix nor the original point are altered.\n   *\n   * The method is equivalent with `transformPoint()` method\n   * of the `DOMMatrix` constructor.\n   *\n   * JavaScript implementation by thednp\n   *\n   * @param {Point} point the *Object* with `x`, `y`, `z` and `w` components\n   * @return {Point} a new `{x,y,z,w}` *Object*\n   */\n  CSSMatrixProto.transformPoint = function transformPoint(v) {\n    var M = this;\n    var m = Translate(v.x, v.y, v.z);\n\n    m.m44 = v.w || 1;\n    m = M.multiply(m);\n\n    return {\n      x: m.m41,\n      y: m.m42,\n      z: m.m43,\n      w: m.m44,\n    };\n  };\n\n  /**\n   * Transforms the specified vector using the matrix, returning a new\n   * {x,y,z,w} *Object* comprising the transformed vector.\n   * Neither the matrix nor the original vector are altered.\n   *\n   * @param {Tuple} tupple an object with x, y, z and w components\n   * @return {Tuple} the passed tuple\n   */\n  CSSMatrixProto.transform = function transform(t) {\n    var m = this;\n    var x = m.m11 * t.x + m.m12 * t.y + m.m13 * t.z + m.m14 * t.w;\n    var y = m.m21 * t.x + m.m22 * t.y + m.m23 * t.z + m.m24 * t.w;\n    var z = m.m31 * t.x + m.m32 * t.y + m.m33 * t.z + m.m34 * t.w;\n    var w = m.m41 * t.x + m.m42 * t.y + m.m43 * t.z + m.m44 * t.w;\n\n    return {\n      x: x / w,\n      y: y / w,\n      z: z / w,\n      w: w,\n    };\n  };\n\n  // Add Transform Functions to CSSMatrix object\n  CSSMatrix.Translate = Translate;\n  CSSMatrix.Rotate = Rotate;\n  CSSMatrix.RotateAxisAngle = RotateAxisAngle;\n  CSSMatrix.Scale = Scale;\n  CSSMatrix.SkewX = SkewX;\n  CSSMatrix.SkewY = SkewY;\n  CSSMatrix.Multiply = Multiply;\n  CSSMatrix.fromMatrix = fromMatrix;\n  CSSMatrix.fromArray = fromArray;\n  CSSMatrix.feedFromArray = feedFromArray;\n\n  return CSSMatrix;\n\n})));\n","require('../../modules/es.array.iterator');\nrequire('../../modules/es.object.from-entries');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Object.fromEntries;\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","module.exports = {};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","/* eslint-disable no-proto -- safe */\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","var $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar createProperty = require('../internals/create-property');\n\n// `Object.fromEntries` method\n// https://github.com/tc39/proposal-object-from-entries\n$({ target: 'Object', stat: true }, {\n  fromEntries: function fromEntries(iterable) {\n    var obj = {};\n    iterate(iterable, function (k, v) {\n      createProperty(obj, k, v);\n    }, { AS_ENTRIES: true });\n    return obj;\n  }\n});\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'return', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(it) : usingIterator;\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var anObject = require('../internals/an-object');\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = iterator['return'];\n    if (innerResult === undefined) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = innerResult.call(iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","require('../../modules/es.aggregate-error');\nrequire('../../modules/es.array.iterator');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.promise');\nrequire('../../modules/es.promise.all-settled');\nrequire('../../modules/es.promise.any');\nrequire('../../modules/es.promise.finally');\nrequire('../../modules/es.string.iterator');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Promise;\n","'use strict';\nvar $ = require('../internals/export');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar iterate = require('../internals/iterate');\nvar toString = require('../internals/to-string');\n\nvar $AggregateError = function AggregateError(errors, message) {\n  var that = this;\n  if (!(that instanceof $AggregateError)) return new $AggregateError(errors, message);\n  if (setPrototypeOf) {\n    // eslint-disable-next-line unicorn/error-message -- expected\n    that = setPrototypeOf(new Error(undefined), getPrototypeOf(that));\n  }\n  if (message !== undefined) createNonEnumerableProperty(that, 'message', toString(message));\n  var errorsArray = [];\n  iterate(errors, errorsArray.push, { that: errorsArray });\n  createNonEnumerableProperty(that, 'errors', errorsArray);\n  return that;\n};\n\n$AggregateError.prototype = create(Error.prototype, {\n  constructor: createPropertyDescriptor(5, $AggregateError),\n  message: createPropertyDescriptor(5, ''),\n  name: createPropertyDescriptor(5, 'AggregateError')\n});\n\n// `AggregateError` constructor\n// https://tc39.es/ecma262/#sec-aggregate-error-constructor\n$({ global: true }, {\n  AggregateError: $AggregateError\n});\n","var isSymbol = require('../internals/is-symbol');\n\nmodule.exports = function (argument) {\n  if (isSymbol(argument)) throw TypeError('Cannot convert a Symbol value to a string');\n  return String(argument);\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar isObject = require('../internals/is-object');\nvar aFunction = require('../internals/a-function');\nvar anInstance = require('../internals/an-instance');\nvar inspectSource = require('../internals/inspect-source');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_BROWSER = require('../internals/engine-is-browser');\nvar IS_NODE = require('../internals/engine-is-node');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar NativePromisePrototype = NativePromise && NativePromise.prototype;\nvar PromiseConstructor = NativePromise;\nvar PromiseConstructorPrototype = NativePromisePrototype;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar SUBCLASSING = false;\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(PromiseConstructor);\n  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(PromiseConstructor);\n  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n  // We can't detect it synchronously, so just check versions\n  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;\n  // We need Promise#finally in the pure version for preventing prototype pollution\n  if (IS_PURE && !PromiseConstructorPrototype['finally']) return true;\n  // We can't use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) return false;\n  // Detect correctness of subclassing with @@species support\n  var promise = new PromiseConstructor(function (resolve) { resolve(1); });\n  var FakePromise = function (exec) {\n    exec(function () { /* empty */ }, function () { /* empty */ });\n  };\n  var constructor = promise.constructor = {};\n  constructor[SPECIES] = FakePromise;\n  SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;\n  if (!SUBCLASSING) return true;\n  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_REJECTION_EVENT;\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function (state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  var chain = state.reactions;\n  microtask(function () {\n    var value = state.value;\n    var ok = state.state == FULFILLED;\n    var index = 0;\n    // variable length - can't use forEach\n    while (chain.length > index) {\n      var reaction = chain[index++];\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (state.rejection === UNHANDLED) onHandleUnhandled(state);\n            state.rejection = HANDLED;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // can throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (error) {\n        if (domain && !exited) domain.exit();\n        reject(error);\n      }\n    }\n    state.reactions = [];\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (state) {\n  task.call(global, function () {\n    var promise = state.facade;\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (state) {\n  task.call(global, function () {\n    var promise = state.facade;\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, state, unwrap) {\n  return function (value) {\n    fn(state, value, unwrap);\n  };\n};\n\nvar internalReject = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(state, true);\n};\n\nvar internalResolve = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (state.facade === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          then.call(value,\n            bind(internalResolve, wrapper, state),\n            bind(internalReject, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(state, false);\n    }\n  } catch (error) {\n    internalReject({ done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromiseConstructor, PROMISE);\n    aFunction(executor);\n    Internal.call(this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, state), bind(internalReject, state));\n    } catch (error) {\n      internalReject(state, error);\n    }\n  };\n  PromiseConstructorPrototype = PromiseConstructor.prototype;\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: [],\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromiseConstructorPrototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.es/ecma262/#sec-promise.prototype.then\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      state.parent = true;\n      state.reactions.push(reaction);\n      if (state.state != PENDING) notify(state, false);\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.es/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, state);\n    this.reject = bind(internalReject, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && typeof NativePromise == 'function' && NativePromisePrototype !== Object.prototype) {\n    nativeThen = NativePromisePrototype.then;\n\n    if (!SUBCLASSING) {\n      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs\n      redefine(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {\n        var that = this;\n        return new PromiseConstructor(function (resolve, reject) {\n          nativeThen.call(that, resolve, reject);\n        }).then(onFulfilled, onRejected);\n      // https://github.com/zloirock/core-js/issues/640\n      }, { unsafe: true });\n\n      // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`\n      redefine(NativePromisePrototype, 'catch', PromiseConstructorPrototype['catch'], { unsafe: true });\n    }\n\n    // make `.constructor === Promise` work for native promise-based APIs\n    try {\n      delete NativePromisePrototype.constructor;\n    } catch (error) { /* empty */ }\n\n    // make `instanceof Promise` work for native promise-based APIs\n    if (setPrototypeOf) {\n      setPrototypeOf(NativePromisePrototype, PromiseConstructorPrototype);\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = getBuiltIn(PROMISE);\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.es/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    capability.reject.call(undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.es/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.es/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        $promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.es/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      iterate(iterable, function (promise) {\n        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar bind = require('../internals/function-bind-context');\nvar html = require('../internals/html');\nvar createElement = require('../internals/document-create-element');\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar location, defer, channel, port;\n\ntry {\n  // Deno throws a ReferenceError on `location` access without `--location` flag\n  location = global.location;\n} catch (error) { /* empty */ }\n\nvar run = function (id) {\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(String(id), location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(fn) {\n    var args = [];\n    var argumentsLength = arguments.length;\n    var i = 1;\n    while (argumentsLength > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func -- spec requirement\n      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE) {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (\n    global.addEventListener &&\n    typeof postMessage == 'function' &&\n    !global.importScripts &&\n    location && location.protocol !== 'file:' &&\n    !fails(post)\n  ) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);\n","var classof = require('../internals/classof-raw');\nvar global = require('../internals/global');\n\nmodule.exports = classof(global.process) == 'process';\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar macrotask = require('../internals/task').set;\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_IOS_PEBBLE = require('../internals/engine-is-ios-pebble');\nvar IS_WEBOS_WEBKIT = require('../internals/engine-is-webos-webkit');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar document = global.document;\nvar process = global.process;\nvar Promise = global.Promise;\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\n  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    // workaround of WebKit ~ iOS Safari 10.1 bug\n    promise.constructor = Promise;\n    then = promise.then;\n    notify = function () {\n      then.call(promise, flush);\n    };\n  // Node.js without promises\n  } else if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","var userAgent = require('../internals/engine-user-agent');\nvar global = require('../internals/global');\n\nmodule.exports = /ipad|iphone|ipod/i.test(userAgent) && global.Pebble !== undefined;\n","var userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /web0s(?!.*chrome)/i.test(userAgent);\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","module.exports = typeof window == 'object';\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\n// `Promise.allSettled` method\n// https://tc39.es/ecma262/#sec-promise.allsettled\n$({ target: 'Promise', stat: true }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'fulfilled', value: value };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'rejected', reason: error };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar getBuiltIn = require('../internals/get-built-in');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\nvar PROMISE_ANY_ERROR = 'No one promise resolved';\n\n// `Promise.any` method\n// https://tc39.es/ecma262/#sec-promise.any\n$({ target: 'Promise', stat: true }, {\n  any: function any(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aFunction(C.resolve);\n      var errors = [];\n      var counter = 0;\n      var remaining = 1;\n      var alreadyResolved = false;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyRejected = false;\n        errors.push(undefined);\n        remaining++;\n        promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyResolved = true;\n          resolve(value);\n        }, function (error) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyRejected = true;\n          errors[index] = error;\n          --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));\n        });\n      });\n      --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`\nif (!IS_PURE && typeof NativePromise == 'function') {\n  var method = getBuiltIn('Promise').prototype['finally'];\n  if (NativePromise.prototype['finally'] !== method) {\n    redefine(NativePromise.prototype, 'finally', method, { unsafe: true });\n  }\n}\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar toString = require('../internals/to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var toInteger = require('../internals/to-integer');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.codePointAt` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","/**\n * web-streams-polyfill v3.1.0\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n}(this, (function (exports) { 'use strict';\n\n    /// <reference lib=\"es2015.symbol\" />\n    var SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n        Symbol :\n        function (description) { return \"Symbol(\" + description + \")\"; };\n\n    /// <reference lib=\"dom\" />\n    function noop() {\n        return undefined;\n    }\n    function getGlobals() {\n        if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof window !== 'undefined') {\n            return window;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    var globals = getGlobals();\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    var rethrowAssertionErrorRejection = noop;\n\n    var originalPromise = Promise;\n    var originalPromiseThen = Promise.prototype.then;\n    var originalPromiseResolve = Promise.resolve.bind(originalPromise);\n    var originalPromiseReject = Promise.reject.bind(originalPromise);\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    function promiseResolvedWith(value) {\n        return originalPromiseResolve(value);\n    }\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    var queueMicrotask = (function () {\n        var globalQueueMicrotask = globals && globals.queueMicrotask;\n        if (typeof globalQueueMicrotask === 'function') {\n            return globalQueueMicrotask;\n        }\n        var resolvedPromise = promiseResolvedWith(undefined);\n        return function (fn) { return PerformPromiseThen(resolvedPromise, fn); };\n    })();\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    var QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    var SimpleQueue = /** @class */ (function () {\n        function SimpleQueue() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        Object.defineProperty(SimpleQueue.prototype, \"length\", {\n            get: function () {\n                return this._size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        SimpleQueue.prototype.push = function (element) {\n            var oldBack = this._back;\n            var newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        };\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        SimpleQueue.prototype.shift = function () { // must not be called on an empty queue\n            var oldFront = this._front;\n            var newFront = oldFront;\n            var oldCursor = this._cursor;\n            var newCursor = oldCursor + 1;\n            var elements = oldFront._elements;\n            var element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        };\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        SimpleQueue.prototype.forEach = function (callback) {\n            var i = this._cursor;\n            var node = this._front;\n            var elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        };\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        SimpleQueue.prototype.peek = function () { // must not be called on an empty queue\n            var front = this._front;\n            var cursor = this._cursor;\n            return front._elements[cursor];\n        };\n        return SimpleQueue;\n    }());\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        var stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        if (reader._ownerReadableStream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(\"Reader was released and can no longer be used to monitor the stream's closedness\"));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(\"Reader was released and can no longer be used to monitor the stream's closedness\"));\n        }\n        reader._ownerReadableStream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise(function (resolve, reject) {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    var AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n    var ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n    var CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n    var PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    var NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    var MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(context + \" is not an object.\");\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(context + \" is not a function.\");\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(context + \" is not an object.\");\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(\"Parameter \" + position + \" is required in '\" + context + \"'.\");\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(field + \" is required in '\" + context + \"'.\");\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        var lowerBound = 0;\n        var upperBound = Number.MAX_SAFE_INTEGER;\n        var x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(context + \" is not a finite number\");\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(context + \" is outside the accepted range of \" + lowerBound + \" to \" + upperBound + \", inclusive\");\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(context + \" is not a ReadableStream.\");\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        var reader = stream._reader;\n        var readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        var reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    var ReadableStreamDefaultReader = /** @class */ (function () {\n        function ReadableStreamDefaultReader(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, \"closed\", {\n            /**\n             * Returns a promise that will be fulfilled when the stream becomes closed,\n             * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n             */\n            get: function () {\n                if (!IsReadableStreamDefaultReader(this)) {\n                    return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n                }\n                return this._closedPromise;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        ReadableStreamDefaultReader.prototype.cancel = function (reason) {\n            if (reason === void 0) { reason = undefined; }\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        };\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        ReadableStreamDefaultReader.prototype.read = function () {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            var resolvePromise;\n            var rejectPromise;\n            var promise = newPromise(function (resolve, reject) {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            var readRequest = {\n                _chunkSteps: function (chunk) { return resolvePromise({ value: chunk, done: false }); },\n                _closeSteps: function () { return resolvePromise({ value: undefined, done: true }); },\n                _errorSteps: function (e) { return rejectPromise(e); }\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        };\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        ReadableStreamDefaultReader.prototype.releaseLock = function () {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        };\n        return ReadableStreamDefaultReader;\n    }());\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        var stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(\"ReadableStreamDefaultReader.prototype.\" + name + \" can only be used on a ReadableStreamDefaultReader\");\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    var _a;\n    var AsyncIteratorPrototype;\n    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n        // We're running inside a ES2018+ environment, but we're compiling to an older syntax.\n        // We cannot access %AsyncIteratorPrototype% without non-ES2018 syntax, but we can re-create it.\n        AsyncIteratorPrototype = (_a = {},\n            // 25.1.3.1 %AsyncIteratorPrototype% [ @@asyncIterator ] ( )\n            // https://tc39.github.io/ecma262/#sec-asynciteratorprototype-asynciterator\n            _a[SymbolPolyfill.asyncIterator] = function () {\n                return this;\n            },\n            _a);\n        Object.defineProperty(AsyncIteratorPrototype, SymbolPolyfill.asyncIterator, { enumerable: false });\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    var ReadableStreamAsyncIteratorImpl = /** @class */ (function () {\n        function ReadableStreamAsyncIteratorImpl(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        ReadableStreamAsyncIteratorImpl.prototype.next = function () {\n            var _this = this;\n            var nextSteps = function () { return _this._nextSteps(); };\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        };\n        ReadableStreamAsyncIteratorImpl.prototype.return = function (value) {\n            var _this = this;\n            var returnSteps = function () { return _this._returnSteps(value); };\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        };\n        ReadableStreamAsyncIteratorImpl.prototype._nextSteps = function () {\n            var _this = this;\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            var reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('iterate'));\n            }\n            var resolvePromise;\n            var rejectPromise;\n            var promise = newPromise(function (resolve, reject) {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            var readRequest = {\n                _chunkSteps: function (chunk) {\n                    _this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    queueMicrotask(function () { return resolvePromise({ value: chunk, done: false }); });\n                },\n                _closeSteps: function () {\n                    _this._ongoingPromise = undefined;\n                    _this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: function (reason) {\n                    _this._ongoingPromise = undefined;\n                    _this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        };\n        ReadableStreamAsyncIteratorImpl.prototype._returnSteps = function (value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value: value, done: true });\n            }\n            this._isFinished = true;\n            var reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('finish iterating'));\n            }\n            if (!this._preventCancel) {\n                var result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, function () { return ({ value: value, done: true }); });\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value: value, done: true });\n        };\n        return ReadableStreamAsyncIteratorImpl;\n    }());\n    var ReadableStreamAsyncIteratorPrototype = {\n        next: function () {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return: function (value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    if (AsyncIteratorPrototype !== undefined) {\n        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    }\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        var reader = AcquireReadableStreamDefaultReader(stream);\n        var impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        var iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(\"ReadableStreamAsyncIterator.\" + name + \" can only be used on a ReadableSteamAsyncIterator\");\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    var NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    // Not implemented correctly\n    function TransferArrayBuffer(O) {\n        return O;\n    }\n    // Not implemented correctly\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function IsDetachedBuffer(O) {\n        return false;\n    }\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        var length = end - begin;\n        var slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        var buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        var pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value: value, size: size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        var pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    var ReadableStreamBYOBRequest = /** @class */ (function () {\n        function ReadableStreamBYOBRequest() {\n            throw new TypeError('Illegal constructor');\n        }\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, \"view\", {\n            /**\n             * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n             */\n            get: function () {\n                if (!IsReadableStreamBYOBRequest(this)) {\n                    throw byobRequestBrandCheckException('view');\n                }\n                return this._view;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ReadableStreamBYOBRequest.prototype.respond = function (bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) ;\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        };\n        ReadableStreamBYOBRequest.prototype.respondWithNewView = function (view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        };\n        return ReadableStreamBYOBRequest;\n    }());\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    var ReadableByteStreamController = /** @class */ (function () {\n        function ReadableByteStreamController() {\n            throw new TypeError('Illegal constructor');\n        }\n        Object.defineProperty(ReadableByteStreamController.prototype, \"byobRequest\", {\n            /**\n             * Returns the current BYOB pull request, or `null` if there isn't one.\n             */\n            get: function () {\n                if (!IsReadableByteStreamController(this)) {\n                    throw byteStreamControllerBrandCheckException('byobRequest');\n                }\n                return ReadableByteStreamControllerGetBYOBRequest(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ReadableByteStreamController.prototype, \"desiredSize\", {\n            /**\n             * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n             * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n             */\n            get: function () {\n                if (!IsReadableByteStreamController(this)) {\n                    throw byteStreamControllerBrandCheckException('desiredSize');\n                }\n                return ReadableByteStreamControllerGetDesiredSize(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        ReadableByteStreamController.prototype.close = function () {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            var state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(\"The stream (in \" + state + \" state) is not in the readable state and cannot be closed\");\n            }\n            ReadableByteStreamControllerClose(this);\n        };\n        ReadableByteStreamController.prototype.enqueue = function (chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(\"chunk's buffer must have non-zero byteLength\");\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            var state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(\"The stream (in \" + state + \" state) is not in the readable state and cannot be enqueued to\");\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        };\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        ReadableByteStreamController.prototype.error = function (e) {\n            if (e === void 0) { e = undefined; }\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        };\n        /** @internal */\n        ReadableByteStreamController.prototype[CancelSteps] = function (reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            var result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        };\n        /** @internal */\n        ReadableByteStreamController.prototype[PullSteps] = function (readRequest) {\n            var stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                var entry = this._queue.shift();\n                this._queueTotalSize -= entry.byteLength;\n                ReadableByteStreamControllerHandleQueueDrain(this);\n                var view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n                readRequest._chunkSteps(view);\n                return;\n            }\n            var autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                var buffer = void 0;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                var pullIntoDescriptor = {\n                    buffer: buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        };\n        return ReadableByteStreamController;\n    }());\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        var pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, function () {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n        }, function (e) {\n            ReadableByteStreamControllerError(controller, e);\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        var done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        var bytesFilled = pullIntoDescriptor.bytesFilled;\n        var elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer: buffer, byteOffset: byteOffset, byteLength: byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        var elementSize = pullIntoDescriptor.elementSize;\n        var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n        var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n        var totalBytesToCopyRemaining = maxBytesToCopy;\n        var ready = false;\n        if (maxAlignedBytes > currentAlignedBytes) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        var queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            var headOfQueue = queue.peek();\n            var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            var pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n        var stream = controller._controlledReadableByteStream;\n        var elementSize = 1;\n        if (view.constructor !== DataView) {\n            elementSize = view.constructor.BYTES_PER_ELEMENT;\n        }\n        var ctor = view.constructor;\n        // try {\n        var buffer = TransferArrayBuffer(view.buffer);\n        // } catch (e) {\n        //   readIntoRequest._errorSteps(e);\n        //   return;\n        // }\n        var pullIntoDescriptor = {\n            buffer: buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset: view.byteOffset,\n            byteLength: view.byteLength,\n            bytesFilled: 0,\n            elementSize: elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            var emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        var stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            var remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        var firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        var state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        var descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        var stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        var desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        var stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            var firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled > 0) {\n                var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        var stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        var buffer = chunk.buffer;\n        var byteOffset = chunk.byteOffset;\n        var byteLength = chunk.byteLength;\n        var transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            var firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n        }\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        if (ReadableStreamHasDefaultReader(stream)) {\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        var stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            var firstDescriptor = controller._pendingPullIntos.peek();\n            var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            var byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        var state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        var firstDescriptor = controller._pendingPullIntos.peek();\n        var state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        var firstDescriptor = controller._pendingPullIntos.peek();\n        var state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        var startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), function () {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }, function (r) {\n            ReadableByteStreamControllerError(controller, r);\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        var controller = Object.create(ReadableByteStreamController.prototype);\n        var startAlgorithm = function () { return undefined; };\n        var pullAlgorithm = function () { return promiseResolvedWith(undefined); };\n        var cancelAlgorithm = function () { return promiseResolvedWith(undefined); };\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = function () { return underlyingByteSource.start(controller); };\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = function () { return underlyingByteSource.pull(controller); };\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = function (reason) { return underlyingByteSource.cancel(reason); };\n        }\n        var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(\"ReadableStreamBYOBRequest.prototype.\" + name + \" can only be used on a ReadableStreamBYOBRequest\");\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(\"ReadableByteStreamController.prototype.\" + name + \" can only be used on a ReadableByteStreamController\");\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        var reader = stream._reader;\n        var readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        var reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    var ReadableStreamBYOBReader = /** @class */ (function () {\n        function ReadableStreamBYOBReader(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, \"closed\", {\n            /**\n             * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n             * the reader's lock is released before the stream finishes closing.\n             */\n            get: function () {\n                if (!IsReadableStreamBYOBReader(this)) {\n                    return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n                }\n                return this._closedPromise;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        ReadableStreamBYOBReader.prototype.cancel = function (reason) {\n            if (reason === void 0) { reason = undefined; }\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        };\n        /**\n         * Attempts to reads bytes into view, and returns a promise resolved with the result.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        ReadableStreamBYOBReader.prototype.read = function (view) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(\"view's buffer must have non-zero byteLength\"));\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            var resolvePromise;\n            var rejectPromise;\n            var promise = newPromise(function (resolve, reject) {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            var readIntoRequest = {\n                _chunkSteps: function (chunk) { return resolvePromise({ value: chunk, done: false }); },\n                _closeSteps: function (chunk) { return resolvePromise({ value: chunk, done: true }); },\n                _errorSteps: function (e) { return rejectPromise(e); }\n            };\n            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n            return promise;\n        };\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        ReadableStreamBYOBReader.prototype.releaseLock = function () {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readIntoRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        };\n        return ReadableStreamBYOBReader;\n    }());\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n        var stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(\"ReadableStreamBYOBReader.prototype.\" + name + \" can only be used on a ReadableStreamBYOBReader\");\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        var highWaterMark = strategy.highWaterMark;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        var size = strategy.size;\n        if (!size) {\n            return function () { return 1; };\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        var highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        var size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, context + \" has member 'size' that\")\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return function (chunk) { return convertUnrestrictedDouble(fn(chunk)); };\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        var abort = original === null || original === void 0 ? void 0 : original.abort;\n        var close = original === null || original === void 0 ? void 0 : original.close;\n        var start = original === null || original === void 0 ? void 0 : original.start;\n        var type = original === null || original === void 0 ? void 0 : original.type;\n        var write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, context + \" has member 'abort' that\"),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, context + \" has member 'close' that\"),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, context + \" has member 'start' that\"),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, context + \" has member 'write' that\"),\n            type: type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return function (reason) { return promiseCall(fn, original, [reason]); };\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return function () { return promiseCall(fn, original, []); };\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return function (controller) { return reflectCall(fn, original, [controller]); };\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return function (chunk, controller) { return promiseCall(fn, original, [chunk, controller]); };\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(context + \" is not a WritableStream.\");\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    var supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    var WritableStream = /** @class */ (function () {\n        function WritableStream(rawUnderlyingSink, rawStrategy) {\n            if (rawUnderlyingSink === void 0) { rawUnderlyingSink = {}; }\n            if (rawStrategy === void 0) { rawStrategy = {}; }\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            var strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            var underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            var type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            var sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            var highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        Object.defineProperty(WritableStream.prototype, \"locked\", {\n            /**\n             * Returns whether or not the writable stream is locked to a writer.\n             */\n            get: function () {\n                if (!IsWritableStream(this)) {\n                    throw streamBrandCheckException$2('locked');\n                }\n                return IsWritableStreamLocked(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        WritableStream.prototype.abort = function (reason) {\n            if (reason === void 0) { reason = undefined; }\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        };\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        WritableStream.prototype.close = function () {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        };\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        WritableStream.prototype.getWriter = function () {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        };\n        return WritableStream;\n    }());\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        if (highWaterMark === void 0) { highWaterMark = 1; }\n        if (sizeAlgorithm === void 0) { sizeAlgorithm = function () { return 1; }; }\n        var stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        var controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        var state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        var wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        var promise = newPromise(function (resolve, reject) {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        var state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(\"The stream (in \" + state + \" state) is not in the writable state and cannot be closed\"));\n        }\n        var promise = newPromise(function (resolve, reject) {\n            var closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        var writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        var promise = newPromise(function (resolve, reject) {\n            var writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        var state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        var controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        var writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        var storedError = stream._storedError;\n        stream._writeRequests.forEach(function (writeRequest) {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        var abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        var promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, function () {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        }, function (reason) {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        var state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        var writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        var writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        var writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    var WritableStreamDefaultWriter = /** @class */ (function () {\n        function WritableStreamDefaultWriter(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            var state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                var storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, \"closed\", {\n            /**\n             * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n             * the writer’s lock is released before the stream finishes closing.\n             */\n            get: function () {\n                if (!IsWritableStreamDefaultWriter(this)) {\n                    return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n                }\n                return this._closedPromise;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, \"desiredSize\", {\n            /**\n             * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n             * A producer can use this information to determine the right amount of data to write.\n             *\n             * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n             * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n             * the writer’s lock is released.\n             */\n            get: function () {\n                if (!IsWritableStreamDefaultWriter(this)) {\n                    throw defaultWriterBrandCheckException('desiredSize');\n                }\n                if (this._ownerWritableStream === undefined) {\n                    throw defaultWriterLockException('desiredSize');\n                }\n                return WritableStreamDefaultWriterGetDesiredSize(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, \"ready\", {\n            /**\n             * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n             * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n             * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n             *\n             * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n             * rejected.\n             */\n            get: function () {\n                if (!IsWritableStreamDefaultWriter(this)) {\n                    return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n                }\n                return this._readyPromise;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        WritableStreamDefaultWriter.prototype.abort = function (reason) {\n            if (reason === void 0) { reason = undefined; }\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        };\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        WritableStreamDefaultWriter.prototype.close = function () {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            var stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        };\n        /**\n         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        WritableStreamDefaultWriter.prototype.releaseLock = function () {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            var stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        };\n        WritableStreamDefaultWriter.prototype.write = function (chunk) {\n            if (chunk === void 0) { chunk = undefined; }\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        };\n        return WritableStreamDefaultWriter;\n    }());\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        var stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        var stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        var stream = writer._ownerWritableStream;\n        var state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        var stream = writer._ownerWritableStream;\n        var state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        var stream = writer._ownerWritableStream;\n        var releasedError = new TypeError(\"Writer was released and can no longer be used to monitor the stream's closedness\");\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        var stream = writer._ownerWritableStream;\n        var controller = stream._writableStreamController;\n        var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        var state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        var promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    var closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    var WritableStreamDefaultController = /** @class */ (function () {\n        function WritableStreamDefaultController() {\n            throw new TypeError('Illegal constructor');\n        }\n        Object.defineProperty(WritableStreamDefaultController.prototype, \"abortReason\", {\n            /**\n             * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n             */\n            get: function () {\n                if (!IsWritableStreamDefaultController(this)) {\n                    throw defaultControllerBrandCheckException$2('abortReason');\n                }\n                return this._abortReason;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(WritableStreamDefaultController.prototype, \"signal\", {\n            /**\n             * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n             */\n            get: function () {\n                if (!IsWritableStreamDefaultController(this)) {\n                    throw defaultControllerBrandCheckException$2('signal');\n                }\n                if (this._abortController === undefined) {\n                    // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                    // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                    // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                    throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n                }\n                return this._abortController.signal;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        WritableStreamDefaultController.prototype.error = function (e) {\n            if (e === void 0) { e = undefined; }\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            var state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        };\n        /** @internal */\n        WritableStreamDefaultController.prototype[AbortSteps] = function (reason) {\n            var result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        };\n        /** @internal */\n        WritableStreamDefaultController.prototype[ErrorSteps] = function () {\n            ResetQueue(this);\n        };\n        return WritableStreamDefaultController;\n    }());\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        error: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        var startResult = startAlgorithm();\n        var startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, function () {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, function (r) {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        var controller = Object.create(WritableStreamDefaultController.prototype);\n        var startAlgorithm = function () { return undefined; };\n        var writeAlgorithm = function () { return promiseResolvedWith(undefined); };\n        var closeAlgorithm = function () { return promiseResolvedWith(undefined); };\n        var abortAlgorithm = function () { return promiseResolvedWith(undefined); };\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = function () { return underlyingSink.start(controller); };\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = function (chunk) { return underlyingSink.write(chunk, controller); };\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = function () { return underlyingSink.close(); };\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = function (reason) { return underlyingSink.abort(reason); };\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        var stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        var stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        var state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        var value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        var stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        var sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, function () {\n            WritableStreamFinishInFlightClose(stream);\n        }, function (reason) {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        var stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        var sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, function () {\n            WritableStreamFinishInFlightWrite(stream);\n            var state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, function (reason) {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        var stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(\"WritableStream.prototype.\" + name + \" can only be used on a WritableStream\");\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(\"WritableStreamDefaultController.prototype.\" + name + \" can only be used on a WritableStreamDefaultController\");\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(\"WritableStreamDefaultWriter.prototype.\" + name + \" can only be used on a WritableStreamDefaultWriter\");\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise(function (resolve, reject) {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise(function (resolve, reject) {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    var NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    function createDOMExceptionPolyfill() {\n        // eslint-disable-next-line no-shadow\n        var ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line no-redeclare\n    var DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        var reader = AcquireReadableStreamDefaultReader(source);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        var shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        var currentWrite = promiseResolvedWith(undefined);\n        return newPromise(function (resolve, reject) {\n            var abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = function () {\n                    var error = new DOMException$1('Aborted', 'AbortError');\n                    var actions = [];\n                    if (!preventAbort) {\n                        actions.push(function () {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(function () {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(function () { return Promise.all(actions.map(function (action) { return action(); })); }, true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise(function (resolveLoop, rejectLoop) {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, function () {\n                    return newPromise(function (resolveRead, rejectRead) {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: function (chunk) {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: function () { return resolveRead(true); },\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, function (storedError) {\n                if (!preventAbort) {\n                    shutdownWithAction(function () { return WritableStreamAbort(dest, storedError); }, true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n                if (!preventCancel) {\n                    shutdownWithAction(function () { return ReadableStreamCancel(source, storedError); }, true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, function () {\n                if (!preventClose) {\n                    shutdownWithAction(function () { return WritableStreamDefaultWriterCloseWithErrorPropagation(writer); });\n                }\n                else {\n                    shutdown();\n                }\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                var destClosed_1 = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(function () { return ReadableStreamCancel(source, destClosed_1); }, true, destClosed_1);\n                }\n                else {\n                    shutdown(true, destClosed_1);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                var oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, function () { return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined; });\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), function () { return finalize(originalIsError, originalError); }, function (newError) { return finalize(true, newError); });\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), function () { return finalize(isError, error); });\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    var ReadableStreamDefaultController = /** @class */ (function () {\n        function ReadableStreamDefaultController() {\n            throw new TypeError('Illegal constructor');\n        }\n        Object.defineProperty(ReadableStreamDefaultController.prototype, \"desiredSize\", {\n            /**\n             * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n             * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n             */\n            get: function () {\n                if (!IsReadableStreamDefaultController(this)) {\n                    throw defaultControllerBrandCheckException$1('desiredSize');\n                }\n                return ReadableStreamDefaultControllerGetDesiredSize(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        ReadableStreamDefaultController.prototype.close = function () {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        };\n        ReadableStreamDefaultController.prototype.enqueue = function (chunk) {\n            if (chunk === void 0) { chunk = undefined; }\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        };\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        ReadableStreamDefaultController.prototype.error = function (e) {\n            if (e === void 0) { e = undefined; }\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        };\n        /** @internal */\n        ReadableStreamDefaultController.prototype[CancelSteps] = function (reason) {\n            ResetQueue(this);\n            var result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        };\n        /** @internal */\n        ReadableStreamDefaultController.prototype[PullSteps] = function (readRequest) {\n            var stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                var chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        };\n        return ReadableStreamDefaultController;\n    }());\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        var pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, function () {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n        }, function (e) {\n            ReadableStreamDefaultControllerError(controller, e);\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        var stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        var stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        var stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            var chunkSize = void 0;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        var stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        var state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        var state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        var startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), function () {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }, function (r) {\n            ReadableStreamDefaultControllerError(controller, r);\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        var controller = Object.create(ReadableStreamDefaultController.prototype);\n        var startAlgorithm = function () { return undefined; };\n        var pullAlgorithm = function () { return promiseResolvedWith(undefined); };\n        var cancelAlgorithm = function () { return promiseResolvedWith(undefined); };\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = function () { return underlyingSource.start(controller); };\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = function () { return underlyingSource.pull(controller); };\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = function (reason) { return underlyingSource.cancel(reason); };\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(\"ReadableStreamDefaultController.prototype.\" + name + \" can only be used on a ReadableStreamDefaultController\");\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        var reader = AcquireReadableStreamDefaultReader(stream);\n        var reading = false;\n        var canceled1 = false;\n        var canceled2 = false;\n        var reason1;\n        var reason2;\n        var branch1;\n        var branch2;\n        var resolveCancelPromise;\n        var cancelPromise = newPromise(function (resolve) {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            var readRequest = {\n                _chunkSteps: function (chunk) {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(function () {\n                        reading = false;\n                        var chunk1 = chunk;\n                        var chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                    });\n                },\n                _closeSteps: function () {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: function () {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                var compositeReason = CreateArrayFromList([reason1, reason2]);\n                var cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                var compositeReason = CreateArrayFromList([reason1, reason2]);\n                var cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, function (r) {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        var reader = AcquireReadableStreamDefaultReader(stream);\n        var reading = false;\n        var canceled1 = false;\n        var canceled2 = false;\n        var reason1;\n        var reason2;\n        var branch1;\n        var branch2;\n        var resolveCancelPromise;\n        var cancelPromise = newPromise(function (resolve) {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, function (r) {\n                if (thisReader !== reader) {\n                    return;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            var readRequest = {\n                _chunkSteps: function (chunk) {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(function () {\n                        reading = false;\n                        var chunk1 = chunk;\n                        var chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                    });\n                },\n                _closeSteps: function () {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: function () {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            var byobBranch = forBranch2 ? branch2 : branch1;\n            var otherBranch = forBranch2 ? branch1 : branch2;\n            var readIntoRequest = {\n                _chunkSteps: function (chunk) {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(function () {\n                        reading = false;\n                        var byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        var otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            var clonedChunk = void 0;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                    });\n                },\n                _closeSteps: function (chunk) {\n                    reading = false;\n                    var byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    var otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: function () {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            var byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            var byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                var compositeReason = CreateArrayFromList([reason1, reason2]);\n                var cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                var compositeReason = CreateArrayFromList([reason1, reason2]);\n                var cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        var original = source;\n        var autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        var cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        var pull = original === null || original === void 0 ? void 0 : original.pull;\n        var start = original === null || original === void 0 ? void 0 : original.start;\n        var type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, context + \" has member 'autoAllocateChunkSize' that\"),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, context + \" has member 'cancel' that\"),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, context + \" has member 'pull' that\"),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, context + \" has member 'start' that\"),\n            type: type === undefined ? undefined : convertReadableStreamType(type, context + \" has member 'type' that\")\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return function (reason) { return promiseCall(fn, original, [reason]); };\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return function (controller) { return promiseCall(fn, original, [controller]); };\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return function (controller) { return reflectCall(fn, original, [controller]); };\n    }\n    function convertReadableStreamType(type, context) {\n        type = \"\" + type;\n        if (type !== 'bytes') {\n            throw new TypeError(context + \" '\" + type + \"' is not a valid enumeration value for ReadableStreamType\");\n        }\n        return type;\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        var mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, context + \" has member 'mode' that\")\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = \"\" + mode;\n        if (mode !== 'byob') {\n            throw new TypeError(context + \" '\" + mode + \"' is not a valid enumeration value for ReadableStreamReaderMode\");\n        }\n        return mode;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        var preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        var preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        var preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        var preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        var signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, context + \" has member 'signal' that\");\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal: signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(context + \" is not an AbortSignal.\");\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        var readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, context + \" has member 'readable' that\");\n        var writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, context + \" has member 'writable' that\");\n        return { readable: readable, writable: writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    var ReadableStream = /** @class */ (function () {\n        function ReadableStream(rawUnderlyingSource, rawStrategy) {\n            if (rawUnderlyingSource === void 0) { rawUnderlyingSource = {}; }\n            if (rawStrategy === void 0) { rawStrategy = {}; }\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            var strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            var underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                var highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                var sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                var highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        Object.defineProperty(ReadableStream.prototype, \"locked\", {\n            /**\n             * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n             */\n            get: function () {\n                if (!IsReadableStream(this)) {\n                    throw streamBrandCheckException$1('locked');\n                }\n                return IsReadableStreamLocked(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        ReadableStream.prototype.cancel = function (reason) {\n            if (reason === void 0) { reason = undefined; }\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        };\n        ReadableStream.prototype.getReader = function (rawOptions) {\n            if (rawOptions === void 0) { rawOptions = undefined; }\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            var options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        };\n        ReadableStream.prototype.pipeThrough = function (rawTransform, rawOptions) {\n            if (rawOptions === void 0) { rawOptions = {}; }\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            var transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            var options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            var promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        };\n        ReadableStream.prototype.pipeTo = function (destination, rawOptions) {\n            if (rawOptions === void 0) { rawOptions = {}; }\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(\"Parameter 1 is required in 'pipeTo'.\");\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(\"ReadableStream.prototype.pipeTo's first argument must be a WritableStream\"));\n            }\n            var options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        };\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        ReadableStream.prototype.tee = function () {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            var branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        };\n        ReadableStream.prototype.values = function (rawOptions) {\n            if (rawOptions === void 0) { rawOptions = undefined; }\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            var options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        };\n        return ReadableStream;\n    }());\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n            value: ReadableStream.prototype.values,\n            writable: true,\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        if (highWaterMark === void 0) { highWaterMark = 1; }\n        if (sizeAlgorithm === void 0) { sizeAlgorithm = function () { return 1; }; }\n        var stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        var controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        var stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        var controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        var reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            reader._readIntoRequests.forEach(function (readIntoRequest) {\n                readIntoRequest._closeSteps(undefined);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n        var sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        var reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(function (readRequest) {\n                readRequest._closeSteps();\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        var reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(function (readRequest) {\n                readRequest._errorSteps(e);\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n        else {\n            reader._readIntoRequests.forEach(function (readIntoRequest) {\n                readIntoRequest._errorSteps(e);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(\"ReadableStream.prototype.\" + name + \" can only be used on a ReadableStream\");\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        var highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    var byteLengthSizeFunction = function (chunk) {\n        return chunk.byteLength;\n    };\n    Object.defineProperty(byteLengthSizeFunction, 'name', {\n        value: 'size',\n        configurable: true\n    });\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    var ByteLengthQueuingStrategy = /** @class */ (function () {\n        function ByteLengthQueuingStrategy(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, \"highWaterMark\", {\n            /**\n             * Returns the high water mark provided to the constructor.\n             */\n            get: function () {\n                if (!IsByteLengthQueuingStrategy(this)) {\n                    throw byteLengthBrandCheckException('highWaterMark');\n                }\n                return this._byteLengthQueuingStrategyHighWaterMark;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, \"size\", {\n            /**\n             * Measures the size of `chunk` by returning the value of its `byteLength` property.\n             */\n            get: function () {\n                if (!IsByteLengthQueuingStrategy(this)) {\n                    throw byteLengthBrandCheckException('size');\n                }\n                return byteLengthSizeFunction;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return ByteLengthQueuingStrategy;\n    }());\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(\"ByteLengthQueuingStrategy.prototype.\" + name + \" can only be used on a ByteLengthQueuingStrategy\");\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    var countSizeFunction = function () {\n        return 1;\n    };\n    Object.defineProperty(countSizeFunction, 'name', {\n        value: 'size',\n        configurable: true\n    });\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    var CountQueuingStrategy = /** @class */ (function () {\n        function CountQueuingStrategy(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        Object.defineProperty(CountQueuingStrategy.prototype, \"highWaterMark\", {\n            /**\n             * Returns the high water mark provided to the constructor.\n             */\n            get: function () {\n                if (!IsCountQueuingStrategy(this)) {\n                    throw countBrandCheckException('highWaterMark');\n                }\n                return this._countQueuingStrategyHighWaterMark;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CountQueuingStrategy.prototype, \"size\", {\n            /**\n             * Measures the size of `chunk` by always returning 1.\n             * This ensures that the total queue size is a count of the number of chunks in the queue.\n             */\n            get: function () {\n                if (!IsCountQueuingStrategy(this)) {\n                    throw countBrandCheckException('size');\n                }\n                return countSizeFunction;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return CountQueuingStrategy;\n    }());\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(\"CountQueuingStrategy.prototype.\" + name + \" can only be used on a CountQueuingStrategy\");\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        var flush = original === null || original === void 0 ? void 0 : original.flush;\n        var readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        var start = original === null || original === void 0 ? void 0 : original.start;\n        var transform = original === null || original === void 0 ? void 0 : original.transform;\n        var writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, context + \" has member 'flush' that\"),\n            readableType: readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, context + \" has member 'start' that\"),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, context + \" has member 'transform' that\"),\n            writableType: writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return function (controller) { return promiseCall(fn, original, [controller]); };\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return function (controller) { return reflectCall(fn, original, [controller]); };\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return function (chunk, controller) { return promiseCall(fn, original, [chunk, controller]); };\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    var TransformStream = /** @class */ (function () {\n        function TransformStream(rawTransformer, rawWritableStrategy, rawReadableStrategy) {\n            if (rawTransformer === void 0) { rawTransformer = {}; }\n            if (rawWritableStrategy === void 0) { rawWritableStrategy = {}; }\n            if (rawReadableStrategy === void 0) { rawReadableStrategy = {}; }\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            var writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            var readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            var transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            var readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            var readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            var writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            var writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            var startPromise_resolve;\n            var startPromise = newPromise(function (resolve) {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        Object.defineProperty(TransformStream.prototype, \"readable\", {\n            /**\n             * The readable side of the transform stream.\n             */\n            get: function () {\n                if (!IsTransformStream(this)) {\n                    throw streamBrandCheckException('readable');\n                }\n                return this._readable;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(TransformStream.prototype, \"writable\", {\n            /**\n             * The writable side of the transform stream.\n             */\n            get: function () {\n                if (!IsTransformStream(this)) {\n                    throw streamBrandCheckException('writable');\n                }\n                return this._writable;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return TransformStream;\n    }());\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n            return promiseResolvedWith(undefined);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(function (resolve) {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    var TransformStreamDefaultController = /** @class */ (function () {\n        function TransformStreamDefaultController() {\n            throw new TypeError('Illegal constructor');\n        }\n        Object.defineProperty(TransformStreamDefaultController.prototype, \"desiredSize\", {\n            /**\n             * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n             */\n            get: function () {\n                if (!IsTransformStreamDefaultController(this)) {\n                    throw defaultControllerBrandCheckException('desiredSize');\n                }\n                var readableController = this._controlledTransformStream._readable._readableStreamController;\n                return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        TransformStreamDefaultController.prototype.enqueue = function (chunk) {\n            if (chunk === void 0) { chunk = undefined; }\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        };\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        TransformStreamDefaultController.prototype.error = function (reason) {\n            if (reason === void 0) { reason = undefined; }\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        };\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        TransformStreamDefaultController.prototype.terminate = function () {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        };\n        return TransformStreamDefaultController;\n    }());\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        var controller = Object.create(TransformStreamDefaultController.prototype);\n        var transformAlgorithm = function (chunk) {\n            try {\n                TransformStreamDefaultControllerEnqueue(controller, chunk);\n                return promiseResolvedWith(undefined);\n            }\n            catch (transformResultE) {\n                return promiseRejectedWith(transformResultE);\n            }\n        };\n        var flushAlgorithm = function () { return promiseResolvedWith(undefined); };\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = function (chunk) { return transformer.transform(chunk, controller); };\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = function () { return transformer.flush(controller); };\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        var stream = controller._controlledTransformStream;\n        var readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        var backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        var transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, function (r) {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        var stream = controller._controlledTransformStream;\n        var readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        var error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        var controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            var backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, function () {\n                var writable = stream._writable;\n                var state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n        // errored.\n        TransformStreamError(stream, reason);\n        return promiseResolvedWith(undefined);\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        var readable = stream._readable;\n        var controller = stream._transformStreamController;\n        var flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        // Return a promise that is fulfilled with undefined on success.\n        return transformPromiseWith(flushPromise, function () {\n            if (readable._state === 'errored') {\n                throw readable._storedError;\n            }\n            ReadableStreamDefaultControllerClose(readable._readableStreamController);\n        }, function (r) {\n            TransformStreamError(stream, r);\n            throw readable._storedError;\n        });\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(\"TransformStreamDefaultController.prototype.\" + name + \" can only be used on a TransformStreamDefaultController\");\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(\"TransformStream.prototype.\" + name + \" can only be used on a TransformStream\");\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ponyfill.js.map\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static get idCounters() {\n    return shadow(this, \"idCounters\", { doc: 0 });\n  }\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (\n        typeof value === \"function\" ||\n        typeof value === \"symbol\" ||\n        value instanceof URL\n      ) {\n        throw new Error(\n          `LoopbackPort.postMessage - cannot clone: ${value?.toString()}`\n        );\n      }\n\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      if (value instanceof Map) {\n        result = new Map();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const [key, val] of value) {\n          result.set(key, cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof Set) {\n        result = new Set();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const val of value) {\n          result.add(cloneValue(val));\n        }\n        return result;\n      }\n      result = Array.isArray(value) ? [] : Object.create(null);\n      cloned.set(value, result); // Adding to cache now for cyclic references.\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\" && !value.hasOwnProperty?.(i)) {\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    const cloned = new WeakMap();\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static get _workerPorts() {\n    return shadow(this, \"_workerPorts\", new WeakMap());\n  }\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker._workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.postMessageTransfers = true;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker._workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            // supportTypedArray\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n            if (!data.supportTransfers) {\n              this.postMessageTransfers = false;\n            }\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n          // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n          // typed array. Also, checking if we can use transfers.\n          try {\n            messageHandler.send(\"test\", testObj, [testObj.buffer]);\n          } catch (ex) {\n            warn(\"Cannot use postMessage transfers.\");\n            testObj[0] = 0;\n            messageHandler.send(\"test\", testObj);\n          }\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker._workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this._workerPorts.has(params.port)) {\n      return this._workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: params.cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let lastModified = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        lastModified = this.annotationStorage.lastModified;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${lastModified}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.pageCache) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    }\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      ref,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static get canvasInUse() {\n    return shadow(this, \"canvasInUse\", new WeakSet());\n  }\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background } =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._timeStamp = Date.now();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    return this._storage.get(key) ?? defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._timeStamp = Date.now();\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get lastModified() {\n    return this._timeStamp.toString();\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPattern, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// This value comes from sampling a few PDFs that re-use patterns, there doesn't\n// seem to be any that benefit from caching more than 2 patterns.\nconst MAX_CACHED_CANVAS_PATTERNS = 2;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and shedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\n/**\n * Least recently used cache implemented with a JS Map. JS Map keys are ordered\n * by last insertion.\n */\nclass LRUCache {\n  constructor(maxSize = 0) {\n    this._cache = new Map();\n    this._maxSize = maxSize;\n  }\n\n  has(key) {\n    return this._cache.has(key);\n  }\n\n  get(key) {\n    if (this._cache.has(key)) {\n      // Delete and set the value so it's moved to the end of the map iteration.\n      const value = this._cache.get(key);\n      this._cache.delete(key);\n      this._cache.set(key, value);\n    }\n    return this._cache.get(key);\n  }\n\n  set(key, value) {\n    if (this._maxSize <= 0) {\n      return;\n    }\n    if (this._cache.size + 1 > this._maxSize) {\n      // Delete the least recently used.\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  clear() {\n    this._cache.clear();\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n    let destPos = 3; // alpha component offset\n    for (let j = 0; j < thisChunkHeight; j++) {\n      let elem,\n        mask = 0;\n      for (let k = 0; k < width; k++) {\n        if (!mask) {\n          elem = src[srcPos++];\n          mask = 128;\n        }\n        dest[destPos] = elem & mask ? 0 : 255;\n        destPos += 4;\n        mask >>= 1;\n      }\n    }\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = \"#000000\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n    const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    maskCtx.putImageData(layerData, 0, row);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx) {\n  const mask = smask.canvas;\n  const maskCtx = smask.context;\n\n  ctx.setTransform(\n    smask.scaleX,\n    0,\n    0,\n    smask.scaleY,\n    smask.offsetX,\n    smask.offsetY\n  );\n\n  genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    mask.width,\n    mask.height,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap\n  );\n  ctx.drawImage(mask, 0, 0);\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedCanvasPatterns = new LRUCache(MAX_CACHED_CANVAS_PATTERNS);\n    this.cachedPatterns = new Map();\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    this.ctx.save();\n    this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n    this._combinedScaleFactor = Math.hypot(\n      this.baseTransform[0],\n      this.baseTransform[2]\n    );\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.current.activeSMask !== null) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedCanvasPatterns.clear();\n    this.cachedPatterns.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const maskCanvas = this.cachedCanvases.getCanvas(\n      \"maskCanvas\",\n      width,\n      height\n    );\n    const maskCtx = maskCanvas.context;\n    putBinaryImageMask(maskCtx, img);\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n    const objToCanvas = ctx.mozCurrentTransform;\n    let maskToCanvas = Util.transform(objToCanvas, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.ceil(rect[2] - rect[0]);\n    const drawnHeight = Math.ceil(rect[3] - rect[1]);\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const fillCtx = fillCanvas.context;\n    // The offset will be the top-left cordinate mask.\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n    // Pre-scale if needed to improve image smoothing.\n    const scaled = this._scaleImage(\n      maskCanvas.canvas,\n      fillCtx.mozCurrentTransformInverse\n    );\n    fillCtx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.img.width,\n      scaled.img.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, false)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          if (this.current.activeSMask) {\n            // If SMask is currrenly used, it needs to be suspended or\n            // finished. Suspend only makes sense when at least one save()\n            // was performed and state needs to be reverted on restore().\n            if (\n              this.stateStack.length > 0 &&\n              this.stateStack[this.stateStack.length - 1].activeSMask ===\n                this.current.activeSMask\n            ) {\n              this.suspendSMaskGroup();\n            } else {\n              this.endSMaskGroup();\n            }\n          }\n          this.current.activeSMask = value ? this.tempSMask : null;\n          if (this.current.activeSMask) {\n            this.beginSMaskGroup();\n          }\n          this.tempSMask = null;\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  beginSMaskGroup() {\n    const activeSMask = this.current.activeSMask;\n    const drawnWidth = activeSMask.canvas.width;\n    const drawnHeight = activeSMask.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n\n    const currentCtx = this.ctx;\n    const currentTransform = currentCtx.mozCurrentTransform;\n    this.ctx.save();\n\n    const groupCtx = scratchCanvas.context;\n    groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n    groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  suspendSMaskGroup() {\n    // Similar to endSMaskGroup, the intermediate canvas has to be composed\n    // and future ctx state restored.\n    const groupCtx = this.ctx;\n    this.groupLevel--;\n    this.ctx = this.groupStack.pop();\n\n    composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n    this.ctx.restore();\n    this.ctx.save(); // save is needed since SMask will be resumed.\n    copyCtxState(groupCtx, this.ctx);\n\n    // Saving state for resuming.\n    this.current.resumeSMaskCtx = groupCtx;\n    // Transform was changed in the SMask canvas, reflecting this change on\n    // this.ctx.\n    const deltaTransform = Util.transform(\n      this.current.activeSMask.startTransformInverse,\n      groupCtx.mozCurrentTransform\n    );\n    this.ctx.transform.apply(this.ctx, deltaTransform);\n\n    // SMask was composed, the results at the groupCtx can be cleared.\n    groupCtx.save();\n    groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n    groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n    groupCtx.restore();\n  }\n\n  resumeSMaskGroup() {\n    // Resuming state saved by suspendSMaskGroup. We don't need to restore\n    // any groupCtx state since restore() command (the only caller) will do\n    // that for us. See also beginSMaskGroup.\n    const groupCtx = this.current.resumeSMaskCtx;\n    const currentCtx = this.ctx;\n    this.ctx = groupCtx;\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endSMaskGroup() {\n    const groupCtx = this.ctx;\n    this.groupLevel--;\n    this.ctx = this.groupStack.pop();\n\n    composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n    this.ctx.restore();\n    copyCtxState(groupCtx, this.ctx);\n    // Transform was changed in the SMask canvas, reflecting this change on\n    // this.ctx.\n    const deltaTransform = Util.transform(\n      this.current.activeSMask.startTransformInverse,\n      groupCtx.mozCurrentTransform\n    );\n    this.ctx.transform.apply(this.ctx, deltaTransform);\n  }\n\n  save() {\n    this.ctx.save();\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n    this.current.resumeSMaskCtx = null;\n  }\n\n  restore() {\n    // SMask was suspended, we just need to resume it.\n    if (this.current.resumeSMaskCtx) {\n      this.resumeSMaskGroup();\n    }\n    // SMask has to be finished once there is no states that are using the\n    // same SMask.\n    if (\n      this.current.activeSMask !== null &&\n      (this.stateStack.length === 0 ||\n        this.stateStack[this.stateStack.length - 1].activeSMask !==\n          this.current.activeSMask)\n    ) {\n      this.endSMaskGroup();\n    }\n\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      this.ctx.restore();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedGetSinglePixelWidth = null;\n    } else {\n      // We've finished all the SMask groups, reflect that in our state.\n      this.current.activeSMask = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          break;\n        case OPS.curveTo:\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const lineWidth = this.getSinglePixelWidth();\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse\n        );\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        const lineWidth = this.getSinglePixelWidth();\n        if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n          // The current transform will transform a square pixel into a\n          // parallelogram where both heights are lower than 1 and not equal.\n          ctx.save();\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n        }\n      }\n    }\n    if (consumePath) {\n      this.consumePath();\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse\n      );\n      needRestore = true;\n    }\n\n    if (this.contentVisible) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath();\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.save();\n          ctx.moveTo(x, y);\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.strokeText(character, 0, 0);\n          ctx.restore();\n        } else {\n          ctx.strokeText(character, x, y);\n        }\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    let patternTransform;\n    if (current.patternFill) {\n      // TODO: Patterns are not applied correctly to text if a non-embedded\n      // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let lineWidth = current.lineWidth;\n    let resetLineWidthToOne = false;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        this._cachedGetSinglePixelWidth = null;\n        lineWidth = this.getSinglePixelWidth();\n        resetLineWidthToOne = lineWidth < 0;\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (isNum(glyph)) {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(\n            character,\n            scaledX,\n            scaledY,\n            patternTransform,\n            resetLineWidthToOne\n          );\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (isNum(glyph)) {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(\n        this.objs.get(objId),\n        this.cachedCanvasPatterns\n      );\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      true\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n\n    // Resetting mask state, masks will be applied on restore of the group.\n    this.current.activeSMask = null;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    this.ctx = this.groupStack.pop();\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    if (this.ctx.imageSmoothingEnabled !== undefined) {\n      this.ctx.imageSmoothingEnabled = false;\n    } else {\n      this.ctx.mozImageSmoothingEnabled = false;\n    }\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n    } else {\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n    }\n    this.restore();\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix) {\n    this.save();\n    resetCtxToDefault(this.ctx);\n    this.current = new CanvasExtraState();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n      this.ctx.rect(rect[0], rect[1], width, height);\n      this.clip();\n      this.endPath();\n    }\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n\n    const glyph = this.processingType3;\n\n    if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n      if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n        glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n      } else {\n        glyph.compiled = null;\n      }\n    }\n\n    if (glyph?.compiled) {\n      glyph.compiled(ctx);\n      return;\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n  }\n\n  paintImageMaskXObjectRepeat(\n    imgData,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(imgData);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            false\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: width / ctx.mozCurrentTransformInverse[0],\n        height: height / ctx.mozCurrentTransformInverse[3],\n      });\n    }\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath() {\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (this.pendingClip === EO_CLIP) {\n        ctx.clip(\"evenodd\");\n      } else {\n        ctx.clip();\n      }\n      this.pendingClip = null;\n    }\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (this._cachedGetSinglePixelWidth === null) {\n      // If transform is [a b] then a pixel (square) is transformed\n      //                 [c d]\n      // into a parallelogram: its area is the abs value of the determinant.\n      // This parallelogram has 2 heights:\n      //  - Area / |col_1|;\n      //  - Area / |col_2|.\n      // so in order to get a height of at least 1, pixel height\n      // must be computed as followed:\n      //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n      // This is equivalent to:\n      //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n      const m = this.ctx.mozCurrentTransform;\n\n      const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n      const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n      const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n      const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n      if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n        // The parallelogram isn't a square and at least one height\n        // is lower than 1 so the resulting line width must be 1\n        // but it cannot be achieved with one scale: when scaling a pixel\n        // we'll get a rectangle (see issue #12295).\n        // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n        // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n        // then we'll get a rectangle 1x1e5 which is wrong.\n        // In this case, we must reset the transform, set linewidth to 1\n        // and then stroke.\n        this._cachedGetSinglePixelWidth = -(\n          this._combinedScaleFactor * pixelHeight\n        );\n      } else if (absDet > Number.EPSILON) {\n        this._cachedGetSinglePixelWidth = pixelHeight;\n      } else {\n        // Matrix is non-invertible.\n        this._cachedGetSinglePixelWidth = 1;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR, cachedCanvasPatterns) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n    this.cachedCanvasPatterns = cachedCanvasPatterns;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    let pattern;\n    if (!shadingFill) {\n      if (this.cachedCanvasPatterns.has(this)) {\n        pattern = this.cachedCanvasPatterns.get(this);\n      } else {\n        const tmpCanvas = owner.cachedCanvases.getCanvas(\n          \"pattern\",\n          owner.ctx.canvas.width,\n          owner.ctx.canvas.height,\n          true\n        );\n\n        const tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n        tmpCtx.beginPath();\n        tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n\n        tmpCtx.setTransform.apply(tmpCtx, owner.baseTransform);\n        if (this.matrix) {\n          tmpCtx.transform.apply(tmpCtx, this.matrix);\n        }\n        applyBoundingBox(tmpCtx, this._bbox);\n\n        tmpCtx.fillStyle = this._createGradient(tmpCtx);\n        tmpCtx.fill();\n\n        pattern = ctx.createPattern(tmpCanvas.canvas, \"repeat\");\n        this.cachedCanvasPatterns.set(this, pattern);\n      }\n    } else {\n      // Don't bother caching gradients, they are quick to rebuild.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    if (!shadingFill) {\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (shadingFill) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      shadingFill ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (!shadingFill) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR, cachedCanvasPatterns) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR, cachedCanvasPatterns);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (!shadingFill) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  warn,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      throw new Error(\n        'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n      );\n    }\n    warn('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n    return reason;\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  constructor({ parsedData, rawData }) {\n    this._metadataMap = parsedData;\n    this._data = rawData;\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of document.getElementsByName(base.name)) {\n      if (element !== base) {\n        element[key] = value;\n        const data = Object.create(null);\n        data[keyInStorage] = value;\n        storage.setValue(element.getAttribute(\"id\"), data);\n      }\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value:\n        data.fieldValue &&\n        ((data.exportValue && data.exportValue === data.fieldValue) ||\n          (!data.exportValue && data.fieldValue !== \"Off\")),\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", function (event) {\n      const name = event.target.name;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked = false;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, { value: event.target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", function (event) {\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          storage.setValue(radio.getAttribute(\"id\"), { value: false });\n        }\n      }\n      storage.setValue(id, { value: target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              radio.checked = radioId === id && checked;\n              storage.setValue(radioId, { value: radio.checked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    storage.getValue(id, {\n      value:\n        this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    });\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const options = selectElement.options;\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            Array.prototype.forEach.call(options, option => {\n              option.selected = values.has(option.value);\n            });\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            const options = event.target.options;\n            Array.prototype.forEach.call(options, (option, i) => {\n              option.selected = indices.has(i);\n            });\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, { value: exportValue });\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(event) });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          element.style.transform = transform;\n        }\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    originalTransform: null,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    scale: 1,\n  };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n      if (width > 0) {\n        textDivProperties.scale = textDivProperties.canvasWidth / width;\n        transform = `scaleX(${textDivProperties.scale})`;\n      }\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { XfaText } from \"./xfa_text.js\";\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes(html, element, storage, intent) {\n    const { attributes } = element;\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          html.setAttribute(key, value.join(\" \"));\n        } else {\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const root = parameters.xfa;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes(rootHtml, root);\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    rootDiv.style.transform = transform;\n\n    // Set defaults.\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes(childHtml, child, storage, intent);\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(exception);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__w_pdfjs_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  getXfaPageViewport,\n  // From \"./shared/util.js\":\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"],"names":["DEFAULT_LINK_REL","SVG_NS","constructor","ownerDocument","globalThis","_createCanvas","canvas","asTypedArray","isValidFetchUrl","document","response","fetch","stringToBytes","request","XMLHttpRequest","data","resolve","reject","_fetchData","cMapData","compressionType","fetchData","_createSVG","offsetX","offsetY","dontFlip","centerX","viewBox","centerY","rotation","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","Math","offsetCanvasY","width","height","clone","scale","convertToViewportPoint","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","enabled","assert","url","urlNullRemoved","removeNullCharacters","link","targetStr","ii","i","anchor","query","end","defaultFilename","isDataScheme","warn","reURI","reFilename","splitURI","suggestedFilename","decodeURIComponent","Object","time","name","Date","timeEnd","start","toString","outBuf","longest","duration","baseUrl","protocol","removeScriptElement","script","console","isString","pdfDateStringRegex","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","xfaPage","module","require","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","value","enumerable","configurable","writable","obj","define","protoGenerator","outerFn","generator","context","tryLocsList","makeInvokeMethod","exports","type","arg","fn","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","ctor","genFun","__await","record","tryCatch","result","invoke","previousPromise","callInvokeWithMethodAndArg","defineIteratorMethods","AsyncIterator","PromiseImpl","iter","wrap","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","done","info","entry","tryLoc","locs","keys","key","next","iteratorMethod","iterable","isNaN","Context","reset","stop","rootEntry","rootRecord","dispatchException","handle","hasCatch","hasFinally","abrupt","finallyEntry","complete","finish","resetTryEntry","thrown","delegateYield","iterator","resultName","nextLoc","regeneratorRuntime","Function","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","RenderingIntentFlag","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","Number","unreachable","base","other","absoluteUrl","_isValidProtocol","BaseException","NullCharactersRegExp","str","bytes","length","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","arr","resultLength","arrayByteLength","pos","item","itemLength","buffer8","view32","IsLittleEndianCached","shadow","isLittleEndian","IsEvalSupportedCached","isEvalSupported","hexNumbers","Array","n","m1","m2","xt","p","m","yt","d","p1","Util","p2","r","p3","p4","v","transpose","a","b","c","first","sx","sy","orderedX","rect1","rect2","orderedY","PDFStringTranslateTable","code","match","buf","char","escape","unescape","encodeURIComponent","arr1","arr2","date","buffer","capability","isSettled","get","contentType","forceDataSchema","URL","digits","b1","b2","b3","d1","d2","d3","d4","Buffer","isNodeJS","process","$","global","getOwnPropertyDescriptor","createNonEnumerableProperty","redefine","setGlobal","copyConstructorProperties","isForced","TARGET","options","GLOBAL","STATIC","target","sourceProperty","source","descriptor","targetProperty","FORCED","check","it","DESCRIPTORS","propertyIsEnumerableModule","createPropertyDescriptor","toIndexedObject","toPropertyKey","has","IE8_DOM_DEFINE","$getOwnPropertyDescriptor","P","fails","exec","$propertyIsEnumerable","NASHORN_BUG","IndexedObject","requireObjectCoercible","classof","split","TypeError","toPrimitive","isSymbol","isObject","ordinaryToPrimitive","wellKnownSymbol","TO_PRIMITIVE","exoticToPrim","input","pref","getBuiltIn","USE_SYMBOL_AS_UID","aFunction","arguments","NATIVE_SYMBOL","Symbol","V8_VERSION","symbol","userAgent","Deno","versions","v8","version","val","shared","uid","WellKnownSymbolsStore","createWellKnownSymbol","IS_PURE","store","mode","copyright","SHARED","toObject","hasOwnProperty","id","postfix","createElement","EXISTS","definePropertyModule","object","anObject","$defineProperty","Attributes","inspectSource","InternalStateModule","getInternalState","enforceInternalState","TEMPLATE","unsafe","simple","noTargetGet","functionToString","NATIVE_WEAK_MAP","objectHas","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","enforce","set","getterFor","wmget","wmhas","wmset","metadata","STATE","ownKeys","getOwnPropertyDescriptorModule","defineProperty","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","getOwnPropertySymbols","internalObjectKeys","enumBugKeys","indexOf","names","toLength","toAbsoluteIndex","createMethod","index","IS_INCLUDES","el","includes","toInteger","min","argument","ceil","floor","max","integer","replacement","normalize","NATIVE","POLYFILL","factory","CSSMatrix","args","len","prototypeAccessors","isIdentity","is2D","CSSMatrixProto","radX","rx","radY","ry","radZ","rz","cosx","sinx","cosy","siny","cosz","sinz","cycz","cysz","sxsy","cxcz","radA","angle","sinA","cosA","sinA2","x","y","z","Y","Z","x2","y2","z2","m11","m12","m21","m22","t","m13","m14","m23","m24","m31","m32","m33","m34","m41","m42","m43","m44","m11$1","m12$1","m21$1","m22$1","m14$1","m24$1","feedFromArray","string","Multiply","Translate","Scale","RX","RY","RZ","Rotate","RotateAxisAngle","SkewX","SkewY","identity","M","w","path","addToUnscopables","Iterators","defineIterator","ARRAY_ITERATOR","setInternalState","kind","create","UNSCOPABLES","ArrayPrototype","defineProperties","html","documentCreateElement","GT","LT","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","NullProtoObjectViaActiveX","activeXDocument","temp","NullProtoObjectViaIFrame","iframe","JS","iframeDocument","NullProtoObject","Properties","objectKeys","createIteratorConstructor","getPrototypeOf","setPrototypeOf","setToStringTag","IteratorsCore","BUGGY_SAFARI_ITERATORS","ITERATOR","KEYS","VALUES","ENTRIES","returnThis","getIterationMethod","KIND","IterablePrototype","TO_STRING_TAG","NAME","INCORRECT_VALUES_NAME","Iterable","nativeIterator","DEFAULT","defaultIterator","anyNativeIterator","CurrentIteratorPrototype","methods","IS_SET","entries","proto","forced","IteratorConstructor","arrayIterator","PrototypeOfArrayIteratorPrototype","NEW_ITERATOR_PROTOTYPE","test","CORRECT_PROTOTYPE_GETTER","ObjectPrototype","aPossiblePrototype","CORRECT_SETTER","setter","iterate","createProperty","stat","fromEntries","AS_ENTRIES","isArrayIteratorMethod","bind","getIterator","getIteratorMethod","iteratorClose","Result","that","IS_ITERATOR","INTERRUPTED","callFn","iterFn","step","TO_STRING_TAG_SUPPORT","classofRaw","CORRECT_ARGUMENTS","tryGet","innerResult","innerError","propertyKey","$AggregateError","message","errorsArray","Error","AggregateError","NativePromise","redefineAll","setSpecies","anInstance","checkCorrectnessOfIteration","speciesConstructor","task","microtask","promiseResolve","hostReportErrors","newPromiseCapabilityModule","perform","IS_BROWSER","IS_NODE","SPECIES","PROMISE","getInternalPromiseState","NativePromisePrototype","PromiseConstructor","PromiseConstructorPrototype","newPromiseCapability","newGenericPromiseCapability","DISPATCH_EVENT","NATIVE_REJECTION_EVENT","UNHANDLED_REJECTION","REJECTION_HANDLED","PENDING","FULFILLED","HANDLED","UNHANDLED","SUBCLASSING","PROMISE_CONSTRUCTOR_SOURCE","GLOBAL_CORE_JS_PROMISE","promise","FakePromise","INCORRECT_ITERATION","isThenable","notify","chain","ok","reaction","handler","domain","onHandleUnhandled","exited","then","isReject","onUnhandled","dispatchEvent","event","reason","IS_UNHANDLED","isUnhandled","internalReject","internalResolve","wrapper","Internal","executor","notified","parent","reactions","rejection","OwnPromiseCapability","nativeThen","Promise","PromiseWrapper","all","$promiseResolve","counter","remaining","alreadyCalled","race","src","Constructor","SAFE_CLOSING","called","iteratorWithReturn","ITERATION_SUPPORT","IS_IOS","clear","MessageChannel","Dispatch","queue","ONREADYSTATECHANGE","location","run","runner","listener","post","argumentsLength","defer","channel","port","setTimeout","macrotask","IS_IOS_PEBBLE","IS_WEBOS_WEBKIT","MutationObserver","queueMicrotaskDescriptor","queueMicrotask","flush","head","last","toggle","node","characterData","promiseCapability","PromiseCapability","error","allSettled","status","PROMISE_ANY_ERROR","any","errors","alreadyResolved","alreadyRejected","NON_GENERIC","real","isFunction","onFinally","charAt","STRING_ITERATOR","point","S","position","size","CONVERT_TO_STRING","codeAt","SymbolPolyfill","globals","getGlobals","rethrowAssertionErrorRejection","originalPromise","originalPromiseThen","originalPromiseResolve","originalPromiseReject","PerformPromiseThen","uponPromise","globalQueueMicrotask","resolvedPromise","promiseResolvedWith","reflectCall","promiseRejectedWith","QUEUE_MAX_ARRAY_SIZE","SimpleQueue","_elements","_next","oldBack","newBack","oldFront","newFront","oldCursor","newCursor","elements","element","callback","front","cursor","reader","stream","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","ReadableStreamCancel","defaultReaderClosedPromiseReject","defaultReaderClosedPromiseResetToRejected","defaultReaderClosedPromiseResolve","setPromiseIsHandledToTrue","AbortSteps","ErrorSteps","CancelSteps","PullSteps","NumberIsFinite","isFinite","MathTrunc","isDictionary","field","censorNegativeZero","lowerBound","upperBound","integerPart","IsReadableStream","readRequest","IsReadableStreamDefaultReader","ReadableStreamDefaultReader","assertRequiredArgument","assertReadableStream","IsReadableStreamLocked","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","readerLockException","ReadableStreamReaderGenericCancel","resolvePromise","rejectPromise","_chunkSteps","_closeSteps","_errorSteps","ReadableStreamDefaultReaderRead","ReadableStreamReaderGenericRelease","cancel","read","releaseLock","closed","typeIsObject","AsyncIteratorPrototype","_a","ReadableStreamAsyncIteratorImpl","_this","nextSteps","transformPromiseWith","returnSteps","ReadableStreamAsyncIteratorPrototype","IsReadableStreamAsyncIterator","streamAsyncIteratorBrandCheckException","return","AcquireReadableStreamDefaultReader","impl","NumberIsNaN","slice","CopyDataBlockBytes","ArrayBufferSlice","pair","container","IsNonNegativeNumber","ReadableStreamBYOBRequest","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","bytesWritten","convertUnsignedLongLongWithEnforceRange","IsDetachedBuffer","ReadableByteStreamControllerRespond","ArrayBuffer","view","ReadableByteStreamControllerRespondWithNewView","respond","respondWithNewView","ReadableByteStreamController","IsReadableByteStreamController","byteStreamControllerBrandCheckException","ReadableByteStreamControllerGetBYOBRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerClose","ReadableByteStreamControllerEnqueue","e","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","ResetQueue","ReadableByteStreamControllerClearAlgorithms","ReadableByteStreamControllerHandleQueueDrain","autoAllocateChunkSize","pullIntoDescriptor","bufferByteLength","byteOffset","byteLength","bytesFilled","elementSize","viewConstructor","readerType","ReadableStreamAddReadRequest","ReadableByteStreamControllerCallPullIfNeeded","close","enqueue","byobRequest","desiredSize","shouldPull","ReadableByteStreamControllerShouldCallPull","controller","pullPromise","ReadableByteStreamControllerInvalidateBYOBRequest","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableStreamFulfillReadRequest","ReadableStreamFulfillReadIntoRequest","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","ready","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableStreamClose","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerCommitPullIntoDescriptor","TransferArrayBuffer","ReadableStreamAddReadIntoRequest","emptyView","readIntoRequest","ReadableStreamHasBYOBReader","ReadableStreamGetNumReadIntoRequests","remainderSize","remainder","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","firstDescriptor","ReadableByteStreamControllerRespondInClosedState","ReadableByteStreamControllerRespondInReadableState","ReadableStreamHasDefaultReader","ReadableStreamGetNumReadRequests","firstPendingPullInto","transferredBuffer","transferredView","ReadableStreamError","SetUpReadableStreamBYOBRequest","ReadableByteStreamControllerRespondInternal","startResult","startAlgorithm","pullAlgorithm","cancelAlgorithm","underlyingByteSource","SetUpReadableByteStreamController","IsReadableStreamBYOBReader","ReadableStreamBYOBReader","byobReaderBrandCheckException","ReadableStreamBYOBReaderRead","ReadableByteStreamControllerPullInto","highWaterMark","strategy","assertDictionary","init","convertUnrestrictedDouble","convertQueuingStrategySize","assertFunction","abort","original","write","convertUnderlyingSinkAbortCallback","convertUnderlyingSinkCloseCallback","convertUnderlyingSinkStartCallback","convertUnderlyingSinkWriteCallback","promiseCall","IsWritableStream","supportsAbortController","WritableStream","rawUnderlyingSink","rawStrategy","assertObject","convertQueuingStrategy","underlyingSink","convertUnderlyingSink","InitializeWritableStream","sizeAlgorithm","ExtractSizeAlgorithm","ExtractHighWaterMark","SetUpWritableStreamDefaultControllerFromUnderlyingSink","streamBrandCheckException$2","IsWritableStreamLocked","WritableStreamAbort","WritableStreamCloseQueuedOrInFlight","WritableStreamClose","AcquireWritableStreamDefaultWriter","getWriter","locked","WritableStreamDefaultController","SetUpWritableStreamDefaultController","wasAlreadyErroring","_promise","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","closeRequest","writer","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerClose","writeRequest","WritableStreamFinishErroring","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","storedError","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","WritableStreamDealWithRejection","defaultWriterClosedPromiseResolve","defaultWriterClosedPromiseReject","backpressure","defaultWriterReadyPromiseReset","WritableStreamDefaultWriter","assertWritableStream","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterGetDesiredSize","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","defaultWriterClosedPromiseResetToRejected","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultControllerGetDesiredSize","releasedError","WritableStreamDefaultWriterEnsureClosedPromiseRejected","chunkSize","WritableStreamDefaultControllerGetChunkSize","WritableStreamAddWriteRequest","WritableStreamDefaultControllerWrite","closeSentinel","IsWritableStreamDefaultController","defaultControllerBrandCheckException$2","WritableStreamDefaultControllerError","WritableStreamDefaultControllerClearAlgorithms","createAbortController","WritableStreamDefaultControllerGetBackpressure","WritableStreamUpdateBackpressure","startPromise","WritableStreamDefaultControllerAdvanceQueueIfNeeded","writeAlgorithm","closeAlgorithm","abortAlgorithm","EnqueueValueWithSize","WritableStreamDefaultControllerErrorIfNeeded","PeekQueueValue","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","WritableStreamMarkCloseRequestInFlight","DequeueValue","sinkClosePromise","WritableStreamFinishInFlightClose","WritableStreamFinishInFlightCloseWithError","WritableStreamMarkFirstWriteRequestInFlight","sinkWritePromise","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","NativeDOMException","DOMException$1","isDOMExceptionConstructor","createDOMExceptionPolyfill","shuttingDown","currentWrite","signal","actions","dest","shutdownWithAction","action","resolveLoop","pipeStep","resolveRead","isOrBecomesErrored","shutdown","isOrBecomesClosed","WritableStreamDefaultWriterCloseWithErrorPropagation","destClosed_1","pipeLoop","oldCurrentWrite","waitForWritesToFinish","uponRejection","uponFulfillment","doTheRest","finalize","ReadableStreamDefaultController","IsReadableStreamDefaultController","defaultControllerBrandCheckException$1","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerClearAlgorithms","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerShouldCallPull","underlyingSource","SetUpReadableStreamDefaultController","ReadableByteStreamTee","ReadableStreamDefaultTee","reading","canceled1","canceled2","cancelPromise","resolveCancelPromise","chunk1","chunk2","branch1","branch2","reason1","compositeReason","cancelResult","reason2","CreateReadableStream","thisReader","forwardReaderError","CloneAsUint8Array","AcquireReadableStreamBYOBReader","byobBranch","forBranch2","otherBranch","byobCanceled","otherCanceled","clonedChunk","pullWithDefaultReader","pullWithBYOBReader","CreateReadableByteStream","pull","convertUnderlyingSourceCancelCallback","convertUnderlyingSourcePullCallback","convertUnderlyingSourceStartCallback","convertReadableStreamType","convertReadableStreamReaderMode","preventCancel","Boolean","preventAbort","preventClose","assertAbortSignal","isAbortSignal","readable","assertRequiredField","ReadableStream","rawUnderlyingSource","convertUnderlyingDefaultOrByteSource","InitializeReadableStream","SetUpReadableByteStreamControllerFromUnderlyingSource","SetUpReadableStreamDefaultControllerFromUnderlyingSource","streamBrandCheckException$1","rawOptions","convertReaderOptions","convertReadableWritablePair","convertPipeOptions","ReadableStreamPipeTo","destination","branches","ReadableStreamTee","CreateArrayFromList","convertIteratorOptions","AcquireReadableStreamAsyncIterator","getReader","pipeThrough","pipeTo","tee","sourceCancelPromise","byteLengthSizeFunction","ByteLengthQueuingStrategy","convertQueuingStrategyInit","IsByteLengthQueuingStrategy","byteLengthBrandCheckException","countSizeFunction","CountQueuingStrategy","IsCountQueuingStrategy","countBrandCheckException","readableType","writableType","convertTransformerFlushCallback","convertTransformerStartCallback","convertTransformerTransformCallback","TransformStream","rawTransformer","rawWritableStrategy","rawReadableStrategy","writableStrategy","readableStrategy","transformer","convertTransformer","readableHighWaterMark","readableSizeAlgorithm","writableHighWaterMark","writableSizeAlgorithm","startPromise_resolve","InitializeTransformStream","SetUpTransformStreamDefaultControllerFromTransformer","IsTransformStream","streamBrandCheckException","TransformStreamDefaultSinkWriteAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamDefaultSinkCloseAlgorithm","CreateWritableStream","TransformStreamDefaultSourcePullAlgorithm","TransformStreamErrorWritableAndUnblockWrite","TransformStreamSetBackpressure","TransformStreamDefaultControllerClearAlgorithms","TransformStreamDefaultController","IsTransformStreamDefaultController","defaultControllerBrandCheckException","readableController","TransformStreamDefaultControllerEnqueue","TransformStreamDefaultControllerError","TransformStreamDefaultControllerTerminate","terminate","transformAlgorithm","flushAlgorithm","SetUpTransformStreamDefaultController","ReadableStreamDefaultControllerHasBackpressure","TransformStreamError","transformPromise","backpressureChangePromise","TransformStreamDefaultControllerPerformTransform","flushPromise","canvasAndContext","destroy","isCompressed","svg","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","DefaultCanvasFactory","DefaultCMapReaderFactory","DefaultStandardFontDataFactory","createPDFNetworkStream","isArrayBuffer","range","params","rangeTransport","worker","window","setVerbosityLevel","workerParams","GlobalWorkerOptions","PDFWorker","docId","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","initialData","progressiveDone","contentDispositionFilename","disableRange","disableStream","httpHeaders","withCredentials","rangeChunkSize","messageHandler","transport","pdfDataRangeTransport","workerId","apiVersion","password","disableAutoFetch","maxImageSize","disableFontFace","postMessageTransfers","docBaseUrl","ignoreErrors","fontExtraProperties","enableXfa","useSystemFonts","cMapUrl","standardFontDataUrl","doc","PDFDocumentLoadingTask","addRangeListener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","deprecated","getPage","getPageIndex","getDestinations","getDestination","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","getStats","cleanup","keepLoadedFonts","saveDocument","getFieldObjects","hasJSActions","getCalculationOrderIds","pdfBug","getViewport","getAnnotations","intent","intentArgs","render","annotationMode","imageLayer","canvasFactory","background","optionalContentConfigPromise","intentState","clearTimeout","canvasFactoryInstance","intentPrint","fnArray","argsArray","lastChunk","internalRenderTask","canvasContext","viewport","objs","commonObjs","operatorList","pageIndex","useRequestAnimationFrame","renderTask","transparency","optionalContentConfig","getOperatorList","opListTask","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","TEXT_CONTENT_CHUNK_SIZE","combineTextItems","textContent","getTextContent","xfa","XfaText","readableStream","pump","items","styles","getStructTree","_destroy","waitOn","force","resetStats","_tryCleanup","renderTasks","_startRenderPage","_renderPageChunk","operatorListChunk","_pumpOperatorList","cacheKey","annotationStorage","renderingIntent","_abortOperatorList","curIntentState","postMessage","cloned","transfers","cloneValue","desc","addEventListener","removeEventListener","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","pdfjsFilePath","_initializeFromPort","_initialize","workerSrc","isSameOrigin","terminateEarly","onWorkerError","sendTest","testObj","_setupFakeWorker","WorkerMessageHandler","workerHandler","loader","mainWorkerMessageHandler","eval","loadScript","loadingTask","onUnsupportedFeature","styleElement","getRenderingIntent","isOpList","lastModified","page","terminated","setupMessageHandler","evt","loaded","total","sink","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","pdfInfo","ex","exception","updatePassword","exportedError","exportedData","fontRegistry","registerFont","pageProxy","MAX_IMAGE_SIZE_TO_STORE","imageData","_onUnsupportedFeature","pageNumber","pageInfo","ref","isPureXfa","numPages","filename","getDocJSActions","getPageJSActions","results","cleanupSuccessful","_ensureObj","resolved","initializeGraphics","InternalRenderTask","operatorListChanged","_continue","_scheduleNext","build","addNativeFontFace","insertRule","styleSheet","nativeFontFace","featureId","rule","_queueLoadingCallback","hasFonts","_prepareFontLoadEvent","FontLoader","requests","nextRequestId","supported","navigator","otherRequest","getLoadTestFont","atob","offset","s","ctx","isFontReady","loadTestFontId","COMMENT_OFFSET","spliceString","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","int32","string32","btoa","div","span","translatedData","createNativeFontFace","css","weight","createFontFaceRule","bytesToString","getPathGenerator","cmds","jsBuf","current","NodeCanvasFactory","NodeCMapReaderFactory","NodeStandardFontDataFactory","fs","__non_webpack_require__","Canvas","getValue","setValue","modified","getAll","objectFromMap","_setModified","resetModified","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","MAX_CACHED_CANVAS_PATTERNS","EXECUTION_TIME","EXECUTION_STEPS","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","LINEWIDTH_SCALE_FACTOR","ad_bc","bc_ad","old","prev","cosValue","sinValue","getCanvas","canvasEntry","addContextCurrentTransform","maxSize","POINT_TO_PROCESS_LIMIT","POINT_TYPES","imgData","width1","points","lineSize","data0","elem","mask","count","j","j0","sum","steps","outlines","coords","p0","pp","drawOutline","k","kk","o","l","ll","setCurrentPoint","transferMaps","partialChunkHeight","fullChunks","totalChunks","chunkImgData","srcPos","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","thisChunkHeight","destPos","srcDiff","kEnd","kEndUnrolled","srcByte","hasTransferMaps","elemsInThisChunk","properties","property","sourceCtx","destCtx","alpha","alpha_","r0","g0","b0","maskData","transferMap","layerData","hasBackdrop","backdrop","subtype","composeFn","PIXELS_TO_PROCESS","row","chunkHeight","maskCtx","layerCtx","composeSMaskBackdrop","genericComposeSMask","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","beginDrawing","transparentCanvas","resetCtxToDefault","executeOperatorList","executionStartIdx","argsArrayLen","chunkOperations","endTime","stepper","fnId","objsPool","depObjId","continueCallback","endDrawing","_scaleImage","img","widthScale","inverseTransform","heightScale","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","tmpCanvas","tmpCtx","_createMaskCanvas","fillColor","isPatternFill","maskCanvas","putBinaryImageMask","objToCanvas","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","inverse","states","beginSMaskGroup","activeSMask","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","copyCtxState","suspendSMaskGroup","composeSMask","deltaTransform","resumeSMaskGroup","endSMaskGroup","ops","xw","yh","consumePath","strokeColor","lineWidth","needRestore","paths","fontObj","bold","italic","typeface","browserFontSize","paintChar","textRenderingMode","fontSize","fillStrokeMode","isAddToPathSet","patternFill","addToPath","fontSizeScale","charSpacing","wordSpacing","fontDirection","textHScale","glyphsLength","glyphs","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","patternTransform","resetLineWidthToOne","glyph","isNum","restoreNeeded","spacing","character","accent","scaledX","scaledY","vmetric","vx","vy","measuredWidth","characterScaleX","scaledAccentX","scaledAccentY","charWidth","showType3Text","fontMatrix","isTextInvisible","spacingLength","transformed","urx","ury","getColorN_Pattern","IR","color","baseTransform","canvasGraphicsFactory","createCanvasGraphics","_getPattern","matrix","getShadingPattern","inv","bl","br","ul","ur","x0","y0","x1","y1","bbox","group","bounds","canvasBounds","scaleX","scaleY","startTransformInverse","skewX","skewY","positions","trans","images","image","objId","map","h","imgToPaint","putBinaryImageData","left","top","visible","tag","getSinglePixelWidth","absDet","sqNorm1","sqNorm2","pixelHeight","getCanvasPosition","isContentVisible","CanvasGraphics","region","getPattern","_createGradient","grad","colorStop","owner","applyBoundingBox","domMatrix","colors","rowSize","tmp","c1","c2","c3","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","ps","figure","cs","verticesPerRow","rows","cols","q","drawTriangle","_createMeshCanvas","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","combinedScale","paddedWidth","paddedHeight","cachedCanvases","backgroundColor","drawFigure","matrixScale","temporaryPatternCanvas","PaintType","COLORED","UNCOLORED","createPatternCanvas","xstep","ystep","paintType","tilingType","curMatrixScale","dimx","dimy","graphics","adjustedX0","adjustedY0","adjustedX1","adjustedY1","getSizeAndScale","TilingPattern","clipBbox","bboxWidth","bboxHeight","setFillAndStrokeStyleToContext","cssColor","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","callbackId","wrapReason","cbSourceName","cbTargetName","comObj","sourceName","targetName","on","ah","send","sendWithPromise","sendWithStream","streamId","startCapability","startCall","pullCall","cancelCall","isClosed","pullCapability","cancelCapability","_createStreamSink","self","streamSink","lastDesiredSize","sinkCapability","onPull","onCancel","isCancelled","success","_processStreamMessage","_postMessage","getRaw","_evaluateVisibilityExpression","array","operator","isVisible","setVisibility","getOrder","getGroups","getGroup","begin","_onReceiveData","found","_onProgress","firstReader","_onProgressiveDone","_removeRangeReader","getFullReader","queuedChunks","getRangeReader","cancelAllRequests","isPdfFile","_enqueue","requestCapability","requestsCapability","output","walk","DEFAULT_TAB_INDEX","parameters","fieldType","isRenderable","ignoreBorder","createQuadrilaterals","_createContainer","horizontalRadius","verticalRadius","radius","_createQuadrilaterals","quadrilaterals","savedRect","quadPoint","_createPopup","trigger","popupElement","title","modificationDate","contents","hideWrapper","popup","_renderQuadrilaterals","quadrilateral","platform","isWin","isMac","addLinkAttributes","linkService","rel","linkElement","_bindLink","_bindNamedAction","_bindJSAction","jsName","detail","JSON","_getKeyModifier","AnnotationElement","_setEventListener","baseName","valueGetter","shift","modifier","_setEventListeners","eventName","_dispatchEventFromSandbox","setColor","ColorConverters","commonActions","display","hidden","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","setPropertyOnSiblings","storage","storedData","valueAsString","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","blurListener","selRange","selStart","selEnd","commitKey","willCommit","_blurListener","change","fieldWidth","combWidth","_setTextStyle","TEXT_ALIGNMENT","style","fontColor","checkbox","radio","pdfButtonValue","checked","radioId","fontSizeStyle","selectElement","optionElement","option","isExport","getItems","displayValue","exportValue","multipleSelection","remove","insert","indices","editable","changeEx","keyDown","IGNORE_TYPES","selector","parentElements","popupLeft","popupTop","BACKGROUND_ENLIGHT","g","dateObject","PDFDateString","_formatContents","lines","line","_toggle","_show","pin","_hide","unpin","borderWidth","square","circle","coordinate","polyline","getFilenameFromUrl","stringToPDFString","content","_download","sortedAnnotations","popupAnnotations","layer","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","mouseState","isDown","rendered","G","makeColorComp","R","B","MAX_TEXT_DIVS_TO_RENDER","DEFAULT_FONT_SIZE","DEFAULT_FONT_ASCENT","ascentCache","AllWhitespaceRegexp","cachedAscent","metrics","ascent","descent","ratio","pixels","textDiv","textDivProperties","canvasWidth","hasText","geom","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontHeight","fontAscent","getAscent","shouldScaleText","absScaleX","absScaleY","angleCos","angleSin","divWidth","divHeight","right","bottom","textDivs","textDivsLength","ts","expanded","expandBounds","divProperties","jj","boxScale","findPositiveMin","box","x1New","x2New","expandBoundsLTR","boxes","fakeBoundary","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","textContentItemsStr","_processItems","appendText","_layoutText","fontFamily","_render","timeout","styleCache","textItems","textStyles","expandTextDivs","expandDivs","expand","transformBuf","paddingBuf","divProps","renderParameters","textContentStream","enhanceTextSelection","SVGGraphics","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc","body","crc32","deflateSyncUncompressed","level","literals","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","colorType","bitDepth","offsetLiterals","offsetBytes","ihdr","deflateSync","pngLength","writePngChunk","createObjectURL","encode","opTree","opListElement","pf","clipCount","maskCount","shadingCount","loadDependencies","transformMatrix","getSVG","svgElement","convertOpList","operatorIdMapping","opList","opListToTree","executeOpTree","opTreeElement","lineWidthScale","textMatrix","pm","addFontStyle","details","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeTilingPattern","tilingId","txstep","tystep","tiling","tx1","ty1","_makeShadingPattern","shadingId","colorStops","point0","point1","gradient","focalPoint","circlePoint","focalRadius","circleRadius","op","clipId","clipPath","clipElement","_setStrokeAttributes","dashArray","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","clipGroup","_ensureTransformGroup","attributes","root","rootHtml","stack","rootDiv","child","childHtml","http","https","fileUriRegex","parsedUrl","parseUrl","_error","_setReadableStream","auth","host","headers","handleResponse","getResponseHeader","isHttp","suggestedLength","extractFilenameFromHeader","createRequestOptions","returnValues","allowRangeRequests","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","decoder","fatal","textdecode","parts","part","quotindex","encodingend","extvalue","encoding","langvalue","text","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","xhr","requestRange","listeners","requestFull","xhrId","pendingRequest","onProgress","onStateChange","xhrStatus","ok_response_on_range_request","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","_onRangeRequestReaderClosed","onHeadersReceived","onDone","onError","manager","_onHeadersReceived","fullRequestXhrId","fullRequestXhr","_onDone","_onError","createResponseStatusError","_close","abortController","credentials","redirect","createHeaders","createFetchOptions","validateResponseStatus","pdfjsVersion","pdfjsBuild","setPDFNetworkStreamFactory"],"sourceRoot":""}